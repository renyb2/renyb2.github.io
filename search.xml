<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Dijkstra</title>
    <url>/2020/08/27/Dijkstra/</url>
    <content><![CDATA[<h2 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h2><h3 id="问题1：最短路径"><a href="#问题1：最短路径" class="headerlink" title="问题1：最短路径"></a>问题1：最短路径</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><img src="/2020/08/27/Dijkstra/Dijkstra-%E9%97%AE%E9%A2%981.png" alt="image-20200731221210621"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 代码构造上图</span><br><span class="line"></span><br><span class="line">graph &#x3D; &#123;</span><br><span class="line">    &quot;A&quot;: &#123;&quot;B&quot;: 5, &quot;C&quot;: 1&#125;,</span><br><span class="line">    &quot;B&quot;: &#123;&quot;A&quot;: 5, &quot;C&quot;: 2, &quot;D&quot;: 1&#125;,</span><br><span class="line">    &quot;C&quot;: &#123;&quot;A&quot;: 1, &quot;B&quot;: 2, &quot;D&quot;: 4, &quot;E&quot;: 8&#125;,</span><br><span class="line">    &quot;D&quot;: &#123;&quot;B&quot;: 1, &quot;C&quot;: 4, &quot;E&quot;: 3, &quot;F&quot;: 6&#125;,</span><br><span class="line">    &quot;E&quot;: &#123;&quot;C&quot;: 8, &quot;D&quot;: 3&#125;,</span><br><span class="line">    &quot;F&quot;: &#123;&quot;D&quot;: 6&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/27</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dijkstra.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化各点距离值，起始点距离为0，其余点距离为正无穷大</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_distance</span>(<span class="params">graph, start</span>):</span></span><br><span class="line">    distance = &#123;start: <span class="number">0</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> vertex <span class="keyword">in</span> graph:</span><br><span class="line">        <span class="keyword">if</span> vertex != start:</span><br><span class="line">            distance[vertex] = math.inf</span><br><span class="line">    <span class="keyword">return</span> distance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最短路径</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dijkstra</span>(<span class="params">graph, start, end</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 记录未走过的点，使用优先队列维护，权重为起始点至当前节点的最短距离</span></span><br><span class="line">    pqueue = []</span><br><span class="line">    heapq.heappush(pqueue, (<span class="number">0</span>, start))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 记录已经被走过的点，set()用于去重</span></span><br><span class="line">    seen = set()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 记录当前节点的父节点，即从哪来的</span></span><br><span class="line">    parent = &#123;start: <span class="literal">None</span>&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 记录从起始点到各节点的最短距离</span></span><br><span class="line">    distance = init_distance(graph, start)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 寻找起始点至所有点的最短路径</span></span><br><span class="line">    <span class="keyword">while</span> pqueue:</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 从起始点开始走。队列非空时，拿出队列中权重最小的点</span></span><br><span class="line">        pair = heapq.heappop(pqueue)</span><br><span class="line">        dist = pair[<span class="number">0</span>]</span><br><span class="line">        vertex = pair[<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 从队列中拿出的点，即认为被看见</span></span><br><span class="line">        seen.add(vertex)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 从图中查看当前父节点的所有相邻子节点</span></span><br><span class="line">        nodes = graph[vertex].keys()</span><br><span class="line">        <span class="keyword">for</span> node <span class="keyword">in</span> nodes:</span><br><span class="line">            <span class="keyword">if</span> node <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">                <span class="comment"># 如果父节点到子节点的距离小于记录中的距离，则把子节点加入队列中，并更新子节点的距离值和子节点的父节点信息</span></span><br><span class="line">                <span class="keyword">if</span> dist + graph[vertex][node] &lt; distance[node]:</span><br><span class="line">                    heapq.heappush(pqueue, (dist + graph[vertex][node], node))</span><br><span class="line">                    distance[node] = dist + graph[vertex][node]</span><br><span class="line">                    parent[node] = vertex</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 回溯最短路径</span></span><br><span class="line">    path = [end]</span><br><span class="line">    <span class="keyword">while</span> parent[path[<span class="number">0</span>]]:</span><br><span class="line">        path.insert(<span class="number">0</span>, parent[path[<span class="number">0</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> path, distance[end]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    graph = &#123;</span><br><span class="line">	    <span class="string">&quot;A&quot;</span>: &#123;<span class="string">&quot;B&quot;</span>: <span class="number">5</span>, <span class="string">&quot;C&quot;</span>: <span class="number">1</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;B&quot;</span>: &#123;<span class="string">&quot;A&quot;</span>: <span class="number">5</span>, <span class="string">&quot;C&quot;</span>: <span class="number">2</span>, <span class="string">&quot;D&quot;</span>: <span class="number">1</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;C&quot;</span>: &#123;<span class="string">&quot;A&quot;</span>: <span class="number">1</span>, <span class="string">&quot;B&quot;</span>: <span class="number">2</span>, <span class="string">&quot;D&quot;</span>: <span class="number">4</span>, <span class="string">&quot;E&quot;</span>: <span class="number">8</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;D&quot;</span>: &#123;<span class="string">&quot;B&quot;</span>: <span class="number">1</span>, <span class="string">&quot;C&quot;</span>: <span class="number">4</span>, <span class="string">&quot;E&quot;</span>: <span class="number">3</span>, <span class="string">&quot;F&quot;</span>: <span class="number">6</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;E&quot;</span>: &#123;<span class="string">&quot;C&quot;</span>: <span class="number">8</span>, <span class="string">&quot;D&quot;</span>: <span class="number">3</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;F&quot;</span>: &#123;<span class="string">&quot;D&quot;</span>: <span class="number">6</span>&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    path, distance = dijkstra(graph, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;F&quot;</span>)</span><br><span class="line">    print(path)</span><br><span class="line">    print(distance)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 入门</title>
    <url>/2020/11/05/Docker-%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 调整docker <span class="built_in">exec</span>终端高度和宽度</span></span><br><span class="line">docker exec -it --env COLUMNS=`tput cols` --env LINES=`tput lines` mariadb bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重命名镜像repository和tag</span></span><br><span class="line">docker tag &lt;image id&gt; &lt;new repository&gt;:&lt;new tag&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出所有的容器 ID</span></span><br><span class="line">docker ps -aq</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止所有的容器</span></span><br><span class="line">docker stop $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有的容器</span></span><br><span class="line">docker rm $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有的镜像</span></span><br><span class="line">docker rmi $(docker images -q)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制文件</span></span><br><span class="line">docker cp mycontainer:/opt/file.txt /opt/local/</span><br><span class="line">docker cp /opt/local/file.txt mycontainer:/opt/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行容器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --entrypoint：启动自动运行命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --detach：后台运行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -e：设置容器环境变量</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -v：本地目录挂载至容器目录，ro只读，rw可读可写</span></span><br><span class="line">docker run -it --network host --entrypoint kolla_start --name glance_api --detach \</span><br><span class="line">  -e KOLLA_SERVICE_NAME=glance-api \</span><br><span class="line">  -e KOLLA_CONFIG_STRATEGY=COPY_ALWAYS \</span><br><span class="line">  -v /dev:/dev:rw -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">  -v /etc/kolla/glance-api:/var/lib/kolla/config_files:ro \</span><br><span class="line">  -v /opt/stack/glance/glance:/var/lib/kolla/venv/lib/python2.7/site-packages/glance:rw \</span><br><span class="line">  -v /opt/stack/glance_store:/var/lib/kolla/venv/lib/python2.7/site-packages/glance_store:rw \</span><br><span class="line">  -v /var/lib/docker/volumes/iscsi_info/_data:/etc/iscsi:rw \</span><br><span class="line">  -v /var/lib/docker/volumes/kolla_logs/_data:/var/log/kolla:rw \</span><br><span class="line">  -v /var/lib/docker/volumes/glance/_data:/var/lib/glance:rw \</span><br><span class="line">  localhost:4000/kolla-openstack/centos-source-glance-api:train</span><br></pre></td></tr></table></figure>





<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>问题1：</strong>docker拉取镜像报 <code>Error response from daemon</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: ~ # docker pull busybox</span><br><span class="line">Using default tag: latest</span><br><span class="line">Error response from daemon: Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker.io on 10.96.0.10:53: server misbehaving</span><br></pre></td></tr></table></figure>

<p>解决：域名解析问题，需要检查 <code>/etc/resolve.conf</code> 文件中，dns解析地址是否有 <code>114.114.114.114</code></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://github.com/moby/moby/issues/35407">Docker Exec does not resize terminal</a></p>
<p><a href="https://blog.csdn.net/baidu_21349635/article/details/104328556">Error response from daemon: Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Dynamic Programming</title>
    <url>/2020/08/27/Dynamic-Programming/</url>
    <content><![CDATA[<h2 id="Dynamic-Programming（动态规划）"><a href="#Dynamic-Programming（动态规划）" class="headerlink" title="Dynamic Programming（动态规划）"></a>Dynamic Programming（动态规划）</h2><p>解决重复子问题</p>
<h3 id="问题1：0-1背包问题"><a href="#问题1：0-1背包问题" class="headerlink" title="问题1：0/1背包问题"></a>问题1：0/1背包问题</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>有N件物品和一个容量为V的背包。第i件物品的重量是w[i]，价值是v[i]。求解将哪些物品装入背包可使这些物品的重量总和不超过背包容量，且价值总和最大</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N &#x3D; 5</span><br><span class="line">V &#x3D; 10</span><br><span class="line">w &#x3D; [2, 2, 6, 5, 4]</span><br><span class="line">v &#x3D; [6, 3, 5, 4, 6]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="问题2：斐波那契数列"><a href="#问题2：斐波那契数列" class="headerlink" title="问题2：斐波那契数列"></a>问题2：斐波那契数列</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><p>求第n个斐波那契数</p>
<h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/31</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec_opt</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> <span class="keyword">if</span> n &lt;= <span class="number">2</span> <span class="keyword">else</span> rec_opt(n<span class="number">-1</span>) + rec_opt(n<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 非递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp_opt</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        opt = np.zeros(n, dtype=int)</span><br><span class="line">        opt[<span class="number">0</span>], opt[<span class="number">1</span>] = <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, n):</span><br><span class="line">            opt[i] = opt[i<span class="number">-1</span>] + opt[i<span class="number">-2</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> opt[n<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">        print(<span class="string">&#x27;=====第%s个数=====&#x27;</span> % (i))</span><br><span class="line">        print(<span class="string">&#x27;递归结果： %s&#x27;</span> % (rec_opt(i)))</span><br><span class="line">        print(<span class="string">&#x27;非递归结果： %s&#x27;</span> % (dp_opt(i)))</span><br><span class="line">        print(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>



<h3 id="问题3：求最大和"><a href="#问题3：求最大和" class="headerlink" title="问题3：求最大和"></a>问题3：求最大和</h3><h4 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h4><p>Array内，隔一个选一个，求最大和</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arr &#x3D; [1, 4, 6, 1, 9, 2, 2, 3]</span><br></pre></td></tr></table></figure>



<h4 id="python-1"><a href="#python-1" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/31</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec_opt</span>(<span class="params">arr, i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> max(arr[<span class="number">0</span>], arr[<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">1</span>:</span><br><span class="line">        A = rec_opt(arr, i<span class="number">-1</span>)</span><br><span class="line">        B = rec_opt(arr, i<span class="number">-2</span>) + arr[i]</span><br><span class="line">        <span class="keyword">return</span> max(A, B)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 非递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp_opt</span>(<span class="params">arr, i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> max(arr[<span class="number">0</span>], arr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">1</span>:</span><br><span class="line">        opt = np.zeros(i+<span class="number">1</span>, dtype=int)</span><br><span class="line">        opt[<span class="number">0</span>] = arr[<span class="number">0</span>]</span><br><span class="line">        opt[<span class="number">1</span>] = max(arr[<span class="number">0</span>], arr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>, i+<span class="number">1</span>):</span><br><span class="line">            A = opt[n<span class="number">-1</span>]</span><br><span class="line">            B = opt[n<span class="number">-2</span>] + arr[n]</span><br><span class="line">            opt[n] = max(A, B)</span><br><span class="line">        <span class="keyword">return</span> opt[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">    print(rec_opt(arr, <span class="number">7</span>))</span><br><span class="line">    print(dp_opt(arr, <span class="number">7</span>))</span><br></pre></td></tr></table></figure>



<h3 id="问题4：是否可组成指定和"><a href="#问题4：是否可组成指定和" class="headerlink" title="问题4：是否可组成指定和"></a>问题4：是否可组成指定和</h3><h4 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h4><p>数组Array（全是正整数），是否可以组成指定和S</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arr &#x3D; [3, 34, 4, 12, 5, 2]</span><br><span class="line">S &#x3D; 9</span><br></pre></td></tr></table></figure>



<h4 id="python-2"><a href="#python-2" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/31</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec_subset</span>(<span class="params">arr, i, S</span>):</span></span><br><span class="line">    <span class="keyword">if</span> S == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[<span class="number">0</span>] == S</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 剪枝</span></span><br><span class="line">    <span class="keyword">elif</span> arr[i] &gt; S:</span><br><span class="line">        <span class="keyword">return</span> rec_subset(arr, i<span class="number">-1</span>, S)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        A = rec_subset(arr, i<span class="number">-1</span>, S-arr[i])</span><br><span class="line">        B = rec_subset(arr, i<span class="number">-1</span>, S)</span><br><span class="line">        <span class="keyword">return</span> A <span class="keyword">or</span> B</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非递归</span></span><br><span class="line"><span class="comment">## 动态规划表：构造一个len(arr)行，S+1列的二维数组</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp_subset</span>(<span class="params">arr, S</span>):</span></span><br><span class="line">    subset = np.zeros((len(arr), S + <span class="number">1</span>), dtype=bool)</span><br><span class="line">    subset[:, <span class="number">0</span>] = <span class="literal">True</span></span><br><span class="line">    subset[<span class="number">0</span>, :] = <span class="literal">False</span></span><br><span class="line">    subset[<span class="number">0</span>, arr[<span class="number">0</span>]] = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(arr)):</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> range(<span class="number">1</span>, S + <span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 剪枝</span></span><br><span class="line">            <span class="keyword">if</span> arr[i] &gt; s:</span><br><span class="line">                subset[i, s] = subset[i<span class="number">-1</span>, s]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                A = subset[i<span class="number">-1</span>, s-arr[i]]</span><br><span class="line">                B = subset[i<span class="number">-1</span>, s]</span><br><span class="line">                subset[i, s] = A <span class="keyword">or</span> B</span><br><span class="line">    <span class="keyword">return</span> subset[<span class="number">-1</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">3</span>, <span class="number">34</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">2</span>]</span><br><span class="line">    print(dp_subset(arr, <span class="number">9</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">10</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">11</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">12</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">13</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2020/10/28/Git/</url>
    <content><![CDATA[<h2 id="Git基本操作"><a href="#Git基本操作" class="headerlink" title="Git基本操作"></a>Git基本操作</h2><p>Git 常用的是以下 6 个命令：<strong>git clone</strong>、<strong>git push</strong>、<strong>git add</strong> 、<strong>git commit</strong>、<strong>git checkout</strong>、<strong>git pull</strong></p>
<p><img src="/2020/10/28/Git/git-command.jpg" alt="Git"></p>
<p><strong>说明：</strong></p>
<ul>
<li>workspace：工作区</li>
<li>staging area：暂存区/缓存区</li>
<li>local repository：或本地仓库</li>
<li>remote repository：远程仓库</li>
</ul>
<h2 id="Git常用流程"><a href="#Git常用流程" class="headerlink" title="Git常用流程"></a>Git常用流程</h2><h3 id="远端master分支代码合并到自己分支"><a href="#远端master分支代码合并到自己分支" class="headerlink" title="远端master分支代码合并到自己分支"></a>远端master分支代码合并到自己分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份当前修改</span></span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换至本地master分支</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取远端master分支代码</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换至本地dev分支</span></span><br><span class="line">git checkout renyb_dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并master分支至dev分支</span></span><br><span class="line">git merge master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复备份中的修改</span></span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令用途</span></span><br><span class="line"><span class="comment"># git stash：备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。</span></span><br></pre></td></tr></table></figure>



<h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆仓库（下载项目）</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;repo&gt;</span><br></pre></td></tr></table></figure>



<h3 id="提交与修改"><a href="#提交与修改" class="headerlink" title="提交与修改"></a>提交与修改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加文件到仓库</span></span><br><span class="line">git add &lt;file or dir&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看仓库当前的状态，显示有变更的文件</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交暂存区到本地仓库中</span></span><br><span class="line">git commit -m &lt;message&gt;</span><br></pre></td></tr></table></figure>



<h3 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从远程获取代码库</span></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载远程代码并合并</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传远程代码并合并</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>



<h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有分支</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch &lt;name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout &lt;branch name&gt;</span><br></pre></td></tr></table></figure>



<h3 id="提交日志"><a href="#提交日志" class="headerlink" title="提交日志"></a>提交日志</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看历史提交记录</span></span><br><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://git-scm.com/book/zh/v2">Git官方文档</a></p>
<p><a href="https://www.runoob.com/git/git-tutorial.html">Git 菜鸟教程</a></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo</title>
    <url>/2020/09/10/Hexo/</url>
    <content><![CDATA[<h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。</p>
<p>Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p>官方文档：<a href="https://hexo.bootcss.com/docs/">https://hexo.bootcss.com/docs/</a></p>
</blockquote>
<a id="more"></a>



<h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><h2 id="Hexo-GitHub"><a href="#Hexo-GitHub" class="headerlink" title="Hexo + GitHub"></a>Hexo + GitHub</h2><h2 id="Hexo-CMD"><a href="#Hexo-CMD" class="headerlink" title="Hexo CMD"></a>Hexo CMD</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init [folder]</span></span><br></pre></td></tr></table></figure>

<p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>
<h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>

<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.bootcss.com/docs/configuration.html">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo generate</span></span><br></pre></td></tr></table></figure>

<p>生成静态文件。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-d</code>, <code>--deploy</code></td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left"><code>-w</code>, <code>--watch</code></td>
<td align="left">监视文件变动</td>
</tr>
</tbody></table>
<p>该命令可以简写为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br></pre></td></tr></table></figure>

<h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo publish [layout] &lt;filename&gt;</span></span><br></pre></td></tr></table></figure>

<p>发表草稿。</p>
<h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo server</span></span><br></pre></td></tr></table></figure>

<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--port</code></td>
<td align="left">重设端口</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--static</code></td>
<td align="left">只使用静态文件</td>
</tr>
<tr>
<td align="left"><code>-l</code>, <code>--log</code></td>
<td align="left">启动日记记录，使用覆盖记录格式</td>
</tr>
</tbody></table>
<h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy</span></span><br></pre></td></tr></table></figure>

<p>部署网站。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-g</code>, <code>--generate</code></td>
<td align="left">部署之前预先生成静态文件</td>
</tr>
</tbody></table>
<p>该命令可以简写为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>



<h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo render &lt;file1&gt; [file2] ...</span></span><br></pre></td></tr></table></figure>

<p>渲染文件。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-o</code>, <code>--output</code></td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo migrate &lt;<span class="built_in">type</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>从其他博客系统 <a href="https://hexo.bootcss.com/docs/migration.html">迁移内容</a>。</p>
<h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br></pre></td></tr></table></figure>

<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo list &lt;<span class="built_in">type</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>列出网站资料。</p>
<h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo version</span></span><br></pre></td></tr></table></figure>

<p>显示 Hexo 版本。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Jmeter</title>
    <url>/2020/09/23/Jmeter/</url>
    <content><![CDATA[<p>The <strong>Apache JMeter™</strong> application is open source software, a 100% pure Java application designed to load test functional behavior and measure performance. It was originally designed for testing Web Applications but has since expanded to other test functions.</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载地址：<a href="http://apache.mirrors.pair.com//jmeter/binaries/apache-jmeter-5.3.zip">http://apache.mirrors.pair.com//jmeter/binaries/apache-jmeter-5.3.zip</a></p>
<h3 id="Windows部署"><a href="#Windows部署" class="headerlink" title="Windows部署"></a>Windows部署</h3><h4 id="Java环境"><a href="#Java环境" class="headerlink" title="Java环境"></a>Java环境</h4><p>版本：jdk-8u131-windows-i586（链接：<a href="https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg">https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg</a> 提取码：4ztk）</p>
<p>系统环境变量：</p>
<ul>
<li>JAVA_HOME：C:\Program Files (x86)\Java\jdk1.8.0_131</li>
<li>CLASSPATH：.;%JAVA_HOME%\bin;%JAVA_HOME%\lib\dt.jar%JAVA_HOME%\lib\tools.jar;</li>
<li>PATH：新增两行，%JAVA_HOME%\bin，%JAVA_HOME%\jre\lib</li>
</ul>
<h4 id="Jmeter"><a href="#Jmeter" class="headerlink" title="Jmeter"></a>Jmeter</h4><p>开箱即用。可执行文件：<code>.\bin\jmeter.bat</code></p>
<h3 id="Linux部署"><a href="#Linux部署" class="headerlink" title="Linux部署"></a>Linux部署</h3><h4 id="Java环境-1"><a href="#Java环境-1" class="headerlink" title="Java环境"></a>Java环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y java-1.8.0-openjdk</span><br></pre></td></tr></table></figure>

<h4 id="Jmeter-1"><a href="#Jmeter-1" class="headerlink" title="Jmeter"></a>Jmeter</h4><p>环境变量<code>/etc/profile</code>增加如下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JMETER_HOME=/root/jmeter</span><br><span class="line">export CLASSPATH=$JMETER_HOME/lib/ext/ApacheJMeter_core.jar:$JMETER_HOME/lib/jorphan.jar:$CLASSPATH</span><br><span class="line">export PATH=$JMETER_HOME/bin:$PATH:$HOME/bin</span><br></pre></td></tr></table></figure>

<p>环境变量配置生效：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<p>验证：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jmeter --version</span><br></pre></td></tr></table></figure>



<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>思路：</strong>通过Windows图形界面生成配置文件，上传至服务器进行压测</p>
<h3 id="http-https-性能测试"><a href="#http-https-性能测试" class="headerlink" title="http/https 性能测试"></a>http/https 性能测试</h3><h4 id="1-添加线程组"><a href="#1-添加线程组" class="headerlink" title="1. 添加线程组"></a>1. 添加线程组</h4><p>Test Plan中添加<code>Thread Group</code></p>
<p>总请求量 = 并发用户数 * 循环轮次</p>
<ul>
<li><p><code>Number of Threads (users)</code>：设置并发用户数</p>
</li>
<li><p><code>Loop Count</code>：设置循环轮次</p>
</li>
<li><p><code>Ramp-up period (seconds)</code>：设置压力启动时间（从开始到最大压力之间的时间）</p>
</li>
</ul>
<p><img src="/2020/09/23/Jmeter/jmeter-1.png" alt="jmeter-1"></p>
<p><img src="/2020/09/23/Jmeter/jmeter-2.png" alt="jmeter-2"></p>
<h4 id="2-设置http-https请求"><a href="#2-设置http-https请求" class="headerlink" title="2. 设置http/https请求"></a>2. 设置http/https请求</h4><p>Thread Group中添加<code>HTTP Request</code>，填写http/https请求的配置</p>
<p><img src="/2020/09/23/Jmeter/jmeter-3.png" alt="jmeter-3"></p>
<p><img src="/2020/09/23/Jmeter/jmeter-4.png" alt="jmeter-4"></p>
<h4 id="3-添加统计分析功能"><a href="#3-添加统计分析功能" class="headerlink" title="3. 添加统计分析功能"></a>3. 添加统计分析功能</h4><p>通常，添加如下两个统计分析功能：</p>
<ul>
<li>Summary Report</li>
<li>jp@gc - Transactions Per Second（需要单独安装，安装流程见插件 - QPS统计）</li>
</ul>
<p><img src="/2020/09/23/Jmeter/jmeter-5.png" alt="jmeter-5"></p>
<h4 id="4-导出配置"><a href="#4-导出配置" class="headerlink" title="4. 导出配置"></a>4. 导出配置</h4><p>保存jmx文件，上传至压力服务器。</p>
<h4 id="5-压力执行"><a href="#5-压力执行" class="headerlink" title="5. 压力执行"></a>5. 压力执行</h4><p>linux运行，生成结果文件至<code>test.jtl</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jmeter -n -t vm.jmx -l test.jtl</span><br></pre></td></tr></table></figure>



<h4 id="6-查看性能测试结果"><a href="#6-查看性能测试结果" class="headerlink" title="6. 查看性能测试结果"></a>6. 查看性能测试结果</h4><p>下载<code>test.jtl</code>，在Windows Jmeter的统计分析功能中打开查看。</p>
<p><img src="/2020/09/23/Jmeter/jmeter-6.png" alt="jmeter-6"></p>
<p><img src="/2020/09/23/Jmeter/jmeter-7.png" alt="jmeter-7"></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p><strong>Jmeter插件官网：</strong><a href="https://jmeter-plugins.org/wiki/Start/">https://jmeter-plugins.org/wiki/Start/</a></p>
<h3 id="QPS统计"><a href="#QPS统计" class="headerlink" title="QPS统计"></a>QPS统计</h3><p>下载地址：<a href="https://jmeter-plugins.org/files/packages/jpgc-graphs-basic-2.0.zip">https://jmeter-plugins.org/files/packages/jpgc-graphs-basic-2.0.zip</a></p>
<p>解压后，移动压缩包内lib目录下的文件至Jmeter\lib目录下同位置即可，重启Jmeter。</p>
<p><img src="/2020/09/23/Jmeter/jmeter-8.png" alt="jmeter-8"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://jmeter.apache.org/">Jmeter官方网站</a></p>
<p><a href="https://jmeter-plugins.org/wiki/Start/">Jmeter官方插件</a></p>
]]></content>
      <categories>
        <category>性能测试工具</category>
      </categories>
      <tags>
        <tag>Jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：IPv4/IPv6双栈</title>
    <url>/2021/01/26/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AIPv4-IPv6%E5%8F%8C%E6%A0%88/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>需求：OpenStack跑在Kubernetes上，OpenStack需要配置为IPv6网络。</p>
<p>Kubernetes IPv4/IPv6 双协议栈能够将 IPv4 和 IPv6 地址分配给 Pod 和 Service。</p>
<blockquote>
<p><strong>支持的功能</strong></p>
<p>在 Kubernetes 集群上启用 IPv4/IPv6 双协议栈可提供下面的功能：</p>
<ul>
<li>双协议栈 pod 网络 (每个 pod 分配一个 IPv4 和 IPv6 地址)</li>
<li>IPv4 和 IPv6 启用的服务 (每个服务必须是一个单独的地址族)</li>
<li>Pod 的集群外出口通过 IPv4 和 IPv6 路由</li>
</ul>
</blockquote>
<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>Kubernetes版本：v1.19.0</li>
<li>OpenStack版本：Train</li>
<li>Kubernetes部署方式：kubeadm</li>
<li>Kubernetes网络组件：Calico v3.15.3</li>
</ul>
<p>节点IP信息，<code>/etc/hosts</code> 内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">111.111.111.121 node01</span><br><span class="line">111.111.111.122 node02</span><br><span class="line">111.111.111.123 node03</span><br><span class="line">111.111.111.121 registry.local</span><br></pre></td></tr></table></figure>

<p>节点网卡配置如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: ~ # ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:17:6f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 111.111.111.121/24 brd 111.111.111.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.206.4/24 brd 192.168.206.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 111.111.111.120/32 brd 111.111.111.120 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::250:56ff:fe8c:176f/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: ens224: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:e4:71 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet6 2018::21/64 scope global noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 2018::20/64 scope global noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::6cd7:3d10:c933:a797/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>内核参数：<code>/etc/sysctl.d/kubernetes.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net.bridge.bridge-nf-call-iptables&#x3D;1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables&#x3D;1</span><br><span class="line">net.ipv4.ip_forward&#x3D;1</span><br><span class="line">vm.swappiness&#x3D;0 # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span><br><span class="line">vm.overcommit_memory&#x3D;1 # 不检查物理内存是否够用</span><br><span class="line">vm.panic_on_oom&#x3D;0 # 开启 OOM</span><br><span class="line">fs.inotify.max_user_instances&#x3D;8192</span><br><span class="line">fs.inotify.max_user_watches&#x3D;1048576</span><br><span class="line">fs.file-max&#x3D;52706963</span><br><span class="line">fs.nr_open&#x3D;52706963</span><br><span class="line">net.netfilter.nf_conntrack_max&#x3D;2310720</span><br><span class="line">&#123;% if enable_ipv6 | bool %&#125;</span><br><span class="line">net.ipv6.conf.all.disable_ipv6&#x3D;0</span><br><span class="line">net.ipv6.conf.all.forwarding&#x3D;1</span><br><span class="line">net.ipv6.conf.default.forwarding&#x3D;1</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">net.ipv6.conf.all.disable_ipv6&#x3D;1</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><blockquote>
<p>为了使用 IPv4/IPv6 双栈的 Kubernetes 集群，需要满足以下先决条件：</p>
<ul>
<li>Kubernetes 1.16 版本及更高版本</li>
<li>提供商支持双协议栈网络（云提供商或其他提供商必须能够为 Kubernetes 节点提供可路由的 IPv4/IPv6 网络接口）</li>
<li>支持双协议栈的网络插件（如 Kubenet 或 Calico）</li>
</ul>
</blockquote>
<h2 id="启动-IPv4-IPv6-双协议栈"><a href="#启动-IPv4-IPv6-双协议栈" class="headerlink" title="启动 IPv4/IPv6 双协议栈"></a>启动 IPv4/IPv6 双协议栈</h2><h3 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h3><blockquote>
<p><strong>官网文档配置信息如下：</strong></p>
<p>要启用 IPv4/IPv6 双协议栈，为集群的相关组件启用 <code>IPv6DualStack</code> <a href="https://v1-19.docs.kubernetes.io/zh/docs/reference/command-line-tools-reference/feature-gates/">特性门控</a>， 并且设置双协议栈的集群网络分配：</p>
<ul>
<li>kube-apiserver:<ul>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
<li><code>--service-cluster-ip-range=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code></li>
</ul>
</li>
<li>kube-controller-manager:<ul>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
<li><code>--cluster-cidr=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code> 例如 <code>--cluster-cidr=10.244.0.0/16,fc00::/48</code></li>
<li><code>--service-cluster-ip-range=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code> 例如 <code>--service-cluster-ip-range=10.0.0.0/16,fd00::/108</code></li>
<li><code>--node-cidr-mask-size-ipv4|--node-cidr-mask-size-ipv6</code> 对于 IPv4 默认为 /24，对于 IPv6 默认为 /64</li>
</ul>
</li>
<li>kubelet:<ul>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
</ul>
</li>
<li>kube-proxy:<ul>
<li><code>--cluster-cidr=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code></li>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
</ul>
</li>
</ul>
</blockquote>
<p>部署方式使用 kubeadm，master节点初始化时，使用yaml文件配置进行初始化。yaml配置信息修改如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">bootstrapTokens:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">abcdef.0123456789abcdef</span></span><br><span class="line">  <span class="attr">ttl:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">usages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">signing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">localAPIEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="string">&quot;111.111.111.121&quot;</span></span><br><span class="line">  <span class="attr">bindPort:</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">criSocket:</span> <span class="string">/var/run/dockershim.sock</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;node01&quot;</span></span><br><span class="line">  <span class="attr">taints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="comment"># 配置Kubelet，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controlPlaneEndpoint:</span> <span class="string">&quot;111.111.111.120:6443&quot;</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="comment"># 配置Cluster，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">CoreDNS</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">&quot;k8s.gcr.io&quot;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">&quot;v1.19.0&quot;</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="comment"># 配置pod、service的ipv6地址池</span></span><br><span class="line">  <span class="comment"># ipv6 CIDR不能过大（&lt;= 20），否则会报错&quot;specified --secondary-service-cluster-ip-range is too large&quot;，相关检测代码见下模块</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.10</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16,2019:20::/112</span></span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12,2019:30::/112</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="comment"># 配置KubeProxy，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">SupportIPVSProxyMode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># mode配置:</span></span><br><span class="line"><span class="comment"># ipvs在IPv6DualStack模式下，创建的nodePort service使用&lt; node ipv6 ip &gt;:&lt; nodePort &gt;无法访问。iptables无此问题</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">iptables</span></span><br></pre></td></tr></table></figure>



<p><strong>Kubernetes Service Subnet检测代码</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Longer term we should read this from some config store, rather than a flag.</span></span><br><span class="line"><span class="comment">// validateClusterIPFlags is expected to be called after Complete()</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">validateClusterIPFlags</span><span class="params">(options *ServerRunOptions)</span> []<span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> errs []error</span><br><span class="line">    </span><br><span class="line">    ... <span class="comment">// 省略</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// note: While the cluster might be dualstack (i.e. pods with multiple IPs), the user may choose</span></span><br><span class="line">	<span class="comment">// to only ingress traffic within and into the cluster on one IP family only. this family is decided</span></span><br><span class="line">	<span class="comment">// by the range set on --service-cluster-ip-range. If/when the user decides to use dual stack services</span></span><br><span class="line">	<span class="comment">// the Secondary* must be of different IPFamily than --service-cluster-ip-range</span></span><br><span class="line">	<span class="keyword">if</span> secondaryServiceClusterIPRangeUsed &#123;</span><br><span class="line">		<span class="comment">// Should be dualstack IPFamily(PrimaryServiceClusterIPRange) != IPFamily(SecondaryServiceClusterIPRange)</span></span><br><span class="line">		dualstack, err := netutils.IsDualStackCIDRs([]*net.IPNet&#123;&amp;options.PrimaryServiceClusterIPRange, &amp;options.SecondaryServiceClusterIPRange&#125;)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;error attempting to validate dualstack for --service-cluster-ip-range and --secondary-service-cluster-ip-range&quot;</span>))</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> !dualstack &#123;</span><br><span class="line">			errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;--service-cluster-ip-range and --secondary-service-cluster-ip-range must be of different IP family&quot;</span>))</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// should be smallish sized cidr, this thing is kept in etcd</span></span><br><span class="line">		<span class="comment">// bigger cidr (specially those offered by IPv6) will add no value</span></span><br><span class="line">		<span class="comment">// significantly increase snapshotting time.</span></span><br><span class="line">		<span class="keyword">var</span> ones, bits = options.SecondaryServiceClusterIPRange.Mask.Size()</span><br><span class="line">		<span class="keyword">if</span> bits-ones &gt; <span class="number">20</span> &#123;</span><br><span class="line">			errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;specified --secondary-service-cluster-ip-range is too large&quot;</span>))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Calico"><a href="#Calico" class="headerlink" title="Calico"></a>Calico</h3><ol>
<li>Edit the CNI config (<code>calico-config</code> ConfigMap in the manifest), and enable IPv4 and IPv6 address allocation by setting both fields to true.</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;ipam&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico-ipam&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;assign_ipv4&quot;:</span> <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;assign_ipv6&quot;:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">&#125;<span class="string">,</span></span><br></pre></td></tr></table></figure>

<p>​    <code>calico-config</code> ConfigMap 完整配置项，供参考：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Source: calico/templates/calico-config.yaml</span></span><br><span class="line"><span class="comment"># This ConfigMap is used to configure a self-hosted Calico installation.</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">calico-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="comment"># Typha is disabled.</span></span><br><span class="line">  <span class="attr">typha_service_name:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">  <span class="comment"># Configure the backend to use.</span></span><br><span class="line">  <span class="attr">calico_backend:</span> <span class="string">&quot;bird&quot;</span></span><br><span class="line">  <span class="comment"># Configure the MTU to use for workload interfaces and tunnels.</span></span><br><span class="line">  <span class="comment"># - If Wireguard is enabled, set to your network MTU - 60</span></span><br><span class="line">  <span class="comment"># - Otherwise, if VXLAN or BPF mode is enabled, set to your network MTU - 50</span></span><br><span class="line">  <span class="comment"># - Otherwise, if IPIP is enabled, set to your network MTU - 20</span></span><br><span class="line">  <span class="comment"># - Otherwise, if not using any encapsulation, set to your network MTU.</span></span><br><span class="line">  <span class="attr">veth_mtu:</span> <span class="string">&quot;1440&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The CNI network configuration to install on each node. The special</span></span><br><span class="line">  <span class="comment"># values in this config will be automatically populated.</span></span><br><span class="line">  <span class="attr">cni_network_config:</span> <span class="string">|-</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;:</span> <span class="string">&quot;k8s-pod-network&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cniVersion&quot;:</span> <span class="string">&quot;0.3.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;plugins&quot;:</span> [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;log_level&quot;:</span> <span class="string">&quot;info&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;datastore_type&quot;:</span> <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;nodename&quot;:</span> <span class="string">&quot;__KUBERNETES_NODE_NAME__&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;mtu&quot;:</span> <span class="string">__CNI_MTU__</span>,</span><br><span class="line">          <span class="attr">&quot;ipam&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico-ipam&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;assign_ipv4&quot;:</span> <span class="string">&quot;true&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;assign_ipv6&quot;:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;policy&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;k8s&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;kubernetes&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;kubeconfig&quot;:</span> <span class="string">&quot;__KUBECONFIG_FILEPATH__&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;portmap&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;snat&quot;:</span> <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;capabilities&quot;:</span> &#123;<span class="attr">&quot;portMappings&quot;:</span> <span class="literal">true</span>&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;bandwidth&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;capabilities&quot;:</span> &#123;<span class="attr">&quot;bandwidth&quot;:</span> <span class="literal">true</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Configure IPv6 support by adding the following variable settings to the environment for the <code>calico-node</code> container</li>
</ol>
<table>
<thead>
<tr>
<th>Variable name</th>
<th>Value</th>
<th>Comments</th>
</tr>
</thead>
<tbody><tr>
<td><code>IP6</code></td>
<td><code>&quot;autodetect&quot;</code></td>
<td></td>
</tr>
<tr>
<td><code>IP6_AUTODETECTION_METHOD</code></td>
<td><code>&quot;interface=ens224&quot;</code></td>
<td>网卡为配置ipv6地址的网卡</td>
</tr>
<tr>
<td><code>FELIX_IPV6SUPPORT</code></td>
<td><code>&quot;true&quot;</code></td>
<td></td>
</tr>
<tr>
<td><code>CALICO_IPV6POOL_CIDR</code></td>
<td><code>2018:100::/112</code></td>
<td>配置IPv6地址池</td>
</tr>
</tbody></table>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><h3 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h3><p>使用Nginx，简单创建一个pod和service，验证功能</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">## Kubernetes v1.19 不支持Service同时配置IPv4/IPv6。</span></span><br><span class="line">  <span class="comment"># 设置.spec.ipFamily为：</span></span><br><span class="line">  <span class="comment"># IPv4：API 服务器将从 service-cluster-ip-range 中分配 ipv4 地址</span></span><br><span class="line">  <span class="comment"># IPv6：API 服务器将从 service-cluster-ip-range 中分配 ipv6 地址</span></span><br><span class="line">  <span class="attr">ipFamily:</span> <span class="string">IPv6</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31111</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure>

<p><strong>网络测试：</strong><code>busybox.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:latest</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3600&quot;</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure>



<h3 id="验证寻址"><a href="#验证寻址" class="headerlink" title="验证寻址"></a>验证寻址</h3><p><strong>验证节点寻址</strong></p>
<p>示例中，节点名称为 <code>node01</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证是否配置了 IPv4/IPv6 Pod 地址范围</span></span></span><br><span class="line">kubectl get nodes node01 -o go-template --template=&#x27;&#123;&#123;range .spec.podCIDRs&#125;&#125;&#123;&#123;printf &quot;%s\n&quot; .&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.10.0.0/24</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2019:20::/120</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证节点是否检测到 IPv4 和 IPv6 接口</span></span></span><br><span class="line">kubectl get nodes node01 -o go-template --template=&#x27;&#123;&#123;range .status.addresses&#125;&#125;&#123;&#123;printf &quot;%s: %s \n&quot; .type .address&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> InternalIP: 2018::21</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> InternalIP: 111.111.111.121</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Hostname: node01</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 实际测试：未输出IPv6地址，仅输出IPv4地址和Hostname</span></span><br></pre></td></tr></table></figure>



<p><strong>验证 Pod 寻址</strong></p>
<p>示例中，Pod名称为 <code>myweb-7645d99c58-v2wfx</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证Pod是否获得 IPv4/IPv6 地址</span></span></span><br><span class="line">kubectl get pods myweb-7645d99c58-v2wfx -o go-template --template=&#x27;&#123;&#123;range .status.podIPs&#125;&#125;&#123;&#123;printf &quot;%s \n&quot; .ip&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.10.140.65</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2019:20::8c40</span></span><br></pre></td></tr></table></figure>



<h3 id="验证服务"><a href="#验证服务" class="headerlink" title="验证服务"></a>验证服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看测试准备流程中创建的Service</span></span></span><br><span class="line">kubectl get svc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        4h53m</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> myweb        NodePort    2019:30::73fe   &lt;none&gt;        80:31111/TCP   3h51m</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证NodePort（使用节点IPv6地址）</span></span></span><br><span class="line">curl -g -6 [2018::22]:31111</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kube proxy使用iptables，CLUETER-IP无法通过ping进行测试，并且在集群节点是无法访问的，需要从pod内部访问。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入busybox pod，执行如下两条命令测试：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - wget [2019:30::73fe]，访问成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - telnet 2019:30::73fe 80，显示Connected to 2019:30::73fe</span></span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/">Kubernetes v1.19 官方文档：IPv4/IPv6 双协议栈</a></p>
<p><a href="https://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/">Kubernetes v1.19 官方文档：验证 IPv4/IPv6 双协议栈</a></p>
<p><a href="https://docs.projectcalico.org/networking/ipv6">Calico 官方文档：Configure dual stack or IPv6 only</a></p>
<p><a href="https://github.com/kubernetes/website/issues/16801">Kubernetes Issues：Issue with k8s.io/docs/concepts/services-networking/dual-stack/ #16801</a></p>
<p><a href="https://github.com/kubernetes/kubeadm/issues/1612">Kubernetes Issues：Dual-Stack support for Kubeadm #1612</a></p>
<p><a href="https://github.com/kubernetes/kubeadm/issues/1828">Kubernetes Issues：Failed to parse subnet when creating IPv4/IPv6 dual stack #1828</a></p>
<p><a href="https://github.com/kubernetes/kubernetes/issues/83006">Kubernetes Issues：fialed to test IPv6DualStack feature of release version 1.16.0 #83006</a></p>
<p><a href="https://github.com/kubernetes/kubernetes/blob/v1.17.2/cmd/kube-apiserver/app/options/validation.go">Kubernetes IPv6 init报错 “specified –service-cluster-ip-range is too large”</a></p>
<p><a href="https://www.kubernetes.org.cn/5173.html">kubernetes calico IPV6支持</a></p>
<p><a href="https://jishuin.proginn.com/p/763bfbd3761a">简单示例说明 kube-proxy 如何与 iptables 配合使用</a></p>
<p><a href="https://blog.csdn.net/qq_36183935/article/details/90734847">kubernetes的Kube-proxy的iptables转发规则</a></p>
<p><a href="https://luyanan.com/article/info/19821386754432">kubeadm双栈升级 - expected at least one IP from each family (v4 or v6) for dual-stack networking</a></p>
<p><a href="https://blog.51cto.com/juestnow/2493362">kubernetes v1.18.2 双栈 部署calico</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/34558421">Kubernetes 网络排错指南</a></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes部署</tag>
        <tag>IPv6</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：GNOME桌面</title>
    <url>/2020/11/09/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AGNOME%E6%A1%8C%E9%9D%A2/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>GNOME是一种<a href="https://baike.baidu.com/item/GNU">GNU</a>网络对象模型环境 ，GNU计划的一部分，开放源码运动的一个重要组成部分，是一种让使用者容易操作和设定电脑环境的工具，目标是基于<a href="https://baike.baidu.com/item/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6">自由软件</a>，为<a href="https://baike.baidu.com/item/Unix">Unix</a>或者<a href="https://baike.baidu.com/item/%E7%B1%BBUnix">类Unix</a>操作系统构造一个功能完善、操作简单以及界面友好的<a href="https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83">桌面环境</a>，是GNU计划的正式桌面。</p>
<p>GNOME可以运行在包括GNU/Linux(通常叫做<a href="https://baike.baidu.com/item/Linux">Linux</a>)，<a href="https://baike.baidu.com/item/Solaris">Solaris</a>，<a href="https://baike.baidu.com/item/HP-UX">HP-UX</a>，<a href="https://baike.baidu.com/item/BSD">BSD</a>和Apple’s Darwin系统上. GNOME 拥有很多强大的特性，如：高质量的平滑文本渲染， 首个国际化和可用性支持， 并且包括对反向文本的支持(注: 有些国家的文字是从右到左的排版的）。</p>
<p>GNOME运行在大多数类Unix系统，并被Sun Microsystems公司采纳为Solaris平台的标准桌面，取代了过时的<a href="https://baike.baidu.com/item/CDE">CDE</a>。Sun Microsystems公司也以Java Desktop System名义发布一个商业版的桌面：一个被SUSELinux系统使用的基于GNOME的桌面。GNOME也移植到Cygwin使其能运行于Microsoft Windows。GNOME 还被众多LiveCDLinux发行版使用，如<a href="https://baike.baidu.com/item/Gnoppix">Gnoppix</a>和Morphix。</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 列出可安装的桌面环境</span></span><br><span class="line">yum grouplist</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看安装的包有哪些内容</span></span><br><span class="line">yum group info  &quot;Graphical Administration Tools&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装GNOME及相应桌面管理工具</span></span><br><span class="line">yum -y groups install &quot;GNOME DESKTOP&quot; &quot;Graphical Administration Tools&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前默认启动模式</span></span><br><span class="line">systemctl get-default</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认启动图形化界面</span></span><br><span class="line">systemctl set-default graphical.target</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认启动命令行界面</span></span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令行界面热切换到图形界面</span></span><br><span class="line">init 5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 图形界面热切换到命令行界面</span></span><br><span class="line">init 3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载GNOME</span></span><br><span class="line">yum -y groupremove &quot;GNOME DESKTOP&quot; &quot;Graphical Administration Tools&quot;</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.cnblogs.com/gentsir/p/10300655.html">Centos 7 安装GNOME桌面环境</a></p>
<p><a href="https://blog.csdn.net/wqh0830/article/details/86701379">CentOS-7安装GNOME桌面</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>GNOME</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：OpenStack服务配置HTTPS</title>
    <url>/2021/01/22/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AOpenStack%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AEHTTPS/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>需求：OpenStack endpoint 统一格式为 https + ip</p>
<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul>
<li><p>系统：CentOS Linux release 7.7.1908 (Core)</p>
</li>
<li><p>Kubernetes版本：v1.19.0</p>
</li>
<li><p>OpenStack版本：Train</p>
</li>
<li><p>部署方式：StarlingX Armada部署</p>
</li>
</ul>
<h2 id="网络架构"><a href="#网络架构" class="headerlink" title="网络架构"></a>网络架构</h2><p>Kubernetes上部署的OpenStack，通过以下3中方式提供服务：</p>
<ul>
<li><strong>nodePort</strong>：OpenStack Horizon服务使用该方式。将端口映射至宿主机的端口，可通过宿主机ip + 端口方式访问。</li>
<li><strong>ingress</strong>：OpenStack admin和public类型的endpoint使用该方式。</li>
<li><strong>service</strong>：OpenStack internal类型的endpoint使用该方式。</li>
</ul>
<p>以上3种方式的网络，升级为HTTPS方案分别如下：</p>
<ul>
<li><p><strong>nodePort</strong>：通过HAProxy进行HTTPS的证书验证和卸载，转发至后端nodePort端口</p>
</li>
<li><p><strong>ingress</strong>：ingress运行在7层，支持配置HTTPS，在ingress增加tls模块即可</p>
</li>
<li><p><strong>service</strong>：service运行在4层，不支持配置HTTPS，需要上层增加ingress</p>
</li>
</ul>
<p>这里根据需求，所有服务改为nodePort方式，通过HAProxy进行HTTPS证书验证和卸载</p>
<p><img src="/2021/01/22/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AOpenStack%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AEHTTPS/%E8%AF%81%E4%B9%A6%E5%8D%B8%E8%BD%BD.png" alt="证书卸载"></p>
<blockquote>
<p><strong>ingress方式配置HTTPS</strong></p>
<p>ingress对应的yaml，增加tls模块内容，即可开启HTTPS。</p>
<p>Kubernetes官方提供的ingress TLS的配置参考如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tls-example-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">https-example.foo.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">https-example.foo.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">service1</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="TLS证书"><a href="#TLS证书" class="headerlink" title="TLS证书"></a>TLS证书</h3><p><strong>1. 制作证书</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">certificates_dir=/tmp/certificates</span><br><span class="line">service_name=inspur</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建目录</span></span><br><span class="line">mkdir -p $&#123;certificates_dir&#125;/private</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置证书参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 认证多域名，增加alt_names即可</span></span><br><span class="line">cat &gt; $&#123;certificates_dir&#125;/$&#123;service_name&#125;-openssl.cnf &lt;&lt; EOF</span><br><span class="line">[req]</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">req_extensions = v3_req</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line">countryName = CN</span><br><span class="line">stateOrProvinceName = Xian</span><br><span class="line">localityName = Xian</span><br><span class="line">organizationalUnitName = Inspur</span><br><span class="line">commonName = $&#123;service_name&#125;</span><br><span class="line"></span><br><span class="line">[v3_req]</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = *.openstack.svc.cluster.local</span><br><span class="line">DNS.2 = *.openstack</span><br><span class="line">IP.1 = 111.111.111.88</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Key</span></span><br><span class="line">openssl genrsa -out $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key</span><br><span class="line">chmod 0600 $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Server Certificate</span></span><br><span class="line">openssl req -new -nodes -sha256 -x509 \</span><br><span class="line">    -subj &quot;/C=CN/ST=Xian/L=Xian/O=Inspur/CN=$&#123;service_name&#125;&quot; \</span><br><span class="line">    -config $&#123;certificates_dir&#125;/$&#123;service_name&#125;-openssl.cnf \</span><br><span class="line">    -days 3650 \</span><br><span class="line">    -extensions v3_req \</span><br><span class="line">    -key $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key \</span><br><span class="line">    -out $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating CA Certificate File</span></span><br><span class="line">cp $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt $&#123;certificates_dir&#125;/$&#123;service_name&#125;-ca.crt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Server PEM File</span></span><br><span class="line">cat $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key \</span><br><span class="line">    | tee $&#123;certificates_dir&#125;/$&#123;service_name&#125;.pem</span><br></pre></td></tr></table></figure>



<p><strong>openrc.sh</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Clear any old environment that may conflict.</span></span><br><span class="line">for key in $( set | awk &#x27;&#123;FS=&quot;=&quot;&#125;  /^OS_/ &#123;print $1&#125;&#x27; ); do unset $key ; done</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_TENANT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=https://111.111.111.80:35357/v3</span><br><span class="line">export OS_CACERT=/etc/kolla/certificates/haproxy-ca.crt    # CA Certificate File</span><br><span class="line">export OS_INTERFACE=internal</span><br><span class="line">export OS_ENDPOINT_TYPE=internalURL</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_REGION_NAME=RegionOne</span><br><span class="line">export OS_AUTH_PLUGIN=password</span><br></pre></td></tr></table></figure>



<h3 id="Kubernetes管理证书"><a href="#Kubernetes管理证书" class="headerlink" title="Kubernetes管理证书"></a>Kubernetes管理证书</h3><p><strong>1. 创建Secret资源</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用Secret方式上传证书至Kubernetes，挂载给pod即可使用该证书文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Secret方式</span></span><br><span class="line">kubectl create secret tls -n openstack tls-secret \</span><br><span class="line">    --cert=/tmp/certificates/private/inspur.crt \</span><br><span class="line">    --key=/tmp/certificates/private/inspur.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Secret yaml方式</span></span><br><span class="line">cat &gt; tls-secret.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: tls-secret</span><br><span class="line">  namespace: openstack</span><br><span class="line">data:</span><br><span class="line">  tls.crt: &lt; base64 encoded cert &gt;</span><br><span class="line">  tls.key: &lt; base64 encoded key &gt;</span><br><span class="line">type: kubernetes.io/tls</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl create -f tls-secret.yaml</span><br></pre></td></tr></table></figure>



<p><strong>2. Pod使用证书</strong></p>
<p>更新 <code>Deployment</code> 中，<code>volumes</code> 和 <code>volumeMounts</code>，设置secret和挂载目录。</p>
<p>Kubernetes官方提供的Pod的配置参考如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-test-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-container</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="comment"># name must match the volume name below</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/secret-volume</span></span><br><span class="line">  <span class="comment"># The secret data is exposed to Containers in the Pod through a Volume.</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">      <span class="attr">secret:</span></span><br><span class="line">        <span class="attr">secretName:</span> <span class="string">test-secret</span></span><br></pre></td></tr></table></figure>



<h3 id="HAProxy基础配置"><a href="#HAProxy基础配置" class="headerlink" title="HAProxy基础配置"></a>HAProxy基础配置</h3><p><code>haproxy.cfg</code> 中，增加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">global</span><br><span class="line">    ssl-default-bind-ciphers DEFAULT:!MEDIUM:!3DES</span><br><span class="line">    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11</span><br><span class="line">    tune.ssl.default-dh-param 4096</span><br></pre></td></tr></table></figure>



<h3 id="Keystone配置证书"><a href="#Keystone配置证书" class="headerlink" title="Keystone配置证书"></a>Keystone配置证书</h3><ol>
<li>使用http协议，先创建 <code>https endpoint</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne identity public https://111.111.111.88:32500/v3</span><br><span class="line">openstack endpoint create --region RegionOne identity internal https://111.111.111.88:32500/v3</span><br><span class="line">openstack endpoint create --region RegionOne identity admin https://111.111.111.88:32500/v3</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>删除http endpoint。</p>
<blockquote>
<p>openrc.sh中 <code>OS_INTERFACE</code> 字段和 <code>OS_ENDPOINT_TYPE</code> 替换为admin类型可以避免出错。</p>
</blockquote>
</li>
<li><p>更新haproxy配置，增加keystone https认证，重启haproxy。此时keystone的https端口正常响应</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Keystone</span></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line">frontend keystone_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.88:32500 ssl crt /tmp/certificates/inspur.pem</span><br><span class="line">    default_backend keystone_back</span><br><span class="line"></span><br><span class="line">backend keystone_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.89:30500 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint list</span><br></pre></td></tr></table></figure>



<h3 id="Glance配置证书"><a href="#Glance配置证书" class="headerlink" title="Glance配置证书"></a>Glance配置证书</h3><ol>
<li>更新haproxy配置，增加glance https认证，重启haproxy</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Glance</span></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line">frontend glance_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    timeout client 6h</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.88:32092 ssl crt /tmp/certificates/inspur.pem</span><br><span class="line">    default_backend glance_api_back</span><br><span class="line"></span><br><span class="line">backend glance_api_back</span><br><span class="line">    mode http</span><br><span class="line">    timeout server 6h</span><br><span class="line">    server node01 111.111.111.89:30092 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在Kubernetes界面中，更新glance服务配置文件：<code>Secret</code> &gt;&gt; <code>glance-etc</code> &gt;&gt; <code>glance-api.conf</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[keystone_authtoken]</span><br><span class="line">auth_uri = https://111.111.111.88:32500/v3</span><br><span class="line">auth_url = https://111.111.111.88:32500/v3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置pod中证书挂载地址</span></span><br><span class="line">cafile = /etc/tls/tls.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>更新Secret后，需要重建pod，以应用新的配置。参考命令：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除pod后会自动重建</span></span><br><span class="line">kubectl delete pod -n openstack &lt; glance-api pod name &gt;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>更新Glance endpoint，替换为https地址</li>
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack image list</span><br></pre></td></tr></table></figure>



<h3 id="OpenStack其他服务"><a href="#OpenStack其他服务" class="headerlink" title="OpenStack其他服务"></a>OpenStack其他服务</h3><p>按照上述Glance流程，参考文档【<a href="https://renyb2.github.io/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/">OpenStack部署：HTTPS</a>】修改其余服务设置即可</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://kubernetes.io/zh/docs/concepts/services-networking/ingress/">Kubernetes官方文档：Ingress</a></p>
<p><a href="https://kubernetes.io/zh/docs/tasks/inject-data-application/distribute-credentials-secure/">Kubernetes官方文档：使用 Secret 安全地分发凭证</a></p>
<p><a href="https://blog.51cto.com/wzlinux/2332908">Kubernetes 使用 ingress 配置 https 集群</a></p>
<p><a href="https://www.qikqiak.com/post/use-secret-in-k8s/">Kubernetes Secret 资源对象使用方法</a></p>
<p><a href="https://www.cnblogs.com/kreo/p/13203973.html">签发SSL多域名自签证书</a></p>
<p><a href="https://blog.csdn.net/u013066244/article/details/78725842/">OpenSSL自签发配置有多域名或ip地址的证书</a></p>
<p><a href="https://renyb2.github.io/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/">OpenStack部署：HTTPS</a></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes部署</tag>
        <tag>Openstack</tag>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：Ubuntu配置网卡</title>
    <url>/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AUbuntu%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><p>系统：Ubuntu 18.04.5 LTS</p>
<p>内核：GNU/Linux 4.15.0-112-generic x86_64</p>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>编辑 <code>/etc/netplan/00-installer-config.yaml</code> ，增加网卡配置信息。PS：不同安装方式，yaml文件名略有不同，需自行在 <code>/etc/netplan/</code> 目录下寻找</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> This is the network config written by <span class="string">&#x27;subiquity&#x27;</span></span></span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens160:</span><br><span class="line">      addresses: [111.111.111.61/24]</span><br><span class="line">      gateway4: 111.111.111.1</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [114.114.114.114]</span><br><span class="line">  version: 2</span><br></pre></td></tr></table></figure>

<p>执行命令 <code>netplan apply</code> 让配置直接生效</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.cnblogs.com/opsprobe/p/9979234.html">Ubuntu18.04的网络配置（静态IP和动态IP）</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：kubeadm部署高可用集群</title>
    <url>/2020/12/16/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9Akubeadm%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h2 id="高可用集群部署"><a href="#高可用集群部署" class="headerlink" title="高可用集群部署"></a>高可用集群部署</h2><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><h4 id="1-检查centos版本-hostname"><a href="#1-检查centos版本-hostname" class="headerlink" title="1. 检查centos版本 / hostname"></a>1. 检查centos版本 / hostname</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看centos版本</span></span><br><span class="line">cat /etc/centos-release</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; CentOS Linux release 7.7.1908 (Core)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此处 hostname 的输出将会是该机器在 Kubernetes 集群中的节点名字</span></span><br><span class="line">hostname</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改hostname</span></span><br><span class="line">hostnamectl set-hostname NAME</span><br></pre></td></tr></table></figure>

<h4 id="2-检查网络"><a href="#2-检查网络" class="headerlink" title="2. 检查网络"></a>2. 检查网络</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ip route show</span></span><br><span class="line">default via 111.111.111.1 dev ens192 proto static metric 100</span><br><span class="line">111.111.111.0/24 dev ens192 proto kernel scope link src 111.111.111.81 metric 100</span><br><span class="line">172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:5b:38 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 111.111.111.81/24 brd 111.111.111.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::250:56ff:fe8c:5b38/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: ens224: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:1e:41 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure>

<blockquote>
<p>kubelet使用的IP地址</p>
<ul>
<li><code>ip route show</code> 命令中，可以知道机器的默认网卡，通常是 <code>第一块网卡</code>，如 <strong><em>default via 111.111.111.1 dev ens192</em></strong></li>
<li><code>ip a</code> 命令中，可显示默认网卡的 IP 地址，Kubernetes 将使用此 IP 地址与集群内的其他节点通信，如 <code>111.111.111.81</code></li>
<li>所有节点上 Kubernetes 所使用的 IP 地址必须可以互通（无需 NAT 映射、无安全组或防火墙隔离）</li>
</ul>
</blockquote>
<h4 id="3-环境基本配置"><a href="#3-环境基本配置" class="headerlink" title="3. 环境基本配置"></a>3. 环境基本配置</h4><blockquote>
<ul>
<li>任意节点 centos 版本为 7.6 / 7.7 或 7.8</li>
<li>任意节点 CPU 内核数量大于等于 2，且内存大于等于 4G</li>
<li>任意节点 hostname 不是 localhost，且不包含下划线、小数点、大写字母</li>
<li>任意节点都有固定的内网 IP 地址</li>
<li>任意节点都只有一个网卡，如果有特殊目的，我可以在完成 K8S 安装后再增加新的网卡</li>
<li>任意节点上 <a href="https://kuboard.cn/install/install-kubernetes.html#%E6%A3%80%E6%9F%A5%E7%BD%91%E7%BB%9C">Kubelet使用的 IP 地址</a> 可互通（无需 NAT 映射即可相互访问），且没有防火墙、安全组隔离</li>
<li>任意节点不会直接使用 docker run 或 docker-compose 运行容器</li>
</ul>
</blockquote>
<h3 id="安装-docker-kubelet"><a href="#安装-docker-kubelet" class="headerlink" title="安装 docker / kubelet"></a>安装 docker / kubelet</h3><blockquote>
<p>使用 root 身份在所有节点执行如下代码，安装软件：</p>
<ul>
<li>docker</li>
<li>nfs-utils</li>
<li>kubectl / kubeadm / kubelet</li>
</ul>
</blockquote>
<h4 id="1-快速安装"><a href="#1-快速安装" class="headerlink" title="1. 快速安装"></a>1. 快速安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在 master 节点和 worker 节点都要执行</span></span><br><span class="line">curl -sSL https://kuboard.cn/install-script/v1.16.2/install_kubelet.sh | sh</span><br></pre></td></tr></table></figure>

<h4 id="2-手动安装"><a href="#2-手动安装" class="headerlink" title="2. 手动安装"></a>2. 手动安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在 master 节点和 worker 节点都要执行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参考文档如下</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.docker.com/install/linux/docker-ce/centos/ </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.docker.com/install/linux/linux-postinstall/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版本</span></span><br><span class="line">yum remove -y docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-selinux \</span><br><span class="line">docker-engine-selinux \</span><br><span class="line">docker-engine</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 yum repository</span></span><br><span class="line">yum install -y yum-utils \</span><br><span class="line">device-mapper-persistent-data \</span><br><span class="line">lvm2</span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装并启动 docker</span></span><br><span class="line">yum install -y docker-ce-18.09.7 docker-ce-cli-18.09.7 containerd.io</span><br><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 nfs-utils</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 必须先安装 nfs-utils 才能挂载 nfs 网络存储</span></span><br><span class="line">yum install -y nfs-utils</span><br><span class="line">yum install -y wget</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 SeLinux</span></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 swap</span></span><br><span class="line">swapoff -a</span><br><span class="line">yes | cp /etc/fstab /etc/fstab_bak</span><br><span class="line">cat /etc/fstab_bak |grep -v swap &gt; /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改 /etc/sysctl.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果有配置，则修改</span></span><br><span class="line">sed -i &quot;s#^net.ipv4.ip_forward.*#net.ipv4.ip_forward=1#g&quot;  /etc/sysctl.conf</span><br><span class="line">sed -i &quot;s#^net.bridge.bridge-nf-call-ip6tables.*#net.bridge.bridge-nf-call-ip6tables=1#g&quot;  /etc/sysctl.conf</span><br><span class="line">sed -i &quot;s#^net.bridge.bridge-nf-call-iptables.*#net.bridge.bridge-nf-call-iptables=1#g&quot;  /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 可能没有，追加</span></span><br><span class="line">echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.bridge.bridge-nf-call-ip6tables = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.bridge.bridge-nf-call-iptables = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行命令以应用</span></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置K8S的yum源</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版本</span></span><br><span class="line">yum remove -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装kubelet、kubeadm、kubectl</span></span><br><span class="line">yum install -y kubelet-1.16.2 kubeadm-1.16.2 kubectl-1.16.2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改docker Cgroup Driver为systemd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="comment"># 将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="comment"># 修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果不修改，在添加 worker 节点时可能会碰到如下错误</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> [WARNING IsDockerSystemdCheck]: detected <span class="string">&quot;cgroupfs&quot;</span> as the Docker cgroup driver. The recommended driver is <span class="string">&quot;systemd&quot;</span>. </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Please follow the guide at https://kubernetes.io/docs/setup/cri/</span></span><br><span class="line">sed -i &quot;s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g&quot; /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 docker 镜像，提高 docker 镜像下载速度和稳定性</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果您访问 https://hub.docker.io 速度非常稳定，亦可以跳过这个步骤</span></span><br><span class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://f1361db2.m.daocloud.io</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 docker，并启动 kubelet</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br><span class="line"></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure>

<blockquote>
<p>WARNING</p>
<p>如果此时执行 <code>service status kubelet</code> 命令，将得到 kubelet 启动失败的错误提示，请忽略此错误，因为必须完成后续步骤中 kubeadm init 的操作，kubelet 才能正常启动</p>
</blockquote>
<h3 id="安装-haproxy-keepalived"><a href="#安装-haproxy-keepalived" class="headerlink" title="安装 haproxy / keepalived"></a>安装 haproxy / keepalived</h3><h4 id="1-keepalived配置"><a href="#1-keepalived配置" class="headerlink" title="1. keepalived配置"></a>1. keepalived配置</h4><p>yum安装<code>keepalived</code>，编辑配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state &#123;&#123; state &#125;&#125;</span><br><span class="line">    interface &#123;&#123; interface &#125;&#125;</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority &#123;&#123; priority &#125;&#125;</span><br><span class="line">    advert_int 1</span><br><span class="line">    track_interface &#123;</span><br><span class="line">&#123;% for item in track_interface %&#125;</span><br><span class="line">        &#123;&#123; item &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        &#123;&#123; vip &#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>$&#123;STATE&#125;</code> is <code>MASTER</code> for one and <code>BACKUP</code> for all other hosts, hence the virtual IP will initially be assigned to the <code>MASTER</code>.</li>
<li><code>$&#123;INTERFACE&#125;</code> is the network interface taking part in the negotiation of the virtual IP, e.g. <code>eth0</code>.</li>
<li><code>$&#123;ROUTER_ID&#125;</code> should be the same for all <code>keepalived</code> cluster hosts while unique amongst all clusters in the same subnet. Many distros pre-configure its value to <code>51</code>.</li>
<li><code>$&#123;PRIORITY&#125;</code> should be higher on the master than on the backups. Hence <code>101</code> and <code>100</code> respectively will suffice.</li>
<li><code>$&#123;TRACK_INTERFACE&#125;</code> is a list of listening ports.</li>
<li><code>$&#123;AUTH_PASS&#125;</code> should be the same for all <code>keepalived</code> cluster hosts, e.g. <code>42</code></li>
<li><code>$&#123;APISERVER_VIP&#125;</code> is the virtual IP address negotiated between the <code>keepalived</code> cluster hosts.</li>
</ul>
<h4 id="2-haproxy配置"><a href="#2-haproxy配置" class="headerlink" title="2. haproxy配置"></a>2. haproxy配置</h4><p>yum安装<code>haproxy</code>，编辑配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">global</span><br><span class="line">  log 127.0.0.1 local2 info</span><br><span class="line">  pidfile /var/run/haproxy.pid</span><br><span class="line">  maxconn 10240</span><br><span class="line">  daemon</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  log global</span><br><span class="line">  mode http</span><br><span class="line">  timeout connect 5000</span><br><span class="line">  timeout client 5000</span><br><span class="line">  timeout server 5000</span><br><span class="line">  timeout check 2000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######### K8s-APIServer LB #####################</span></span></span><br><span class="line">listen k8s-apiserver-lb</span><br><span class="line">  bind 0.0.0.0:8443</span><br><span class="line">  mode tcp</span><br><span class="line">  balance roundrobin</span><br><span class="line">&#123;% for item in groups.master %&#125;</span><br><span class="line">  server &#123;&#123; item &#125;&#125; &#123;&#123; hostvars[item].ansible_ssh_host &#125;&#125;:6443 check port 6443 inter 5000 fall 5</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######### K8s-Web #####################</span></span></span><br><span class="line">listen k8s-web</span><br><span class="line">  bind 0.0.0.0:32000</span><br><span class="line">  mode tcp</span><br><span class="line">  balance roundrobin</span><br><span class="line">&#123;% for item in groups.master %&#125;</span><br><span class="line">  server &#123;&#123; item &#125;&#125; &#123;&#123; hostvars[item].ansible_ssh_host &#125;&#125;:30000 check port 30000 inter 5000 fall 5</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####### stats ############################</span></span></span><br><span class="line">listen admin_stats</span><br><span class="line">  bind 0.0.0.0:8080</span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  maxconn 10</span><br><span class="line">  stats refresh 30s</span><br><span class="line">  stats uri /stats</span><br></pre></td></tr></table></figure>

<ul>
<li><code>maxconn </code> 最大并发连接数</li>
</ul>
<h3 id="后续流程参考后续文档"><a href="#后续流程参考后续文档" class="headerlink" title="后续流程参考后续文档"></a>后续流程参考后续文档</h3><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/high-availability/">Kubernetes官方文档：利用 kubeadm 创建高可用集群</a></p>
<p><a href="https://kuboard.cn/install/install-kubernetes.html#%E4%BB%8B%E7%BB%8D">安装Kubernetes高可用</a></p>
<p><a href="https://www.jianshu.com/p/8eb81d1674dc">kubeadm 搭建K8s高可用集群</a></p>
<p><a href="https://github.com/kubernetes/kubeadm/blob/master/docs/ha-considerations.md#options-for-software-load-balancing">High Availability Considerations</a></p>
<p><a href="https://blog.51cto.com/billy98/2350660">kubeadm安装kubernetes 1.13.2多master高可用集群</a></p>
<p><a href="https://jimmysong.io/kubernetes-handbook/practice/master-ha.html">Master节点高可用</a></p>
<p><a href="https://blog.csdn.net/qq_41772936/article/details/80718014">haproxy+keepalived高可用负载均衡构建</a></p>
<p><a href="https://github.com/mendickxiao/kubeasz/tree/master/docs">集群规划和基础参数设定</a></p>
<p><a href="https://blog.csdn.net/codemaster_2071/article/details/82634278">kubeadm安装kubernetes 多master高可用</a></p>
<p><a href="https://www.cnblogs.com/rexcheny/p/10778567.html">Keepalive详解</a></p>
<p><a href="https://blog.51cto.com/12244079/2125384">HAProxy介绍及配置文件详解</a></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes部署</tag>
        <tag>kubeadm</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：VNC Server</title>
    <url>/2020/11/09/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AVNC-Server/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>VNC</strong> (Virtual Network Console)，即 <strong>虚拟网络控制台</strong>。它是一款优秀的远程控制工具软件，而且是基于 UNIX 和 Linux 操作系统的<strong>免费开源</strong>的。</p>
<blockquote>
<p><strong>1、优点</strong><br>远程控制能力强大，高效实用，其性能可以和 Windows 和 MAC 中的任何远程控制软件媲美</p>
</blockquote>
<blockquote>
<p><strong>2、VNC基本上是由两部分组成</strong></p>
<ul>
<li>一部分是客户端的应用程序(vncviewer)；</li>
<li>另外一部分是服务器端的应用程序(vncserver)；</li>
</ul>
</blockquote>
<blockquote>
<p><strong>3、特点</strong></p>
<ul>
<li>同样可以远程连入UNIX、Linux进行图形化操作的还有流行的Xmanager，VNC与之相比——两者工作原理不一样；</li>
<li><strong>VNC</strong> 是远程连入操作系统，所有操作在UNIX、Linux主机服务端进行，即使操作过程中“本地电脑与操作主机网络断开”，也不影响操作的顺利进行；</li>
<li><strong>Xmanager</strong> 是通过端口将主机服务器的UI界面引导到本地电脑进行展现，如操作过程出现“本地电脑与操作主机网络断开”，操作将中断失败！如果操作中进行的工作任务非常重要，不能中断，如ORACLE RAC实施，结果是灾难性的；</li>
<li>更重要的是，VNC是免费的、开源的，Xmanager收费的；</li>
</ul>
</blockquote>
<blockquote>
<p><strong>4、工作流程</strong></p>
<ul>
<li>（1）在服务器端启动 VNC Server。</li>
<li>（2）VNC客户端通过浏览器或 VNC Viewer 连接至VNC Server；</li>
<li>（3）VNC Server传送一对话窗口至客户端，要求输入连接密码， 以及存取的VNC Server显示装置。</li>
<li>（4）在客户端输入联机密码后，VNC Server验证客户端是否具有存取权限。</li>
<li>（5）若是客户端通过 VNC Server 的验证，客户端即要求VNC Server显示桌面环境。</li>
<li>（6）VNC Server通过X Protocol 要求X Server将画面显示控制权交由VNC Server负责。</li>
<li>（7）VNC Server将来由 X Server 的桌面环境利用VNC通信协议送至客户端， 并且允许客户端控制VNC Server的桌面环境及输入装置。</li>
</ul>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>VNC RPM ( rpm -qa | grep vnc )：<ul>
<li>tigervnc-icons-1.8.0-19.el7.noarch</li>
<li>tigervnc-server-1.8.0-19.el7.x86_64</li>
<li>gtk-vnc2-0.7.0-3.el7.x86_64</li>
<li>tigervnc-license-1.8.0-19.el7.noarch</li>
<li>gvnc-0.7.0-3.el7.x86_64</li>
<li>tigervnc-server-minimal-1.8.0-19.el7.x86_64</li>
<li>tigervnc-1.8.0-19.el7.x86_64</li>
</ul>
</li>
</ul>
<h3 id="VNC-服务端安装"><a href="#VNC-服务端安装" class="headerlink" title="VNC 服务端安装"></a>VNC 服务端安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 检查服务器是否安装了 VNC</span></span><br><span class="line">rpm -qa | grep vnc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装VNC</span></span><br><span class="line">yum install tigervnc tigervnc-server -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看VNC Server模板配置文件</span></span><br><span class="line">cat /lib/systemd/system/vncserver@.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Quick HowTo:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. Copy this file to /etc/systemd/system/vncserver@.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. Replace &lt;USER&gt; with the actual user name and edit vncserver</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    parameters <span class="keyword">in</span> the wrapper script located <span class="keyword">in</span> /usr/bin/vncserver_wrapper</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. Run `systemctl daemon-reload`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. Run `systemctl <span class="built_in">enable</span> vncserver@:&lt;display&gt;.service`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;USER&gt; 配置登录远程桌面的用户名</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;display&gt; 配置登录远程桌面的端口</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VNC 的默认监听端口是 5900，监听端口规则为590+usernumber【如 1:root对应端口号5901】</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cp vnc config</span></span><br><span class="line">cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> update config</span></span><br><span class="line">sed -i &#x27;s/&lt;USER&gt;/root/&#x27; /etc/systemd/system/vncserver@.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> vnc password</span></span><br><span class="line">vncpasswd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable vncserver@:1.service</span><br><span class="line">systemctl start vncserver@:1.service</span><br><span class="line">systemctl status vncserver@:1.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> check port</span></span><br><span class="line">netstat -lantu | grep 5901</span><br></pre></td></tr></table></figure>



<h3 id="VNC-客户端安装"><a href="#VNC-客户端安装" class="headerlink" title="VNC 客户端安装"></a>VNC 客户端安装</h3><p>下载地址：<a href="https://www.realvnc.com/en/connect/download/viewer/">https://www.realvnc.com/en/connect/download/viewer/</a></p>
<p>VNC address：<code>&lt;ip&gt;:&lt;port&gt;</code></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://blog.csdn.net/llag_haveboy/article/details/84960479">Linux 上安装配置 VNC Server</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VNC</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：修改网卡名称</title>
    <url>/2021/01/12/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E4%BF%AE%E6%94%B9%E7%BD%91%E5%8D%A1%E5%90%8D%E7%A7%B0/</url>
    <content><![CDATA[<blockquote>
<p>网上资料都是要修改 <code>/etc/default/grub</code> 文件，增加 <code>net.ifnames=0, biosdevname=0</code> 参数。该方法重启后，网卡名称统一变为eth开头，无法达到任意修改的目的。整理如下方法，亲测 Centos 7.8 可行。</p>
</blockquote>
<p>环境信息：CentOS Linux release 7.8.2003 (Core)</p>
<p>网卡信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@renyb: rules.d # ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:63:bf:af brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.1.110/24 brd 192.168.1.255 scope global noprefixroute dynamic mynet1</span><br><span class="line">       valid_lft 6511sec preferred_lft 6511sec</span><br><span class="line">    inet6 fe80::a788:f7ed:8c55:1b9f/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span><br><span class="line">    link/ether 52:54:00:0f:32:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000</span><br><span class="line">    link/ether 52:54:00:0f:32:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line"></span><br><span class="line">root@renyb: rules.d # nmcli connection show</span><br><span class="line">NAME    UUID                                  TYPE      DEVICE</span><br><span class="line">ens33   b40bd401-b463-4d44-ab63-247307f2a2d6  ethernet  ens33</span><br><span class="line">virbr0  7f07fa4e-e769-4fd1-ab39-1b70c27a0952  bridge    virbr0</span><br></pre></td></tr></table></figure>





<h2 id="临时配置"><a href="#临时配置" class="headerlink" title="临时配置"></a>临时配置</h2><p>通过 <code>ip</code> 命令进行配置，重启失效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看网络设备信息</span></span><br><span class="line">nmcli connection show</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> down网卡</span></span><br><span class="line">ip link set dev ens33 down</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡DEVICE名称</span></span><br><span class="line">ip link set dev ens33 name mynet1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡NAME</span></span><br><span class="line">nmcli connection modify ens33 connection.id mynet1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动网卡</span></span><br><span class="line">ip link set mynet1 up</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新加载网络设备信息</span></span><br><span class="line">nmcli connection reload</span><br></pre></td></tr></table></figure>





<h2 id="永久配置"><a href="#永久配置" class="headerlink" title="永久配置"></a>永久配置</h2><p>通过 <code>udev</code> 实现。Centos系统中，规则目录如下：</p>
<ul>
<li>系统规则：<code>/usr/lib/udev/rules.d/</code></li>
<li>自定义规则：<code>/etc/udev/rules.d</code></li>
</ul>
<h3 id="udev解析"><a href="#udev解析" class="headerlink" title="udev解析"></a>udev解析</h3><p>网卡相关udev的rule执行流程：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 用户自定义为优先级最高</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 依据/usr/lib/udev/rules.d/60-net.rules， 查看是否有ifcfg-xx配置文件（路径在/etc/sysconfig/network-scripts/),是否有定义了指定MAC地址的配置文件（ifcfg-xx ，xx必须和配置文件的内容DEVICE一致），如果有，则命名改网卡</span></span><br><span class="line">/usr/lib/udev/rules.d/60-net.rules</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 依据/usr/lib/udev/rules.d/71-biosdevname.rules，如果biosdevname使能了（安装了biosdevname这个包，且内核启动参数显式设置为1），且网卡没有在step1中定义，则按照biosdevname命名规则rename网卡；（注意，如果没有安装biosdevname这个包，就没有这个文件）</span></span><br><span class="line">/usr/lib/udev/rules.d/71-biosdevname.rules</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 依据/lib/udev/rules.d/75-net-description.rules，将udev工具会根据device属性将填写网卡的属性命名，可能一个网卡会有多个维度的名称哦</span></span><br><span class="line">/lib/udev/rules.d/75-net-description.rules</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> udev 根据step3中的赋值，按照指定的scheme规则，去给在step1 step2中没有命名的网卡命名</span></span><br><span class="line">/usr/lib/udev/rules.d/80-net-name-slot.rules</span><br></pre></td></tr></table></figure>



<h3 id="重命名流程"><a href="#重命名流程" class="headerlink" title="重命名流程"></a>重命名流程</h3><ol>
<li>新建文件：<code>/etc/udev/rules.d/70-persistent-net.rules</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> This is a sample udev rules file that demonstrates how to get udev to</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> the name of IPoIB interfaces to whatever you wish.  There is a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 16 character <span class="built_in">limit</span> on network device names.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Important items to note: ATTR&#123;<span class="built_in">type</span>&#125;==<span class="string">&quot;32&quot;</span> is IPoIB interfaces, and the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ATTR&#123;address&#125; match must start with ?* and only reference the last 8</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bytes of the address or <span class="keyword">else</span> the address might not match the variable QPN</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> portion.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Modern udev is <span class="keyword">case</span> sensitive and all addresses need to be <span class="keyword">in</span> lower <span class="keyword">case</span>.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ACTION==<span class="string">&quot;add&quot;</span>, SUBSYSTEM==<span class="string">&quot;net&quot;</span>, DRIVERS==<span class="string">&quot;?*&quot;</span>, ATTR&#123;<span class="built_in">type</span>&#125;==<span class="string">&quot;32&quot;</span>, ATTR&#123;address&#125;==<span class="string">&quot;?*00:02:c9:03:00:31:78:f2&quot;</span>, NAME=<span class="string">&quot;mlx4_ib3&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ATTR&#123;address&#125;: mac address</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NAME: device name</span></span><br><span class="line">ACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;type&#125;==&quot;1&quot;, ATTR&#123;address&#125;==&quot;00:0c:29:63:bf:af&quot;, NAME=&quot;mynet1&quot;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改网卡配置文件：<code>/etc/sysconfig/network-scripts/ifcfg-ens33</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@renyb: network-scripts # pwd</span><br><span class="line">/etc/sysconfig/network-scripts</span><br><span class="line">root@renyb: network-scripts # cat ifcfg-ens33</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡NAME</span></span><br><span class="line">NAME=mynet1</span><br><span class="line">UUID=b40bd401-b463-4d44-ab63-247307f2a2d6</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡DEVICE NAME</span></span><br><span class="line">DEVICE=mynet1</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPV6_PRIVACY=no</span><br><span class="line">root@renyb: network-scripts # # 修改网卡配置文件名称</span><br><span class="line">root@renyb: network-scripts # mv ifcfg-ens33 ifcfg-mynet1</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.cnblogs.com/boltkiller/p/12696501.html">任意修改CentOS下网卡的显示名称和设备名称</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/33932734">在 Linux 中如何编写基本的 udev 规则</a></p>
<p><a href="https://blog.csdn.net/u010039418/article/details/79260553">CentOS 7.4系统修改网卡名称</a></p>
<p><a href="https://www.cnblogs.com/yinfutao/p/9634350.html">Linux系统修改网卡名（eth0-3）</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>网卡</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：LVM</title>
    <url>/2021/01/19/Linux%E9%85%8D%E7%BD%AE%EF%BC%9ALVM/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>​        LVM是 Logical Volume Manager(逻辑卷管理)的简写，它由Heinz Mauelshagen在Linux 2.4内核上实现。LVM将一个或多个硬盘的分区在逻辑上集合，相当于一个大硬盘来使用，当硬盘的空间不够使用的时候，可以继续将其它的硬盘的分区加入其中，这样可以实现磁盘空间的动态管理，相对于普通的磁盘分区有很大的灵活性。</p>
<p>​        与传统的磁盘与分区相比，LVM为计算机提供了更高层次的磁盘存储。它使系统管理员可以更方便的为应用与用户分配存储空间。在LVM管理下的存储卷可以按需要随时改变大小与移除(可能需对文件系统工具进行升级)。LVM也允许按用户组对存储卷进行管理，允许管理员用更直观的名称(如”sales’、 ‘development’)代替物理磁盘名(如’sda’、’sdb’)来标识存储卷。</p>
</blockquote>
<h2 id="LVM基本术语"><a href="#LVM基本术语" class="headerlink" title="LVM基本术语"></a>LVM基本术语</h2><p>前面谈到，LVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：</p>
<ul>
<li><p>物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。</p>
</li>
<li><p>物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</p>
</li>
<li><p>卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。</p>
</li>
<li><p>逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。</p>
</li>
<li><p>PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。</p>
</li>
<li><p>LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。</p>
</li>
</ul>
<p>简单来说就是：</p>
<ul>
<li>PV:是物理的磁盘分区</li>
<li>VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。</li>
<li>LV：也就是从VG中划分的逻辑分区</li>
</ul>
<p>如下图所示PV、VG、LV三者关系：</p>
<p><img src="/2021/01/19/Linux%E9%85%8D%E7%BD%AE%EF%BC%9ALVM/LVM-1.jpg" alt="LVM关系"></p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 新磁盘分区</span></span><br><span class="line">fdisk /dev/sdb</span><br><span class="line">n         # 新建分区</span><br><span class="line">l         # 选择逻辑分区，如果没有，则首先创建扩展分区，然后再添加逻辑分区（硬盘：最多四个分区P-P-P-P或P-P-P-E）</span><br><span class="line">6         # 分区号（从5开始），/dev/hda6</span><br><span class="line">t    8e   # 分区类型8e表示LVM分区</span><br><span class="line">w         # 写入分区表</span><br><span class="line"></span><br><span class="line">partprobe # 重读分区表</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pv/vg/lv概要信息</span></span><br><span class="line">pvs</span><br><span class="line">vgs</span><br><span class="line">lvs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pv/vg/lv详情</span></span><br><span class="line">pvdisplay</span><br><span class="line">vgdisplay</span><br><span class="line">lvdisplay</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建pv</span></span><br><span class="line">pvcreate /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除pv</span></span><br><span class="line">pvremove /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建vg</span></span><br><span class="line">vgcreate vg_name /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 扩容</span></span><br><span class="line">vgextend vg_name /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除vg</span></span><br><span class="line">vgremove vg_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建lv</span></span><br><span class="line">lvcreate lv_name vg_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 扩容lv</span></span><br><span class="line">lvextend -L 250G /dev/mapper/centos-root       # 调整到250G</span><br><span class="line">lvextend -L +250G /dev/mapper/centos-root      # 扩容250G</span><br><span class="line">lvextend -l +100%free /dev/mapper/centos-root  # 将vg剩余空间全部扩容进去</span><br><span class="line">lvcreate -l +100%free -n home centos           # -n 指定lv的名字，centos是vg的名字</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除lv</span></span><br><span class="line">lvremove lv_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新文件系统</span></span><br><span class="line">resize2fs /dev/mapper/centos-root      # ext4文件系统</span><br><span class="line">xfs_growfs /dev/mapper/centos-root     # xfs文件系统</span><br></pre></td></tr></table></figure>



<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>问题1：</strong>resize2fs报错如下：</p>
<p>resize2fs: Bad magic number in super-block while trying to open /dev/mapper/centos-home<br>Couldn’t find valid filesystem superblock.</p>
<p><strong>原因：</strong>文件系统是xfs（fdisk -l查看），不再支持resize2fs</p>
<p><strong>解决：</strong>使用XFS相应命令，如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xfs_growfs /dev/mapper/centos-root</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.cnblogs.com/gaojun/archive/2012/08/22/2650229.html">Linux LVM硬盘管理及LVM扩容</a></p>
<p><a href="https://www.cnblogs.com/-abm/p/11349240.html">CentOS7上lvm分区调整（resize2fs: Bad magic number in super-block while trying to open …）</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>LVM</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：开启大页内存</title>
    <url>/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E5%BC%80%E5%90%AF%E5%A4%A7%E9%A1%B5%E5%86%85%E5%AD%98/</url>
    <content><![CDATA[<h2 id="大页内存"><a href="#大页内存" class="headerlink" title="大页内存"></a>大页内存</h2><h3 id="Centos-开启大页内存"><a href="#Centos-开启大页内存" class="headerlink" title="Centos 开启大页内存"></a>Centos 开启大页内存</h3><blockquote>
<p>系统：CentOS Linux release 7.7.1908 (Core)</p>
</blockquote>
<p>编辑 <code>/etc/default/grub</code> ，在 <code>GRUB_CMDLINE_LINUX</code> 字段增加如下：</p>
<ul>
<li><code>default_hugepagesz</code> ：默认大页每页大小</li>
<li><code>hugepagesz</code> ：大页每页大小，可选值：4K、2M（默认）、1G</li>
<li><code>hugepages</code> ：大页数量</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)&quot;</span><br><span class="line">GRUB_DEFAULT=saved</span><br><span class="line">GRUB_DISABLE_SUBMENU=true</span><br><span class="line">GRUB_TERMINAL_OUTPUT=&quot;console&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rd.lvm.lv=centos_centos/root rd.lvm.lv=centos_centos/swap rhgb quiet&quot;</span><br><span class="line">GRUB_DISABLE_RECOVERY=&quot;true&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet intel_iommu=off default_hugepagesz=1G hugepagesz=1G hugepages=40&quot;</span><br></pre></td></tr></table></figure>

<p>重新生成grub文件，重启host</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg</span><br></pre></td></tr></table></figure>



<h3 id="Ubuntu-开启大页内存"><a href="#Ubuntu-开启大页内存" class="headerlink" title="Ubuntu 开启大页内存"></a>Ubuntu 开启大页内存</h3><blockquote>
<p>系统：Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-112-generic x86_64)</p>
</blockquote>
<p>编辑 <code>/etc/default/grub</code> ，在 <code>GRUB_CMDLINE_LINUX</code> 字段增加如下：</p>
<ul>
<li><code>default_hugepagesz</code> ：默认大页每页大小</li>
<li><code>hugepagesz</code> ：大页每页大小，可选值：4K、2M（默认）、1G</li>
<li><code>hugepages</code> ：大页数量</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> If you change this file, run <span class="string">&#x27;update-grub&#x27;</span> afterwards to update</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /boot/grub/grub.cfg.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For full documentation of the options <span class="keyword">in</span> this file, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   info -f grub -n <span class="string">&#x27;Simple configuration&#x27;</span></span></span><br><span class="line"></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT_STYLE=hidden</span><br><span class="line">GRUB_TIMEOUT=0</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;default_hugepagesz=1G hugepagesz=1G hugepages=2&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">enable</span> BadRAM filtering, modify to suit your needs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This works with Linux (no patch required) and with any kernel that obtains</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_BADRAM=<span class="string">&quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">disable</span> graphical terminal (grub-pc only)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_TERMINAL=console</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The resolution used on graphical terminal</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> note that you can use only modes <span class="built_in">which</span> your graphic card supports via VBE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you can see them <span class="keyword">in</span> real GRUB with the <span class="built_in">command</span> `vbeinfo<span class="string">&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_GFXMODE=640x480</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment <span class="keyword">if</span> you don<span class="string">&#x27;t want GRUB to pass &quot;root=UUID=xxx&quot; parameter to Linux</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_DISABLE_LINUX_UUID=<span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">disable</span> generation of recovery mode menu entries</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_DISABLE_RECOVERY=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to get a beep at grub start</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_INIT_TUNE=<span class="string">&quot;480 440 1&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>执行 <code>update-grub</code> ，生效配置</p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>查看系统大页内存，<code>HugePages_Total = hugepagesz * hugepages </code> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS</span></span><br><span class="line">[root@k134 ~]# cat /proc/meminfo | grep -i huge</span><br><span class="line">HugePages_Total:     100</span><br><span class="line">HugePages_Free:       83</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:    1048576 kB</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Ubuntu</span></span><br><span class="line">root@inspur:~# cat /proc/meminfo | grep -i huge</span><br><span class="line">AnonHugePages:         0 kB</span><br><span class="line">ShmemHugePages:        0 kB</span><br><span class="line">HugePages_Total:      15</span><br><span class="line">HugePages_Free:       15</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:    1048576 kB</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://blog.csdn.net/yutianzuijin/article/details/41912871">大页内存(HugePages)在通用程序优化中的应用</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>大页内存</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：远程服务器通过本机代理联网</title>
    <url>/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>解决问题如下：</p>
<p>线上服务器无法访问公网，申请公网访问流程过于复杂，部署环境又需要连接公网来安装包，可使用本方式配置代理联网。</p>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><ol>
<li>通过<code>Fiddler</code>，在本地Windows机器上启动HTTP代理服务</li>
<li>通过Xshell/MobaXterm等远程连接软件，建立<code>SSH Tunnel</code></li>
<li>连接远程服务器后，在服务器设置<code>http_proxy</code> <code>https_proxy</code> <code>no_proxy</code></li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%90%86%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="远程代理架构图"></p>
<h2 id="资源包"><a href="#资源包" class="headerlink" title="资源包"></a>资源包</h2><p><strong>Fiddler</strong></p>
<ul>
<li>链接：<a href="https://pan.baidu.com/s/1-0wsdRkJ6MsDG7MvvvZVLQ">https://pan.baidu.com/s/1-0wsdRkJ6MsDG7MvvvZVLQ</a> </li>
<li>提取码：x0cc </li>
</ul>
<h2 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h2><h3 id="1-部署Fiddler"><a href="#1-部署Fiddler" class="headerlink" title="1. 部署Fiddler"></a>1. 部署Fiddler</h3><p>下载并解压Fiddler至本地文件夹，双击<code>Fiddler.exe</code>运行Fiddler，对Fiddler做如下配置：</p>
<ul>
<li>勾选允许远程计算机连接</li>
</ul>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%83%A8%E7%BD%B2Fiddler.png" alt="部署Fiddler"></p>
<h3 id="2-配置SSH工具"><a href="#2-配置SSH工具" class="headerlink" title="2. 配置SSH工具"></a>2. 配置SSH工具</h3><h5 id="MobaXterm"><a href="#MobaXterm" class="headerlink" title="MobaXterm"></a>MobaXterm</h5><ol>
<li>点击<code>Tunneling</code>，进入<code>SSH Tunneling</code>设置页面</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEMobaXterm-1.png" alt="配置MobaXterm-1"></p>
<ol start="2">
<li>点击<code>New SSH tunnel</code>，创建新的SSH tunnel</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEMobaXterm-2.png" alt="配置MobaXterm-2"></p>
<ol start="3">
<li>点击<code>Remote port forwarding</code>，设置远程代理，填写如下参数：<ul>
<li>Local server：port使用Fiddler中启动的本地代理端口（ <code>hostname</code> + <code>port</code> ）</li>
<li>SSH server：远程SSH登录信息（ <code>ip</code> + <code>port</code> + <code>username</code> ）</li>
<li>Remote clients：填写远端服务器的一个端口，程序会在远程服务器启动该端口用于转发（<code>forwarded port</code>）</li>
</ul>
</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEMobaXterm-3.png" alt="配置MobaXterm-3"></p>
<h5 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h5><ol>
<li>进入ssh连接属性页面，<code> 连接</code> –&gt; <code>SSH</code> –&gt; <code>隧道</code>，点击添加 </li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEXshell-1.png" alt="配置Xshell-1"></p>
<ol start="2">
<li>修改源主机信息，填写远程ssh的ip，侦听端口随便定义，远程主机会将http请求转发至该端口，进行网络访问</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEXshell-2.png" alt="配置Xshell-2"></p>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEXshell-3.png" alt="配置Xshell-3"></p>
<h3 id="3-配置远端服务器"><a href="#3-配置远端服务器" class="headerlink" title="3. 配置远端服务器"></a>3. 配置远端服务器</h3><p>参考系统：<code>CentOS Linux release 7.6.1810</code></p>
<ul>
<li><p>临时配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 代理端口使用SSH tunnel中remote clients部分配置的forwarded port</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置环境变量</span></span><br><span class="line">export https_proxy=https://127.0.0.1:8888</span><br><span class="line">export http_proxy=http://127.0.0.1:8888</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试网络访问</span></span><br><span class="line">curl www.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> HTTP与HTTPS可正常访问，ping公网ip是不通的，正常yum安装满足需求</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>永久配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt; /etc/environment &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认http访问均走如下代理</span></span><br><span class="line">http_proxy=&quot;http://127.0.0.1:8888&quot;</span><br><span class="line">https_proxy=&quot;https://127.0.0.1:8888&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问以下ip不经过代理</span></span><br><span class="line">no_proxy=&quot;localhost,127.0.0.1&quot;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>




</li>
</ul>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="问题：代理突然连不上网"><a href="#问题：代理突然连不上网" class="headerlink" title="问题：代理突然连不上网"></a>问题：代理突然连不上网</h3><p>解决方法：</p>
<ol>
<li><p>远程服务器检查8888端口是否有异常状态的连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -tunlp | grep 8888</span><br></pre></td></tr></table></figure>

</li>
</ol>
<ol start="2">
<li><p>正常状态输出如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tcp        0      0 127.0.0.1:8888          0.0.0.0:*               LISTEN      18860/sshd: boco4a</span><br></pre></td></tr></table></figure>
</li>
<li><p>异常状态会存在多个异常状态TCP连接（如TIME_WITE，CLOSE_WITE等）占用8888端口，使用<code>kill -9 &lt;pid&gt;</code>杀掉进程，重新建立SSH tunnel连接即可</p>
</li>
</ol>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.jianshu.com/p/75bf2dc43450">如何用fiddler进行代理设置</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>Mosquitto</title>
    <url>/2020/08/31/Mosquitto/</url>
    <content><![CDATA[<h2 id="Mosquitto"><a href="#Mosquitto" class="headerlink" title="Mosquitto"></a>Mosquitto</h2><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的”轻量级”通讯协议，该协议构建于TCP/IP协议上，由IBM在1999年发布。MQTT最大优点在于，可以以极少的代码和有限的带宽，为连接远程设备提供实时可靠的消息服务。作为一种低开销、低带宽占用的即时通讯协议，使其在物联网、小型设备、移动应用等方面有较广泛的应用。</p>
<p>MQTT是一个基于客户端-服务器的消息发布/订阅传输协议。MQTT协议是轻量、简单、开放和易于实现的，这些特点使它适用范围非常广泛。在很多情况下，包括受限的环境中，如：机器与机器（M2M）通信和物联网（IoT）。其在，通过卫星链路通信传感器、偶尔拨号的医疗设备、智能家居、及一些小型化设备中已广泛使用。</p>
<a id="more"></a>

<p><img src="/2020/08/31/Mosquitto/1573118328615.png" alt="1573118328615"></p>
<h3 id="config-解析"><a href="#config-解析" class="headerlink" title="config 解析"></a>config 解析</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim mosquitto.conf</span><br><span class="line"></span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># General configuration</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"> </span><br><span class="line"># 客户端心跳的间隔时间</span><br><span class="line">#retry_interval 20</span><br><span class="line"> </span><br><span class="line"># 系统状态的刷新时间</span><br><span class="line">#sys_interval 10</span><br><span class="line"> </span><br><span class="line"># 系统资源的回收时间，0表示尽快处理</span><br><span class="line">#store_clean_interval 10</span><br><span class="line"> </span><br><span class="line"># 服务进程的PID</span><br><span class="line">#pid_file &#x2F;var&#x2F;run&#x2F;mosquitto.pid</span><br><span class="line"> </span><br><span class="line"># 服务进程的系统用户</span><br><span class="line">#user mosquitto</span><br><span class="line"> </span><br><span class="line"># 客户端心跳消息的最大并发数</span><br><span class="line">#max_inflight_messages 10</span><br><span class="line"> </span><br><span class="line"># 客户端心跳消息缓存队列</span><br><span class="line">#max_queued_messages 100</span><br><span class="line"> </span><br><span class="line"># 用于设置客户端长连接的过期时间，默认永不过期</span><br><span class="line">#persistent_client_expiration</span><br><span class="line"> </span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># Default listener</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"> </span><br><span class="line"># 服务绑定的IP地址</span><br><span class="line">#bind_address</span><br><span class="line"> </span><br><span class="line"># 服务绑定的端口号</span><br><span class="line">#port 1883</span><br><span class="line"> </span><br><span class="line"># 允许的最大连接数，-1表示没有限制</span><br><span class="line">#max_connections -1</span><br><span class="line"> </span><br><span class="line"># cafile：CA证书文件</span><br><span class="line"># capath：CA证书目录</span><br><span class="line"># certfile：PEM证书文件</span><br><span class="line"># keyfile：PEM密钥文件</span><br><span class="line">#cafile</span><br><span class="line">#capath</span><br><span class="line">#certfile</span><br><span class="line">#keyfile</span><br><span class="line"> </span><br><span class="line"># 必须提供证书以保证数据安全性</span><br><span class="line">#require_certificate false</span><br><span class="line"> </span><br><span class="line"># 若require_certificate值为true，use_identity_as_username也必须为true</span><br><span class="line">#use_identity_as_username false</span><br><span class="line"> </span><br><span class="line"># 启用PSK（Pre-shared-key）支持</span><br><span class="line">#psk_hint</span><br><span class="line"> </span><br><span class="line"># SSL&#x2F;TSL加密算法，可以使用“openssl ciphers”命令获取</span><br><span class="line"># as the output of that command.</span><br><span class="line">#ciphers</span><br><span class="line"> </span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># Persistence</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"> </span><br><span class="line"># 消息自动保存的间隔时间</span><br><span class="line">#autosave_interval 1800</span><br><span class="line"> </span><br><span class="line"># 消息自动保存功能的开关</span><br><span class="line">#autosave_on_changes false</span><br><span class="line"> </span><br><span class="line"># 持久化功能的开关</span><br><span class="line">persistence true</span><br><span class="line"> </span><br><span class="line"># 持久化DB文件</span><br><span class="line">#persistence_file mosquitto.db</span><br><span class="line"> </span><br><span class="line"># 持久化DB文件目录</span><br><span class="line">#persistence_location &#x2F;var&#x2F;lib&#x2F;mosquitto&#x2F;</span><br><span class="line"> </span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># Logging</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"> </span><br><span class="line"># 4种日志模式：stdout、stderr、syslog、topic</span><br><span class="line"># none 则表示不记日志，此配置可以提升些许性能</span><br><span class="line">log_dest none</span><br><span class="line"> </span><br><span class="line"># 选择日志的级别（可设置多项）</span><br><span class="line">#log_type error</span><br><span class="line">#log_type warning</span><br><span class="line">#log_type notice</span><br><span class="line">#log_type information</span><br><span class="line"> </span><br><span class="line"># 是否记录客户端连接信息</span><br><span class="line">#connection_messages true</span><br><span class="line"> </span><br><span class="line"># 是否记录日志时间</span><br><span class="line">#log_timestamp true</span><br><span class="line"> </span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># Security</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"> </span><br><span class="line"># 客户端ID的前缀限制，可用于保证安全性</span><br><span class="line">#clientid_prefixes</span><br><span class="line"> </span><br><span class="line"># 允许匿名用户</span><br><span class="line">#allow_anonymous true</span><br><span class="line"> </span><br><span class="line"># 用户&#x2F;密码文件，默认格式：username:password</span><br><span class="line">#password_file</span><br><span class="line"> </span><br><span class="line"># PSK格式密码文件，默认格式：identity:key</span><br><span class="line">#psk_file</span><br><span class="line"> </span><br><span class="line"># pattern write sensor&#x2F;%u&#x2F;data</span><br><span class="line"># ACL权限配置，常用语法如下：</span><br><span class="line"># 用户限制：user &lt;username&gt;</span><br><span class="line"># 话题限制：topic [read|write] &lt;topic&gt;</span><br><span class="line"># 正则限制：pattern write sensor&#x2F;%u&#x2F;data</span><br><span class="line">#acl_file</span><br><span class="line"> </span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># Bridges</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"> </span><br><span class="line"># 允许服务之间使用“桥接”模式（可用于分布式部署）</span><br><span class="line">#connection &lt;name&gt;</span><br><span class="line">#address &lt;host&gt;[:&lt;port&gt;]</span><br><span class="line">#topic &lt;topic&gt; [[[out | in | both] qos-level] local-prefix remote-prefix]</span><br><span class="line"> </span><br><span class="line"># 设置桥接的客户端ID</span><br><span class="line">#clientid</span><br><span class="line"> </span><br><span class="line"># 桥接断开时，是否清除远程服务器中的消息</span><br><span class="line">#cleansession false</span><br><span class="line"> </span><br><span class="line"># 是否发布桥接的状态信息</span><br><span class="line">#notifications true</span><br><span class="line"> </span><br><span class="line"># 设置桥接模式下，消息将会发布到的话题地址</span><br><span class="line"># $SYS&#x2F;broker&#x2F;connection&#x2F;&lt;clientid&gt;&#x2F;state</span><br><span class="line">#notification_topic</span><br><span class="line"> </span><br><span class="line"># 设置桥接的keepalive数值</span><br><span class="line">#keepalive_interval 60</span><br><span class="line"> </span><br><span class="line"># 桥接模式，目前有三种：automatic、lazy、once</span><br><span class="line">#start_type automatic</span><br><span class="line"> </span><br><span class="line"># 桥接模式automatic的超时时间</span><br><span class="line">#restart_timeout 30</span><br><span class="line"> </span><br><span class="line"># 桥接模式lazy的超时时间</span><br><span class="line">#idle_timeout 60</span><br><span class="line"> </span><br><span class="line"># 桥接客户端的用户名</span><br><span class="line">#username</span><br><span class="line"> </span><br><span class="line"># 桥接客户端的密码</span><br><span class="line">#password</span><br><span class="line"> </span><br><span class="line"># bridge_cafile：桥接客户端的CA证书文件</span><br><span class="line"># bridge_capath：桥接客户端的CA证书目录</span><br><span class="line"># bridge_certfile：桥接客户端的PEM证书文件</span><br><span class="line"># bridge_keyfile：桥接客户端的PEM密钥文件</span><br><span class="line">#bridge_cafile</span><br><span class="line">#bridge_capath</span><br><span class="line">#bridge_certfile</span><br><span class="line">#bridge_keyfile</span><br><span class="line"> </span><br><span class="line"># 自己的配置可以放到以下目录中</span><br><span class="line">#include_dir &#x2F;mqtt&#x2F;config&#x2F;conf.d</span><br></pre></td></tr></table></figure>

<h3 id="Qos-解析"><a href="#Qos-解析" class="headerlink" title="Qos 解析"></a>Qos 解析</h3><h4 id="Qos-0-–-gt-最多一次"><a href="#Qos-0-–-gt-最多一次" class="headerlink" title="Qos=0 –&gt; 最多一次"></a>Qos=0 –&gt; 最多一次</h4><blockquote>
<p>sequenceDiagram</p>
<p>ClientA-&gt;&gt;ServerBroker: 发送消息<br>ServerBroker-&gt;&gt;ClientB: 发送消息</p>
</blockquote>
<h4 id="Qos-1-–-gt-至少一次"><a href="#Qos-1-–-gt-至少一次" class="headerlink" title="Qos=1 –&gt; 至少一次"></a>Qos=1 –&gt; 至少一次</h4><blockquote>
<p>sequenceDiagram</p>
<p>ClientA-&gt;&gt;ServerBroker: 1.发送消息PUBLISH<br>ServerBroker-&gt;&gt;ServerBroker: 1.1存储消息<br>ServerBroker-&gt;&gt;ClientA: 1.2发送消息回应PUBACK<br>ServerBroker-&gt;&gt;ClientB: 2.发送消息<br>ClientB-&gt;&gt;ServerBroker: 2.1发送消息回应PUBACK<br>ServerBroker-&gt;&gt;ServerBroker: 2.2删除消息</p>
</blockquote>
<h4 id="Qos-2-–-gt-有且仅有一次"><a href="#Qos-2-–-gt-有且仅有一次" class="headerlink" title="Qos=2 –&gt; 有且仅有一次"></a>Qos=2 –&gt; 有且仅有一次</h4><blockquote>
<p>sequenceDiagram</p>
<p>ClientA-&gt;&gt;ServerBroker: 1.发送消息PUBLISH<br>ServerBroker-&gt;&gt;ServerBroker: 1.1存储消息<br>ServerBroker-&gt;&gt;ClientA: 1.2发送消息回应Rec<br>ClientA-&gt;&gt;ServerBroker: 2.发送消息Rel<br>ServerBroker-&gt;&gt;ServerBroker: 2.1删除消息<br>ServerBroker-&gt;&gt;ServerBroker: 2.2存储消息到发送列队<br>ServerBroker-&gt;&gt;ClientB: 2.3发送消息<br>ServerBroker-&gt;&gt;ClientA: 2.4发送消息回应Comp<br>ClientB-&gt;&gt;ServerBroker: 3.发送消息回应Rec<br>ServerBroker-&gt;&gt;ServerBroker: 3.1删除2.2中存储的消息（一次确认）<br>ServerBroker-&gt;&gt;ServerBroker: 3.2存储消息<br>ServerBroker-&gt;&gt;ClientB: 3.3发送消息Rel<br>ClientB-&gt;&gt;ServerBroker: 3.4发送消息回应Comp<br>ServerBroker-&gt;&gt;ServerBroker: 3.5删除消息(二次确认)</p>
</blockquote>
<p><img src="/2020/08/31/Mosquitto/1573118624880.png" alt="1573118624880"></p>
<h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3><h4 id="实验1：Mosquitto-内存数据落盘机制"><a href="#实验1：Mosquitto-内存数据落盘机制" class="headerlink" title="实验1：Mosquitto 内存数据落盘机制"></a>实验1：Mosquitto 内存数据落盘机制</h4><h5 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h5><p>​    Mosquitto 内存数据落盘持久化时，是否会产生重复数据</p>
<h5 id="实验结论"><a href="#实验结论" class="headerlink" title="实验结论"></a>实验结论</h5><p>​    Mosquitto 不会重复持久化已经持久化过的数据</p>
<h5 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h5><p>​    mosquitto version 1.4.15</p>
<h5 id="实验方法"><a href="#实验方法" class="headerlink" title="实验方法"></a>实验方法</h5><ol>
<li>发送者保持同样的发送速率，降低订阅者消费速度，触发mqtt的持久化机制</li>
<li>更改mqtt持久化的间隔（3s 和 30s），观测持久化的数据大小是否不同</li>
</ol>
<h5 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h5><blockquote>
<p>发送者：发送1w条消息，用时 31.16837883 s</p>
<p>订阅者：每分钟消化1条，1min内堆积9999条消息</p>
<p>Mosquitto：持久化间隔 3s，1min内涨幅 27842 Byte</p>
</blockquote>
<p><img src="/2020/08/31/Mosquitto/1573112430542.png" alt="1573112430542"></p>
<blockquote>
<p>发送者：发送1w条消息，</p>
<p>订阅者：每分钟消化1条，1min内堆积9999条消息</p>
<p>Mosquitto：持久化间隔 30s，1min内涨幅 27842 Byte</p>
</blockquote>
<p><img src="/2020/08/31/Mosquitto/1573113441213.png" alt="1573113441213"></p>
<h5 id="实验脚本"><a href="#实验脚本" class="headerlink" title="实验脚本"></a>实验脚本</h5><h6 id="send-py"><a href="#send-py" class="headerlink" title="send.py"></a>send.py</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Send msg to mqtt (linux, python2)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">__author__ &#x3D; &#39;RYB&#39;</span><br><span class="line"></span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line">import paho.mqtt.publish as publish</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def ranstr(num):</span><br><span class="line">    salt &#x3D; &#39;&#39;.join(random.sample(string.ascii_letters + string.digits, num))</span><br><span class="line">    return salt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def publish_msg(msg_num):</span><br><span class="line">    for i in range(msg_num):</span><br><span class="line">        msg &#x3D; &#123;</span><br><span class="line">            &quot;id&quot;: i,</span><br><span class="line">            &quot;Timestamp&quot;: int(time.time() * 1000),</span><br><span class="line">            &quot;str1&quot;: ranstr(50),</span><br><span class="line">            &quot;str2&quot;: ranstr(50)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        publish.single(&quot;test&quot;, payload&#x3D;json.dumps(msg), qos&#x3D;2, hostname&#x3D;&quot;10.244.0.164&quot;, port&#x3D;1883)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Start &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">start &#x3D; time.time()</span><br><span class="line">print(&quot;Running...&quot;)</span><br><span class="line">publish_msg(10000)</span><br><span class="line">end &#x3D; time.time()</span><br><span class="line">print(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; End &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">print(&quot;Run Time: %s s&quot; % str(end - start))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="rec-py"><a href="#rec-py" class="headerlink" title="rec.py"></a>rec.py</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Receive msg from mqtt (linux, python2)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">__author__ &#x3D; &#39;RYB&#39;</span><br><span class="line"></span><br><span class="line">import time</span><br><span class="line">import paho.mqtt.subscribe as subscribe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def on_message_sleep(client, userdata, msg):</span><br><span class="line">    print(msg.topic + &#39; --&gt; &#39; + msg.payload)</span><br><span class="line">    time.sleep(60)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subscribe.callback(on_message_sleep, &quot;test&quot;, qos&#x3D;2, hostname&#x3D;&quot;mosquitto&quot;, port&#x3D;1883)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3>]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>MQTT</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack使用：自定义实例root密码</title>
    <url>/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h2 id="OpenStack安装信息"><a href="#OpenStack安装信息" class="headerlink" title="OpenStack安装信息"></a>OpenStack安装信息</h2><ul>
<li>安装工具：kolla ansible</li>
<li>安装版本：Train版</li>
<li>虚拟化层：qemu</li>
<li>Nova配置：默认配置，未做修改</li>
</ul>
<h2 id="官方镜像地址"><a href="#官方镜像地址" class="headerlink" title="官方镜像地址"></a>官方镜像地址</h2><ul>
<li>Cirros：<a href="https://download.cirros-cloud.net/">https://download.cirros-cloud.net/</a></li>
<li>Centos：<a href="http://cloud.centos.org/centos/">http://cloud.centos.org/centos/</a></li>
<li>Ubuntu：<a href="http://cloud-images.ubuntu.com/releases/">http://cloud-images.ubuntu.com/releases/</a></li>
</ul>
<h2 id="自定义root密码"><a href="#自定义root密码" class="headerlink" title="自定义root密码"></a>自定义root密码</h2><h3 id="方式一：通过Horizon修改"><a href="#方式一：通过Horizon修改" class="headerlink" title="方式一：通过Horizon修改"></a>方式一：通过Horizon修改</h3><blockquote>
<p>cirros镜像适用该方式，版本：cirros-0.4.0-x86_64-disk.img。<br>centos镜像不适用。版本：CentOS-7-x86_64-GenericCloud-2003.qcow2。</p>
</blockquote>
<p>创建实例时，在<code>配置项</code>填写<code>定制化脚本</code>，并勾选<code>配置驱动</code>（默认不勾选，不勾选会出现密码不生效的问题）</p>
<p>参考脚本如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">passwd root &lt;&lt; EOF</span><br><span class="line">1234qwer</span><br><span class="line">1234qwer</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/Horizon%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81.png" alt="Horizon修改root密码"></p>
<h3 id="方式二：后端修改"><a href="#方式二：后端修改" class="headerlink" title="方式二：后端修改"></a>方式二：后端修改</h3><blockquote>
<p><strong>镜像内部需要安装：qemu-guest-agent</strong></p>
<table>
<thead>
<tr>
<th>组件</th>
<th>版本</th>
<th>位置</th>
</tr>
</thead>
<tbody><tr>
<td>libvirt</td>
<td>1.2.16+</td>
<td>宿主机</td>
</tr>
<tr>
<td>python-libvirt</td>
<td>1.2.16+</td>
<td>宿主机</td>
</tr>
<tr>
<td>qemu-guest-agent</td>
<td>2.3+</td>
<td>虚机内部</td>
</tr>
</tbody></table>
<p>cirros镜像不适用该方式，版本：cirros-0.4.0-x86_64-disk.img。<br>centos镜像适用。版本：CentOS-7-x86_64-GenericCloud-2003.qcow2。</p>
</blockquote>
<h4 id="步骤1：修改image元数据"><a href="#步骤1：修改image元数据" class="headerlink" title="步骤1：修改image元数据"></a>步骤1：修改image元数据</h4><h5 id="方式1：前端修改"><a href="#方式1：前端修改" class="headerlink" title="方式1：前端修改"></a>方式1：前端修改</h5><p>编辑镜像，在<code>元数据</code> - <code>libvirt Driver Options for Images</code> - <code>QEMU Guest Agent</code>，设置为<code>yes</code>即可</p>
<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/Horizon%E8%AE%BE%E7%BD%AEimage%E5%85%83%E6%95%B0%E6%8D%AE.png" alt="Horizon设置image元数据"></p>
<h5 id="方式2：后端修改"><a href="#方式2：后端修改" class="headerlink" title="方式2：后端修改"></a>方式2：后端修改</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加image元数据信息</span></span><br><span class="line">openstack image list</span><br><span class="line">openstack image set &lt;image id or name&gt; --property hw_qemu_guest_agent=yes</span><br></pre></td></tr></table></figure>

<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/image%E4%BF%A1%E6%81%AF.png" alt="image信息"></p>
<p>不设置该参数，修改密码时会报<code>QEMU guest agent is not enabled (HTTP 409)</code>，错误如下：</p>
<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81409.png" alt="修改root密码409"></p>
<h4 id="步骤2：使用更新后的镜像创建虚机"><a href="#步骤2：使用更新后的镜像创建虚机" class="headerlink" title="步骤2：使用更新后的镜像创建虚机"></a>步骤2：使用更新后的镜像创建虚机</h4><h4 id="步骤3：后端修改虚机密码"><a href="#步骤3：后端修改虚机密码" class="headerlink" title="步骤3：后端修改虚机密码"></a>步骤3：后端修改虚机密码</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack server list</span><br><span class="line">openstack server set --root-password &lt;server id or name&gt;</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.openstack.org/image-guide/">OpenStack Virtual Machine Image Guide</a></p>
<p><a href="https://blog.51cto.com/11954248/2503692">OpenStack Train版操作笔记（14）—使用官方云镜像启动实例并命令行修改root密码</a></p>
<p><a href="https://blog.csdn.net/zhongbeida_xue/article/details/80417019">openstack虚拟机系统密码的修改方案</a></p>
]]></content>
      <categories>
        <category>OpenStack使用</category>
      </categories>
      <tags>
        <tag>OpenStack使用</tag>
        <tag>Train版本</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack使用：Windows镜像制作</title>
    <url>/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9AWindows%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="资源下载地址"><a href="#资源下载地址" class="headerlink" title="资源下载地址"></a>资源下载地址</h2><ul>
<li>系统镜像：<a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></li>
<li>virtio：<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/</a></li>
</ul>
<p>PS：新版本的virtio需要下载iso文件，内部驱动全面</p>
<h2 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h2><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装包</span></span><br><span class="line">yum install qemu-kvm qemu-img –y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建链接</span></span><br><span class="line">ln -sv /usr/libexec/qemu-kvm /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建磁盘</span></span><br><span class="line">qemu-img create -f qcow2 cn_windows_server_2016_vl_x64_cloud_11636695.qcow2 15G</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建虚机</span></span><br><span class="line">qemu-kvm -m 1024 -cdrom cn_windows_server_2016_vl_x64_dvd_11636695.iso -drive file=cn_windows_server_2016_vl_x64_dvd_11636695.qcow2,if=virtio,boot=on -fda virtio-win_amd64.vfd -boot d -nographic -vnc :3</span><br></pre></td></tr></table></figure>



<h3 id="VNC连接虚机"><a href="#VNC连接虚机" class="headerlink" title="VNC连接虚机"></a>VNC连接虚机</h3><p>连接方式：<code>&lt;server ip&gt;:3</code></p>
<h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.cnblogs.com/tcicy/p/7790956.html">OpenStack kvm win7镜像制作</a></p>
<p><a href="https://blog.csdn.net/qq_20154221/article/details/51586537">制作OpenStack镜像win7.qcow2（centos/ubuntu/win镜像分享）</a></p>
<p><a href="https://blog.csdn.net/wylfengyujiancheng/article/details/50468173">制作OpenStack Windows Server 2012镜像</a></p>
]]></content>
      <categories>
        <category>OpenStack使用</category>
      </categories>
      <tags>
        <tag>OpenStack使用</tag>
        <tag>镜像制作</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack开发：Glance Image Cache</title>
    <url>/2020/12/22/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9AGlance-Image-Cache/</url>
    <content><![CDATA[<h2 id="The-Glance-Image-Cache"><a href="#The-Glance-Image-Cache" class="headerlink" title="The Glance Image Cache"></a>The Glance Image Cache</h2><blockquote>
<p>The Glance API server may be configured to have an optional local image cache. A local image cache stores a copy of image files, essentially enabling multiple API servers to serve the same image file, resulting in an increase in scalability due to an increased number of endpoints serving an image file.</p>
<p>This local image cache is transparent to the end user – in other words, the end user doesn’t know that the Glance API is streaming an image file from its local cache or from the actual backend storage system.</p>
</blockquote>
<h2 id="Configuration-options-for-the-Image-Cache"><a href="#Configuration-options-for-the-Image-Cache" class="headerlink" title="Configuration options for the Image Cache"></a>Configuration options for the Image Cache</h2><p>Config File：<code>glance-api.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line"><span class="comment"># This is the base directory where Glance stores the cache data (Required to be set, as does not have a default).</span></span><br><span class="line">image_cache_dir = /var/lib/glance/image-cache</span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to the sqlite file database that will be used for cache management.</span></span><br><span class="line">image_cache_driver = sqlite</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is a relative path from the image_cache_dir directory (Default:cache.db)</span></span><br><span class="line">image_cache_sqlite_db = cache.db</span><br><span class="line"></span><br><span class="line"><span class="comment"># The size when the glance-cache-pruner will remove the oldest images, to reduce the bytes until under this value. (Default:10 GB)</span></span><br><span class="line">image_cache_max_size = 1073741824</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line"><span class="comment"># Enabling the Image Cache Management Middlewar. There are three types you can chose: </span></span><br><span class="line"><span class="comment">#   - cachemanagement</span></span><br><span class="line"><span class="comment">#   - keystone+cachemanagement</span></span><br><span class="line"><span class="comment">#   - trusted-auth+cachemanagement.</span></span><br><span class="line">flavor = keystone+cachemanagement</span><br></pre></td></tr></table></figure>





<h2 id="Managing-the-Glance-Image-Cache"><a href="#Managing-the-Glance-Image-Cache" class="headerlink" title="Managing the Glance Image Cache"></a>Managing the Glance Image Cache</h2><blockquote>
<p>While image files are automatically placed in the image cache on successful requests to <code>GET /v2/images/&#123;image_id&#125;/file</code>, eg: <code>openstack image save --file &lt;file name&gt; &lt;image id&gt;</code>.</p>
<p>the image cache is not automatically managed. Here, we describe the basics of how to manage the local image cache on Glance API servers and how to automate this cache management.</p>
</blockquote>
<h3 id="Glance-Image-Cache-API"><a href="#Glance-Image-Cache-API" class="headerlink" title="Glance Image Cache API"></a>Glance Image Cache API</h3><table>
<thead>
<tr>
<th>Description</th>
<th>Method</th>
<th>URL</th>
</tr>
</thead>
<tbody><tr>
<td>Get cached image</td>
<td>GET</td>
<td><code>/v2/cached_images</code></td>
</tr>
<tr>
<td>Delete cached image</td>
<td>DELETE</td>
<td><code>/v2/cached_images/&#123;image_id&#125;</code></td>
</tr>
<tr>
<td>Delete all cached image</td>
<td>DELETE</td>
<td><code>/v2/cached_images</code></td>
</tr>
<tr>
<td>Get queued image</td>
<td>GET</td>
<td><code>/v2/queued_images</code></td>
</tr>
<tr>
<td>Put image to queue</td>
<td>PUT</td>
<td><code>/v2/queued_images/&#123;image_id&#125;</code></td>
</tr>
<tr>
<td>Delete queued image</td>
<td>DELETE</td>
<td><code>/v2/queued_images/&#123;image_id&#125;</code></td>
</tr>
<tr>
<td>Delete all queued image</td>
<td>DELETE</td>
<td><code>/v2/queued_images</code></td>
</tr>
</tbody></table>
<p>Src File：<code>glance/api/middleware/cache_manage.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Copyright 2011 OpenStack Foundation</span></span><br><span class="line"><span class="comment"># All Rights Reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may</span></span><br><span class="line"><span class="comment">#    not use this file except in compliance with the License. You may obtain</span></span><br><span class="line"><span class="comment">#    a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#         http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">#    distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT</span></span><br><span class="line"><span class="comment">#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the</span></span><br><span class="line"><span class="comment">#    License for the specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment">#    under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Image Cache Management API</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> oslo_log <span class="keyword">import</span> log <span class="keyword">as</span> logging</span><br><span class="line"><span class="keyword">import</span> routes</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> glance.api.v2 <span class="keyword">import</span> cached_images</span><br><span class="line"><span class="keyword">from</span> glance.common <span class="keyword">import</span> wsgi</span><br><span class="line"><span class="keyword">from</span> glance.i18n <span class="keyword">import</span> _LI</span><br><span class="line"></span><br><span class="line">LOG = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CacheManageFilter</span>(<span class="params">wsgi.Middleware</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, app</span>):</span></span><br><span class="line">        mapper = routes.Mapper()</span><br><span class="line">        resource = cached_images.create_resource()</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/cached_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;get_cached_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;GET&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/cached_images/&#123;image_id&#125;&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_cached_image&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/cached_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_cached_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images/&#123;image_id&#125;&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;queue_image&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;PUT&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;get_queued_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;GET&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images/&#123;image_id&#125;&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_queued_image&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_queued_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        self._mapper = mapper</span><br><span class="line">        self._resource = resource</span><br><span class="line"></span><br><span class="line">        LOG.info(_LI(<span class="string">&quot;Initialized image cache management middleware&quot;</span>))</span><br><span class="line">        super(CacheManageFilter, self).__init__(app)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="comment"># Map request to our resource object if we can handle it</span></span><br><span class="line">        match = self._mapper.match(request.path_info, request.environ)</span><br><span class="line">        <span class="keyword">if</span> match:</span><br><span class="line">            request.environ[<span class="string">&#x27;wsgiorg.routing_args&#x27;</span>] = (<span class="literal">None</span>, match)</span><br><span class="line">            <span class="keyword">return</span> self._resource(request)</span><br><span class="line">        <span class="comment"># Pass off downstream if we don&#x27;t match the request path</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="sqlite数据库"><a href="#sqlite数据库" class="headerlink" title="sqlite数据库"></a>sqlite数据库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlite&gt; .tables</span><br><span class="line">cached_images</span><br><span class="line">sqlite&gt; .schema cached_images</span><br><span class="line">CREATE TABLE cached_images (</span><br><span class="line">                        image_id TEXT PRIMARY KEY,</span><br><span class="line">                        last_accessed REAL DEFAULT 0.0,</span><br><span class="line">                        last_modified REAL DEFAULT 0.0,</span><br><span class="line">                        size INTEGER DEFAULT 0,</span><br><span class="line">                        hits INTEGER DEFAULT 0,</span><br><span class="line">                        checksum TEXT</span><br><span class="line">                    );</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>image_id：缓存镜像id</li>
<li>last_accessed：镜像最近一次被访问的时间</li>
<li>last_modified：镜像最近一次更改的时间</li>
<li>size：镜像大小</li>
<li>hits：镜像缓存命中次数，命中一次 +1</li>
<li>checksum：校验值</li>
</ul>
<p>Src File：<code>glance/image_cache/drivers/sqlite.py</code></p>
<p><code>SQLite Driver</code>创建表的流程如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize_db</span>(<span class="params">self</span>):</span></span><br><span class="line">    db = CONF.image_cache_sqlite_db</span><br><span class="line">    self.db_path = os.path.join(self.base_dir, db)</span><br><span class="line">    lockutils.set_defaults(self.base_dir)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @lockutils.synchronized(&#x27;image_cache_db_init&#x27;, external=True)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_db</span>():</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = sqlite3.connect(self.db_path, check_same_thread=<span class="literal">False</span>,</span><br><span class="line">                                   factory=SqliteConnection)</span><br><span class="line">            conn.executescript(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                CREATE TABLE IF NOT EXISTS cached_images (</span></span><br><span class="line"><span class="string">                    image_id TEXT PRIMARY KEY,</span></span><br><span class="line"><span class="string">                    last_accessed REAL DEFAULT 0.0,</span></span><br><span class="line"><span class="string">                    last_modified REAL DEFAULT 0.0,</span></span><br><span class="line"><span class="string">                    size INTEGER DEFAULT 0,</span></span><br><span class="line"><span class="string">                    hits INTEGER DEFAULT 0,</span></span><br><span class="line"><span class="string">                    checksum TEXT</span></span><br><span class="line"><span class="string">                );</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span>)</span><br><span class="line">            conn.close()</span><br><span class="line">        <span class="keyword">except</span> sqlite3.DatabaseError <span class="keyword">as</span> e:</span><br><span class="line">            msg = _(<span class="string">&quot;Failed to initialize the image cache database. &quot;</span></span><br><span class="line">                    <span class="string">&quot;Got error: %s&quot;</span>) % e</span><br><span class="line">            LOG.error(msg)</span><br><span class="line">            <span class="keyword">raise</span> exception.BadDriverConfiguration(driver_name=<span class="string">&#x27;sqlite&#x27;</span>,</span><br><span class="line">                                                   reason=msg)</span><br><span class="line"></span><br><span class="line">    create_db()</span><br></pre></td></tr></table></figure>





<h2 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h2><h3 id="Glance-image-cache流程"><a href="#Glance-image-cache流程" class="headerlink" title="Glance image cache流程"></a>Glance image cache流程</h3><p>Src File：<code>glance/image_cache/__init__.py</code></p>
<p>入口函数：主要传入CHUNKSIZE值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cache_image_file</span>(<span class="params">self, image_id, image_file</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Cache an image file.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param image_id: Image ID</span></span><br><span class="line"><span class="string">        :param image_file: Image file to cache</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :returns: True if image file was cached, False otherwise</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        CHUNKSIZE = <span class="number">64</span> * units.Mi</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.cache_image_iter(image_id,</span><br><span class="line">                                     utils.chunkiter(image_file, CHUNKSIZE))</span><br></pre></td></tr></table></figure>

<p><code>cache_image_iter()</code> &gt; <code>get_caching_iter()</code> &gt; <code>cache_tee_iter</code>，打开缓存文件写入缓存内容，文件名为<code>image_id</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cache_image_iter</span>(<span class="params">self, image_id, image_iter, image_checksum=None</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Cache an image with supplied iterator.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param image_id: Image ID</span></span><br><span class="line"><span class="string">    :param image_file: Iterator retrieving image chunks</span></span><br><span class="line"><span class="string">    :param image_checksum: Checksum of image</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :returns: True if image file was cached, False otherwise</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self.driver.is_cacheable(image_id):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> self.get_caching_iter(image_id, image_checksum,</span><br><span class="line">                                       image_iter):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_caching_iter</span>(<span class="params">self, image_id, image_checksum, image_iter</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns an iterator that caches the contents of an image</span></span><br><span class="line"><span class="string">    while the image contents are read through the supplied</span></span><br><span class="line"><span class="string">    iterator.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param image_id: Image ID</span></span><br><span class="line"><span class="string">    :param image_checksum: checksum expected to be generated while</span></span><br><span class="line"><span class="string">                           iterating over image data</span></span><br><span class="line"><span class="string">    :param image_iter: Iterator that will read image contents</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self.driver.is_cacheable(image_id):</span><br><span class="line">        <span class="keyword">return</span> image_iter</span><br><span class="line"></span><br><span class="line">    LOG.debug(<span class="string">&quot;Tee&#x27;ing image &#x27;%s&#x27; into cache&quot;</span>, image_id)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> self.cache_tee_iter(image_id, image_iter, image_checksum)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cache_tee_iter</span>(<span class="params">self, image_id, image_iter, image_checksum</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        current_checksum = hashlib.md5()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> self.driver.open_for_write(image_id) <span class="keyword">as</span> cache_file:</span><br><span class="line">            <span class="keyword">for</span> chunk <span class="keyword">in</span> image_iter:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    cache_file.write(chunk)</span><br><span class="line">                <span class="keyword">finally</span>:</span><br><span class="line">                    current_checksum.update(chunk)</span><br><span class="line">                    <span class="keyword">yield</span> chunk</span><br><span class="line">            cache_file.flush()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (image_checksum <span class="keyword">and</span></span><br><span class="line">                    image_checksum != current_checksum.hexdigest()):</span><br><span class="line">                msg = _(<span class="string">&quot;Checksum verification failed. Aborted &quot;</span></span><br><span class="line">                        <span class="string">&quot;caching of image &#x27;%s&#x27;.&quot;</span>) % image_id</span><br><span class="line">                <span class="keyword">raise</span> exception.GlanceException(msg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> exception.GlanceException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">with</span> excutils.save_and_reraise_exception():</span><br><span class="line">            <span class="comment"># image_iter has given us bad, (size_checked_iter has found a</span></span><br><span class="line">            <span class="comment"># bad length), or corrupt data (checksum is wrong).</span></span><br><span class="line">            LOG.exception(encodeutils.exception_to_unicode(e))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        LOG.exception(_LE(<span class="string">&quot;Exception encountered while tee&#x27;ing &quot;</span></span><br><span class="line">                          <span class="string">&quot;image &#x27;%(image_id)s&#x27; into cache: %(error)s. &quot;</span></span><br><span class="line">                          <span class="string">&quot;Continuing with response.&quot;</span>) %</span><br><span class="line">                      &#123;<span class="string">&#x27;image_id&#x27;</span>: image_id,</span><br><span class="line">                       <span class="string">&#x27;error&#x27;</span>: encodeutils.exception_to_unicode(e)&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># If no checksum provided continue responding even if</span></span><br><span class="line">        <span class="comment"># caching failed.</span></span><br><span class="line">        <span class="keyword">for</span> chunk <span class="keyword">in</span> image_iter:</span><br><span class="line">            <span class="keyword">yield</span> chunk</span><br></pre></td></tr></table></figure>



<h3 id="Glance-image-cache清理流程"><a href="#Glance-image-cache清理流程" class="headerlink" title="Glance image cache清理流程"></a>Glance image cache清理流程</h3><p>源生为一次性可执行命令，官方建议使用<code>cron</code>运行<code>glance-cache-pruner</code></p>
<p>Src File：<code>glance/image_cache/__init__.py</code></p>
<p>当前缓存文件大小与配置中的<code>image_cache_max_size</code>值进行比较，大于<code>image_cache_max_size</code>则开启清理操作，根据缓存文件的<code>last_accessed</code>字段，依次删除活跃度最低的镜像，直至缓存文件大小小于<code>image_cache_max_size</code>值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prune</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Removes all cached image files above the cache&#x27;s maximum</span></span><br><span class="line"><span class="string">    size. Returns a tuple containing the total number of cached</span></span><br><span class="line"><span class="string">    files removed and the total size of all pruned image files.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    max_size = CONF.image_cache_max_size</span><br><span class="line">    current_size = self.driver.get_cache_size()</span><br><span class="line">    <span class="keyword">if</span> max_size &gt; current_size:</span><br><span class="line">        LOG.debug(<span class="string">&quot;Image cache has free space, skipping prune...&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    overage = current_size - max_size</span><br><span class="line">    LOG.debug(<span class="string">&quot;Image cache currently %(overage)d bytes over max &quot;</span></span><br><span class="line">              <span class="string">&quot;size. Starting prune to max size of %(max_size)d &quot;</span>,</span><br><span class="line">              &#123;<span class="string">&#x27;overage&#x27;</span>: overage, <span class="string">&#x27;max_size&#x27;</span>: max_size&#125;)</span><br><span class="line"></span><br><span class="line">    total_bytes_pruned = <span class="number">0</span></span><br><span class="line">    total_files_pruned = <span class="number">0</span></span><br><span class="line">    entry = self.driver.get_least_recently_accessed()</span><br><span class="line">    <span class="keyword">while</span> entry <span class="keyword">and</span> current_size &gt; max_size:</span><br><span class="line">        image_id, size = entry</span><br><span class="line">        LOG.debug(<span class="string">&quot;Pruning &#x27;%(image_id)s&#x27; to free %(size)d bytes&quot;</span>,</span><br><span class="line">                  &#123;<span class="string">&#x27;image_id&#x27;</span>: image_id, <span class="string">&#x27;size&#x27;</span>: size&#125;)</span><br><span class="line">        self.driver.delete_cached_image(image_id)</span><br><span class="line">        total_bytes_pruned = total_bytes_pruned + size</span><br><span class="line">        total_files_pruned = total_files_pruned + <span class="number">1</span></span><br><span class="line">        current_size = current_size - size</span><br><span class="line">        entry = self.driver.get_least_recently_accessed()</span><br><span class="line"></span><br><span class="line">    LOG.debug(<span class="string">&quot;Pruning finished pruning. &quot;</span></span><br><span class="line">              <span class="string">&quot;Pruned %(total_files_pruned)d and &quot;</span></span><br><span class="line">              <span class="string">&quot;%(total_bytes_pruned)d.&quot;</span>,</span><br><span class="line">              &#123;<span class="string">&#x27;total_files_pruned&#x27;</span>: total_files_pruned,</span><br><span class="line">               <span class="string">&#x27;total_bytes_pruned&#x27;</span>: total_bytes_pruned&#125;)</span><br><span class="line">    <span class="keyword">return</span> total_files_pruned, total_bytes_pruned</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.openstack.org/glance/train/admin/cache.html">OpenStack Documentation：The Glance Image Cache</a></p>
<p><a href="https://docs.openstack.org/glance/train/admin/">OpenStack Documentation：Glance Administration Guide</a></p>
<p><a href="https://docs.openstack.org/glance/train/configuration/configuring.html">OpenStack Documentation：Basic Configuration</a></p>
]]></content>
      <categories>
        <category>OpenStack开发</category>
      </categories>
      <tags>
        <tag>Train版本</tag>
        <tag>OpenStack开发</tag>
        <tag>Glance</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack开发：Glance Image Soft Delete</title>
    <url>/2021/01/05/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9AGlance-Image-Soft-Delete/</url>
    <content><![CDATA[<h2 id="Configuration-options-for-the-Image-Soft-Delete"><a href="#Configuration-options-for-the-Image-Soft-Delete" class="headerlink" title="Configuration options for the Image Soft Delete"></a>Configuration options for the Image Soft Delete</h2><p>Config File：<code>glance-api.conf</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Turn on/off delayed delete.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Typically when an image is deleted, the ``glance-api`` service puts the image</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> into ``deleted`` state and deletes its data at the same time. Delayed delete</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is a feature <span class="keyword">in</span> Glance that delays the actual deletion of image data until a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> later point <span class="keyword">in</span> time (as determined by the configuration option</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ``scrub_time``).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> When delayed delete is turned on, the ``glance-api`` service puts the image</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> into ``pending_delete`` state upon deletion and leaves the image data <span class="keyword">in</span> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> storage backend <span class="keyword">for</span> the image scrubber to delete at a later time. The image</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scrubber will move the image into ``deleted`` state upon successful deletion</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> of image data.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NOTE: When delayed delete is turned on, image scrubber MUST be running as a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> periodic task to prevent the backend storage from filling up with undesired</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> usage.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Possible values:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * True</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * False</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Related options:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``scrub_time``</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``wakeup_time``</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``scrub_pool_size``</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  (boolean value)</span></span><br><span class="line">delayed_delete = True</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The amount of time, <span class="keyword">in</span> seconds, to delay image scrubbing.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> When delayed delete is turned on, an image is put into ``pending_delete``</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> state upon deletion until the scrubber deletes its image data. Typically, soon</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> after the image is put into ``pending_delete`` state, it is available <span class="keyword">for</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scrubbing. However, scrubbing can be delayed until a later point using this</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> configuration option. This option denotes the time period an image spends <span class="keyword">in</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ``pending_delete`` state before it is available <span class="keyword">for</span> scrubbing.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> It is important to realize that this has storage implications. The larger the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ``scrub_time``, the longer the time to reclaim backend storage from deleted</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> images.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Possible values:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * Any non-negative <span class="built_in">integer</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Related options:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``delayed_delete``</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  (<span class="built_in">integer</span> value)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Minimum value: 0</span></span><br><span class="line">scrub_time = 9999999999999</span><br></pre></td></tr></table></figure>













<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://blog.csdn.net/zhongbeida_xue/article/details/89016403">openstack中glance镜像的延迟删除、软删除、删除保护</a></p>
<p><a href="https://docs.openstack.org/train/api/index.html">OpenStack Train API Reference Documentation</a></p>
<p><a href="https://docs.openstack.org/api-ref/compute/?expanded=#delete-server">OpenStack API Documentation: Compute API</a></p>
<p><a href="https://docs.openstack.org/api-ref/image/v2/?expanded=">OpenStack API Documentation: Image Service API v2 (CURRENT)</a></p>
<p><a href="https://docs.openstack.org/api-ref/image/v2/?expanded=">OpenStack API Documentation: Using Glance’s Image Public APIs</a></p>
]]></content>
      <categories>
        <category>OpenStack开发</category>
      </categories>
      <tags>
        <tag>Train版本</tag>
        <tag>OpenStack开发</tag>
        <tag>Glance</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack开发：novaclient解析</title>
    <url>/2020/12/16/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9Anovaclient%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>OpenStack：Train版 </li>
<li>Python：2.7.5</li>
</ul>
<table>
<thead>
<tr>
<th>Python库</th>
<th>版本</th>
</tr>
</thead>
<tbody><tr>
<td>keystoneauth1</td>
<td>4.0.1</td>
</tr>
<tr>
<td>openstacksdk</td>
<td>0.45.0</td>
</tr>
<tr>
<td>oslo.config</td>
<td>7.0.0</td>
</tr>
<tr>
<td>oslo.i18n</td>
<td>3.25.1</td>
</tr>
<tr>
<td>oslo.serialization</td>
<td>2.29.2</td>
</tr>
<tr>
<td>oslo.utils</td>
<td>3.42.1</td>
</tr>
<tr>
<td>python-cinderclient</td>
<td>6.0.0</td>
</tr>
<tr>
<td>python-keystoneclient</td>
<td>3.22.0</td>
</tr>
<tr>
<td>python-novaclient</td>
<td>16.0.0</td>
</tr>
<tr>
<td>python-openstackclient</td>
<td>5.2.1</td>
</tr>
</tbody></table>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> loading</span><br><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> session</span><br><span class="line"><span class="keyword">from</span> novaclient <span class="keyword">import</span> client <span class="keyword">as</span> nova_client</span><br><span class="line"></span><br><span class="line">NOVA_API_VERSION = <span class="string">&quot;2.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从keystone处获取认证信息</span></span><br><span class="line">loader = loading.get_plugin_loader(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">auth = loader.load_from_options(auth_url=<span class="string">&quot;http://111.111.111.80:35357&quot;</span>,</span><br><span class="line">                                username=<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                                password=<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                                project_name=<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                                project_domain_id=<span class="string">&quot;default&quot;</span>,</span><br><span class="line">                                user_domain_id=<span class="string">&quot;default&quot;</span>)</span><br><span class="line">sess = session.Session(auth=auth)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用认证信息，获取novaclient</span></span><br><span class="line">nova = nova_client.Client(NOVA_API_VERSION, session=sess)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用novaclient，获取nova相关信息</span></span><br><span class="line">servers = nova.servers.list()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ser <span class="keyword">in</span> servers:</span><br><span class="line">    <span class="keyword">print</span> ser.id</span><br><span class="line">    <span class="keyword">print</span> ser.name</span><br><span class="line">    <span class="keyword">print</span> ser.image</span><br><span class="line">    <span class="keyword">print</span> ser.flavor</span><br><span class="line">    <span class="keyword">print</span> ser.key_name</span><br><span class="line">    <span class="keyword">print</span> ser.status</span><br><span class="line">    <span class="keyword">print</span> ser.created</span><br><span class="line">    <span class="keyword">print</span> ser.addresses</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[nova]</span><br><span class="line">endpoint_type &#x3D; internal</span><br><span class="line">auth_url &#x3D; http:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">auth_type &#x3D; password</span><br><span class="line">project_domain_id &#x3D; default</span><br><span class="line">user_domain_id &#x3D; default</span><br><span class="line">region_name &#x3D; RegionOne</span><br><span class="line">project_name &#x3D; service</span><br><span class="line">username &#x3D; nova</span><br><span class="line">password &#x3D; 8rMN88CaCkvNyvx5b9YrXYwkPDEgKTE7Kb5xfWnL</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[nova]</span><br><span class="line">auth_url &#x3D; http:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">auth_type &#x3D; password</span><br><span class="line">project_domain_id &#x3D; default</span><br><span class="line">user_domain_id &#x3D; default</span><br><span class="line">region_name &#x3D; RegionOne</span><br><span class="line">project_name &#x3D; admin</span><br><span class="line">username &#x3D; admin</span><br><span class="line">password &#x3D; admin</span><br><span class="line">endpoint_type &#x3D; internal</span><br></pre></td></tr></table></figure>



<h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="nova-servers-list"><a href="#nova-servers-list" class="headerlink" title="nova.servers.list()"></a>nova.servers.list()</h3><p><strong>item</strong>结构</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;OS-EXT-STS:task_state&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;demo-net&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;OS-EXT-IPS-MAC:mac_addr&quot;</span>: <span class="string">&quot;fa:16:3e:8b:c8:00&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;version&quot;</span>: <span class="number">4</span>,</span><br><span class="line">                <span class="attr">&quot;addr&quot;</span>: <span class="string">&quot;10.0.0.221&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;OS-EXT-IPS:type&quot;</span>: <span class="string">&quot;fixed&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;links&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;href&quot;</span>: <span class="string">&quot;http://111.111.111.80:8774/v2.1/servers/077c1c6d-5390-4856-89dc-7072c5d5d5d4&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;rel&quot;</span>: <span class="string">&quot;self&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;href&quot;</span>: <span class="string">&quot;http://111.111.111.80:8774/servers/077c1c6d-5390-4856-89dc-7072c5d5d5d4&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;rel&quot;</span>: <span class="string">&quot;bookmark&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;locked_reason&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;image&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3086f549-23e2-4c0d-b791-b17998952d68&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;links&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;href&quot;</span>: <span class="string">&quot;http://111.111.111.80:8774/images/3086f549-23e2-4c0d-b791-b17998952d68&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;rel&quot;</span>: <span class="string">&quot;bookmark&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:user_data&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-STS:vm_state&quot;</span>: <span class="string">&quot;active&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:instance_name&quot;</span>: <span class="string">&quot;instance-00000001&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:root_device_name&quot;</span>: <span class="string">&quot;/dev/vda&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-SRV-USG:launched_at&quot;</span>: <span class="string">&quot;2020-12-08T17:41:17.000000&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;flavor&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;ephemeral&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;ram&quot;</span>: <span class="number">512</span>,</span><br><span class="line">        <span class="attr">&quot;original_name&quot;</span>: <span class="string">&quot;m1.tiny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;vcpus&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;extra_specs&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;swap&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;disk&quot;</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;077c1c6d-5390-4856-89dc-7072c5d5d5d4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;security_groups&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;default&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;host_status&quot;</span>: <span class="string">&quot;UP&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;user_id&quot;</span>: <span class="string">&quot;439ca237905e417593165391458960d6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:hostname&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-DCF:diskConfig&quot;</span>: <span class="string">&quot;MANUAL&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;accessIPv4&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;accessIPv6&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:reservation_id&quot;</span>: <span class="string">&quot;r-56k4gluj&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;progress&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-STS:power_state&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-AZ:availability_zone&quot;</span>: <span class="string">&quot;nova&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;config_drive&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;ACTIVE&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:ramdisk_id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;updated&quot;</span>: <span class="string">&quot;2020-12-08T17:41:18Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hostId&quot;</span>: <span class="string">&quot;cd9cf8191851aeae24077dd7d3ca4c6c01d1b5d0ff7be81de482259b&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:host&quot;</span>: <span class="string">&quot;node02&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-SRV-USG:terminated_at&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;tags&quot;</span>: [],</span><br><span class="line">    <span class="attr">&quot;key_name&quot;</span>: <span class="string">&quot;mykey&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:kernel_id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;locked&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:hypervisor_hostname&quot;</span>: <span class="string">&quot;node02&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:launch_index&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;created&quot;</span>: <span class="string">&quot;2020-12-08T17:40:57Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tenant_id&quot;</span>: <span class="string">&quot;1249bd160bab49e89c4c1d795ec68746&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;os-extended-volumes:volumes_attached&quot;</span>: [],</span><br><span class="line">    <span class="attr">&quot;trusted_image_certificates&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.openstack.org/python-novaclient/latest/user/python-api.html">OpenStack API Documentation：The novaclient Python API</a></p>
<p><a href="https://docs.openstack.org/keystoneauth/latest/index.html">OpenStack API Documentation：Common Authentication Library for OpenStack Clients</a></p>
<p><a href="https://www.jianshu.com/p/e04c217eeb21">novaclient开发中遇到的问题小结</a></p>
<p><a href="https://www.cnblogs.com/freshchen/p/11656975.html">Python调用 Openstack 主要服务(keystone,nova,glance,neutron,heat)</a></p>
<p><a href="https://blog.51cto.com/eddy72/2457564">Python通过OpenStack API接口筛选虚机</a></p>
<p><a href="https://www.cnblogs.com/ggykx/p/12175689.html">OpenStack中创建实例流程详解</a></p>
]]></content>
      <categories>
        <category>OpenStack开发</category>
      </categories>
      <tags>
        <tag>Train版本</tag>
        <tag>OpenStack开发</tag>
        <tag>novaclient</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack部署：Kolla安装Octavia</title>
    <url>/2020/11/07/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AKolla%E5%AE%89%E8%A3%85Octavia/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>OpenStack部署</category>
      </categories>
      <tags>
        <tag>Train版本</tag>
        <tag>OpenStack部署</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack部署：默认端口号</title>
    <url>/2020/12/05/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9A%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3%E5%8F%B7/</url>
    <content><![CDATA[<h2 id="组件默认端口号"><a href="#组件默认端口号" class="headerlink" title="组件默认端口号"></a>组件默认端口号</h2><table>
<thead>
<tr>
<th>OpenStack service</th>
<th>Default ports</th>
<th>Port type</th>
</tr>
</thead>
<tbody><tr>
<td>Block Storage (cinder)</td>
<td>8776</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Compute (nova) endpoints</td>
<td>8774</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Compute API (nova-api)</td>
<td>8773, 8775</td>
<td></td>
</tr>
<tr>
<td>Compute ports for access to virtual machine consoles</td>
<td>5900-5999</td>
<td></td>
</tr>
<tr>
<td>Compute VNC proxy for browsers ( openstack-nova-novncproxy)</td>
<td>6080</td>
<td></td>
</tr>
<tr>
<td>Compute VNC proxy for traditional VNC clients (openstack-nova-xvpvncproxy)</td>
<td>6081</td>
<td></td>
</tr>
<tr>
<td>Proxy port for HTML5 console used by Compute service</td>
<td>6082</td>
<td></td>
</tr>
<tr>
<td>Data processing service (sahara) endpoint</td>
<td>8386</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Identity service (keystone) administrative endpoint</td>
<td>35357</td>
<td>adminurl</td>
</tr>
<tr>
<td>Identity service public endpoint</td>
<td>5000</td>
<td>publicurl</td>
</tr>
<tr>
<td>Image service (glance) API</td>
<td>9292</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Image service registry</td>
<td>9191</td>
<td></td>
</tr>
<tr>
<td>Networking (neutron)</td>
<td>9696</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Object Storage (swift)</td>
<td>6000, 6001, 6002</td>
<td></td>
</tr>
<tr>
<td>Orchestration (heat) endpoint</td>
<td>8004</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Orchestration AWS CloudFormation-compatible API (openstack-heat-api-cfn)</td>
<td>8000</td>
<td></td>
</tr>
<tr>
<td>Orchestration AWS CloudWatch-compatible API (openstack-heat-api-cloudwatch)</td>
<td>8003</td>
<td></td>
</tr>
<tr>
<td>Telemetry (ceilometer)</td>
<td>8777</td>
<td>publicurl and adminurl</td>
</tr>
</tbody></table>
<h2 id="基础服务默认端口号"><a href="#基础服务默认端口号" class="headerlink" title="基础服务默认端口号"></a>基础服务默认端口号</h2><table>
<thead>
<tr>
<th>Openstack service</th>
<th>Default ports</th>
<th>Used by</th>
</tr>
</thead>
<tbody><tr>
<td>HTTP</td>
<td>80</td>
<td>OpenStack dashboard (Horizon) when it is not configured to use secure access.</td>
</tr>
<tr>
<td>HTTP alternate</td>
<td>8080</td>
<td>OpenStack Object Storage (swift) service.</td>
</tr>
<tr>
<td>HTTPS</td>
<td>443</td>
<td>Any OpenStack service that is enabled for SSL, especially secure-access dashboard.</td>
</tr>
<tr>
<td>rsync</td>
<td>873</td>
<td>OpenStack Object Storage. Required.</td>
</tr>
<tr>
<td>iSCSI target</td>
<td>3260</td>
<td>OpenStack Block Storage. Required.</td>
</tr>
<tr>
<td>MySQL database service</td>
<td>3306</td>
<td>Most OpenStack components.</td>
</tr>
<tr>
<td>Message Broker (AMQP traffic)</td>
<td>5672</td>
<td>OpenStack Block Storage, Networking, Orchestration, and Compute.</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>OpenStack部署</category>
      </categories>
      <tags>
        <tag>OpenStack部署</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 11.2 安装文档</title>
    <url>/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="win10安装"><a href="#win10安装" class="headerlink" title="win10安装"></a>win10安装</h2><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><p>版本：Oracle 11.2.0.1.0</p>
<p>链接：<a href="https://pan.baidu.com/s/12ctlN7GaU4JbIOuawpsiqA">https://pan.baidu.com/s/12ctlN7GaU4JbIOuawpsiqA</a> </p>
<p>提取码：bah3</p>
<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><p>解压后，双击setup.exe。目录建议全英文</p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-1.png" alt="win10-1"></p>
<h4 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h4><p>双击setup.exe后，自动启动安装程序，检测环境配置。</p>
<p>我本次目的是测试安装流程，点击是继续安装即可。对安装无影响，对性能有影响。</p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-2.png" alt="win10-2"></p>
<h4 id="配置安全更新"><a href="#配置安全更新" class="headerlink" title="配置安全更新"></a>配置安全更新</h4><p>电子邮箱配置自己的即可，会接受安全问题通知，也可以不填</p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-3.png" alt="win10-3"></p>
<h4 id="安装选项"><a href="#安装选项" class="headerlink" title="安装选项"></a>安装选项</h4><p>选择创建和配置数据库，点击下一步</p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-4.png" alt="win10-4"></p>
<h4 id="系统类"><a href="#系统类" class="headerlink" title="系统类"></a>系统类</h4><p>这里在win10上实验，选择的桌面类</p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-5.png" alt="win10-5"></p>
<h4 id="典型安装"><a href="#典型安装" class="headerlink" title="典型安装"></a>典型安装</h4><p>设置数据库文件存储目录、数据库版本、字符集、数据库名及管理口令（用户名为<code>system</code>）</p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-6.png" alt="win10-6"></p>
<h4 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h4><p>典型安装完成后，按照流程下一步即可完成安装</p>
<h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p>CMD：<code>sqlplus system/&lt;system password&gt;</code></p>
<p>网页：<code>https://localhost:1158/em</code>，用户名<code>system</code>，口令为典型安装中配置的管理口令</p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-8.png" alt="win10-8"></p>
<p><img src="/2020/09/10/Oracle-11-2-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-7.png" alt="win10-7"></p>
<h2 id="Ubuntu-18-Docker安装"><a href="#Ubuntu-18-Docker安装" class="headerlink" title="Ubuntu 18 Docker安装"></a>Ubuntu 18 Docker安装</h2><h3 id="安装包-1"><a href="#安装包-1" class="headerlink" title="安装包"></a>安装包</h3><p>版本：Oracle Express Edition 11g Release 2</p>
<p>GitHub：<a href="https://github.com/wnameless/docker-oracle-xe-11g">https://github.com/wnameless/docker-oracle-xe-11g</a></p>
<h3 id="安装步骤-1"><a href="#安装步骤-1" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h4><p>参考文档：<a href="https://www.runoob.com/docker/ubuntu-docker-install.html">https://www.runoob.com/docker/ubuntu-docker-install.html</a></p>
<p>安装命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure>

<p>也可以使用国内 daocloud 一键安装命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure>

<h4 id="安装Oracle-11G"><a href="#安装Oracle-11G" class="headerlink" title="安装Oracle 11G"></a>安装Oracle 11G</h4><h5 id="Installation-Local"><a href="#Installation-Local" class="headerlink" title="Installation(Local)"></a>Installation(Local)</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/wnameless/docker-oracle-xe-11g.git</span><br><span class="line">cd docker-oracle-xe-11g</span><br><span class="line">docker build -t wnameless/oracle-xe-11g .</span><br></pre></td></tr></table></figure>

<h5 id="Installation-DockerHub"><a href="#Installation-DockerHub" class="headerlink" title="Installation(DockerHub)"></a>Installation(DockerHub)</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull wnameless/oracle-xe-11g-r2</span><br></pre></td></tr></table></figure>

<p>SSH server has been removed since 18.04, please use “docker exec”</p>
<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>Run with 1521 port opened:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 49161:1521 wnameless/oracle-xe-11g-r2</span><br></pre></td></tr></table></figure>

<p>Run this, if you want the database to be connected remotely:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 49161:1521 -e ORACLE_ALLOW_REMOTE=true wnameless/oracle-xe-11g-r2</span><br></pre></td></tr></table></figure>

<h4 id="默认信息"><a href="#默认信息" class="headerlink" title="默认信息"></a>默认信息</h4><p>By default, the password verification is disable(password never expired)<br>Connect database with following setting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hostname: localhost</span><br><span class="line">port: 49161</span><br><span class="line">sid: xe</span><br><span class="line">username: system</span><br><span class="line">password: oracle</span><br></pre></td></tr></table></figure>

<p>Password for SYS &amp; SYSTEM</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">oracle</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle 11.2</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 11.2 快速上手</title>
    <url>/2020/09/14/Oracle-11-2-%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</url>
    <content><![CDATA[<p>Oracle Database，又名Oracle RDBMS，简称Oracle。是甲骨文公司推出的一款关系数据库管理系统。Oracle数据库系统是目前世界上流行的关系数据库管理系统，拥有可移植性好、使用方便、功能强等优点，在各类大、中、小、微机环境中都适用。Oracle是一种高效率、可靠性好的、适应高吞吐量的数据库解决方案。</p>
<h3 id="Oracle-登录"><a href="#Oracle-登录" class="headerlink" title="Oracle 登录"></a>Oracle 登录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 格式：sqlplus &lt;username&gt;/&lt;password&gt;[@ip:port/instance name] [as sysdba]</span></span><br><span class="line">sqlplus sys/123@10.121.9.104:49161 as sysdba</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-用户管理"><a href="#Oracle-用户管理" class="headerlink" title="Oracle 用户管理"></a>Oracle 用户管理</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看当前用户</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改用户密码</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> &lt;username&gt; <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&quot;&lt;new password&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-数据库设置"><a href="#Oracle-数据库设置" class="headerlink" title="Oracle 数据库设置"></a>Oracle 数据库设置</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 开启时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 清空共享池</span></span><br><span class="line"><span class="comment">会清空历史sql的缓存记录，清空后再次执行这些sql时会产生大量的硬解析，影响数据库性能</span></span><br><span class="line"><span class="comment">生产环境慎用，系统繁忙时执行，容易导致数据库宕机</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-表操作"><a href="#Oracle-表操作" class="headerlink" title="Oracle 表操作"></a>Oracle 表操作</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line">desc &lt;table name&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t</span><br><span class="line">(</span><br><span class="line">    tid <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    tname <span class="built_in">varchar2</span>(<span class="number">20</span>),</span><br><span class="line">    tcontent <span class="built_in">blob</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看表内容</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表，在垃圾桶留下记录，可flashback闪回</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> &lt;<span class="keyword">table</span> <span class="keyword">name</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表，不会在垃圾桶留下记录，不可恢复</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> &lt;<span class="keyword">table</span> <span class="keyword">name</span>&gt; <span class="keyword">purge</span>;</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-存储过程语法"><a href="#Oracle-存储过程语法" class="headerlink" title="Oracle 存储过程语法"></a>Oracle 存储过程语法</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> [<span class="keyword">or</span> <span class="keyword">replace</span>] <span class="keyword">procedure</span> 存储过程名（param1 <span class="keyword">in</span> <span class="keyword">type</span>，param2 <span class="keyword">out</span> <span class="keyword">type</span>）</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">    变量<span class="number">1</span> 类型（值范围）;</span><br><span class="line">    变量2 类型（值范围）;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">into</span> 变量<span class="number">1</span> <span class="keyword">from</span> 表A <span class="keyword">where</span>列名=param1；</span><br><span class="line">    <span class="keyword">if</span> (判断条件) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">select</span> 列名 <span class="keyword">into</span> 变量<span class="number">2</span> <span class="keyword">from</span> 表A <span class="keyword">where</span>列名=param1；</span><br><span class="line">        dbms_output.Put_line(<span class="string">&#x27;打印信息&#x27;</span>);</span><br><span class="line">    elsif (判断条件) then</span><br><span class="line">        dbms_output.Put_line(&#x27;打印信息&#x27;);</span><br><span class="line">    else</span><br><span class="line">        raise 异常名（NO_DATA_FOUND）;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line">exception</span><br><span class="line">    when others then</span><br><span class="line">        <span class="keyword">rollback</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>



<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm?xd_co_f=94201a14-f246-4e54-ba51-c48c9c02f224">Oracle 官方文档</a></p>
<p><a href="https://www.cnblogs.com/c1024/p/11012016.html">Oracle数据库初学者入门教程</a></p>
<p><a href="https://www.cnblogs.com/xswt/p/11394032.html">Oracle常用命令</a></p>
<p><a href="https://www.cnblogs.com/joeyJss/p/11458653.html">Oracle存储过程的语法</a></p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle 11.2</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle 性能测试</title>
    <url>/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="使用Oracle-SQL测试"><a href="#使用Oracle-SQL测试" class="headerlink" title="使用Oracle SQL测试"></a>使用Oracle SQL测试</h2><blockquote>
<p>实验环境</p>
<p>机器：win10虚机</p>
<p>配置：4c8G + 500G硬盘</p>
</blockquote>
<h3 id="持续写入"><a href="#持续写入" class="headerlink" title="持续写入"></a>持续写入</h3><p>每次insert操作后，进行一次commit操作，性能低。<code>实验用时：00:02:39.66</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t(x <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 定义函数proc</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">procedure</span> proc</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> .. <span class="number">1000000</span></span><br><span class="line">        <span class="keyword">loop</span></span><br><span class="line">            <span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">values</span>(i);</span><br><span class="line">            <span class="keyword">commit</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 运行函数proc</span></span><br><span class="line">exec proc;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E6%8C%81%E7%BB%AD%E5%86%99%E5%85%A5.png" alt="持续写入"></p>
<h3 id="批量写入"><a href="#批量写入" class="headerlink" title="批量写入"></a>批量写入</h3><p>对insert操作进行批量提交，性能相较于上者有所提升。<code>实验用时：00:01:25.37</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t(x <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 定义函数proc</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">procedure</span> proc</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> .. <span class="number">1000000</span></span><br><span class="line">        <span class="keyword">loop</span></span><br><span class="line">            <span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">values</span>(i);</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 运行函数proc</span></span><br><span class="line">exec proc;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E6%89%B9%E9%87%8F%E5%86%99%E5%85%A5.png" alt="批量写入"></p>
<h3 id="connect-by方式写入"><a href="#connect-by方式写入" class="headerlink" title="connect by方式写入"></a>connect by方式写入</h3><p>Oracle提供的层次查询（Hierarchical Queries）功能中的connect by子句可以快速插入连续数字。该方法会将数据写入数据缓冲区(data buffer)中，然后刷入磁盘中。<code>实验用时：00:00:01.56</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t(x <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用connect by level，插入连续数字</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">select</span> <span class="keyword">rownum</span> <span class="keyword">from</span> dual <span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">level</span>&lt;=<span class="number">1000000</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E9%9B%86%E5%90%88%E5%86%99%E5%85%A5.png" alt="connect by写入"></p>
<h3 id="直接路径写入"><a href="#直接路径写入" class="headerlink" title="直接路径写入"></a>直接路径写入</h3><p>该方式跳过了数据缓冲区(data buffer)， 直接写进磁盘中，这种方式称之为直接路径读写方式。<code>实验用时：00:00:00.78</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用connect by level，插入连续数字</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t <span class="keyword">as</span> <span class="keyword">select</span> <span class="keyword">rownum</span> x <span class="keyword">from</span> dual <span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">level</span>&lt;=<span class="number">1000000</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E7%9B%B4%E6%8E%A5%E8%B7%AF%E5%BE%84%E5%86%99%E5%85%A5.png" alt="直接路径写入"></p>
<h3 id="并行模式直接写入"><a href="#并行模式直接写入" class="headerlink" title="并行模式直接写入"></a>并行模式直接写入</h3><p>并行加直接路径，而且是不写日志。<code>实验用时：00:00:00.67</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用connect by level，插入连续数字</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t nologging <span class="keyword">parallel</span> <span class="number">4</span> <span class="keyword">as</span> <span class="keyword">select</span> <span class="keyword">rownum</span> x <span class="keyword">from</span> dual <span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">level</span>&lt;=<span class="number">1000000</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E5%B9%B6%E8%A1%8C%E6%A8%A1%E5%BC%8F%E5%86%99%E5%85%A5.png" alt="并行模式写入"></p>
<h3 id="大对象存储"><a href="#大对象存储" class="headerlink" title="大对象存储"></a>大对象存储</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建测试表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t</span><br><span class="line">(</span><br><span class="line">    tid <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    tname <span class="built_in">varchar2</span>(<span class="number">20</span>),</span><br><span class="line">    tcontent <span class="built_in">blob</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建普通序列号</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">sequence</span> sequ_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注册目录</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">directory</span> TEST_DIR <span class="keyword">as</span> <span class="string">&#x27;C:\Users\lenovo\Desktop&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 存储文件对象</span></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">    tempimg <span class="built_in">blob</span>;  <span class="comment">-- 定义临时变量存放数据   </span></span><br><span class="line">    tempdir bfile := bfilename(&#x27;TEST_DIR&#x27;,&#x27;test.png&#x27;);  <span class="comment">-- 非常重要：DIR必须大写</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">values</span> (sequ_t.nextval,<span class="string">&#x27;test.png&#x27;</span>,empty_blob())</span><br><span class="line">    <span class="keyword">returning</span> tcontent <span class="keyword">into</span> tempimg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 使用内置的包，给tempimg写入数据</span></span><br><span class="line">    dbms_lob.fileopen(tempdir);  <span class="comment">-- 打开指定文件</span></span><br><span class="line">    dbms_lob.loadfromfile(tempimg,tempdir,dbms_lob.getlength(tempdir));</span><br><span class="line">    dbms_lob.fileclose(tempdir);  <span class="comment">-- 关闭文件        </span></span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span> ;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 读取文件对象</span></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">    l_file utl_file.file_type;  <span class="comment">-- 定义写入磁盘文件的类型和格式</span></span><br><span class="line">    l_buffer raw(32767);  <span class="comment">-- 定义缓冲区大小</span></span><br><span class="line">    l_amount binary_integer := 3276;  <span class="comment">-- 每次位移个数</span></span><br><span class="line">    l_pos int :=1;  <span class="comment">-- 开始位置</span></span><br><span class="line">    l_blob blob;  <span class="comment">-- 临时数据存放</span></span><br><span class="line">    l_blob_len int;  <span class="comment">-- 总长度</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="comment">-- 将数据库中的数据，存放在blob变量中  </span></span><br><span class="line">    <span class="keyword">select</span> tcontent <span class="keyword">into</span> l_blob <span class="keyword">from</span> t <span class="keyword">where</span> tname=<span class="string">&#x27;test.png&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 获取blob文件的长度</span></span><br><span class="line">    l_blob_len := dbms_lob.getlength(l_blob);</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 准备写入磁盘文件</span></span><br><span class="line">    l_file := utl_file.fopen(&#x27;TEST_DIR&#x27;,&#x27;t.png&#x27;,&#x27;wb&#x27;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 写入数据</span></span><br><span class="line">    while l_pos&lt;l_blob_len</span><br><span class="line">    loop</span><br><span class="line">        dbms_lob.read(l_blob,l_amount,l_pos,l_buffer);</span><br><span class="line">        utl_file.put_raw(l_file,l_buffer,true);</span><br><span class="line">        l_pos := l_pos + l_amount;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line">    utl_file.fclose(l_file); </span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">/</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E5%AD%98%E5%82%A8image.png" alt="存储image"></p>
<p><img src="/2020/09/15/Oracle-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E8%AF%BB%E5%8F%96image.png" alt="读取image"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.oracle.com/database/121/ARPLS/d_lob.htm#ARPLS600">Oracle 官方文档：DBMS_LOB</a></p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>性能测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Sort</title>
    <url>/2020/08/27/Sort/</url>
    <content><![CDATA[<h2 id="Sort"><a href="#Sort" class="headerlink" title="Sort"></a>Sort</h2><h3 id="算法1：冒泡排序"><a href="#算法1：冒泡排序" class="headerlink" title="算法1：冒泡排序"></a>算法1：冒泡排序</h3><h4 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h4><blockquote>
<ol>
<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>
<li>对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li>
<li>针对所有的元素重复以上的步骤，除了最后一个。</li>
<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较 [1]。</li>
</ol>
<p>参考资料：</p>
<ol>
<li>吕新平、刘宏铭．二级公共基础知识实战训练教程：西安交通大学出版社，2006.02：30页</li>
</ol>
</blockquote>
<a id="more"></a>

<h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># !&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2020&#x2F;08&#x2F;01</span><br><span class="line"># @Author  : renyb</span><br><span class="line"># @File    : sort.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def bubble_sort(arr):</span><br><span class="line"></span><br><span class="line">    # 这个循环负责设置冒泡排序进行的次数</span><br><span class="line">    for i in range(len(arr) - 1):</span><br><span class="line"></span><br><span class="line">        # j为列表下标</span><br><span class="line">        for j in range(len(arr) - i - 1):  </span><br><span class="line">            if arr[j] &gt; arr[j + 1]:</span><br><span class="line">                arr[j], arr[j + 1] &#x3D; arr[j + 1], arr[j]</span><br><span class="line">    return arr</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    array &#x3D; [2,3,5,7,1,4,6,15,5,2,7,9,10,15,9,17,12]</span><br><span class="line">    print(bubble_sort(array))</span><br></pre></td></tr></table></figure>



<h3 id="算法2：选择排序"><a href="#算法2：选择排序" class="headerlink" title="算法2：选择排序"></a>算法2：选择排序</h3><h4 id="思想-1"><a href="#思想-1" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕 [1]。</p>
<p>参考文档：</p>
<ol>
<li><p>Ajay Kumar．Data Structure for C Programming：Firewall Media，2004：268-270</p>
</li>
<li><p>Hosam M.Mahmoud．Sorting: A Distribution Theory：John Wiley&amp;Sons, Inc，2000：139-142</p>
</li>
</ol>
</blockquote>
<h4 id="python-1"><a href="#python-1" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从数组的前n个中寻找最大值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_max_index</span>(<span class="params">arr, n</span>):</span></span><br><span class="line">    max_index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">        <span class="keyword">if</span> arr[i] &gt; arr[max_index]:</span><br><span class="line">            max_index = i</span><br><span class="line">    <span class="keyword">return</span> max_index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line">    i = len(arr)</span><br><span class="line">    <span class="keyword">while</span> i &gt; <span class="number">1</span>:</span><br><span class="line">        max_index = find_max_index(arr, i)</span><br><span class="line">        arr[i<span class="number">-1</span>], arr[max_index] = arr[max_index], arr[i<span class="number">-1</span>]</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(select_sort(arr))</span><br><span class="line">    </span><br></pre></td></tr></table></figure>



<h3 id="算法3：插入排序"><a href="#算法3：插入排序" class="headerlink" title="算法3：插入排序"></a>算法3：插入排序</h3><h4 id="思想-2"><a href="#思想-2" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>插入排序的工作方式像许多人排序一手扑克牌。开始时，我们的左手为空并且桌子上的牌面向下。然后，我们每次从桌子上拿走一张牌并将它插入左手中正确的位置。为了找到一张牌的正确位置，我们从右到左将它与已在手中的每张牌进行比较。拿在左手上的牌总是排序好的，原来这些牌是桌子上牌堆中顶部的牌 [1]。</p>
<p>参考文档：</p>
<ol>
<li>（美）科尔曼等著；殷建平等译．算法导论．北京：机械工业出版社，2013：17-29</li>
</ol>
</blockquote>
<h4 id="python-2"><a href="#python-2" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将索引为i的数插入数组前半部分</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert</span>(<span class="params">arr, i</span>):</span></span><br><span class="line">    temp = arr[i]</span><br><span class="line">    <span class="keyword">while</span> arr[i<span class="number">-1</span>] &gt; temp:</span><br><span class="line">        arr[i] = arr[i<span class="number">-1</span>]</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 防越界</span></span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    arr[i] = temp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(arr)):</span><br><span class="line">        insert(arr, i)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(insert_sort(arr))</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="算法4：快速排序"><a href="#算法4：快速排序" class="headerlink" title="算法4：快速排序"></a>算法4：快速排序</h3><h4 id="思想-3"><a href="#思想-3" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它左边，所有比它大的数都放到它右边，这个过程称为一趟快速排序。值得注意的是，快速排序不是一种稳定的排序算法，也就是说，多个相同的值的相对位置也许会在算法结束时产生变动 [1]。</p>
<p><img src="/2020/08/27/Sort/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.gif" alt="快速排序"></p>
<p>一趟快速排序的算法是：</p>
<p>1）设置两个变量i、j，排序开始的时候：i=0，j=N-1；</p>
<p>2）以第一个数组元素作为关键数据，赋值给<strong>key</strong>，即<strong>key</strong>=A[0]；</p>
<p>3）从j开始向前搜索，即由后开始向前搜索(j–)，找到第一个小于<strong>key</strong>的值A[j]，将A[j]和A[i]的值交换；</p>
<p>4）从i开始向后搜索，即由前开始向后搜索(i++)，找到第一个大于<strong>key</strong>的A[i]，将A[i]和A[j]的值交换；</p>
<p>5）重复第3、4步，直到i=j； (3,4步中，没找到符合条件的值，即3中A[j]不小于<strong>key</strong>,4中A[i]不大于<strong>key</strong>的时候改变j、i的值，使得j=j-1，i=i+1，直至找到为止。找到符合条件的值，进行交换的时候i， j指针位置不变。另外，i==j这一过程一定正好是i+或j-完成的时候，此时令循环结束）。</p>
<p>参考资料：</p>
<ol>
<li>陈雄达，关晓飞，殷俊锋，张华隆编．数学实验：同济大学出版社，2016.08：第135页</li>
</ol>
</blockquote>
<h4 id="python-3"><a href="#python-3" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/01</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : sort.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归 + 分而治之</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 递归入口及出口</span></span><br><span class="line">    <span class="keyword">if</span> len(arr) &gt;= <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 选取基准值，也可以选取最后一个元素</span></span><br><span class="line">        mid = arr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义基准值左右两侧的列表</span></span><br><span class="line">        left, right = [], []</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 从原始数组中移除基准值</span></span><br><span class="line">        arr.remove(mid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> arr:</span><br><span class="line">            <span class="keyword">if</span> num &gt;= mid:</span><br><span class="line">                right.append(num)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left.append(num)</span><br><span class="line">        <span class="keyword">return</span> quick_sort(left) + [mid] + quick_sort(right)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    array = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(quick_sort(array))</span><br></pre></td></tr></table></figure>



<h3 id="算法5：堆排序"><a href="#算法5：堆排序" class="headerlink" title="算法5：堆排序"></a>算法5：堆排序</h3><h4 id="思想-4"><a href="#思想-4" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>在堆的数据结构中，堆中的最大值总是位于根节点（在优先队列中使用堆的话堆中的最小值位于根节点）。堆中定义以下几种操作 [1]：</p>
<ul>
<li>最大堆调整（Max Heapify）：将堆的末端子节点作调整，使得子节点永远小于父节点</li>
<li>创建最大堆（Build Max Heap）：将堆中的所有数据重新排序</li>
<li>堆排序（HeapSort）：移除位在第一个数据的根节点，并做最大堆调整的递归运算</li>
</ul>
<p><img src="/2020/08/27/Sort/%E5%A0%86%E6%8E%92%E5%BA%8F.gif" alt="堆排序"></p>
<p>参考资料：</p>
<ol>
<li>Floyd, Robert W. (1964), “Algorithm 245 - Treesort 3”, Communications of the ACM, 7 (12): 701, doi:10.1145/355588.365103</li>
</ol>
</blockquote>
<h4 id="python-4"><a href="#python-4" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点间的索引关系：</span></span><br><span class="line"><span class="comment"># 节点：i</span></span><br><span class="line"><span class="comment"># 父节点：(i - 1) / 2</span></span><br><span class="line"><span class="comment"># 左子节点：2i + 1</span></span><br><span class="line"><span class="comment"># 右子节点：2i + 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 堆化</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">heapify</span>(<span class="params">tree, n, i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> i &gt;= n:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    c1 = <span class="number">2</span> * i + <span class="number">1</span></span><br><span class="line">    c2 = <span class="number">2</span> * i + <span class="number">2</span></span><br><span class="line">    max = i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> c1 &lt; n <span class="keyword">and</span> tree[c1] &gt; tree[max]:</span><br><span class="line">        max = c1</span><br><span class="line">    <span class="keyword">if</span> c2 &lt; n <span class="keyword">and</span> tree[c2] &gt; tree[max]:</span><br><span class="line">        max = c2</span><br><span class="line">    <span class="keyword">if</span> max != i:</span><br><span class="line">        tree[max], tree[i] = tree[i], tree[max]</span><br><span class="line">        heapify(tree, n, max)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建堆</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_heap</span>(<span class="params">tree, n</span>):</span></span><br><span class="line">    last_node = n - <span class="number">1</span></span><br><span class="line">    parent = (last_node - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> parent &gt;= <span class="number">0</span>:</span><br><span class="line">        heapify(tree, n, parent)</span><br><span class="line">        parent -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 堆排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">heap_sort</span>(<span class="params">tree</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构建堆</span></span><br><span class="line">    n = len(tree)</span><br><span class="line">    build_heap(tree, n)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 第一个节点与最后一个节点交换</span></span><br><span class="line">        tree[<span class="number">0</span>], tree[n<span class="number">-1</span>] = tree[n<span class="number">-1</span>], tree[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 剩下的节点重新构建堆</span></span><br><span class="line">        build_heap(tree, n<span class="number">-1</span>)</span><br><span class="line">        n -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    tree = [<span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">    heap_sort(tree)</span><br><span class="line">    print(tree)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="算法6：归并排序"><a href="#算法6：归并排序" class="headerlink" title="算法6：归并排序"></a>算法6：归并排序</h3><h4 id="思想-5"><a href="#思想-5" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>归并操作，也叫归并算法，指的是将两个顺序序列合并成一个顺序序列的方法。</p>
<p>如　设有数列{6，202，100，301，38，8，1}</p>
<p>初始状态：6,202,100,301,38,8,1</p>
<p>第一次归并后：{6,202},{100,301},{8,38},{1}，比较次数：3；</p>
<p>第二次归并后：{6,100,202,301}，{1,8,38}，比较次数：4；</p>
<p>第三次归并后：{1,6,8,38,100,202,301},比较次数：4；</p>
<p>总的比较次数为：3+4+4=11；</p>
<p>逆序数为14；</p>
<p><img src="/2020/08/27/Sort/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.gif" alt="归并排序"></p>
<p>归并操作的工作原理如下：</p>
<p>第一步：申请空间，使其大小为两个已经<a href="https://baike.baidu.com/item/%E6%8E%92%E5%BA%8F">排序</a>序列之和，该空间用来存放合并后的序列</p>
<p>第二步：设定两个<a href="https://baike.baidu.com/item/%E6%8C%87%E9%92%88">指针</a>，最初位置分别为两个已经排序序列的起始位置</p>
<p>第三步：比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置</p>
<p>重复步骤3直到某一指针超出序列尾</p>
<p>将另一序列剩下的所有元素直接复制到合并序列尾</p>
</blockquote>
<h4 id="python-5"><a href="#python-5" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将左右两个数组合并</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span>(<span class="params">left, right</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指定两个指针，分别指向左右两个数组的开始位置</span></span><br><span class="line">    i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 合并后的数组</span></span><br><span class="line">    record = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 左右两个数组均未被遍历完</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(left) <span class="keyword">and</span> j &lt; len(right):</span><br><span class="line">        <span class="keyword">if</span> left[i] &lt; right[j]:</span><br><span class="line">            record.append(left[i])</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record.append(right[j])</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果左右两个数组有一个遍历完，将另一个剩余元素添加至record尾部</span></span><br><span class="line">    record += left[i:]</span><br><span class="line">    record += right[j:]</span><br><span class="line">    <span class="keyword">return</span> record</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归 + 分治</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 递归出口</span></span><br><span class="line">    <span class="keyword">if</span> len(arr) &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 数组从中间切分</span></span><br><span class="line">    i = len(arr) // <span class="number">2</span></span><br><span class="line">    left = merge_sort(arr[:i])</span><br><span class="line">    right = merge_sort(arr[i:])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> merge(left, right)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(merge_sort(arr))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle Performance Test：SwingBench</title>
    <url>/2020/09/18/SwingBench/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SwingBench是Oracle UK的一个员工在一个被抛弃的项目的基础上开发的。目前稳定版本2.6，基于JDK。该工具是免费的，可以在作者的网站上自由下载，并且拥有详细的使用文档。Swingbench 可以执行4种不同的标准测试(benchmark)，拥有三种前端展示方式Swingbench/Charbench/Minibench，其中 Charbench是字符模式的，另外两种是GUI模式的。另外还可以通过ClusterOverview可以聚合显示所有的结果。Swingbench 的开发目的主要是用来展示RAC的负载和测试，但也可用于单实例环境。2.3版本开始支持TimesTen。</p>
<blockquote>
<p>SwingBench consists of a load generator, a coordinator and a cluster overview. The software enables a load to be generated and the transactions/response times to be charted.</p>
<p>Swingbench can be used to demonstrate and test technologies such as Real Application Clusters, Online table rebuilds, Standby databases, Online backup and recovery etc.</p>
<p>The code that ships with SwingBench includes 6 benchmarks, OrderEntry, SalesHistory, TPC-DS Like, JSON, CallingCircle and StressTest..</p>
<ul>
<li>OrderEntry is based on the “oe” schema that ships with Oracle 12c/Oracle 18c/Oracle 19c. It has been modified so that Spatial, Intermedia schema’s do not need to be installed. It can be run continuously (that is until you run out of space). It introduces heavy contention on a small number of tables and is designed to stress interconnects and memory. It is installed using the “oewizard” located in the bin directory. Both a pure jdbc and pl/sql (lower network overhead) variant exist of the benchmark.</li>
<li>SalesHistory is based on the “sh” schema that ships with Oracle 12c/Oracle 18c/Oracle 19c and is designed to test the performance of complicated queries when run against large tables. It is read only and can be scaled over a number of default sizes from 1GB to 1TB. A custom mode also allows for the creation of smaller and larger schemas</li>
<li>CallingCircle (deprecated) simulates the SQL that is generated for an online telco application. It requires data files to be generated and copied from the database server to the load generator before each run, it typically requires between 1 and 8 GB of disk space. Both benchmarks are heavily CPU intensive. Experience has shown that you require at least 1 processor of load generator to every 2 processors of database server. It is designed to stress the CPU and memory without the need for a powerful I/O subsystem. Its is installed using the “ccwizard” located in the bin directory</li>
<li>StressTest simply fires random inserts,updates,selects and updates against a well know table.</li>
<li>JSON Stresstest is based on simple JSON documents modelling people flying between airports. It follow a basic CRUD model</li>
<li>TPC-DS Like Benchmark is a benchmark similar to TPC-DS. It features both a query and transaction workload in separate configuration files.</li>
</ul>
<p>The entire framework is developed in Java and as a result can be run on wide variety of platforms. It also provides a simple API to allow developers to build their own benchmarks.</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>系统：win10虚机</p>
<p>配置：4c8g，500G硬盘</p>
<h3 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h3><p>官方下载地址：<a href="http://www.dominicgiles.com/downloads.html">http://www.dominicgiles.com/downloads.html</a></p>
<h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><h4 id="安装JDK-1-8"><a href="#安装JDK-1-8" class="headerlink" title="安装JDK 1.8"></a>安装JDK 1.8</h4><p>版本：jdk-8u131-windows-i586（链接：<a href="https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg">https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg</a> 提取码：4ztk）</p>
<p>系统环境变量：</p>
<ul>
<li>JAVA_HOME：C:\Program Files (x86)\Java\jdk1.8.0_131</li>
<li>CLASSPATH：.;%JAVA_HOME%\bin;%JAVA_HOME%\lib\dt.jar%JAVA_HOME%\lib\tools.jar;</li>
<li>PATH：新增两行，%JAVA_HOME%\bin，%JAVA_HOME%\jre\lib</li>
</ul>
<h4 id="安装SwingBench"><a href="#安装SwingBench" class="headerlink" title="安装SwingBench"></a>安装SwingBench</h4><p>Swingbench压缩包下载完，解压即可使用。</p>
<h2 id="Oewizard加载数据"><a href="#Oewizard加载数据" class="headerlink" title="Oewizard加载数据"></a>Oewizard加载数据</h2><h3 id="运行Oewizard"><a href="#运行Oewizard" class="headerlink" title="运行Oewizard"></a>运行Oewizard</h3><p>进入<code>.\swingbench\winbin</code>目录下，双击运行<code>oewizard.bat</code>。</p>
<blockquote>
<p>实验时，出现双击后无响应的情况，在cmd中运行<code>oewizard.bat</code>文件，报错如下：<br>Error occurred during initialization of VM<br>Could not reserve enough space for 2097152KB object heap</p>
<p>解决方式：系统环境变量中添加如下变量<br>变量名：<code>JAVA_TOOL_OPTIONS</code>    变量值：<code>-Xms1024m</code><br>变量名：<code>_JAVA_OPTIONS</code>    变量值：<code>-Xmx1024m</code></p>
</blockquote>
<p><img src="/2020/09/18/SwingBench/oewizard-1.png" alt="oewizard-1"></p>
<h3 id="Benchmark-Version"><a href="#Benchmark-Version" class="headerlink" title="Benchmark Version"></a>Benchmark Version</h3><p>选择默认选项，version 2.0</p>
<p><img src="/2020/09/18/SwingBench/oewizard-2.png" alt="oewizard-2"></p>
<h3 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h3><p>选择默认选项，Create the Order Entry Schema (User, Table, indexes, Data etc)</p>
<p><img src="/2020/09/18/SwingBench/oewizard-3.png" alt="oewizard-3"></p>
<h3 id="Database-Details"><a href="#Database-Details" class="headerlink" title="Database Details"></a>Database Details</h3><p>填写Oracle数据库的连接信息</p>
<ul>
<li><p>Connect String：格式为<code>ip[：port][：service name]</code>，eg：<code>10.121.9.104:49161</code></p>
</li>
<li><p>Connection Type：使用默认选项，<code>Type IV jdbc driver (Thin)</code></p>
</li>
<li><p>Administrator Username：<code>sys as sysdba</code></p>
</li>
<li><p>Administrator Password：使用sys的密码，如果未设置，可在oracle中使用如下命令设置</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">sys</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&quot;&lt;new password&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/18/SwingBench/oewizard-4.png" alt="oewizard-4"></p>
<h3 id="Schema-Details"><a href="#Schema-Details" class="headerlink" title="Schema Details"></a>Schema Details</h3><ul>
<li><p>Username：<code>sys as sysdba</code></p>
</li>
<li><p>Password：sys的密码</p>
</li>
<li><p>Schema’s Tablespace：使用的是SYSTEM</p>
</li>
<li><p>Tablespaces’s Datafile：自动生成</p>
</li>
</ul>
<p><img src="/2020/09/18/SwingBench/oewizard-5.png" alt="oewizard-5"></p>
<h3 id="Database-Options"><a href="#Database-Options" class="headerlink" title="Database Options"></a>Database Options</h3><p>全使用默认选项，直接下一步</p>
<ul>
<li><p>Partitioning Model：<code>No Partitioning</code></p>
</li>
<li><p>Compression Used：<code>No Compression</code></p>
</li>
<li><p>Tablespace Type：<code>Bigfile Tablespace</code></p>
</li>
<li><p>Indexing Used：<code>All Indexes</code></p>
</li>
</ul>
<p><img src="/2020/09/18/SwingBench/oewizard-6.png" alt="oewizard-6"></p>
<h3 id="Sizing-Details"><a href="#Sizing-Details" class="headerlink" title="Sizing Details"></a>Sizing Details</h3><p>加载的测试数据大小，根据需求选择。实验选择的最小数据量1GB，点击下一步</p>
<p><img src="/2020/09/18/SwingBench/oewizard-7.png" alt="oewizard-7"></p>
<h3 id="ALL-Details-Entered"><a href="#ALL-Details-Entered" class="headerlink" title="ALL Details Entered"></a>ALL Details Entered</h3><p>Level of Parallelism：设置导入时的并发，只影响数据导入速度，默认为4</p>
<p><img src="/2020/09/18/SwingBench/oewizard-8.png" alt="oewizard-8"></p>
<h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><p><img src="/2020/09/18/SwingBench/Swingbench%E5%8A%A0%E8%BD%BD%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE.png" alt="Swingbench加载测试数据"></p>
<p><img src="/2020/09/18/SwingBench/Swingbench%E5%8A%A0%E8%BD%BD%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%EF%BC%88%E5%AE%8C%E6%88%90%EF%BC%89.png" alt="Swingbench加载测试数据（完成）"></p>
<h2 id="SwingBench性能测试"><a href="#SwingBench性能测试" class="headerlink" title="SwingBench性能测试"></a>SwingBench性能测试</h2><h3 id="开启SwingBench"><a href="#开启SwingBench" class="headerlink" title="开启SwingBench"></a>开启SwingBench</h3><p>进入<code>.\swingbench\winbin</code>目录下，双击运行<code>swingbench.bat</code>。界面功能区分布如下：</p>
<p><img src="/2020/09/18/SwingBench/swingbench-1.png" alt="swingbench-1"></p>
<h3 id="User-Details"><a href="#User-Details" class="headerlink" title="User Details"></a>User Details</h3><p>设置Oracle数据库的连接信息。<code>注意：必须使用sysdba用户，普通用户获取不到数据库的性能数据</code></p>
<ul>
<li>Username：<code>sys as sysdba</code></li>
<li>Password：sys的密码</li>
<li>Connect String：格式为<code>ip[：port][：service name]</code>，eg：<code>10.121.9.104:49161</code></li>
<li>Driver Type：使用默认选项，<code>Oracle jdbc Driver</code></li>
</ul>
<p>填写完成后，进行连接测试，提示如下则表明连接正常</p>
<p><img src="/2020/09/18/SwingBench/swingbench-4.png" alt="swingbench-4"></p>
<h3 id="Load"><a href="#Load" class="headerlink" title="Load"></a>Load</h3><p>设置压力参数</p>
<ul>
<li>Number of Users：并发数，默认为4</li>
<li>Benchmark Run Time (hh:min)：运行时长</li>
</ul>
<h3 id="Server-Monitoring（ssh）"><a href="#Server-Monitoring（ssh）" class="headerlink" title="Server Monitoring（ssh）"></a>Server Monitoring（ssh）</h3><p>设置Oracle主机的ssh信息，SwingBench会ssh到主机，获取监控信息</p>
<p><img src="/2020/09/18/SwingBench/swingbench-2.png" alt="swingbench-2"></p>
<h3 id="Oracle-AWR静态分析"><a href="#Oracle-AWR静态分析" class="headerlink" title="Oracle AWR静态分析"></a>Oracle AWR静态分析</h3><ul>
<li>勾选Connect database statistics</li>
<li>勾选Take AWR Snapshots at Start and End</li>
<li>Admin Username：<code>sys as sysdba</code></li>
<li>Admin Password：sys的密码</li>
</ul>
<h3 id="性能图表"><a href="#性能图表" class="headerlink" title="性能图表"></a>性能图表</h3><p>支持的图表如下</p>
<p><img src="/2020/09/18/SwingBench/swingbench-5.png" alt="swingbench-5"></p>
<h3 id="运行SwingBench"><a href="#运行SwingBench" class="headerlink" title="运行SwingBench"></a>运行SwingBench</h3><p><img src="/2020/09/18/SwingBench/swingbench-3.png" alt="swingbench-3"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.dominicgiles.com/simplebenchmark.html">SwingBench官方文档</a></p>
<p><a href="https://www.cnblogs.com/liangqihui/p/7193956.html">如何使用swingbench进行oracle数据库压力测试</a></p>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>性能测试</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB 安装文档</title>
    <url>/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>官方文档：<a href="https://docs.pingcap.com/zh/tidb/stable/production-deployment-using-tiup">https://docs.pingcap.com/zh/tidb/stable/production-deployment-using-tiup</a></p>
<h2 id="使用-TiUP-部署-TiDB-集群"><a href="#使用-TiUP-部署-TiDB-集群" class="headerlink" title="使用 TiUP 部署 TiDB 集群"></a>使用 TiUP 部署 TiDB 集群</h2><p><a href="https://github.com/pingcap/tiup">TiUP</a> 是 TiDB 4.0 版本引入的集群运维工具，<a href="https://github.com/pingcap/tiup/tree/master/components/cluster">TiUP cluster</a> 是 TiUP 提供的使用 Golang 编写的集群管理组件，通过 TiUP cluster 组件就可以进行日常的运维工作，包括部署、启动、关闭、销毁、弹性扩缩容、升级 TiDB 集群；管理 TiDB 集群参数。</p>
<p>目前 TiUP 可以支持部署 TiDB、TiFlash、TiDB Binlog、TiCDC，以及监控系统。本文将介绍不同集群拓扑的具体部署步骤。</p>
<h3 id="第-1-步：软硬件环境需求及前置检查"><a href="#第-1-步：软硬件环境需求及前置检查" class="headerlink" title="第 1 步：软硬件环境需求及前置检查"></a>第 1 步：软硬件环境需求及前置检查</h3><p><a href="https://docs.pingcap.com/zh/tidb/stable/hardware-and-software-requirements">软硬件环境需求</a></p>
<p><a href="https://docs.pingcap.com/zh/tidb/stable/check-before-deployment">环境与系统配置检查</a></p>
<h3 id="第-2-步：在中控机上安装-TiUP-组件"><a href="#第-2-步：在中控机上安装-TiUP-组件" class="headerlink" title="第 2 步：在中控机上安装 TiUP 组件"></a>第 2 步：在中控机上安装 TiUP 组件</h3><p>使用普通用户登录中控机，以 <code>tidb</code> 用户为例，后续安装 TiUP 及集群管理操作均通过该用户完成：</p>
<ol>
<li><p>执行如下命令安装 TiUP 工具：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl --proto &#x27;=https&#x27; --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>按如下步骤设置 TiUP 环境变量：</p>
<p>重新声明全局环境变量：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure>

<p>确认 TiUP 工具是否安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">which tiup</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 TiUP cluster 组件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果已经安装，则更新 TiUP cluster 组件至最新版本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup update --self &amp;&amp; tiup update cluster</span><br></pre></td></tr></table></figure>

<p>预期输出 <code>“Update successfully!”</code> 字样。</p>
</li>
<li><p>验证当前 TiUP cluster 版本信息。执行如下命令查看 TiUP cluster 组件版本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup --binary cluster</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h3 id="第-3-步：编辑初始化配置文件"><a href="#第-3-步：编辑初始化配置文件" class="headerlink" title="第 3 步：编辑初始化配置文件"></a>第 3 步：编辑初始化配置文件</h3><p>请根据不同的集群拓扑，编辑 TiUP 所需的集群初始化配置文件。</p>
<p>这里举出常见的 6 种场景，请根据链接中的拓扑说明，以及给出的配置文件模板，新建一个配置文件 <code>topology.yaml</code>。如果有其他组合场景的需求，请根据多个模板自行调整。</p>
<ul>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/minimal-deployment-topology">最小拓扑架构</a></p>
<p>最基本的集群拓扑，包括 tidb-server、tikv-server、pd-server，适合 OLTP 业务。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/tiflash-deployment-topology">增加 TiFlash 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiFlash。TiFlash 是列式的存储引擎，已经逐步成为集群拓扑的标配。适合 Real-Time HTAP 业务。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/ticdc-deployment-topology">增加 TiCDC 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiCDC。TiCDC 是 4.0 版本开始支持的 TiDB 增量数据同步工具，支持多种下游 (TiDB/MySQL/MQ)。相比于 TiDB Binlog，TiCDC 有延迟更低、天然高可用等优点。在部署完成后，需要启动 TiCDC，<a href="https://docs.pingcap.com/zh/tidb/stable/manage-ticdc">通过 <code>cdc cli</code> 创建同步任务</a>。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/tidb-binlog-deployment-topology">增加 TiDB Binlog 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiDB Binlog。TiDB Binlog 是目前广泛使用的增量同步组件，可提供准实时备份和同步功能。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/tispark-deployment-topology">增加 TiSpark 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiSpark 组件。TiSpark 是 PingCAP 为解决用户复杂 OLAP 需求而推出的产品。TiUP cluster 组件对 TiSpark 的支持目前为实验性特性。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/hybrid-deployment-topology">混合部署拓扑架构</a></p>
<p>适用于单台机器，混合部署多个实例的情况，也包括单机多实例，需要额外增加目录、端口、资源配比、label 等配置。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/geo-distributed-deployment-topology">跨机房部署拓扑架构</a></p>
<p>以典型的 <code>两地三中心</code> 架构为例，介绍跨机房部署架构，以及需要注意的关键设置。</p>
</li>
</ul>
<blockquote>
<p><strong>注意：</strong></p>
<ul>
<li><code>topology.yaml</code>配置文件内不能使用主机名，需要使用ip地址。使用主机名会在启动时出现报错。</li>
<li>对于需要全局生效的参数，请在配置文件中 <code>server_configs</code> 的对应组件下配置。</li>
<li>对于需要某个节点生效的参数，请在具体节点的 <code>config</code> 中配置。</li>
<li>配置的层次结构使用 <code>.</code> 表示。如：<code>log.slow-threshold</code>。更多格式参考 <a href="https://github.com/pingcap/tiup/blob/master/examples/topology.example.yaml">TiUP 配置参数模版</a>。</li>
<li>更多参数说明，请参考 <a href="https://github.com/pingcap/tidb/blob/master/config/config.toml.example">TiDB <code>config.toml.example</code></a>、<a href="https://github.com/tikv/tikv/blob/master/etc/config-template.toml">TiKV <code>config.toml.example</code></a> 、 <a href="https://github.com/pingcap/pd/blob/master/conf/config.toml">PD <code>config.toml.example</code></a> 和 <a href="https://docs.pingcap.com/zh/tidb/stable/tiflash-configuration">TiFlash 配置参数</a>。</li>
</ul>
</blockquote>
<h3 id="第-4-步：执行部署命令"><a href="#第-4-步：执行部署命令" class="headerlink" title="第 4 步：执行部署命令"></a>第 4 步：执行部署命令</h3><blockquote>
<p><strong>注意：</strong></p>
<p>通过 TiUP 进行集群部署可以使用密钥或者交互密码方式来进行安全认证：</p>
<ul>
<li>如果是密钥方式，可以通过 <code>-i</code> 或者 <code>--identity_file</code> 来指定密钥的路径；</li>
<li>如果是密码方式，可以通过 <code>-p</code> 进入密码交互窗口；</li>
<li>如果已经配置免密登陆目标机，则不需填写认证。</li>
</ul>
<p>一般情况下 TiUP 会在目标机器上创建 <code>topology.yaml</code> 中约定的用户和组，以下情况例外：</p>
<ul>
<li><code>topology.yaml</code> 中设置的用户名在目标机器上已存在。</li>
<li>在命令行上使用了参数 <code>--skip-create-user</code> 明确指定跳过创建用户的步骤。</li>
</ul>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster deploy tidb-test v4.0.0 ./topology.yaml --user root [-p] [-i /home/root/.ssh/gcp_rsa]</span><br></pre></td></tr></table></figure>

<p>以上部署命令中：</p>
<ul>
<li>通过 TiUP cluster 部署的集群名称为 <code>tidb-test</code></li>
<li>部署版本为 <code>v4.0.0</code>，最新版本可以通过执行 <code>tiup list tidb</code> 来查看 TiUP 支持的版本</li>
<li>初始化配置文件为 <code>topology.yaml</code></li>
<li>–user root：通过 root 用户登录到目标主机完成集群部署，该用户需要有 ssh 到目标机器的权限，并且在目标机器有 sudo 权限。也可以用其他有 ssh 和 sudo 权限的用户完成部署。</li>
<li>[-i] 及 [-p]：非必选项，如果已经配置免密登陆目标机，则不需填写。否则选择其一即可，[-i] 为可登录到目标机的 root 用户（或 –user 指定的其他用户）的私钥，也可使用 [-p] 交互式输入该用户的密码</li>
<li>如果需要指定在目标机创建的用户组名，可以参考<a href="https://github.com/pingcap/tiup/blob/master/examples/topology.example.yaml#L7">这个例子</a>。</li>
</ul>
<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-1.png" alt="TiUP-1"></p>
<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-2.png" alt="TiUP-2"></p>
<p>预期日志结尾输出会有 <code>Deployed cluster </code>tidb-test<code> successfully</code> 关键词，表示部署成功。</p>
<h3 id="第-5-步：查看-TiUP-管理的集群情况"><a href="#第-5-步：查看-TiUP-管理的集群情况" class="headerlink" title="第 5 步：查看 TiUP 管理的集群情况"></a>第 5 步：查看 TiUP 管理的集群情况</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster list</span><br></pre></td></tr></table></figure>

<p>TiUP 支持管理多个 TiDB 集群，该命令会输出当前通过 TiUP cluster 管理的所有集群信息，包括集群名称、部署用户、版本、密钥信息等：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Starting &#x2F;home&#x2F;tidb&#x2F;.tiup&#x2F;components&#x2F;cluster&#x2F;v1.0.0&#x2F;cluster list</span><br><span class="line">Name              User  Version        Path                                                        PrivateKey</span><br><span class="line">----              ----  -------        ----                                                        ----------</span><br><span class="line">tidb-test         tidb  v4.0.0      &#x2F;home&#x2F;tidb&#x2F;.tiup&#x2F;storage&#x2F;cluster&#x2F;clusters&#x2F;tidb-test         &#x2F;home&#x2F;tidb&#x2F;.tiup&#x2F;storage&#x2F;cluster&#x2F;clusters&#x2F;tidb-test&#x2F;ssh&#x2F;id_rsa</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-3.png" alt="TiUP-3"></p>
<h3 id="第-6-步：检查部署的-TiDB-集群情况"><a href="#第-6-步：检查部署的-TiDB-集群情况" class="headerlink" title="第 6 步：检查部署的 TiDB 集群情况"></a>第 6 步：检查部署的 TiDB 集群情况</h3><p>例如，执行如下命令检查 <code>tidb-test</code> 集群情况：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster display tidb-test</span><br></pre></td></tr></table></figure>

<p>预期输出包括 <code>tidb-test</code> 集群中实例 ID、角色、主机、监听端口和状态（由于还未启动，所以状态为 Down/inactive）、目录信息。</p>
<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-4.png" alt="TiUP-4"></p>
<h3 id="第-7-步：启动集群"><a href="#第-7-步：启动集群" class="headerlink" title="第 7 步：启动集群"></a>第 7 步：启动集群</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster start tidb-test</span><br></pre></td></tr></table></figure>

<p>预期结果输出 <code>Started cluster </code>tidb-test<code> successfully</code> 标志启动成功。</p>
<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-5.png" alt="TiUP-5"></p>
<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-6.png" alt="TiUP-6"></p>
<h3 id="第-8-步：验证集群运行状态"><a href="#第-8-步：验证集群运行状态" class="headerlink" title="第 8 步：验证集群运行状态"></a>第 8 步：验证集群运行状态</h3><ul>
<li>通过 TiUP 检查集群状态</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster display tidb-test</span><br></pre></td></tr></table></figure>

<p>预期结果输出，注意 Status 状态信息为 <code>Up</code> 说明集群状态正常</p>
<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-7.png" alt="TiUP-7"></p>
<ul>
<li>执行如下命令登录数据库：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -u root -h 10.0.1.4 -P 4000</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/16/TiDB-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-8.png" alt="TiUP-8"></p>
<p>此外，也需要验证监控系统、<a href="https://docs.pingcap.com/zh/tidb/stable/dashboard-intro">TiDB Dashboard</a> 的运行状态，以及简单命令的执行，验证方式可参考<a href="https://docs.pingcap.com/zh/tidb/stable/post-installation-check">验证集群运行状态</a>。</p>
<h3 id="TiUP管理命令"><a href="#TiUP管理命令" class="headerlink" title="TiUP管理命令"></a>TiUP管理命令</h3><h4 id="集群管理"><a href="#集群管理" class="headerlink" title="集群管理"></a>集群管理</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看集群列表</span></span><br><span class="line">tiup cluster list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">tiup cluster display tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动集群</span></span><br><span class="line">tiup cluster start tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止集群</span></span><br><span class="line">tiup cluster stop tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改集群参数</span></span><br><span class="line">tiup cluster edit-config tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除集群</span></span><br><span class="line">tiup cluster destroy tidb-test</span><br></pre></td></tr></table></figure>

<h4 id="集群组件管理"><a href="#集群组件管理" class="headerlink" title="集群组件管理"></a>集群组件管理</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动组件所有节点</span></span><br><span class="line">tiup cluster start tidb-test -R pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭组件所有节点</span></span><br><span class="line">tiup cluster stop tidb-test -R tidb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动某几个节点的组件</span></span><br><span class="line">tiup cluster start tidb-test -N &lt;ip&gt;:&lt;port&gt;,&lt;ip&gt;:&lt;port&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭某几个节点的组件</span></span><br><span class="line">tiup cluster stop tidb-test -N &lt;ip&gt;:&lt;port&gt;,&lt;ip&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>TiDB</category>
      </categories>
      <tags>
        <tag>TiDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim</title>
    <url>/2020/08/31/Vim/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p>
<p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。</p>
<p>连 vim 的官方网站 (<a href="http://www.vim.org/">http://www.vim.org</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p>
<p>参考文档：<a href="https://www.runoob.com/linux/linux-vim.html">https://www.runoob.com/linux/linux-vim.html</a></p>
</blockquote>
<a id="more"></a>



<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt; ~/.vimrc &lt;&lt; EOF</span><br><span class="line">&quot;设置编码&quot;</span><br><span class="line">set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936</span><br><span class="line">set termencoding=utf-8</span><br><span class="line">set encoding=utf-8</span><br><span class="line"></span><br><span class="line">&quot;显示行号&quot;</span><br><span class="line">set nu</span><br><span class="line"></span><br><span class="line">&quot;显示括号匹配&quot;</span><br><span class="line">set showmatch</span><br><span class="line"></span><br><span class="line">&quot;设置Tab长度为4空格&quot;</span><br><span class="line">set tabstop=4</span><br><span class="line">&quot;空格替代制表符&quot;</span><br><span class="line">set expandtab</span><br><span class="line">&quot;设置自动缩进长度为4空格&quot;</span><br><span class="line">set shiftwidth=4</span><br><span class="line">&quot;继承前一行的缩进方式，适用于多行注释&quot;</span><br><span class="line">set autoindent</span><br><span class="line"></span><br><span class="line">&quot;启动粘贴模式&quot;</span><br><span class="line">set paste</span><br><span class="line"></span><br><span class="line">&quot;括号自动补全&quot;</span><br><span class="line">inoremap &#x27; &#x27;&#x27;&lt;ESC&gt;i</span><br><span class="line">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span><br><span class="line">inoremap ( ()&lt;ESC&gt;i</span><br><span class="line">inoremap [ []&lt;ESC&gt;i</span><br><span class="line">inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;O</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>



<h2 id="常用按键"><a href="#常用按键" class="headerlink" title="常用按键"></a>常用按键</h2><h3 id="第一部分：一般模式"><a href="#第一部分：一般模式" class="headerlink" title="第一部分：一般模式"></a>第一部分：一般模式</h3><h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>h, j, k, l</td>
<td>光标向左，下，上，右移动</td>
</tr>
<tr>
<td>Ctrl + f / b</td>
<td>屏幕向下/上移动</td>
</tr>
<tr>
<td>Ctrl + d / u</td>
<td>屏幕向下/上移动半页</td>
</tr>
<tr>
<td>0</td>
<td>移动到一行的最前面</td>
</tr>
<tr>
<td>$</td>
<td>移动到一行的最后面字符</td>
</tr>
<tr>
<td>H / M / L</td>
<td>移动到屏幕最上方/中央/最下方那一行的第一个字符</td>
</tr>
<tr>
<td>G</td>
<td>移动到文件的最后一行</td>
</tr>
<tr>
<td>nG / ngg</td>
<td>移动到文件的第n行</td>
</tr>
<tr>
<td>gg</td>
<td>移动到文件的第一行</td>
</tr>
<tr>
<td>n[Enter]</td>
<td>向下移动n行</td>
</tr>
</tbody></table>
<h4 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>/ <word></word></td>
<td>向下查找word字符串</td>
</tr>
<tr>
<td>? <word></word></td>
<td>向上查找word字符串</td>
</tr>
<tr>
<td>n</td>
<td>代表重复前一个查找动作</td>
</tr>
<tr>
<td>N</td>
<td>代表反向重复前一个查找动作</td>
</tr>
<tr>
<td>: s/<old>/<new></new></old></td>
<td>将第一个old替换为new</td>
</tr>
<tr>
<td>: s/<old>/<new>/g</new></old></td>
<td>将一行中所有的old替换为new</td>
</tr>
<tr>
<td>:n1, n2s/<word1>/<word2>/g</word2></word1></td>
<td>将行n1与n2之间的word1替换为word2</td>
</tr>
<tr>
<td>:%s/<old>/<new>/g</new></old></td>
<td>将文件所有的old替换为new</td>
</tr>
<tr>
<td>:%s/<old>/<new>/gc</new></old></td>
<td>替换前要求确认</td>
</tr>
</tbody></table>
<h4 id="删除复制粘贴"><a href="#删除复制粘贴" class="headerlink" title="删除复制粘贴"></a>删除复制粘贴</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>x/X</td>
<td>向后/前删除一个字符</td>
</tr>
<tr>
<td>nx</td>
<td>连续删除n个字符</td>
</tr>
<tr>
<td>dd</td>
<td>删除整行</td>
</tr>
<tr>
<td>ndd</td>
<td>删除n行</td>
</tr>
<tr>
<td>d1G</td>
<td>删除光标所在到第一行数据</td>
</tr>
<tr>
<td>dG</td>
<td>删除光标所在到最后一行数据</td>
</tr>
<tr>
<td>d$</td>
<td>删除光标所在到该行最后一个字符</td>
</tr>
<tr>
<td>d0</td>
<td>删除光标所在到该行最前面一个字符</td>
</tr>
<tr>
<td>yy</td>
<td>复制光标所在的一行</td>
</tr>
<tr>
<td>nyy</td>
<td>向下复制n行</td>
</tr>
<tr>
<td>y1G</td>
<td>复制光标所在到第一行数据</td>
</tr>
<tr>
<td>yG</td>
<td>复制光标所在到最后一行数据</td>
</tr>
<tr>
<td>y$</td>
<td>复制光标所在到该行最后一个字符</td>
</tr>
<tr>
<td>y0</td>
<td>复制光标所在到该行最前面一个字符</td>
</tr>
<tr>
<td>p/P</td>
<td>粘贴数据在光标下/上一行</td>
</tr>
<tr>
<td>J</td>
<td>将光标所在行与下一行数据结合成同一行</td>
</tr>
<tr>
<td>u</td>
<td>回撤前一操作</td>
</tr>
<tr>
<td>Ctrl + r</td>
<td>重做前一操作</td>
</tr>
<tr>
<td>.</td>
<td>重复前一个操作</td>
</tr>
</tbody></table>
<h3 id="第二部分：编辑模式"><a href="#第二部分：编辑模式" class="headerlink" title="第二部分：编辑模式"></a>第二部分：编辑模式</h3><h4 id="进入插入或替换的编辑模式"><a href="#进入插入或替换的编辑模式" class="headerlink" title="进入插入或替换的编辑模式"></a>进入插入或替换的编辑模式</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>i, I</td>
<td>进入插入模式： i从当前光标所在处插入，I在目前所在行的第一个非空格符处插入</td>
</tr>
<tr>
<td>a, A</td>
<td>进入插入模式： a从当前光标所在的下一个字符插入，A从光标所在行的最后一个字符后插入</td>
</tr>
<tr>
<td>o, O</td>
<td>进入插入模式： o从当前光标所在行的下一行插入新的一行；O正好相反，从上一行插入新行</td>
</tr>
<tr>
<td>r, R</td>
<td>进入替换模式： r只会替换光标所在的那一个字符一次；R会一直替换光标所在文字，直到Esc</td>
</tr>
</tbody></table>
<h4 id="块选择"><a href="#块选择" class="headerlink" title="块选择"></a>块选择</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>v</td>
<td>字符选择，将光标经过的地方反白选择</td>
</tr>
<tr>
<td>V</td>
<td>行选择，将光标经过的行反白选择</td>
</tr>
<tr>
<td>Ctrl + v</td>
<td>块选择，可以用长方形选择数据</td>
</tr>
<tr>
<td>y</td>
<td>将反白的地方复制</td>
</tr>
<tr>
<td>d</td>
<td>删除反白的地方</td>
</tr>
</tbody></table>
<h4 id="多窗口"><a href="#多窗口" class="headerlink" title="多窗口"></a>多窗口</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>：sp filename</td>
<td>打开新窗口，如果有加filename,新窗口打开新文件，否则打开相同文件</td>
</tr>
<tr>
<td>Ctrl + w + s/v</td>
<td>水平/垂直分割打开新窗口</td>
</tr>
<tr>
<td>Ctrl + w + h/j/k/l</td>
<td>光标移动到左/下/上/右窗口</td>
</tr>
<tr>
<td>Ctrl + w + q</td>
<td>退出窗口</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>开发小工具：Chrome翻墙</title>
    <url>/2020/12/21/%E5%BC%80%E5%8F%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/</url>
    <content><![CDATA[<h2 id="谷歌上网助手GHelper-–-Chrome插件"><a href="#谷歌上网助手GHelper-–-Chrome插件" class="headerlink" title="谷歌上网助手GHelper – Chrome插件"></a>谷歌上网助手GHelper – Chrome插件</h2><blockquote>
<p>专门为科研、外贸、跨境电商、海淘人员、开发人员服务的上网加速工具，chrome内核浏览器专用!可以解决chrome扩展无法自动更新的问题，同时可以访问谷歌google搜索，gmail邮箱，google+等谷歌产品</p>
<p>简单易用的《谷歌上网助手》，可以解决chrome扩展无法自动更新的问题，同时可以访问谷歌google搜索，gmail邮箱，google+等谷歌服务。</p>
<p>《谷歌上网助手》一键安装，无需其他配置，即可访问谷歌。</p>
<p>使用本插件可以免费上：</p>
<ul>
<li>google.com     谷歌搜索</li>
<li>mail.google.com   gmail邮箱</li>
<li>chrome商店访问</li>
</ul>
</blockquote>
<h2 id="资源包"><a href="#资源包" class="headerlink" title="资源包"></a>资源包</h2><p>链接：<a href="https://pan.baidu.com/s/1Q7ltgX75BwLRyrrUSsQg4A">https://pan.baidu.com/s/1Q7ltgX75BwLRyrrUSsQg4A</a><br>提取码：tav2 </p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>下载解压资源包，找见<code>Ghelper2.2.1.crx</code></li>
</ol>
<p><img src="/2020/12/21/%E5%BC%80%E5%8F%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.png" alt="文件目录"></p>
<ol start="2">
<li>打开<code>Chrome浏览器</code>，点击<code>设置</code> - <code>扩展应用</code>（也可直接浏览地址：<code>chrome://extensions/</code>），打开<code>开发者模式</code>开关</li>
</ol>
<p><img src="/2020/12/21/%E5%BC%80%E5%8F%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/Chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F.png" alt="image-20201221203859502"></p>
<ol start="3">
<li>拖拽<code>Ghelper2.2.1.crx</code>至Chrome页面，进行安装</li>
<li>点击谷歌上网助手，注册并登陆账户即可访问Google</li>
</ol>
<p><img src="/2020/12/21/%E5%BC%80%E5%8F%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E8%BF%9B%E5%85%A5Ghelper.png" alt="image-20201221204045444"></p>
<p><img src="/2020/12/21/%E5%BC%80%E5%8F%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E7%99%BB%E5%BD%95Ghelper.png" alt="image-20201221204105401"></p>
<ol start="5">
<li><p>访问Google搜索</p>
<p><img src="/2020/12/21/%E5%BC%80%E5%8F%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E8%AE%BF%E9%97%AEGoogle.png" alt="image-20201221204155970"></p>
</li>
</ol>
<p><img src="/2020/12/21/%E5%BC%80%E5%8F%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/Google%E6%90%9C%E7%B4%A2.png" alt="image-20201221204215545"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://chrome.google.com/webstore/detail/%E8%B0%B7%E6%AD%8C%E4%B8%8A%E7%BD%91%E5%8A%A9%E6%89%8B/nonmafimegllfoonjgplbabhmgfanaka?hl=zh-CN">Chrome应用商店：谷歌上网助手</a></p>
<p><a href="https://www.wonxun.net/share/426">谷歌上网助手GHelper – Chrome插件下载(谷歌浏览器插件)</a></p>
]]></content>
      <categories>
        <category>开发小工具</category>
      </categories>
      <tags>
        <tag>开发小工具</tag>
        <tag>翻墙</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack开发：Curl接口调试</title>
    <url>/2020/12/14/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9ACurl%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><blockquote>
<h3 id="keystone"><a href="#keystone" class="headerlink" title="keystone"></a>keystone</h3><p>OpenStack 的 Keystone V3 中引入了 Domain 的概念</p>
<h3 id="Domain，project，user，role，token-的概念和关系"><a href="#Domain，project，user，role，token-的概念和关系" class="headerlink" title="Domain，project，user，role，token 的概念和关系"></a>Domain，project，user，role，token 的概念和关系</h3><p>简单来说，</p>
<ul>
<li>Domain - 表示 project 和 user 的集合，在公有云或者私有云中常常表示一个客户</li>
<li>Group - 一个domain 中的部分用户的集合</li>
<li>Project - IT基础设施资源的集合，比如虚机，卷，镜像等</li>
<li>Role - 角色，表示一个 user 对一个 project resource 的权限</li>
<li>Token - 一个 user 对于某个目标（project 或者 domain）的一个有限时间段内的身份令牌</li>
</ul>
<p>它们之间的关系用一个不完整的图来表示：</p>
<p><img src="/2020/12/14/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9ACurl%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95/%E8%B5%84%E6%BA%90%E5%85%B3%E7%B3%BB.jpg" alt="资源关系"></p>
<p>说明：</p>
<ul>
<li>Domain 可以认为是 project，user，group 的 namespace。 一个 domain 内，这些元素的名称不可以重复，但是在两个不同的domain内，它们的名称可以重复。因此，在确定这些元素时，需要同时使用它们的名称和它们的 domain 的 id 或者 name。</li>
<li>Group 是一个 domain 部分 user 的集合，其目的是为了方便分配 role。给一个 group 分配 role，结果会给 group 内的所有 users 分配这个 role。</li>
<li>Role 是全局（global）的，因此在一个 keystone 管辖范围内其名称必须唯一。role 的名称没有意义，其意义在于 policy.json 文件根据 role 的名称所指定的允许进行的操作。</li>
<li>简单地，role 可以只有 admin 和 member 两个，前者表示管理员，后者表示普通用户。但是，结合 domain 和 project 的限定，admin 可以分为 cloud admin，domain admin 和 project admin。</li>
<li>policy.json 文件中定义了 role 对某种类型的资源所能进行的操作，比如允许 cloud admin 创建 domain，允许所有用户创建卷等</li>
<li>project 是资源的集合，其中有一类特殊的project 是 admin project。通过指定 admin_project_domain_name 和 admin_project_name 来确定一个 admin project，然后该project 中的 admin 用户即是 cloud admin。</li>
<li>Token 具有 scope 的概念，分为 unscoped token，domain-scoped token 和 project-scoped token。下文有说明。</li>
</ul>
<h3 id="token"><a href="#token" class="headerlink" title="token"></a>token</h3><p>token即令牌，身份的凭证。在整个openstack项目中服务与服务之间的通信都需要token来进行身份认证，我们来举个例子：</p>
<p><img src="/2020/12/14/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9ACurl%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95/%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B.jpg" alt="请求流程"></p>
<p>如上图所示，一个用户需要创建一台虚拟机，用户首先要登入之后先拿到一个project_scope token 这个token包含了用户具有的角色以及服务列表，用户拿着这个令牌去请求nova服务，nova首先会去keystone认证该token是否有效，之后会向glance发送获取镜像的请求，glance接收请求后也会向之前的步骤一样去keystone认证token有效性，最终返回镜像给nova，nova再用镜像去给用户创建虚拟机。<br> 另外需要说明的是token中包含用户所拥有的角色，nova和其他服务还会根据token中的role来判断用户是否有操作权限。</p>
<h3 id="token类型"><a href="#token类型" class="headerlink" title="token类型"></a>token类型</h3><h4 id="unscope-token"><a href="#unscope-token" class="headerlink" title="unscope token"></a>unscope token</h4><p>示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;token&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;issued_at&quot;</span>: <span class="string">&quot;2016-11-30T03:50:49.277102Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;audit_ids&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;AbSBE-XmTc-gacd4cxrZAQ&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;methods&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;password&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;expires_at&quot;</span>: <span class="string">&quot;2016-12-01T03:50:49.277079Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;user&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Default&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fb7cdca584894c7ca3faa7388ee3a98f&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上所示为unscope token其中只包含了用户基本信息，以及创建／过期时间等基本信息。</p>
<h4 id="scope-token"><a href="#scope-token" class="headerlink" title="scope token"></a>scope token</h4><p>在keystone中scope token主要有以下几种类型：</p>
<ul>
<li><p>project-scoped token:该类型token表示用户对具体项目的访问权限，token信息主要包括用户可访问的服务目录、拥有的权限、以及项目信息。</p>
</li>
<li><p>domain-scoped token：该类型token表示用户在域范围具有的权限，例如如果用户对域内具有管理员权限，则该用户就能管理域内的所有项目以及用户。跟project-scoped token不同的是project-scoped token包含了可访问项目信息，而domain-scoped token则包含了具有操作权限的域信息。</p>
</li>
<li><p>trust-scoped token:当truster授予trustee一定的权限后，trustee可以使用该类型token来操作truster资源，该类型token信息包括truster的项目／域信息以及一系列权限，服务目录。</p>
<p> 示例：</p>
</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;token&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;methods&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;password&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;roles&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;eaee0b95f3dc4e2ca6476a41c2596de5&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;expires_at&quot;</span>: <span class="string">&quot;2016-12-01T03:15:43.057915Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;project&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Default&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;catalog&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9696&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;74f1c9d76070422cb6839a9090b2801e&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9696&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b7f77180541142d48c70a6bf63547ee2&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9696&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fa44e5f5251a4cec8fe1044144d83a77&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;network&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;40c01df9e89a4d33bd97c140c0397c79&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;neutron&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8004/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1986cb45bda74e779df52caf5445b61b&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8004/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;c8626b60ef2a40a1ab30f97ac05e5052&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8004/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;effb9bba0ec34345b1f16f6616d41024&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;orchestration&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4faf0d0323a1433b934008e2f371257f&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;heat&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3f6e61cceaea422fb884865fc8b93a15&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4ed6326d65a94401b5e1280134fd2d48&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;96e02eb9ebe345919ddac114e735c9af&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;volumev2&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6b04d7f69edb4878910e5577e7203d99&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;cinderv2&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v3/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;05c90aa6d91a4dd0a3b86b5ae7a3ec9f&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v3/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;26d499a887874945b4296a153c5ffa36&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v3/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6083327dec414ff7aee2578dc07be32a&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;volumev3&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;7ab5a6aa19d349e3b6f51d019708640b&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;cinderv3&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:5000/v3&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;104f35e918ef4bc6b585680a1068759f&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:5000/v3&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1ae18bb03417491789758cb909f4e5a7&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:35357/v3&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;81b5b166c3e44f569934032c030157f6&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;identity&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;94390d15efa54fb2b56f9c60eca92364&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;keystone&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8000/v1&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;59ce20e207ee442e8d34cc791a5074c3&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8000/v1&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;c02bc940384a49cabaf7e14be1862f66&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8000/v1&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;cdaa6cedb47b4b26a3ffecfb208b8740&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cloudformation&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;9952ffb22c6b4091be0e8d7104a9dc47&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;heat-cfn&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;12ff0fbbfd4041dfa5baa2f398bc1743&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;19b6c07105b049eaa6001a3236591a0a&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;f968d4484e7648c888a1ee69e58f46f7&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;volume&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;aa9c81d5176f46238772fbd48d465a6e&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;cinder&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8774/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;284c6e27ad36425abdb25ae4175dd3ea&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8774/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;914f3f40ce8448df8817373779492abe&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8774/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b002db37826d47008149b5dd26ced405&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;compute&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b606deae3b5042a3866fcca5abe203e9&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;nova&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9292&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;01e9dae6fd7246c0bc101abb112fcdb8&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9292&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;36013e038ffb473c9a377fffd63a86db&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9292&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;e6f97873b7734743ba6eed52b789955b&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;image&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;e2d274d71113415399f3e24e187d165d&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;glance&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;user&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Default&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fb7cdca584894c7ca3faa7388ee3a98f&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;audit_ids&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;XgeY0-0cTbuvSuu58WlHLA&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;issued_at&quot;</span>: <span class="string">&quot;2016-11-30T03:15:43.057953Z&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>作者：爱吃土豆的程序猿<br>链接：<a href="https://www.jianshu.com/p/a8b6504fc3c6">https://www.jianshu.com/p/a8b6504fc3c6</a></p>
</blockquote>
<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><h3 id="1-查看endpoint"><a href="#1-查看endpoint" class="headerlink" title="1. 查看endpoint"></a>1. 查看endpoint</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> openstack endpoint list</span></span><br><span class="line"></span><br><span class="line">+----------------------------------+-----------+--------------+----------------+---------+-----------+---------------------------------------------+</span><br><span class="line">| ID                               | Region    | Service Name | Service Type   | Enabled | Interface | URL                                         |</span><br><span class="line">+----------------------------------+-----------+--------------+----------------+---------+-----------+---------------------------------------------+</span><br><span class="line">| 0293f08fe3374b65a80bf0bf7c12a6ab | RegionOne | placement    | placement      | True    | admin     | http://111.111.111.80:8780                  |</span><br><span class="line">| 0c43ec8a11414c56ae8aed723bd232e8 | RegionOne | glance       | image          | True    | public    | http://111.111.111.80:9292                  |</span><br><span class="line">| 1f58f929a59c4726a535e31cd634fddd | RegionOne | glance       | image          | True    | internal  | http://111.111.111.80:9292                  |</span><br><span class="line">| 2cdcbb0779624bf58a74e6912a9411fd | RegionOne | neutron      | network        | True    | admin     | http://111.111.111.80:9696                  |</span><br><span class="line">| 4c39935eaaab4af59a3cbd352e137e4b | RegionOne | neutron      | network        | True    | public    | http://111.111.111.80:9696                  |</span><br><span class="line">| 5bb8f8a16c764aa997a21a005a2608f6 | RegionOne | nova_legacy  | compute_legacy | True    | public    | http://111.111.111.80:8774/v2/%(tenant_id)s |</span><br><span class="line">| 64300c58965f41e3a1f6991c6215e06d | RegionOne | nova         | compute        | True    | public    | http://111.111.111.80:8774/v2.1             |</span><br><span class="line">| 6b3510cfbdfd4b08910d87020acd29d1 | RegionOne | cinderv3     | volumev3       | True    | admin     | http://111.111.111.80:8776/v3/%(tenant_id)s |</span><br><span class="line">| 81be77dbe60a4353952b3635b855a85c | RegionOne | nova         | compute        | True    | admin     | http://111.111.111.80:8774/v2.1             |</span><br><span class="line">| 87ae064fd3cc4234a42a55188fa237e0 | RegionOne | cinderv3     | volumev3       | True    | internal  | http://111.111.111.80:8776/v3/%(tenant_id)s |</span><br><span class="line">| 90bb8a42cf4d48b099c9aa21cb8e3cbd | RegionOne | keystone     | identity       | True    | internal  | http://111.111.111.80:5000                  |</span><br><span class="line">| 92a7a61523c7411abe9da4e2f4c1adeb | RegionOne | cinderv2     | volumev2       | True    | admin     | http://111.111.111.80:8776/v2/%(tenant_id)s |</span><br><span class="line">| 9576bf398d19446b9f7c392f4386a137 | RegionOne | nova_legacy  | compute_legacy | True    | internal  | http://111.111.111.80:8774/v2/%(tenant_id)s |</span><br><span class="line">| 967b8c2e6f7546dfaa194d38972e3e97 | RegionOne | glance       | image          | True    | admin     | http://111.111.111.80:9292                  |</span><br><span class="line">| 99aced6c046e41f49e29968ba0e7bb5d | RegionOne | keystone     | identity       | True    | public    | http://111.111.111.80:5000                  |</span><br><span class="line">| 9acbd8d95c334b6782d9e7ac41c2aafe | RegionOne | cinderv2     | volumev2       | True    | public    | http://111.111.111.80:8776/v2/%(tenant_id)s |</span><br><span class="line">| b66ba28ee6104e16aa6adf19f856d6d8 | RegionOne | cinderv2     | volumev2       | True    | internal  | http://111.111.111.80:8776/v2/%(tenant_id)s |</span><br><span class="line">| b9384f9957144960a7cdb25d11c3e5ec | RegionOne | placement    | placement      | True    | public    | http://111.111.111.80:8780                  |</span><br><span class="line">| bcac2a4bb14f40bcbf01356f8ed4f580 | RegionOne | nova         | compute        | True    | internal  | http://111.111.111.80:8774/v2.1             |</span><br><span class="line">| c8fd37d7ca7f484fb0318f5b8ebf1498 | RegionOne | keystone     | identity       | True    | admin     | http://111.111.111.80:35357                 |</span><br><span class="line">| c999b3341cfb4118ba9cd7b064d9d494 | RegionOne | nova_legacy  | compute_legacy | True    | admin     | http://111.111.111.80:8774/v2/%(tenant_id)s |</span><br><span class="line">| d9efed636a104a98a52b48984c63e8aa | RegionOne | placement    | placement      | True    | internal  | http://111.111.111.80:8780                  |</span><br><span class="line">| e927b87c681b488cb0607bc47cb7c8f7 | RegionOne | cinderv3     | volumev3       | True    | public    | http://111.111.111.80:8776/v3/%(tenant_id)s |</span><br><span class="line">| ee6cce1279b7455ebbb086c6576df1eb | RegionOne | neutron      | network        | True    | internal  | http://111.111.111.80:9696                  |</span><br><span class="line">+----------------------------------+-----------+--------------+----------------+---------+-----------+---------------------------------------------+</span><br></pre></td></tr></table></figure>



<h3 id="2-获取token"><a href="#2-获取token" class="headerlink" title="2. 获取token"></a>2. 获取token</h3><p><strong>Curl方式</strong></p>
<p>创建<code>token-request.json</code>文件，作为HTTP消息的内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;auth&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;identity&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;methods&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;password&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;password&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;user&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;default&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;scope&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;project&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;default&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按照具体情况修改上面的json文件，向keystone请求token。<code>-si</code>是返回消息头。token信息位于消息头的<code>X-Subject-Token</code>字段</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># ipv4请求方式</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> curl -si -d @token-request.json -H <span class="string">&quot;Content-type: application/json&quot;</span> http://111.111.111.80:35357/v3/auth/tokens</span></span><br><span class="line"></span><br><span class="line">HTTP/1.1 201 CREATED</span><br><span class="line">Date: Mon, 14 Dec 2020 14:14:34 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Subject-Token: gAAAAABf13NKA1JVOP1pF6OYmtzgaiKXz17svZrXzsEX5_0klzwe9XPkHbxCn39Ri3y_2oglGHEAeWaKH1aycPENWJvPLGA63jk83fMBYwFFTpjvILcbjlKdDdG5hZwLGqdWR9VKYaEp07uIeGDJwQVFbf9tzt9x-uWytJeYyPJlORENLY6_6HQ</span><br><span class="line">Vary: X-Auth-Token</span><br><span class="line">x-openstack-request-id: req-15d5d205-6d39-4163-bc6d-7cb79d17696f</span><br><span class="line">Content-Length: 5472</span><br><span class="line">Content-Type: application/json</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># ipv6请求方式</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> curl -si -d @token-request.json -g -6 -H <span class="string">&quot;Content-type: application/json&quot;</span> http://[2001::10]:35357/v3/auth/tokens</span></span><br><span class="line"></span><br><span class="line">HTTP/1.1 201 CREATED</span><br><span class="line">Date: Tue, 29 Dec 2020 14:41:32 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Subject-Token: gAAAAABf60AcwbQXdxSlYOfQrOgQ3mwvz88Yw-DKsGjAHKcY99hmJZ0sm3bBoixOc7QNtZOPxCVjSWRBcovly0Bo7WRrw3Z4DgL2qB-GC5FQoURngeIlI4DUcVqEJq_EF2bixQ6V6r2EJVweMEKVkJvWiAFKpjDKRd6TMMSTZ5qq-yBy0PePkUc</span><br><span class="line">Vary: X-Auth-Token</span><br><span class="line">x-openstack-request-id: req-f876b0e8-a3ba-4e22-b2c1-35fe4a5f9ed5</span><br><span class="line">Content-Length: 7216</span><br><span class="line">Content-Type: application/json</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>从上面可以看到<code>X-Subject-Token</code>，将其存放在USER_TOKEN的环境变量中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export USER_TOKEN=gAAAAABf13NKA1JVOP1pF6OYmtzgaiKXz17svZrXzsEX5_0klzwe9XPkHbxCn39Ri3y_2oglGHEAeWaKH1aycPENWJvPLGA63jk83fMBYwFFTpjvILcbjlKdDdG5hZwLGqdWR9VKYaEp07uIeGDJwQVFbf9tzt9x-uWytJeYyPJlORENLY6_6HQ</span><br></pre></td></tr></table></figure>



<p><strong>OpenStack CLI方式</strong></p>
<p>通过OpenStack CLI，获取token issue</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: ~ # openstack token issue</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Field      | Value                                                                                                                                                                                   |</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| expires    | 2021-02-09T09:25:46+0000                                                                                                                                                                |</span><br><span class="line">| id         | gAAAAABgIQOadJ2W2Ado2IOaLipGG9dSveGEB1Nsm-PjpLia3OtswKRDMyxGs1sJjtlvkycDy31gPB6u2voamNb68wJFNSi37fuoby9X2TwdeKbvxuKOE9_a4HRRdesg6vhD-myvp8cGeZQIsZWyal0I0CF9Q5FcH42CB5O0047lgaNk4pBEJkM |</span><br><span class="line">| project_id | a7663ef36a9244138efff3e374e09640                                                                                                                                                        |</span><br><span class="line">| user_id    | 8cb2659803334f88a7f6de2fe86b52dc                                                                                                                                                        |</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>将上述输出中的 <code>id</code> 对应的值，保存至环境变量USER_TOKEN中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export USER_TOKEN=gAAAAABgIQOadJ2W2Ado2IOaLipGG9dSveGEB1Nsm-PjpLia3OtswKRDMyxGs1sJjtlvkycDy31gPB6u2voamNb68wJFNSi37fuoby9X2TwdeKbvxuKOE9_a4HRRdesg6vhD-myvp8cGeZQIsZWyal0I0CF9Q5FcH42CB5O0047lgaNk4pBEJkM</span><br></pre></td></tr></table></figure>



<h3 id="3-访问OpenStack-API接口"><a href="#3-访问OpenStack-API接口" class="headerlink" title="3. 访问OpenStack API接口"></a>3. 访问OpenStack API接口</h3><p>OpenStack API地址使用<code>openstack endpoint list</code>中的对应地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> List images</span></span><br><span class="line">curl -H &quot;X-Auth-Token:$USER_TOKEN&quot; -H &quot;Content-type: application/json&quot; http://111.111.111.80:9292/v2/images | python -m json.tool</span><br><span class="line"></span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  1633  100  1633    0     0   3019      0 --:--:-- --:--:-- --:--:--  3018</span><br><span class="line">&#123;</span><br><span class="line">    &quot;first&quot;: &quot;/v2/images&quot;,</span><br><span class="line">    &quot;images&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;checksum&quot;: &quot;7734eb3945297adc90ddc6cebe8bb082&quot;,</span><br><span class="line">            &quot;container_format&quot;: &quot;bare&quot;,</span><br><span class="line">            &quot;created_at&quot;: &quot;2020-12-14T14:17:36Z&quot;,</span><br><span class="line">            &quot;disk_format&quot;: &quot;qcow2&quot;,</span><br><span class="line">            &quot;file&quot;: &quot;/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12/file&quot;,</span><br><span class="line">            &quot;id&quot;: &quot;9defe6f1-397d-4d58-a91f-d247fcde5b12&quot;,</span><br><span class="line">            &quot;min_disk&quot;: 0,</span><br><span class="line">            &quot;min_ram&quot;: 0,</span><br><span class="line">            &quot;name&quot;: &quot;demo&quot;,</span><br><span class="line">            &quot;os_hash_algo&quot;: &quot;sha512&quot;,</span><br><span class="line">            &quot;os_hash_value&quot;: &quot;3958def70c03a9734c89de42466f54c7c172e9493d5649ead0b4fee8ba8c4604742f59724a5f74f321be1afcaf85a321d2f2e492539800cff51f1f9684d70c1e&quot;,</span><br><span class="line">            &quot;os_hidden&quot;: false,</span><br><span class="line">            &quot;owner&quot;: &quot;42c2cc9bb3854f0fb63a52973bf4acd8&quot;,</span><br><span class="line">            &quot;protected&quot;: false,</span><br><span class="line">            &quot;schema&quot;: &quot;/v2/schemas/image&quot;,</span><br><span class="line">            &quot;self&quot;: &quot;/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12&quot;,</span><br><span class="line">            &quot;size&quot;: 16344576,</span><br><span class="line">            &quot;status&quot;: &quot;active&quot;,</span><br><span class="line">            &quot;tags&quot;: [],</span><br><span class="line">            &quot;updated_at&quot;: &quot;2020-12-14T14:17:36Z&quot;,</span><br><span class="line">            &quot;virtual_size&quot;: null,</span><br><span class="line">            &quot;visibility&quot;: &quot;shared&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;schema&quot;: &quot;/v2/schemas/images&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Deactivate image</span></span><br><span class="line">curl -H &quot;X-Auth-Token:$USER_TOKEN&quot; -H &quot;Content-type: application/json&quot; -X POST http://111.111.111.80:9292/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12/actions/deactivate | python -m json.tool</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Reactivate image</span></span><br><span class="line">curl -H &quot;X-Auth-Token:$USER_TOKEN&quot; -H &quot;Content-type: application/json&quot; -X POST http://111.111.111.80:9292/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12/actions/reactivate | python -m json.tool</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Upload image</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Content-Length: &lt;截取后镜像大小&gt; </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --data-binary @&lt;截取后镜像文件路径&gt;</span></span><br><span class="line">curl -i -X PUT -H &#x27;Content-Type: application/octet-stream&#x27; \</span><br><span class="line">  -H &#x27;Content-Length: 241238016&#x27; \</span><br><span class="line">  -H &#x27;X-Auth-Token: $USER_TOKEN&#x27; \</span><br><span class="line">  --data-binary @break_point.qcow2 \</span><br><span class="line">  http://111.111.111.80:9292/v2/images/792384b7-851a-4014-b566-b31387087dfc/file</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.jianshu.com/p/a8b6504fc3c6">通过curl访问openstack各服务</a></p>
<p><a href="https://docs.openstack.org/train/api/index.html">OpenStack Train API Reference Documentation</a></p>
<p><a href="https://docs.openstack.org/api-ref/image/v2/?expanded=">OpenStack API Documentation：Image Service API v2 (CURRENT)</a></p>
<p><a href="https://docs.openstack.org/api-ref/compute/?expanded=#delete-server">OpenStack API Documentation：Compute API</a></p>
<p><a href="https://docs.openstack.org/api-ref/block-storage/v3/index.html?expanded=#volume-type-access-types-action-types-os-volume-type-access">OpenStack API Documentation：Block Storage API V3 (CURRENT)</a></p>
]]></content>
      <categories>
        <category>OpenStack开发</category>
      </categories>
      <tags>
        <tag>Train版本</tag>
        <tag>OpenStack开发</tag>
        <tag>Curl</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack部署：HTTPS</title>
    <url>/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p><strong>需求：</strong>需要为openstack所有服务更新为https方式访问</p>
<p><strong>方案：</strong>使用HAProxy进行负载均衡和https证书卸载，通过HAProxy frontend进行https证书验证，验证通过后，转发至backend的后端http server。openstack各服务之间，通过https进行访问，需要配置各个服务的CA证书，同时更新keystone的endpoint</p>
<p><img src="/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/%E8%AF%81%E4%B9%A6%E5%8D%B8%E8%BD%BD.png" alt="证书卸载"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>OpenStack版本：Train</li>
<li>kolla-ansible版本：9.2.0</li>
<li>Docker版本：docker-ce-18.09.6-3.el7.x86_64</li>
<li>OpenStack部署方式：kolla-ansible部署（OpenStack服务运行在Docker上）</li>
<li>OpenStack部署规模：control节点1台，compute节点3台</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="TLS证书"><a href="#TLS证书" class="headerlink" title="TLS证书"></a>TLS证书</h3><p><strong>生成证书</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用kolla生成证书</span></span><br><span class="line">kolla-ansible certificates</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> openssl-kolla.cnf</span></span><br><span class="line">[req]</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">req_extensions = v3_req</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line">countryName = US</span><br><span class="line">stateOrProvinceName = NC</span><br><span class="line">localityName = RTP</span><br><span class="line">organizationalUnitName = kolla</span><br><span class="line">commonName = 111.111.111.80</span><br><span class="line"></span><br><span class="line">[v3_req]</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">IP.1 = 111.111.111.80</span><br></pre></td></tr></table></figure>



<p><strong>分发证书</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># haproxy</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy.pem &#x2F;etc&#x2F;kolla&#x2F;haproxy&#x2F;</span><br><span class="line"></span><br><span class="line"># glance</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;glance-api&#x2F;</span><br><span class="line"></span><br><span class="line"># cinder</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-api&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-backup&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-scheduler&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-volume&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;cinder-backup&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;cinder-backup&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;cinder-volume&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;cinder-volume&#x2F;</span><br><span class="line"></span><br><span class="line"># neutron</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-server&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-openvswitch-agent&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-metadata-agent&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-l3-agent&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-dhcp-agent&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;neutron-openvswitch-agent&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;neutron-openvswitch-agent&#x2F;</span><br><span class="line"></span><br><span class="line"># placement</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;placement-api&#x2F;</span><br><span class="line"></span><br><span class="line"># nova</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-api&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-api-bootstrap&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-cell-bootstrap&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-compute&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-conductor&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-novncproxy&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-scheduler&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;nova-compute&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;nova-compute&#x2F;</span><br><span class="line"></span><br><span class="line"># horizon</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;horizon&#x2F;</span><br></pre></td></tr></table></figure>



<p><strong>admin-openrc.sh</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Clear any old environment that may conflict.</span></span><br><span class="line">for key in $( set | awk &#x27;&#123;FS=&quot;=&quot;&#125;  /^OS_/ &#123;print $1&#125;&#x27; ); do unset $key ; done</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_TENANT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=https://111.111.111.80:35357/v3</span><br><span class="line">export OS_CACERT=/etc/kolla/certificates/haproxy-ca.crt</span><br><span class="line">export OS_INTERFACE=internal</span><br><span class="line">export OS_ENDPOINT_TYPE=internalURL</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_REGION_NAME=RegionOne</span><br><span class="line">export OS_AUTH_PLUGIN=password</span><br></pre></td></tr></table></figure>



<h3 id="Keystone配置证书"><a href="#Keystone配置证书" class="headerlink" title="Keystone配置证书"></a>Keystone配置证书</h3><ol>
<li>使用http协议，先创建 <code>https endpoint</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne identity public https://111.111.111.80:5000</span><br><span class="line">openstack endpoint create --region RegionOne identity internal https://111.111.111.80:5000</span><br><span class="line">openstack endpoint create --region RegionOne identity admin https://111.111.111.80:35357</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>删除http endpoint</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果环境变量OS_INTERFACE使用的是internal，则删除掉internal http的endpoint之后，删除其他endpoint会报错，属于正常现象。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 原因：https尚未在haproxy上配置，请求https端口会报错</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决：需要执行第3步，更新haproxy。配置https证书验证后，可正常执行其余操作</span></span><br><span class="line">root@node01: kolla # openstack endpoint delete 9200b3fcad1e42e8a8d8277e8c7ba71c</span><br><span class="line">Failed to contact the endpoint at https://111.111.111.80:5000 for discovery. Fallback to using that endpoint as the base url.</span><br><span class="line">Failed to contact the endpoint at https://111.111.111.80:5000 for discovery. Fallback to using that endpoint as the base url.</span><br><span class="line">Failed to contact the endpoint at https://111.111.111.80:5000 for discovery. Fallback to using that endpoint as the base url.</span><br><span class="line">Failed to delete endpoint with ID &#x27;9200b3fcad1e42e8a8d8277e8c7ba71c&#x27;: SSL exception connecting to https://111.111.111.80:5000/endpoints?: HTTPSConnectionPool(host=&#x27;111.111.111.80&#x27;, port=5000): Max retries exceeded with url: /endpoints (Caused by SSLError(SSLError(1, u&#x27;[SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:618)&#x27;),))</span><br><span class="line">1 of 1 endpoints failed to delete.</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>更新haproxy中 <code>keystone.cfg</code> 配置，重启haproxy。此时keystone的https端口正常响应</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend keystone_internal_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:5000 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend keystone_internal_back</span><br><span class="line"></span><br><span class="line">backend keystone_internal_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:5000 check inter 2000 rise 2 fall 5</span><br><span class="line"></span><br><span class="line">frontend keystone_admin_front</span><br><span class="line">    mode http</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:35357 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend keystone_admin_back</span><br><span class="line"></span><br><span class="line">backend keystone_admin_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:35357 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>继续删除其余未删除的keystone http endpoint</li>
<li>更新其他组件endpoint协议，切换为https</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">openstack endpoint list | sed &#x27;1,3d&#x27; | sed &#x27;$d&#x27; &gt; /tmp/endpoint</span><br><span class="line"></span><br><span class="line">while read -r line</span><br><span class="line">do</span><br><span class="line">    echo $line</span><br><span class="line">    id=`echo $line | awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">    region=`echo $line | awk &#x27;&#123;print $4&#125;&#x27;`</span><br><span class="line">    service_name=`echo $line | awk &#x27;&#123;print $6&#125;&#x27;`</span><br><span class="line">    service_type=`echo $line | awk &#x27;&#123;print $8&#125;&#x27;`</span><br><span class="line">    interface=`echo $line | awk &#x27;&#123;print $12&#125;&#x27;`</span><br><span class="line">    url=`echo $line | awk &#x27;&#123;print $14&#125;&#x27;`</span><br><span class="line">    </span><br><span class="line">    if [ $(echo $url | awk -F : &#x27;&#123;print $1&#125;&#x27;) == &#x27;http&#x27; ]; then</span><br><span class="line">        openstack endpoint delete $id</span><br><span class="line">        openstack endpoint create --region $region \</span><br><span class="line">            $service_type $interface \</span><br><span class="line">            $(echo $url | sed &#x27;s/http/https/g&#x27;)</span><br><span class="line">    fi</span><br><span class="line">done &lt; /tmp/endpoint</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint list</span><br></pre></td></tr></table></figure>



<h3 id="Glance配置证书"><a href="#Glance配置证书" class="headerlink" title="Glance配置证书"></a>Glance配置证书</h3><ol>
<li>更新haproxy中 <code>glance-api.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend glance_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    timeout client 6h</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:9292 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend glance_api_back</span><br><span class="line"></span><br><span class="line">backend glance_api_back</span><br><span class="line">    mode http</span><br><span class="line">    timeout server 6h</span><br><span class="line">    server node01 111.111.111.81:9292 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新glance服务配置文件：<code>glance-api.conf</code>，重启glance服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = https://111.111.111.80:5000</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack image list</span><br></pre></td></tr></table></figure>



<h3 id="Cinder配置证书"><a href="#Cinder配置证书" class="headerlink" title="Cinder配置证书"></a>Cinder配置证书</h3><ol>
<li>更新haproxy中 <code>cinder-api.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend cinder_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8776 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend cinder_api_back</span><br><span class="line"></span><br><span class="line">backend cinder_api_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8776 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新服务配置文件：<code>cinder.conf</code> 。同步所有节点配置文件，重启cinder相关服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">glance_api_servers = https://111.111.111.80:9292</span><br><span class="line">glance_api_insecure = true</span><br><span class="line">glance_ca_certificates_file = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line"></span><br><span class="line">[nova]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = https://111.111.111.80:5000</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: kolla # openstack volume service list</span><br><span class="line">+------------------+--------------+------+---------+-------+----------------------------+</span><br><span class="line">| Binary           | Host         | Zone | Status  | State | Updated At                 |</span><br><span class="line">+------------------+--------------+------+---------+-------+----------------------------+</span><br><span class="line">| cinder-scheduler | node01       | nova | enabled | up    | 2021-01-18T06:13:08.000000 |</span><br><span class="line">| cinder-volume    | node01@lvm-1 | nova | enabled | up    | 2021-01-18T06:13:09.000000 |</span><br><span class="line">| cinder-volume    | node03@lvm-1 | nova | enabled | up    | 2021-01-18T06:13:11.000000 |</span><br><span class="line">| cinder-volume    | node02@lvm-1 | nova | enabled | up    | 2021-01-18T06:13:11.000000 |</span><br><span class="line">| cinder-backup    | node01       | nova | enabled | up    | 2021-01-18T06:13:17.000000 |</span><br><span class="line">| cinder-backup    | node02       | nova | enabled | up    | 2021-01-18T06:13:10.000000 |</span><br><span class="line">| cinder-backup    | node03       | nova | enabled | up    | 2021-01-18T06:13:10.000000 |</span><br><span class="line">+------------------+--------------+------+---------+-------+----------------------------+</span><br></pre></td></tr></table></figure>



<h3 id="Neutron配置证书"><a href="#Neutron配置证书" class="headerlink" title="Neutron配置证书"></a>Neutron配置证书</h3><ol>
<li>更新haproxy中 <code>neutron-server.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend neutron_server_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option http-tunnel</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:9696 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend neutron_server_back</span><br><span class="line"></span><br><span class="line">backend neutron_server_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:9696 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新neutron服务配置文件：<code>neutron.conf</code> 。同步所有节点配置文件，重启neutron相关服务</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[nova]</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri &#x3D; https:&#x2F;&#x2F;111.111.111.80:5000</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br><span class="line"></span><br><span class="line">[placement]</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: kolla # openstack network agent list</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class="line">| ID                                   | Agent Type         | Host   | Availability Zone | Alive | State | Binary                    |</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class="line">| 07a53564-2518-4550-b222-e1d740e51772 | Open vSwitch agent | node01 | None              | :-)   | UP    | neutron-openvswitch-agent |</span><br><span class="line">| 07c00fbe-9da4-4747-9a60-5af739733eb3 | Open vSwitch agent | node03 | None              | :-)   | UP    | neutron-openvswitch-agent |</span><br><span class="line">| 0fd1203e-1fdc-4261-bf87-0a76b5883f5b | Metadata agent     | node01 | None              | :-)   | UP    | neutron-metadata-agent    |</span><br><span class="line">| 333408d8-3a49-4ae1-8251-e52f2a09da78 | Open vSwitch agent | node02 | None              | :-)   | UP    | neutron-openvswitch-agent |</span><br><span class="line">| 48c2a3d0-5818-4df2-8054-41befae51b44 | L3 agent           | node01 | nova              | :-)   | UP    | neutron-l3-agent          |</span><br><span class="line">| 4df37b6c-2a77-4f1f-8dad-a15e758955e9 | DHCP agent         | node01 | nova              | :-)   | UP    | neutron-dhcp-agent        |</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br></pre></td></tr></table></figure>



<h3 id="Placement配置证书"><a href="#Placement配置证书" class="headerlink" title="Placement配置证书"></a>Placement配置证书</h3><ol>
<li>更新haproxy中 <code>placement-api.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend placement_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8780 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend placement_api_back</span><br><span class="line"></span><br><span class="line">backend placement_api_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8780 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新placement服务配置文件：<code>placement.conf</code> 。同步所有节点配置文件，重启placement相关服务</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri &#x3D; https:&#x2F;&#x2F;111.111.111.80:5000</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置nova后，查看nova_compute日志，是否有如下报错：</span></span><br><span class="line">2021-01-18 02:28:39.196 7 WARNING keystoneauth.discover [req-a08df9fe-e10d-4836-b2cd-3fc922461ea3 - - - - -] Failed to contact the endpoint at https://111.111.111.80:8780 for discovery. Fallback to using that endpoint as the base url.: SSLError: SSL exception connecting to https://111.111.111.80:8780: HTTPSConnectionPool(host=&#x27;111.111.111.80&#x27;, port=8780): Max retries exceeded with url: / (Caused by SSLError(SSLError(&quot;bad handshake: Error([(&#x27;SSL routines&#x27;, &#x27;ssl3_get_record&#x27;, &#x27;wrong version number&#x27;)],)&quot;,),))</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看placement日志，有如下信息，200表示请求正常响应：</span></span><br><span class="line">111.111.111.82 - - [18/Jan/2021:02:30:59 -0500] &quot;GET / HTTP/1.1&quot; 200 136 2191 &quot;-&quot; &quot;nova-compute keystoneauth1/3.17.3 python-requests/2.22.0 CPython/2.7.5&quot;</span><br><span class="line">111.111.111.80 - - [18/Jan/2021:02:31:06 -0500] &quot;GET / HTTP/1.1&quot; 200 136 2366 &quot;-&quot; &quot;nova-compute keystoneauth1/3.17.3 python-requests/2.22.0 CPython/2.7.5&quot;</span><br><span class="line">111.111.111.83 - - [18/Jan/2021:02:32:01 -0500] &quot;GET / HTTP/1.1&quot; 200 136 4198 &quot;-&quot; &quot;nova-compute keystoneauth1/3.17.3 python-requests/2.22.0 CPython/2.7.5&quot;</span><br></pre></td></tr></table></figure>



<h3 id="Nova配置证书"><a href="#Nova配置证书" class="headerlink" title="Nova配置证书"></a>Nova配置证书</h3><ol>
<li>更新haproxy中 <code>nova-api.cfg</code>, <code>nova-novncproxy.cfg</code> 配置，重启haproxy</li>
</ol>
<p><strong>nova-api.cfg</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend nova_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8774 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend nova_api_back</span><br><span class="line"></span><br><span class="line">backend nova_api_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8774 check inter 2000 rise 2 fall 5</span><br><span class="line"></span><br><span class="line">frontend nova_metadata_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8775 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend nova_metadata_back</span><br><span class="line"></span><br><span class="line">backend nova_metadata_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8775 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<p><strong>nova-novncproxy.cfg</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend nova_novncproxy_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:6080 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend nova_novncproxy_back</span><br><span class="line"></span><br><span class="line">backend nova_novncproxy_back</span><br><span class="line">    mode http</span><br><span class="line">    timeout tunnel 1h</span><br><span class="line">    server node01 111.111.111.81:6080 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新nova服务配置文件：<code>nova.conf</code> 。同步所有节点配置文件，重启nova相关服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[glance]</span><br><span class="line">api_servers = https://111.111.111.80:9292</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[cinder]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[neutron]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = https://111.111.111.80:5000</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[placement]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: kolla # openstack compute service list</span><br><span class="line">+----+----------------+--------+----------+---------+-------+----------------------------+</span><br><span class="line">| ID | Binary         | Host   | Zone     | Status  | State | Updated At                 |</span><br><span class="line">+----+----------------+--------+----------+---------+-------+----------------------------+</span><br><span class="line">| 10 | nova-scheduler | node01 | internal | enabled | up    | 2021-01-18T17:37:46.000000 |</span><br><span class="line">|  1 | nova-conductor | node01 | internal | enabled | up    | 2021-01-18T17:37:44.000000 |</span><br><span class="line">|  6 | nova-compute   | node01 | nova     | enabled | up    | 2021-01-18T17:37:52.000000 |</span><br><span class="line">|  7 | nova-compute   | node02 | nova     | enabled | up    | 2021-01-18T17:37:37.000000 |</span><br><span class="line">|  8 | nova-compute   | node03 | nova     | enabled | up    | 2021-01-18T17:37:51.000000 |</span><br><span class="line">+----+----------------+--------+----------+---------+-------+----------------------------+</span><br><span class="line">root@node01: kolla # openstack server create --image cirros --flavor m1.tiny --key-name mykey --network demo-net --boot-from-volume 1 demo</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>常见问题</li>
</ol>
<blockquote>
<p><strong>问题1：</strong>HostMappingNotFound: Host ‘node01’ is not mapped to any cell</p>
<p><strong>解决：</strong>nova_api pod中执行如下命令，重新发现node01<br>nova-manage cell_v2 discover_hosts –verbos</p>
</blockquote>
<h3 id="Horizon配置证书"><a href="#Horizon配置证书" class="headerlink" title="Horizon配置证书"></a>Horizon配置证书</h3><ol>
<li>更新haproxy中 <code>nova-api.cfg</code>, <code>nova-novncproxy.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend horizon_redirect_front</span><br><span class="line">    mode http</span><br><span class="line">    bind 111.111.111.80:80</span><br><span class="line">    redirect scheme https code 301 if !&#123; ssl_fc &#125;</span><br><span class="line"></span><br><span class="line">frontend horizon_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:443 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend horizon_back</span><br><span class="line"></span><br><span class="line">backend horizon_back</span><br><span class="line">    mode http</span><br><span class="line">    balance source</span><br><span class="line">    server node01 111.111.111.81:80 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更改horizon服务的配置文件：<code>local_settings</code>， 重启horizon、memcached服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Set SSL proxy settings:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Pass this header from the proxy after terminating the SSL,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and don<span class="string">&#x27;t forget to strip it from the client&#x27;</span>s request.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.djangoproject.com/en/dev/ref/settings/<span class="comment">#secure-proxy-ssl-header</span></span></span><br><span class="line">SECURE_PROXY_SSL_HEADER = (&#x27;HTTP_X_FORWARDED_PROTO&#x27;, &#x27;https&#x27;)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If Horizon is being served through SSL, <span class="keyword">then</span> uncomment the following two</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> settings to better secure the cookies from security exploits</span></span><br><span class="line">CSRF_COOKIE_SECURE = True</span><br><span class="line">SESSION_COOKIE_SECURE = True</span><br><span class="line"></span><br><span class="line">OPENSTACK_KEYSTONE_URL = &quot;https://111.111.111.80:5000/v3&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Disable SSL certificate checks <span class="keyword">in</span> the OpenStack clients (useful <span class="keyword">for</span> self-signed certificates).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自签名证书，需要设置为True，不验证SSL</span></span><br><span class="line">OPENSTACK_SSL_NO_VERIFY = True</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> When <span class="built_in">unset</span> or <span class="built_in">set</span> to None the default CA certificate on the system is used <span class="keyword">for</span> SSL verification.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> When <span class="built_in">set</span> with the path to a custom CA certificate file, this overrides use of the default system CA certificate. This custom certificate is used to verify all connections to openstack services when making API calls.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自签名证书，不需要设置此项</span></span><br><span class="line">OPENSTACK_SSL_CACERT = &#x27;/var/lib/kolla/config_files/haproxy-ca.crt&#x27;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 访问vip:80端口，自动跳转至https 443端口</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> horizon可正常登录，界面功能正常</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>常见问题</li>
</ol>
<blockquote>
<p><strong>问题1</strong>：horizon登录后，界面显示验证错误，后端haproxy出现如下报错：<br>{“Payload”:”Jan 19 11:01:56 haproxy[33]: 111.111.111.80:60552 [19/Jan/2021:11:01:56.143] <strong>keystone_internal_front/1: SSL handshake failure</strong>“,”log_level”:”info”,”Hostname”:”node01”,”programname”:”haproxy”}</p>
<p>期望结果：{“Payload”:”Jan 19 03:06:58 haproxy[32]: 111.111.111.80:53822 [19/Jan/2021:03:06:58.236] keystone_internal_front~ <strong>keystone_internal_back/node01</strong> 3/0/0/10/13 300 538 – —- 64/1/0/1/0 0/0 &quot;GET / HTTP/1.1&quot;“,”log_level”:”info”,”Hostname”:”node01”,”programname”:”haproxy”}</p>
<p><strong>原因：</strong>horizon请求后端接口时，使用的证书验证存在异常，未通过keystone_internal_front的SSL验证，无法转到keystone后端server服务</p>
<p><strong>解决：</strong>自签名证书，SSL验证存在异常。需要Disable SSL certificate checks in the OpenStack clients。设置 <code>local_settings</code> 配置中的 <code>OPENSTACK_SSL_NO_VERIFY = True</code></p>
<p><strong>问题2：</strong>界面显示：无法与keystone服务终端建立连接。</p>
<p><strong>解决：</strong>检查 <code>local_settings</code> 配置中的 <code>OPENSTACK_KEYSTONE_URL</code> 是否切换为https</p>
</blockquote>
<h3 id="参考脚本"><a href="#参考脚本" class="headerlink" title="参考脚本"></a>参考脚本</h3><h4 id="单节点更新配置文件"><a href="#单节点更新配置文件" class="headerlink" title="单节点更新配置文件"></a>单节点更新配置文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">module=&#x27;cinder&#x27;</span><br><span class="line">module_config=&#x27;cinder-api/cinder.conf&#x27;</span><br><span class="line">config_root_dir=&#x27;/etc/kolla&#x27;</span><br><span class="line"></span><br><span class="line">cd $config_root_dir</span><br><span class="line">dir_lists=`ls | grep $module`</span><br><span class="line"></span><br><span class="line">for dir in $dir_lists</span><br><span class="line">do</span><br><span class="line">	if [ $dir != $(echo $module_config | awk -F &#x27;/&#x27; &#x27;&#123;print $1&#125;&#x27;) ]; then</span><br><span class="line">		\cp $module_config $dir</span><br><span class="line">	fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.openstack.org/horizon/latest/configuration/settings.html#openstack-ssl-cacert">OpenStack Configuration Guide: horizon 19.0.1.dev25 - Settings Reference</a></p>
<p><a href="https://docs.openstack.org/security-guide/secure-communication.html">OpenStack Documentation: Secure communication</a></p>
<p><a href="https://docs.openstack.org/kolla-ansible/train/admin/advanced-configuration.html#tls-configuration">OpenStack Documentation: Kolla-ansible 9.2.1.dev132 - Advanced Configuration</a></p>
<p><a href="https://docs.openstack.org/kolla-ansible/latest/admin/tls.html">OpenStack Documentation: Kolla-ansible 11.1.0 dev101 - TLS</a></p>
<p><a href="https://docs.djangoproject.com/en/3.1/">Django Documentation</a></p>
<p><a href="https://blog.csdn.net/zhongbeida_xue/article/details/101017148">配置OpenStack各服务组件使用SSL通信（HTTPS）</a></p>
<p><a href="https://blog.csdn.net/liu_baoqing/article/details/77412135">kolla部署的openstack配置https</a></p>
<p><a href="https://gist.github.com/blomquisg/103e1c898a3b6085986e">Setting up HAProxy for OpenStack SSL</a></p>
<p><a href="https://www.cnblogs.com/paul8339/p/8042776.html">haproxy代理https配置方法</a></p>
<p><a href>HAProxy Configuration Manual</a></p>
<p><a href="http://www.ttlsa.com/linux/haproxy-study-tutorial/">HAProxy用法详解</a></p>
<p><a href="https://support.ptc.com/help/thingworx/platform/r9/zh_CN/index.html#page/ThingWorx%2FHelp%2FThingWorxHighAvailability%2FHAProxyExample.html%23">HAProxy 示例</a></p>
<p><a href="https://www.cnblogs.com/reblue520/p/6841237.html">haproxy配置基于ssl证书的https负载均衡</a></p>
<p><a href="https://www.linuxidc.com/Linux/2016-04/130692.htm">在HAProxy中使用SSL证书进行连接</a></p>
<p><a href="https://segmentfault.com/a/1190000009002353">SSL/TLS及证书概述</a></p>
<p><a href="https://blog.csdn.net/bbwangj/article/details/82503675">使用 openssl 生成证书（含openssl详解）</a></p>
<p><a href="https://blog.csdn.net/zuoyigehaizei/article/details/93486460">https安全认证流程简介</a></p>
]]></content>
      <categories>
        <category>OpenStack部署</category>
      </categories>
      <tags>
        <tag>HTTPS</tag>
        <tag>OpenStack部署</tag>
      </tags>
  </entry>
</search>
