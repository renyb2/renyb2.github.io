<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Algorithm：Dynamic Programming</title>
    <url>/2020/08/27/Algorithm%EF%BC%9ADynamic-Programming/</url>
    <content><![CDATA[<h2 id="Dynamic-Programming（动态规划）"><a href="#Dynamic-Programming（动态规划）" class="headerlink" title="Dynamic Programming（动态规划）"></a>Dynamic Programming（动态规划）</h2><p>解决重复子问题</p>
<h3 id="问题1：0-1背包问题"><a href="#问题1：0-1背包问题" class="headerlink" title="问题1：0/1背包问题"></a>问题1：0/1背包问题</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>有N件物品和一个容量为V的背包。第i件物品的重量是w[i]，价值是v[i]。求解将哪些物品装入背包可使这些物品的重量总和不超过背包容量，且价值总和最大</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">N &#x3D; 5</span><br><span class="line">V &#x3D; 10</span><br><span class="line">w &#x3D; [2, 2, 6, 5, 4]</span><br><span class="line">v &#x3D; [6, 3, 5, 4, 6]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="问题2：斐波那契数列"><a href="#问题2：斐波那契数列" class="headerlink" title="问题2：斐波那契数列"></a>问题2：斐波那契数列</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><p>求第n个斐波那契数</p>
<h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/31</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec_opt</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> <span class="keyword">if</span> n &lt;= <span class="number">2</span> <span class="keyword">else</span> rec_opt(n<span class="number">-1</span>) + rec_opt(n<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 非递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp_opt</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        opt = np.zeros(n, dtype=int)</span><br><span class="line">        opt[<span class="number">0</span>], opt[<span class="number">1</span>] = <span class="number">1</span>, <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, n):</span><br><span class="line">            opt[i] = opt[i<span class="number">-1</span>] + opt[i<span class="number">-2</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> opt[n<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">        print(<span class="string">&#x27;=====第%s个数=====&#x27;</span> % (i))</span><br><span class="line">        print(<span class="string">&#x27;递归结果： %s&#x27;</span> % (rec_opt(i)))</span><br><span class="line">        print(<span class="string">&#x27;非递归结果： %s&#x27;</span> % (dp_opt(i)))</span><br><span class="line">        print(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>



<h3 id="问题3：求最大和"><a href="#问题3：求最大和" class="headerlink" title="问题3：求最大和"></a>问题3：求最大和</h3><h4 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h4><p>Array内，隔一个选一个，求最大和</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arr &#x3D; [1, 4, 6, 1, 9, 2, 2, 3]</span><br></pre></td></tr></table></figure>



<h4 id="python-1"><a href="#python-1" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/31</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec_opt</span>(<span class="params">arr, i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> max(arr[<span class="number">0</span>], arr[<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">1</span>:</span><br><span class="line">        A = rec_opt(arr, i<span class="number">-1</span>)</span><br><span class="line">        B = rec_opt(arr, i<span class="number">-2</span>) + arr[i]</span><br><span class="line">        <span class="keyword">return</span> max(A, B)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 非递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp_opt</span>(<span class="params">arr, i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> max(arr[<span class="number">0</span>], arr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">1</span>:</span><br><span class="line">        opt = np.zeros(i+<span class="number">1</span>, dtype=int)</span><br><span class="line">        opt[<span class="number">0</span>] = arr[<span class="number">0</span>]</span><br><span class="line">        opt[<span class="number">1</span>] = max(arr[<span class="number">0</span>], arr[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>, i+<span class="number">1</span>):</span><br><span class="line">            A = opt[n<span class="number">-1</span>]</span><br><span class="line">            B = opt[n<span class="number">-2</span>] + arr[n]</span><br><span class="line">            opt[n] = max(A, B)</span><br><span class="line">        <span class="keyword">return</span> opt[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">    print(rec_opt(arr, <span class="number">7</span>))</span><br><span class="line">    print(dp_opt(arr, <span class="number">7</span>))</span><br></pre></td></tr></table></figure>



<h3 id="问题4：是否可组成指定和"><a href="#问题4：是否可组成指定和" class="headerlink" title="问题4：是否可组成指定和"></a>问题4：是否可组成指定和</h3><h4 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h4><p>数组Array（全是正整数），是否可以组成指定和S</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arr &#x3D; [3, 34, 4, 12, 5, 2]</span><br><span class="line">S &#x3D; 9</span><br></pre></td></tr></table></figure>



<h4 id="python-2"><a href="#python-2" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/31</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 递归</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rec_subset</span>(<span class="params">arr, i, S</span>):</span></span><br><span class="line">    <span class="keyword">if</span> S == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> arr[<span class="number">0</span>] == S</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 剪枝</span></span><br><span class="line">    <span class="keyword">elif</span> arr[i] &gt; S:</span><br><span class="line">        <span class="keyword">return</span> rec_subset(arr, i<span class="number">-1</span>, S)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        A = rec_subset(arr, i<span class="number">-1</span>, S-arr[i])</span><br><span class="line">        B = rec_subset(arr, i<span class="number">-1</span>, S)</span><br><span class="line">        <span class="keyword">return</span> A <span class="keyword">or</span> B</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非递归</span></span><br><span class="line"><span class="comment">## 动态规划表：构造一个len(arr)行，S+1列的二维数组</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp_subset</span>(<span class="params">arr, S</span>):</span></span><br><span class="line">    subset = np.zeros((len(arr), S + <span class="number">1</span>), dtype=bool)</span><br><span class="line">    subset[:, <span class="number">0</span>] = <span class="literal">True</span></span><br><span class="line">    subset[<span class="number">0</span>, :] = <span class="literal">False</span></span><br><span class="line">    subset[<span class="number">0</span>, arr[<span class="number">0</span>]] = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(arr)):</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> range(<span class="number">1</span>, S + <span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 剪枝</span></span><br><span class="line">            <span class="keyword">if</span> arr[i] &gt; s:</span><br><span class="line">                subset[i, s] = subset[i<span class="number">-1</span>, s]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                A = subset[i<span class="number">-1</span>, s-arr[i]]</span><br><span class="line">                B = subset[i<span class="number">-1</span>, s]</span><br><span class="line">                subset[i, s] = A <span class="keyword">or</span> B</span><br><span class="line">    <span class="keyword">return</span> subset[<span class="number">-1</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">3</span>, <span class="number">34</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">5</span>, <span class="number">2</span>]</span><br><span class="line">    print(dp_subset(arr, <span class="number">9</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">10</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">11</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">12</span>))</span><br><span class="line">    print(dp_subset(arr, <span class="number">13</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Algorithm：Dijkstra</title>
    <url>/2020/08/27/Algorithm%EF%BC%9ADijkstra/</url>
    <content><![CDATA[<h2 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h2><h3 id="问题1：最短路径"><a href="#问题1：最短路径" class="headerlink" title="问题1：最短路径"></a>问题1：最短路径</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><img src="/2020/08/27/Algorithm%EF%BC%9ADijkstra/Dijkstra-%E9%97%AE%E9%A2%981.png" alt="image-20200731221210621"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 代码构造上图</span><br><span class="line"></span><br><span class="line">graph &#x3D; &#123;</span><br><span class="line">    &quot;A&quot;: &#123;&quot;B&quot;: 5, &quot;C&quot;: 1&#125;,</span><br><span class="line">    &quot;B&quot;: &#123;&quot;A&quot;: 5, &quot;C&quot;: 2, &quot;D&quot;: 1&#125;,</span><br><span class="line">    &quot;C&quot;: &#123;&quot;A&quot;: 1, &quot;B&quot;: 2, &quot;D&quot;: 4, &quot;E&quot;: 8&#125;,</span><br><span class="line">    &quot;D&quot;: &#123;&quot;B&quot;: 1, &quot;C&quot;: 4, &quot;E&quot;: 3, &quot;F&quot;: 6&#125;,</span><br><span class="line">    &quot;E&quot;: &#123;&quot;C&quot;: 8, &quot;D&quot;: 3&#125;,</span><br><span class="line">    &quot;F&quot;: &#123;&quot;D&quot;: 6&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/07/27</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : dijkstra.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化各点距离值，起始点距离为0，其余点距离为正无穷大</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_distance</span>(<span class="params">graph, start</span>):</span></span><br><span class="line">    distance = &#123;start: <span class="number">0</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> vertex <span class="keyword">in</span> graph:</span><br><span class="line">        <span class="keyword">if</span> vertex != start:</span><br><span class="line">            distance[vertex] = math.inf</span><br><span class="line">    <span class="keyword">return</span> distance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最短路径</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dijkstra</span>(<span class="params">graph, start, end</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 记录未走过的点，使用优先队列维护，权重为起始点至当前节点的最短距离</span></span><br><span class="line">    pqueue = []</span><br><span class="line">    heapq.heappush(pqueue, (<span class="number">0</span>, start))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 记录已经被走过的点，set()用于去重</span></span><br><span class="line">    seen = set()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 记录当前节点的父节点，即从哪来的</span></span><br><span class="line">    parent = &#123;start: <span class="literal">None</span>&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 记录从起始点到各节点的最短距离</span></span><br><span class="line">    distance = init_distance(graph, start)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 寻找起始点至所有点的最短路径</span></span><br><span class="line">    <span class="keyword">while</span> pqueue:</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 从起始点开始走。队列非空时，拿出队列中权重最小的点</span></span><br><span class="line">        pair = heapq.heappop(pqueue)</span><br><span class="line">        dist = pair[<span class="number">0</span>]</span><br><span class="line">        vertex = pair[<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 从队列中拿出的点，即认为被看见</span></span><br><span class="line">        seen.add(vertex)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 从图中查看当前父节点的所有相邻子节点</span></span><br><span class="line">        nodes = graph[vertex].keys()</span><br><span class="line">        <span class="keyword">for</span> node <span class="keyword">in</span> nodes:</span><br><span class="line">            <span class="keyword">if</span> node <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">                <span class="comment"># 如果父节点到子节点的距离小于记录中的距离，则把子节点加入队列中，并更新子节点的距离值和子节点的父节点信息</span></span><br><span class="line">                <span class="keyword">if</span> dist + graph[vertex][node] &lt; distance[node]:</span><br><span class="line">                    heapq.heappush(pqueue, (dist + graph[vertex][node], node))</span><br><span class="line">                    distance[node] = dist + graph[vertex][node]</span><br><span class="line">                    parent[node] = vertex</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 回溯最短路径</span></span><br><span class="line">    path = [end]</span><br><span class="line">    <span class="keyword">while</span> parent[path[<span class="number">0</span>]]:</span><br><span class="line">        path.insert(<span class="number">0</span>, parent[path[<span class="number">0</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> path, distance[end]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    graph = &#123;</span><br><span class="line">	    <span class="string">&quot;A&quot;</span>: &#123;<span class="string">&quot;B&quot;</span>: <span class="number">5</span>, <span class="string">&quot;C&quot;</span>: <span class="number">1</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;B&quot;</span>: &#123;<span class="string">&quot;A&quot;</span>: <span class="number">5</span>, <span class="string">&quot;C&quot;</span>: <span class="number">2</span>, <span class="string">&quot;D&quot;</span>: <span class="number">1</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;C&quot;</span>: &#123;<span class="string">&quot;A&quot;</span>: <span class="number">1</span>, <span class="string">&quot;B&quot;</span>: <span class="number">2</span>, <span class="string">&quot;D&quot;</span>: <span class="number">4</span>, <span class="string">&quot;E&quot;</span>: <span class="number">8</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;D&quot;</span>: &#123;<span class="string">&quot;B&quot;</span>: <span class="number">1</span>, <span class="string">&quot;C&quot;</span>: <span class="number">4</span>, <span class="string">&quot;E&quot;</span>: <span class="number">3</span>, <span class="string">&quot;F&quot;</span>: <span class="number">6</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;E&quot;</span>: &#123;<span class="string">&quot;C&quot;</span>: <span class="number">8</span>, <span class="string">&quot;D&quot;</span>: <span class="number">3</span>&#125;,</span><br><span class="line">	    <span class="string">&quot;F&quot;</span>: &#123;<span class="string">&quot;D&quot;</span>: <span class="number">6</span>&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    path, distance = dijkstra(graph, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;F&quot;</span>)</span><br><span class="line">    print(path)</span><br><span class="line">    print(distance)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Ceph使用：通用手册</title>
    <url>/2021/07/15/Ceph%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="Ceph管理"><a href="#Ceph管理" class="headerlink" title="Ceph管理"></a>Ceph管理</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph状态</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     e3f8d4d7-6888-4f67-b740-5a80da34b3dc</span><br><span class="line">    health: HEALTH_WARN</span><br><span class="line">            Degraded data redundancy: 988/11616 objects degraded (8.506%), 142 pgs degraded, 192 pgs undersized</span><br><span class="line">            application not enabled on 2 pool(s)</span><br><span class="line"></span><br><span class="line">  services:</span><br><span class="line">    mon: 1 daemons, quorum a (age 7d)</span><br><span class="line">    mgr: a(active, since 20h)</span><br><span class="line">    mds: myfs:1 &#123;0=myfs-b=up:active&#125; 1 up:standby-replay</span><br><span class="line">    osd: 2 osds: 2 up (since 25h), 2 in (since 7d); 1 remapped pgs</span><br><span class="line">    rgw: 1 daemon active (ceph-rgw-7f89b49bb8-ksdhr)</span><br><span class="line"></span><br><span class="line">  task status:</span><br><span class="line">    scrub status:</span><br><span class="line">        mds.myfs-a: idle</span><br><span class="line">        mds.myfs-b: idle</span><br><span class="line"></span><br><span class="line">  data:</span><br><span class="line">    pools:   11 pools, 480 pgs</span><br><span class="line">    objects: 6.14k objects, 35 GiB</span><br><span class="line">    usage:   70 GiB used, 30 GiB / 100 GiB avail</span><br><span class="line">    pgs:     988/11616 objects degraded (8.506%)</span><br><span class="line">             16/11616 objects misplaced (0.138%)</span><br><span class="line">             288 active+clean</span><br><span class="line">             142 active+undersized+degraded</span><br><span class="line">             49  active+undersized</span><br><span class="line">             1   active+undersized+remapped</span><br><span class="line"></span><br><span class="line">  io:</span><br><span class="line">    client:   1.2 KiB/s rd, 171 KiB/s wr, 2 op/s rd, 17 op/s wr</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph使用率</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# ceph df</span><br><span class="line">RAW STORAGE:</span><br><span class="line">    CLASS     SIZE        AVAIL      USED       RAW USED     %RAW USED</span><br><span class="line">    hdd       100 GiB     30 GiB     68 GiB       70 GiB         69.83</span><br><span class="line">    TOTAL     100 GiB     30 GiB     68 GiB       70 GiB         69.83</span><br><span class="line"></span><br><span class="line">POOLS:</span><br><span class="line">    POOL                    ID     STORED      OBJECTS     USED        %USED     MAX AVAIL</span><br><span class="line">    myfs-metadata            1     2.5 MiB          25       3 MiB      0.01        25 GiB</span><br><span class="line">    kube                     2     852 MiB         297     923 MiB      3.47        24 GiB</span><br><span class="line">    myfs-data0               3     3.9 MiB         180      13 MiB      0.05        25 GiB</span><br><span class="line">    cinder-volumes           4      70 MiB         151     146 MiB      0.56        13 GiB</span><br><span class="line">    cinder.backups           5         0 B           0         0 B         0        13 GiB</span><br><span class="line">    cinder.volumes           6         0 B           0         0 B         0        25 GiB</span><br><span class="line">    .rgw.root                7     1.2 KiB           4     256 KiB         0        25 GiB</span><br><span class="line">    default.rgw.control      8         0 B           8         0 B         0        25 GiB</span><br><span class="line">    default.rgw.meta         9         0 B           0         0 B         0        25 GiB</span><br><span class="line">    default.rgw.log         10         0 B       1.16k         0 B         0        25 GiB</span><br><span class="line">    images                  11      33 GiB       4.31k      67 GiB     72.66        13 GiB</span><br></pre></td></tr></table></figure>



<h3 id="RBD管理"><a href="#RBD管理" class="headerlink" title="RBD管理"></a>RBD管理</h3><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看指定存储池内rbd list</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# rbd ls images</span><br><span class="line">00cbc7af-c8ab-45db-9b81-8674b536b695</span><br><span class="line">15bb8b35-dedd-4ba6-88e1-4d5d6dc8a65b</span><br><span class="line">18f09bec-b9f9-4a63-a2b4-5ab3ceed19f7</span><br><span class="line">32581d85-140a-432f-b555-0c23ca00779c</span><br><span class="line">3e840866-668e-4527-9916-303b66e7f82b</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看指定rbd信息</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# rbd info images/32581d85-140a-432f-b555-0c23ca00779c</span><br><span class="line">rbd image &#x27;32581d85-140a-432f-b555-0c23ca00779c&#x27;:</span><br><span class="line">        size 819 MiB in 103 objects</span><br><span class="line">        order 23 (8 MiB objects)</span><br><span class="line">        snapshot_count: 1</span><br><span class="line">        id: 11470c8980729e</span><br><span class="line">        block_name_prefix: rbd_data.11470c8980729e</span><br><span class="line">        format: 2</span><br><span class="line">        features: layering</span><br><span class="line">        op_features:</span><br><span class="line">        flags:</span><br><span class="line">        create_timestamp: Thu Jul 15 01:08:31 2021</span><br><span class="line">        access_timestamp: Thu Jul 15 01:09:34 2021</span><br><span class="line">        modify_timestamp: Thu Jul 15 01:08:31 2021</span><br></pre></td></tr></table></figure>


<h4 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看指定rbd的快照信息</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# rbd snap ls images/32581d85-140a-432f-b555-0c23ca00779c</span><br><span class="line">SNAPID NAME     SIZE    PROTECTED TIMESTAMP</span><br><span class="line">    54 snap     819 MiB yes       Thu Jul 15 02:17:57 2021</span><br><span class="line">    55 testsnap 819 MiB           Thu Jul 15 02:38:14 2021</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建快照</span></span><br><span class="line">rbd snap add &lt; pool name &gt;/&lt; rbd name &gt;@&lt; snap name &gt;</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>Ceph</category>
      </categories>
      <tags>
        <tag>Ceph</tag>
        <tag>通用手册</tag>
      </tags>
  </entry>
  <entry>
    <title>Algorithm：Sort</title>
    <url>/2020/08/27/Algorithm%EF%BC%9ASort/</url>
    <content><![CDATA[<h2 id="Sort"><a href="#Sort" class="headerlink" title="Sort"></a>Sort</h2><h3 id="算法1：冒泡排序"><a href="#算法1：冒泡排序" class="headerlink" title="算法1：冒泡排序"></a>算法1：冒泡排序</h3><h4 id="思想"><a href="#思想" class="headerlink" title="思想"></a>思想</h4><blockquote>
<ol>
<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>
<li>对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li>
<li>针对所有的元素重复以上的步骤，除了最后一个。</li>
<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较 [1]。</li>
</ol>
<p>参考资料：</p>
<ol>
<li>吕新平、刘宏铭．二级公共基础知识实战训练教程：西安交通大学出版社，2006.02：30页</li>
</ol>
</blockquote>
<a id="more"></a>

<h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># !&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2020&#x2F;08&#x2F;01</span><br><span class="line"># @Author  : renyb</span><br><span class="line"># @File    : sort.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def bubble_sort(arr):</span><br><span class="line"></span><br><span class="line">    # 这个循环负责设置冒泡排序进行的次数</span><br><span class="line">    for i in range(len(arr) - 1):</span><br><span class="line"></span><br><span class="line">        # j为列表下标</span><br><span class="line">        for j in range(len(arr) - i - 1):  </span><br><span class="line">            if arr[j] &gt; arr[j + 1]:</span><br><span class="line">                arr[j], arr[j + 1] &#x3D; arr[j + 1], arr[j]</span><br><span class="line">    return arr</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    array &#x3D; [2,3,5,7,1,4,6,15,5,2,7,9,10,15,9,17,12]</span><br><span class="line">    print(bubble_sort(array))</span><br></pre></td></tr></table></figure>



<h3 id="算法2：选择排序"><a href="#算法2：选择排序" class="headerlink" title="算法2：选择排序"></a>算法2：选择排序</h3><h4 id="思想-1"><a href="#思想-1" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕 [1]。</p>
<p>参考文档：</p>
<ol>
<li><p>Ajay Kumar．Data Structure for C Programming：Firewall Media，2004：268-270</p>
</li>
<li><p>Hosam M.Mahmoud．Sorting: A Distribution Theory：John Wiley&amp;Sons, Inc，2000：139-142</p>
</li>
</ol>
</blockquote>
<h4 id="python-1"><a href="#python-1" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从数组的前n个中寻找最大值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_max_index</span>(<span class="params">arr, n</span>):</span></span><br><span class="line">    max_index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">        <span class="keyword">if</span> arr[i] &gt; arr[max_index]:</span><br><span class="line">            max_index = i</span><br><span class="line">    <span class="keyword">return</span> max_index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line">    i = len(arr)</span><br><span class="line">    <span class="keyword">while</span> i &gt; <span class="number">1</span>:</span><br><span class="line">        max_index = find_max_index(arr, i)</span><br><span class="line">        arr[i<span class="number">-1</span>], arr[max_index] = arr[max_index], arr[i<span class="number">-1</span>]</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(select_sort(arr))</span><br><span class="line">    </span><br></pre></td></tr></table></figure>



<h3 id="算法3：插入排序"><a href="#算法3：插入排序" class="headerlink" title="算法3：插入排序"></a>算法3：插入排序</h3><h4 id="思想-2"><a href="#思想-2" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>插入排序的工作方式像许多人排序一手扑克牌。开始时，我们的左手为空并且桌子上的牌面向下。然后，我们每次从桌子上拿走一张牌并将它插入左手中正确的位置。为了找到一张牌的正确位置，我们从右到左将它与已在手中的每张牌进行比较。拿在左手上的牌总是排序好的，原来这些牌是桌子上牌堆中顶部的牌 [1]。</p>
<p>参考文档：</p>
<ol>
<li>（美）科尔曼等著；殷建平等译．算法导论．北京：机械工业出版社，2013：17-29</li>
</ol>
</blockquote>
<h4 id="python-2"><a href="#python-2" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将索引为i的数插入数组前半部分</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert</span>(<span class="params">arr, i</span>):</span></span><br><span class="line">    temp = arr[i]</span><br><span class="line">    <span class="keyword">while</span> arr[i<span class="number">-1</span>] &gt; temp:</span><br><span class="line">        arr[i] = arr[i<span class="number">-1</span>]</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 防越界</span></span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    arr[i] = temp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(arr)):</span><br><span class="line">        insert(arr, i)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(insert_sort(arr))</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="算法4：快速排序"><a href="#算法4：快速排序" class="headerlink" title="算法4：快速排序"></a>算法4：快速排序</h3><h4 id="思想-3"><a href="#思想-3" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>设要排序的数组是A[0]……A[N-1]，首先任意选取一个数据（通常选用数组的第一个数）作为关键数据，然后将所有比它小的数都放到它左边，所有比它大的数都放到它右边，这个过程称为一趟快速排序。值得注意的是，快速排序不是一种稳定的排序算法，也就是说，多个相同的值的相对位置也许会在算法结束时产生变动 [1]。</p>
<p><img src="/2020/08/27/Algorithm%EF%BC%9ASort/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.gif" alt="快速排序"></p>
<p>一趟快速排序的算法是：</p>
<p>1）设置两个变量i、j，排序开始的时候：i=0，j=N-1；</p>
<p>2）以第一个数组元素作为关键数据，赋值给<strong>key</strong>，即<strong>key</strong>=A[0]；</p>
<p>3）从j开始向前搜索，即由后开始向前搜索(j–)，找到第一个小于<strong>key</strong>的值A[j]，将A[j]和A[i]的值交换；</p>
<p>4）从i开始向后搜索，即由前开始向后搜索(i++)，找到第一个大于<strong>key</strong>的A[i]，将A[i]和A[j]的值交换；</p>
<p>5）重复第3、4步，直到i=j； (3,4步中，没找到符合条件的值，即3中A[j]不小于<strong>key</strong>,4中A[i]不大于<strong>key</strong>的时候改变j、i的值，使得j=j-1，i=i+1，直至找到为止。找到符合条件的值，进行交换的时候i， j指针位置不变。另外，i==j这一过程一定正好是i+或j-完成的时候，此时令循环结束）。</p>
<p>参考资料：</p>
<ol>
<li>陈雄达，关晓飞，殷俊锋，张华隆编．数学实验：同济大学出版社，2016.08：第135页</li>
</ol>
</blockquote>
<h4 id="python-3"><a href="#python-3" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/01</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : sort.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归 + 分而治之</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 递归入口及出口</span></span><br><span class="line">    <span class="keyword">if</span> len(arr) &gt;= <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 选取基准值，也可以选取最后一个元素</span></span><br><span class="line">        mid = arr[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义基准值左右两侧的列表</span></span><br><span class="line">        left, right = [], []</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 从原始数组中移除基准值</span></span><br><span class="line">        arr.remove(mid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> arr:</span><br><span class="line">            <span class="keyword">if</span> num &gt;= mid:</span><br><span class="line">                right.append(num)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left.append(num)</span><br><span class="line">        <span class="keyword">return</span> quick_sort(left) + [mid] + quick_sort(right)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    array = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(quick_sort(array))</span><br></pre></td></tr></table></figure>



<h3 id="算法5：堆排序"><a href="#算法5：堆排序" class="headerlink" title="算法5：堆排序"></a>算法5：堆排序</h3><h4 id="思想-4"><a href="#思想-4" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>在堆的数据结构中，堆中的最大值总是位于根节点（在优先队列中使用堆的话堆中的最小值位于根节点）。堆中定义以下几种操作 [1]：</p>
<ul>
<li>最大堆调整（Max Heapify）：将堆的末端子节点作调整，使得子节点永远小于父节点</li>
<li>创建最大堆（Build Max Heap）：将堆中的所有数据重新排序</li>
<li>堆排序（HeapSort）：移除位在第一个数据的根节点，并做最大堆调整的递归运算</li>
</ul>
<p><img src="/2020/08/27/Algorithm%EF%BC%9ASort/%E5%A0%86%E6%8E%92%E5%BA%8F.gif" alt="堆排序"></p>
<p>参考资料：</p>
<ol>
<li>Floyd, Robert W. (1964), “Algorithm 245 - Treesort 3”, Communications of the ACM, 7 (12): 701, doi:10.1145/355588.365103</li>
</ol>
</blockquote>
<h4 id="python-4"><a href="#python-4" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点间的索引关系：</span></span><br><span class="line"><span class="comment"># 节点：i</span></span><br><span class="line"><span class="comment"># 父节点：(i - 1) / 2</span></span><br><span class="line"><span class="comment"># 左子节点：2i + 1</span></span><br><span class="line"><span class="comment"># 右子节点：2i + 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 堆化</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">heapify</span>(<span class="params">tree, n, i</span>):</span></span><br><span class="line">    <span class="keyword">if</span> i &gt;= n:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    c1 = <span class="number">2</span> * i + <span class="number">1</span></span><br><span class="line">    c2 = <span class="number">2</span> * i + <span class="number">2</span></span><br><span class="line">    max = i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> c1 &lt; n <span class="keyword">and</span> tree[c1] &gt; tree[max]:</span><br><span class="line">        max = c1</span><br><span class="line">    <span class="keyword">if</span> c2 &lt; n <span class="keyword">and</span> tree[c2] &gt; tree[max]:</span><br><span class="line">        max = c2</span><br><span class="line">    <span class="keyword">if</span> max != i:</span><br><span class="line">        tree[max], tree[i] = tree[i], tree[max]</span><br><span class="line">        heapify(tree, n, max)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建堆</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_heap</span>(<span class="params">tree, n</span>):</span></span><br><span class="line">    last_node = n - <span class="number">1</span></span><br><span class="line">    parent = (last_node - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> parent &gt;= <span class="number">0</span>:</span><br><span class="line">        heapify(tree, n, parent)</span><br><span class="line">        parent -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 堆排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">heap_sort</span>(<span class="params">tree</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构建堆</span></span><br><span class="line">    n = len(tree)</span><br><span class="line">    build_heap(tree, n)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 第一个节点与最后一个节点交换</span></span><br><span class="line">        tree[<span class="number">0</span>], tree[n<span class="number">-1</span>] = tree[n<span class="number">-1</span>], tree[<span class="number">0</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 剩下的节点重新构建堆</span></span><br><span class="line">        build_heap(tree, n<span class="number">-1</span>)</span><br><span class="line">        n -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    tree = [<span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">    heap_sort(tree)</span><br><span class="line">    print(tree)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="算法6：归并排序"><a href="#算法6：归并排序" class="headerlink" title="算法6：归并排序"></a>算法6：归并排序</h3><h4 id="思想-5"><a href="#思想-5" class="headerlink" title="思想"></a>思想</h4><blockquote>
<p>归并操作，也叫归并算法，指的是将两个顺序序列合并成一个顺序序列的方法。</p>
<p>如　设有数列{6，202，100，301，38，8，1}</p>
<p>初始状态：6,202,100,301,38,8,1</p>
<p>第一次归并后：{6,202},{100,301},{8,38},{1}，比较次数：3；</p>
<p>第二次归并后：{6,100,202,301}，{1,8,38}，比较次数：4；</p>
<p>第三次归并后：{1,6,8,38,100,202,301},比较次数：4；</p>
<p>总的比较次数为：3+4+4=11；</p>
<p>逆序数为14；</p>
<p><img src="/2020/08/27/Algorithm%EF%BC%9ASort/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.gif" alt="归并排序"></p>
<p>归并操作的工作原理如下：</p>
<p>第一步：申请空间，使其大小为两个已经<a href="https://baike.baidu.com/item/%E6%8E%92%E5%BA%8F">排序</a>序列之和，该空间用来存放合并后的序列</p>
<p>第二步：设定两个<a href="https://baike.baidu.com/item/%E6%8C%87%E9%92%88">指针</a>，最初位置分别为两个已经排序序列的起始位置</p>
<p>第三步：比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置</p>
<p>重复步骤3直到某一指针超出序列尾</p>
<p>将另一序列剩下的所有元素直接复制到合并序列尾</p>
</blockquote>
<h4 id="python-5"><a href="#python-5" class="headerlink" title="python"></a>python</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2020/08/08</span></span><br><span class="line"><span class="comment"># @Author  : renyb</span></span><br><span class="line"><span class="comment"># @File    : demo.py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将左右两个数组合并</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span>(<span class="params">left, right</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指定两个指针，分别指向左右两个数组的开始位置</span></span><br><span class="line">    i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 合并后的数组</span></span><br><span class="line">    record = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 左右两个数组均未被遍历完</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(left) <span class="keyword">and</span> j &lt; len(right):</span><br><span class="line">        <span class="keyword">if</span> left[i] &lt; right[j]:</span><br><span class="line">            record.append(left[i])</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record.append(right[j])</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果左右两个数组有一个遍历完，将另一个剩余元素添加至record尾部</span></span><br><span class="line">    record += left[i:]</span><br><span class="line">    record += right[j:]</span><br><span class="line">    <span class="keyword">return</span> record</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 递归 + 分治</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort</span>(<span class="params">arr</span>):</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 递归出口</span></span><br><span class="line">    <span class="keyword">if</span> len(arr) &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 数组从中间切分</span></span><br><span class="line">    i = len(arr) // <span class="number">2</span></span><br><span class="line">    left = merge_sort(arr[:i])</span><br><span class="line">    right = merge_sort(arr[i:])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> merge(left, right)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">17</span>,<span class="number">12</span>]</span><br><span class="line">    print(merge_sort(arr))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用：通用手册</title>
    <url>/2020/11/05/Docker%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="Docker管理命令"><a href="#Docker管理命令" class="headerlink" title="Docker管理命令"></a>Docker管理命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 调整docker <span class="built_in">exec</span>终端高度和宽度</span></span><br><span class="line">docker exec -it --env COLUMNS=`tput cols` --env LINES=`tput lines` mariadb bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行容器</span></span><br><span class="line">docker run -it --rm &lt;image_id&gt; bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看镜像打包记录（Dockerfile文件内容）</span></span><br><span class="line">docker history &lt;image_id&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重命名镜像repository和tag</span></span><br><span class="line">docker tag &lt;image id&gt; &lt;new repository&gt;:&lt;new tag&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出所有的容器 ID</span></span><br><span class="line">docker ps -aq</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止所有的容器</span></span><br><span class="line">docker stop $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有的容器</span></span><br><span class="line">docker rm $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有的镜像</span></span><br><span class="line">docker rmi $(docker images -q)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制文件</span></span><br><span class="line">docker cp mycontainer:/opt/file.txt /opt/local/</span><br><span class="line">docker cp /opt/local/file.txt mycontainer:/opt/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行容器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --entrypoint：启动自动运行命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --detach：后台运行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -e：设置容器环境变量</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -v：本地目录挂载至容器目录，ro只读，rw可读可写</span></span><br><span class="line">docker run -it --network host --entrypoint kolla_start --name glance_api --detach \</span><br><span class="line">  -e KOLLA_SERVICE_NAME=glance-api \</span><br><span class="line">  -e KOLLA_CONFIG_STRATEGY=COPY_ALWAYS \</span><br><span class="line">  -v /dev:/dev:rw -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">  -v /etc/kolla/glance-api:/var/lib/kolla/config_files:ro \</span><br><span class="line">  -v /opt/stack/glance/glance:/var/lib/kolla/venv/lib/python2.7/site-packages/glance:rw \</span><br><span class="line">  -v /opt/stack/glance_store:/var/lib/kolla/venv/lib/python2.7/site-packages/glance_store:rw \</span><br><span class="line">  -v /var/lib/docker/volumes/iscsi_info/_data:/etc/iscsi:rw \</span><br><span class="line">  -v /var/lib/docker/volumes/kolla_logs/_data:/var/log/kolla:rw \</span><br><span class="line">  -v /var/lib/docker/volumes/glance/_data:/var/lib/glance:rw \</span><br><span class="line">  localhost:4000/kolla-openstack/centos-source-glance-api:train</span><br></pre></td></tr></table></figure>



<h3 id="Registry管理命令"><a href="#Registry管理命令" class="headerlink" title="Registry管理命令"></a>Registry管理命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看仓库镜像信息</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -X GET http://localhost:9006/v2/_catalog | python -m json.tool</span></span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    61  100    61    0     0   6209      0 --:--:-- --:--:-- --:--:--  6777</span><br><span class="line">&#123;</span><br><span class="line">    &quot;repositories&quot;: [</span><br><span class="line">        &quot;library/db-backup-mysql&quot;,</span><br><span class="line">        &quot;library/mysql&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看仓库指定镜像的版本列表</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -X GET http://localhost:9006/v2/library/mysql/tags/list | python -m json.tool</span></span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    49  100    49    0     0   3722      0 --:--:-- --:--:-- --:--:--  3769</span><br><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;library/mysql&quot;,</span><br><span class="line">    &quot;tags&quot;: [</span><br><span class="line">        &quot;5.7.29&quot;,</span><br><span class="line">        &quot;8.0&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="黑科技"><a href="#黑科技" class="headerlink" title="黑科技"></a>黑科技</h2><p><strong>用途：</strong>调试编译镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 创建Dockerfile，镜像使用需要查看的镜像</span></span><br><span class="line">cat &gt; Dockerfile &lt;&lt; EOF</span><br><span class="line">FROM registry.local:9001/library/sysinv:1.0.0</span><br><span class="line">LABEL maintainer=inspur name=demo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 手动hang</span></span><br><span class="line">RUN sleep 999999999</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 编译镜像</span></span><br><span class="line">docker build -t demo:v1 .</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 另外开启一个终端，查看编译中的docker</span></span><br><span class="line">docker ps | grep sleep</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 登录容器</span></span><br><span class="line">docker exec -it --env COLUMNS=`tput cols` --env LINES=`tput lines` 084a3f584ce3 bash</span><br></pre></td></tr></table></figure>





<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>问题1：</strong>docker拉取镜像报 <code>Error response from daemon</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: ~ # docker pull busybox</span><br><span class="line">Using default tag: latest</span><br><span class="line">Error response from daemon: Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker.io on 10.96.0.10:53: server misbehaving</span><br></pre></td></tr></table></figure>

<p>解决：域名解析问题，需要检查 <code>/etc/resolve.conf</code> 文件中，dns解析地址是否有 <code>114.114.114.114</code></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://github.com/moby/moby/issues/35407">Docker Exec does not resize terminal</a></p>
</li>
<li><p><a href="https://blog.csdn.net/baidu_21349635/article/details/104328556">Error response from daemon: Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/cloudfloating/p/11788000.html">Docker 实战—使用 Dockerfile 构建镜像</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/momoyan/p/12437312.html">如何用Dockerfile构建镜像</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2020/10/28/Git/</url>
    <content><![CDATA[<h2 id="Git基本操作"><a href="#Git基本操作" class="headerlink" title="Git基本操作"></a>Git基本操作</h2><p>Git 常用的是以下 6 个命令：<strong>git clone</strong>、<strong>git push</strong>、<strong>git add</strong> 、<strong>git commit</strong>、<strong>git checkout</strong>、<strong>git pull</strong></p>
<p><img src="/2020/10/28/Git/git-command.jpg" alt="Git"></p>
<p><strong>说明：</strong></p>
<ul>
<li>workspace：工作区</li>
<li>staging area：暂存区/缓存区</li>
<li>local repository：或本地仓库</li>
<li>remote repository：远程仓库</li>
</ul>
<h2 id="Git常用流程"><a href="#Git常用流程" class="headerlink" title="Git常用流程"></a>Git常用流程</h2><h3 id="远端master分支代码合并到自己分支"><a href="#远端master分支代码合并到自己分支" class="headerlink" title="远端master分支代码合并到自己分支"></a>远端master分支代码合并到自己分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份当前修改</span></span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换至本地master分支</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取远端master分支代码</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换至本地dev分支</span></span><br><span class="line">git checkout renyb_dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并master分支至dev分支</span></span><br><span class="line">git merge master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复备份中的修改</span></span><br><span class="line">git stash pop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令用途</span></span><br><span class="line"><span class="comment"># git stash：备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。</span></span><br></pre></td></tr></table></figure>



<h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><h3 id="基础管理"><a href="#基础管理" class="headerlink" title="基础管理"></a>基础管理</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看git配置</span></span><br><span class="line">git config -l</span><br></pre></td></tr></table></figure>



<h3 id="回滚"><a href="#回滚" class="headerlink" title="回滚"></a>回滚</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 撤销commit操作，代码保留</span></span><br><span class="line">git reset --soft HEAD^</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 彻底回退到某个版本，本地的源码也会变为上一个版本的内容</span></span><br><span class="line">git reset --hard &lt;commit id&gt;</span><br></pre></td></tr></table></figure>



<h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆仓库（下载项目）</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;repo&gt;</span><br></pre></td></tr></table></figure>



<h3 id="提交与修改"><a href="#提交与修改" class="headerlink" title="提交与修改"></a>提交与修改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加文件到仓库</span></span><br><span class="line">git add &lt;file or dir&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看仓库当前的状态，显示有变更的文件</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交暂存区到本地仓库中</span></span><br><span class="line">git commit -m &lt;message&gt;</span><br></pre></td></tr></table></figure>



<h3 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从远程获取代码库</span></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载远程代码并合并</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传远程代码并合并</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制上传本地代码，覆盖远端代码</span></span><br><span class="line">git push -f &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换远端分支地址</span></span><br><span class="line">git config remote.origin.url git@111.111.16.240:eci/kolla_node_manager.git</span><br></pre></td></tr></table></figure>



<h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有分支</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建分支</span></span><br><span class="line">git branch &lt;name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout &lt;branch name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远端仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加远端仓库</span></span><br><span class="line">git remote add opendev https://opendev.org/openstack/trove.git</span><br></pre></td></tr></table></figure>



<h3 id="提交日志"><a href="#提交日志" class="headerlink" title="提交日志"></a>提交日志</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看历史提交记录</span></span><br><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://git-scm.com/book/zh/v2">Git官方文档</a></p>
</li>
<li><p><a href="https://www.runoob.com/git/git-tutorial.html">Git 菜鸟教程</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo</title>
    <url>/2020/09/10/Hexo/</url>
    <content><![CDATA[<h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。</p>
<p>Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p>官方文档：<a href="https://hexo.bootcss.com/docs/">https://hexo.bootcss.com/docs/</a></p>
</blockquote>
<a id="more"></a>



<h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><h2 id="Hexo-GitHub"><a href="#Hexo-GitHub" class="headerlink" title="Hexo + GitHub"></a>Hexo + GitHub</h2><h2 id="Hexo-CMD"><a href="#Hexo-CMD" class="headerlink" title="Hexo CMD"></a>Hexo CMD</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init [folder]</span></span><br></pre></td></tr></table></figure>

<p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>
<h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo new [layout] &lt;title&gt;</span></span><br></pre></td></tr></table></figure>

<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.bootcss.com/docs/configuration.html">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo generate</span></span><br></pre></td></tr></table></figure>

<p>生成静态文件。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-d</code>, <code>--deploy</code></td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left"><code>-w</code>, <code>--watch</code></td>
<td align="left">监视文件变动</td>
</tr>
</tbody></table>
<p>该命令可以简写为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br></pre></td></tr></table></figure>

<h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo publish [layout] &lt;filename&gt;</span></span><br></pre></td></tr></table></figure>

<p>发表草稿。</p>
<h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo server</span></span><br></pre></td></tr></table></figure>

<p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--port</code></td>
<td align="left">重设端口</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--static</code></td>
<td align="left">只使用静态文件</td>
</tr>
<tr>
<td align="left"><code>-l</code>, <code>--log</code></td>
<td align="left">启动日记记录，使用覆盖记录格式</td>
</tr>
</tbody></table>
<h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy</span></span><br></pre></td></tr></table></figure>

<p>部署网站。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-g</code>, <code>--generate</code></td>
<td align="left">部署之前预先生成静态文件</td>
</tr>
</tbody></table>
<p>该命令可以简写为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>



<h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo render &lt;file1&gt; [file2] ...</span></span><br></pre></td></tr></table></figure>

<p>渲染文件。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-o</code>, <code>--output</code></td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo migrate &lt;<span class="built_in">type</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>从其他博客系统 <a href="https://hexo.bootcss.com/docs/migration.html">迁移内容</a>。</p>
<h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br></pre></td></tr></table></figure>

<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo list &lt;<span class="built_in">type</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>列出网站资料。</p>
<h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo version</span></span><br></pre></td></tr></table></figure>

<p>显示 Hexo 版本。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes使用：通用手册</title>
    <url>/2021/03/08/Kubernetes%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看pod状态</span></span><br><span class="line">kubectl get pods -o wide</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看部署任务状态</span></span><br><span class="line">kubectl get deployment</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看服务状态</span></span><br><span class="line">kubectl get svc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pod详情</span></span><br><span class="line">kubectl describe pod</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从yaml文件中创建</span></span><br><span class="line">kubectl create -f &lt;yaml file&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建部署任务</span></span><br><span class="line">kubectl create deployment &lt;deployment name&gt; --image=&lt;image url&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除部署任务</span></span><br><span class="line">kubectl delete deployment &lt;deployment name&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除服务</span></span><br><span class="line">kubectl delete svc &lt;service name&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 节点添加label</span></span><br><span class="line">kubectl label nodes --overwrite=true &lt;node_name&gt; &lt;key&gt;=&lt;value&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 节点删除label</span></span><br><span class="line">kubectl label nodes &lt;node_name&gt; &lt;key&gt;-</span><br></pre></td></tr></table></figure>





<h2 id="常见需求"><a href="#常见需求" class="headerlink" title="常见需求"></a>常见需求</h2><h3 id="操作：初始化worker节点"><a href="#操作：初始化worker节点" class="headerlink" title="操作：初始化worker节点"></a>操作：初始化worker节点</h3><blockquote>
<p>参考文档：</p>
<p><a href="https://kuboard.cn/install/install-kubernetes.html#%E4%BB%8B%E7%BB%8D">安装Kubernetes高可用</a></p>
</blockquote>
<p><strong>1. 与第一个master节点一起初始化</strong></p>
<p>初始化第一个 master 节点时的输出内容中，第25、26行就是用来初始化 worker 节点的命令，如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubeadm join 6.6.6.100:8443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:ed82b9638ccefe499a252ed0e308b63478444ed2e4b78e203c1a511ff201d6d5</span><br></pre></td></tr></table></figure>

<p><strong>2. 第一个master节点初始化2h后</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在第一个master上执行，获取 join cmd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --ttl=0 表示生成的token永不过期</span></span><br><span class="line">kubeadm token create --print-join-command --ttl=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> worker节点执行</span></span><br><span class="line">kubeadm join 6.6.6.100:8443 --token ddq7hm.yobrdrzynpb1or65     --discovery-token-ca-cert-hash sha256:ed82b9638ccefe499a252ed0e308b63478444ed2e4b78e203c1a511ff201d6d5</span><br></pre></td></tr></table></figure>



<h3 id="操作：指定pod调度节点"><a href="#操作：指定pod调度节点" class="headerlink" title="操作：指定pod调度节点"></a>操作：指定pod调度节点</h3><p><strong>1. 单节点部署</strong></p>
<p>单节点部署使用nodeName字段进行配置。在启动的json/yaml文件中，pod的spec结构下增加字段：<code>&quot;nodeName&quot;:&quot;&lt;nodename&gt;&quot;</code>。</p>
<p><strong>2. 指定若干机器进行部署</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 管理node的标签</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用kubectl label nodes &#123;nodename&#125; &#123;key=value&#125; 进行标签的添加</span></span><br><span class="line">kubectl label nodes 10.126.72.31 points=test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 使用nodeSelector选择器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 类似于上文的nodeName，在创建资源的json/yaml文件中使用nodeSelector字段</span></span><br></pre></td></tr></table></figure>



<h3 id="操作：Kubectl-更新Secret内容"><a href="#操作：Kubectl-更新Secret内容" class="headerlink" title="操作：Kubectl 更新Secret内容"></a>操作：Kubectl 更新Secret内容</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取Secret中加密的文件的明文内容</span></span><br><span class="line">kubectl get secret -n openstack &#123;&#123; item.name &#125;&#125; -o yaml \</span><br><span class="line">  | grep &#x27;^  &#123;&#123; item.config &#125;&#125;&#x27; \</span><br><span class="line">  | awk &#x27;&#123;print $2&#125;&#x27; \</span><br><span class="line">  | base64 -d &gt; /tmp/&#123;&#123; item.name &#125;&#125;_&#123;&#123; item.config &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新文件内容</span></span><br><span class="line">&#123;% for x in replace_tls_secret_content_map %&#125;</span><br><span class="line">sed -i &#x27;s|&#123;&#123; x.regexp &#125;&#125;|&#123;&#123; x.replace &#125;&#125;|g&#x27; /tmp/&#123;&#123; item.name &#125;&#125;_&#123;&#123; item.config &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件内容加密，更新进Secret中</span></span><br><span class="line">i=`base64 &lt; /tmp/&#123;&#123; item.name &#125;&#125;_&#123;&#123; item.config &#125;&#125; | tr -d &#x27;\n&#x27;`</span><br><span class="line">kubectl get secret -n openstack &#123;&#123; item.name &#125;&#125; -o json \</span><br><span class="line">  | jq --arg i $i &#x27;.data[&quot;&#123;&#123; item.config &#125;&#125;&quot;] = $i&#x27; \</span><br><span class="line">  | kubectl apply -f -</span><br></pre></td></tr></table></figure>

<p>PS：代码片段取自 Ansible-playbook 中 task 的 shell 模块内容</p>
<h3 id="操作：调度亲和与反亲和"><a href="#操作：调度亲和与反亲和" class="headerlink" title="操作：调度亲和与反亲和"></a>操作：调度亲和与反亲和</h3><blockquote>
<table>
<thead>
<tr>
<th><strong>策略名称</strong></th>
<th><strong>匹配目标</strong></th>
<th><strong>支持的操作符</strong></th>
<th><strong>支持拓扑域</strong></th>
<th><strong>设计目标</strong></th>
</tr>
</thead>
<tbody><tr>
<td>nodeAffinity</td>
<td>主机标签</td>
<td>In，NotIn，Exists，DoesNotExist，Gt，Lt</td>
<td>不支持</td>
<td>决定Pod可以部署在哪些主机上</td>
</tr>
<tr>
<td>podAffinity</td>
<td>Pod标签</td>
<td>In，NotIn，Exists，DoesNotExist</td>
<td>支持</td>
<td>决定Pod可以和哪些Pod部署在同一拓扑域</td>
</tr>
<tr>
<td>PodAntiAffinity</td>
<td>Pod标签</td>
<td>In，NotIn，Exists，DoesNotExist</td>
<td>支持</td>
<td>决定Pod不可以和哪些Pod部署在同一拓扑域</td>
</tr>
</tbody></table>
<p>参考文档</p>
<p><a href="https://blog.51cto.com/kusorz/2441906">Kubernetes调度之亲和性和反亲和性</a></p>
<p><a href="https://www.cnblogs.com/cocowool/p/kubernetes_affinity.html">Kubernetes中的亲和性与反亲和性</a></p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="string">...</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="comment"># key values与spec.template.metadata.labels列表一致</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">k8s-app</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure>





<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="问题-1：节点状态为SchedulingDisabled"><a href="#问题-1：节点状态为SchedulingDisabled" class="headerlink" title="问题  1：节点状态为SchedulingDisabled"></a>问题  1：节点状态为SchedulingDisabled</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k104 ~]# kubectl get node</span><br><span class="line">NAME   STATUS                     ROLES                             AGE     VERSION</span><br><span class="line">k104   Ready,SchedulingDisabled   controlplane,etcd,master,worker   3d18h   v1.21.4</span><br></pre></td></tr></table></figure>

<p><strong>解决办法</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@k104 ~]# kubectl cordon k104</span><br><span class="line">node/k104 already cordoned</span><br><span class="line">[root@k104 ~]# kubectl uncordon k104</span><br><span class="line">node/k104 uncordoned</span><br><span class="line">[root@k104 ~]#</span><br><span class="line">[root@k104 ~]# kubectl get node</span><br><span class="line">NAME   STATUS   ROLES                             AGE     VERSION</span><br><span class="line">k104   Ready    controlplane,etcd,master,worker   3d19h   v1.21.4</span><br></pre></td></tr></table></figure>





<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h3 id="网络调试工具：busybox"><a href="#网络调试工具：busybox" class="headerlink" title="网络调试工具：busybox"></a>网络调试工具：busybox</h3><p>编辑<code>busybox.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:latest</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3600&quot;</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure>

<p>启动这个<code>pod</code>：<code>kubectl create -f busybox.yaml</code></p>
<h2 id="参考yaml配置"><a href="#参考yaml配置" class="headerlink" title="参考yaml配置"></a>参考yaml配置</h2><p><strong>Nginx Deployment配置</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">node01</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>



<p><strong>Nginx Service配置</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">## Kubernetes v1.19 不支持Service同时配置IPv4/IPv6。</span></span><br><span class="line">  <span class="comment"># 设置.spec.ipFamily为：</span></span><br><span class="line">  <span class="comment"># IPv4：API 服务器将从 service-cluster-ip-range 中分配 ipv4 地址</span></span><br><span class="line">  <span class="comment"># IPv6：API 服务器将从 service-cluster-ip-range 中分配 ipv6 地址</span></span><br><span class="line">  <span class="attr">ipFamily:</span> <span class="string">IPv6</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31111</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core">Kubernetes API Reference Docs - v1.21</a></p>
</li>
<li><p><a href="https://github.com/torvalds/linux/blob/master/include/uapi/linux/capability.h">Linux capability</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/benjamin77/p/12446781.html">k8s中部署发布应用</a></p>
</li>
<li><p><a href="https://kubernetes.io/zh/docs/tasks/debug-application-cluster/debug-service/">kubernetes官方文档：调试 Service</a></p>
</li>
<li><p><a href="http://www.dockerone.com/article/4884">Kubernetes的三种外部访问方式：NodePort、LoadBalancer 和 Ingress</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/cheyunhua/p/13358735.html">K8S从secret文件生成密钥后，如何更新Kubernetes上的密钥呢？</a></p>
</li>
<li><p><a href="https://segmentfault.com/a/1190000004470355">kubernetes节点选择器</a></p>
</li>
<li><p><a href="https://kuboard.cn/install/install-kubernetes.html#%E4%BB%8B%E7%BB%8D">安装Kubernetes高可用</a></p>
</li>
<li><p><a href="https://segmentfault.com/a/1190000023107314">解决k8s执行kubeadm join遇到could not find a JWS signature的问题</a></p>
</li>
<li><p><a href="https://blog.51cto.com/kusorz/2441906">Kubernetes调度之亲和性和反亲和性</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/cocowool/p/kubernetes_affinity.html">Kubernetes中的亲和性与反亲和性</a></p>
</li>
<li><p><a href="https://blog.csdn.net/weixin_51954021/article/details/111144990">硬核！Kubernetes 工作负载的高级设置，你会吗？</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>通用手册</tag>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes研发：Helm</title>
    <url>/2021/04/23/Kubernetes%E7%A0%94%E5%8F%91%EF%BC%9AHelm/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>Helm是Kubernetes的包管理工具，类似于操作系统中的yum，apt-get。Helm提供应用的编排部署、升级、卸载等管理操作。</p>
<h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><blockquote>
<p>在开始之前，我们简单理解一下Helm template的基本原理。其实也很简单，Helm使用gotemplate模板语言来编写代表Kubernetes资源（deployment,service, etc…）的模板文件，并提供让用户配置这些模板变量的能力。在部署时Helm通过模板引擎将模板渲染成真正的Kubernetes资源文件，并将它们部署到节点上。</p>
</blockquote>
<h3 id="创建Helm包"><a href="#创建Helm包" class="headerlink" title="创建Helm包"></a>创建Helm包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm create myapp</span><br></pre></td></tr></table></figure>



<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>自动生成的模板目录结构如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">myapp</span><br><span class="line">├── Chart.yaml</span><br><span class="line">├── charts</span><br><span class="line">├── templates</span><br><span class="line">│   ├── NOTES.txt</span><br><span class="line">│   ├── _helpers.tpl</span><br><span class="line">│   ├── deployment.yaml</span><br><span class="line">│   ├── hpa.yaml</span><br><span class="line">│   ├── ingress.yaml</span><br><span class="line">│   ├── service.yaml</span><br><span class="line">│   ├── serviceaccount.yaml</span><br><span class="line">│   └── tests</span><br><span class="line">│       └── test-connection.yaml</span><br><span class="line">└── values.yaml</span><br></pre></td></tr></table></figure>

<ul>
<li><code>templates/</code> 目录下是模板文件，当Helm需要生成chart的时，会渲染该目录下的模板文件，将渲染结果发送给kubernetes。</li>
<li><code>charts/</code> 目录是存放依赖的子包名称。</li>
<li><code>Chart.yaml</code> 文件保存chart的基本描述信息，这些描述信息也可以在模板中被引用。</li>
<li><code>values.yaml</code> 文件保存模板的默认值，用户可以在<code>helm install</code> 或者 <code>helm upgrade</code>可以指定新的值来覆盖默认值。</li>
<li><code>_helper.tpl</code> 下划线开头的文件，helm视为公共库定义文件，主要用于定义通用的子模版、函数等，helm不会将这些公共库文件的渲染结果提交给k8s处理。</li>
<li><code>NOTES.txt</code> chart包的帮助信息文件，执行helm install命令安装成功后会输出这个文件的内容。</li>
</ul>
<h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="v3版本"><a href="#v3版本" class="headerlink" title="v3版本"></a>v3版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 部署Helm包</span></span><br><span class="line">helm install myapp ./myapp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 升级Helm包</span></span><br><span class="line">helm upgrade myapp ./myapp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看部署的Helm包</span></span><br><span class="line">helm list -A</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载Helm包</span></span><br><span class="line">helm uninstall myapp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证chart是否遵循最佳实践</span></span><br><span class="line">helm lint</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试helm包渲染，不真正部署，只返回渲染结果</span></span><br><span class="line">helm install --dry-run --debug</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看已部署的helm包渲染结果</span></span><br><span class="line">helm get manifest &lt;NAME&gt;</span><br></pre></td></tr></table></figure>





<h2 id="开发基础"><a href="#开发基础" class="headerlink" title="开发基础"></a>开发基础</h2><blockquote>
<p>详细文档参考Helm中文文档：<a href="http://www.coderdocument.com/docs/helm/v2/developing_templates/intro.html">chart模板开发指南</a></p>
</blockquote>
<h2 id="STX-OpenStack-Helm包解析"><a href="#STX-OpenStack-Helm包解析" class="headerlink" title="STX-OpenStack Helm包解析"></a>STX-OpenStack Helm包解析</h2><h3 id="目录结构-1"><a href="#目录结构-1" class="headerlink" title="目录结构"></a>目录结构</h3><p>以 <code>cyborg</code> 组件Helm包为例，讲解各目录及文件的用途。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cyborg</span><br><span class="line">├── .helmignore                          # Building Packages时忽略内容</span><br><span class="line">├── Chart.yaml                           # Helm包基础描述信息。包含包名、版本、描述、维护人员信息等</span><br><span class="line">├── charts                               # Helm包依赖的工具包。推荐通过requirements.yaml文件维护</span><br><span class="line">├── templates                            # Helm包模板文件目录。_开头的文件Helm不会提交Kubernetes处理。</span><br><span class="line">│   └── bin                              # 存放安装过程用到的可执行文件。</span><br><span class="line">│       ├── _cyborg-agent-init.sh.tpl    # 服务启动前进行预处理</span><br><span class="line">│       ├── _cyborg-agent.sh.tpl         # 每个服务启动关闭均通过调用可执行文件的start、stop方法执行</span><br><span class="line">│       ├── _cyborg-api.sh.tpl</span><br><span class="line">│       ├── _cyborg-conductor.sh.tpl</span><br><span class="line">│       └── _db-sync.sh.tpl              # 同步DB脚本</span><br><span class="line">│   ├── configmap-bin.yaml               # 创建Kubernetes存储资源，存放可执行文件</span><br><span class="line">│   ├── configmap-etc.yaml               # 创建Kubernetes存储资源，存放配置文件</span><br><span class="line">│   ├── daemonset-agent.yaml             # cyborg服务，主要通过Daemonset、Deployment、StatefulSet维护Pod</span><br><span class="line">│   ├── deployment-api.yaml</span><br><span class="line">│   ├── deployment-conductor.yaml</span><br><span class="line">│   ├── ingress-api.yaml                 # kubernetes Ingress。创建域名，映射至service。</span><br><span class="line">│   ├── job-db-drop.yaml                 # 任务：删除DB，默认不执行</span><br><span class="line">│   ├── job-db-init.yaml                 # 任务：初始化DB</span><br><span class="line">│   ├── job-db-sync.yaml                 # 任务：同步DB</span><br><span class="line">│   ├── job-image-repo-sync.yaml         # 任务：同步需要的镜像资源</span><br><span class="line">│   ├── job-ks-endpoints.yaml            # 任务：创建keystone endpoint</span><br><span class="line">│   ├── job-ks-service.yaml              # 任务：创建keystone service</span><br><span class="line">│   ├── job-ks-user.yaml                 # 任务：创建keystone user</span><br><span class="line">│   ├── job-rabbit-init.yaml             # 任务：初始化rabbitmq</span><br><span class="line">│   ├── secret-db.yaml                   # 保存DB连接信息，包含admin、cyborg用户</span><br><span class="line">│   ├── secret-ingress-tls.yaml          # 保存tls证书</span><br><span class="line">│   ├── secret-keystone.yaml             # 保存keystone认证信息，包含admin、cyborg用户</span><br><span class="line">│   ├── secret-rabbitmq.yaml             # 保存rabbitmq连接信息，包含admin、cyborg用户</span><br><span class="line">│   ├── service-api.yaml                 # kubernetes service，与Pod内部做映射，集群内部可访问</span><br><span class="line">│   └── service-ingress-api.yaml         # kubernetes service，与Pod内部做映射，集群内外部均可访问</span><br><span class="line">├── requirements.yaml                    # 依赖的工具包信息。推荐通过该文件维护，需指定依赖的Helm包名称、位置、版本</span><br><span class="line">└── values.yaml                          # Helm基础变量文件。Helm通过模板语言把values.yaml中的变量渲染至templates目录中，生成指定的Kubernetes yaml文件</span><br></pre></td></tr></table></figure>



<h3 id="values-yaml-解析"><a href="#values-yaml-解析" class="headerlink" title="values.yaml 解析"></a>values.yaml 解析</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">labels:                                  # 配置各个Pod调度所需要匹配的标签值</span><br><span class="line">  ...</span><br><span class="line">images:                                  # 配置cyborg及基础Pod需要的Docker image信息</span><br><span class="line">  ...</span><br><span class="line">conf:                                    # 配置cyborg组件的配置文件</span><br><span class="line">  ...</span><br><span class="line">network:                                 # 配置Kubernetes网络</span><br><span class="line">  ...</span><br><span class="line">dependencies:                            # 配置Pod启动流程依赖关系，控制部署流程</span><br><span class="line">  ...</span><br><span class="line">secrets:                                 # 配置cyborg组件创建的Kubernetes secrets名称</span><br><span class="line">  ...</span><br><span class="line">endpoints:                               # 配置连接信息。包括DB、rabbitmq、memcached、keystone、cyborg及依赖的组件</span><br><span class="line">  ...</span><br><span class="line">pod:                                     # 配置Pod生命流程管理信息，包括安全、亲和性、挂载卷、副本数、资源限制等</span><br><span class="line">  ...</span><br><span class="line">manifests:                               # 配置部署时执行的任务</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>



<h3 id="服务部署流程"><a href="#服务部署流程" class="headerlink" title="服务部署流程"></a>服务部署流程</h3><ol>
<li>执行 <code>helm install</code> 后，helm 模板语言（go template）会将 <code>values.yaml</code> 中的值渲染进 <code>templates</code> 目录下的所有文件，并将除 NOTES.txt 及 _开头的文件以外的其余文件发送给 Kubernetes 处理。</li>
<li>Kubernetes 会将所有渲染好的 yaml文件统一创建出来。</li>
<li>创建的流程控制，如先创建数据库、rabbitmq等信息，然后启动服务，是通过 <code>Daemonset、Deployment、StatefulSet</code> 中的 <code>initContainers</code> 部分控制，<code>initContainers</code> 会优先启动 <code>kubernetes_entrypoint_init_container</code> ，根据 <code>values.yaml</code> 文件中 <code>dependencies</code> 配置的依赖信息，决定是否开始运行。</li>
<li>运行流程：存储文件和Job类任务优先运行，Completed状态之后，开始运行服务类Pod。</li>
</ol>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://helm.sh/docs/">HELM 官方文档</a></p>
</li>
<li><p><a href="http://www.coderdocument.com/docs/helm/v2/index.html">Helm中文文档</a></p>
</li>
<li><p><a href="https://whmzsu.github.io/helm-doc-zh-cn/">Helm User Guide - Helm 用户指南</a></p>
</li>
<li><p><a href="http://www.coderdocument.com/docs/helm/v2/developing_templates/intro.html">chart模板开发指南</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/lyc94620/p/10945430.html">Helm简述教程</a></p>
</li>
<li><p><a href="https://juejin.cn/post/6844904199818313735">Helm template快速入门</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>Helm</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：IPv4/IPv6双栈</title>
    <url>/2021/01/26/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AIPv4-IPv6%E5%8F%8C%E6%A0%88/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>需求：OpenStack跑在Kubernetes上，OpenStack需要配置为IPv6网络。</p>
<p>Kubernetes IPv4/IPv6 双协议栈能够将 IPv4 和 IPv6 地址分配给 Pod 和 Service。</p>
<blockquote>
<p><strong>支持的功能</strong></p>
<p>在 Kubernetes 集群上启用 IPv4/IPv6 双协议栈可提供下面的功能：</p>
<ul>
<li>双协议栈 pod 网络 (每个 pod 分配一个 IPv4 和 IPv6 地址)</li>
<li>IPv4 和 IPv6 启用的服务 (每个服务必须是一个单独的地址族)</li>
<li>Pod 的集群外出口通过 IPv4 和 IPv6 路由</li>
</ul>
</blockquote>
<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>Kubernetes版本：v1.19.0</li>
<li>OpenStack版本：Train</li>
<li>Kubernetes部署方式：kubeadm</li>
<li>Kubernetes网络组件：Calico v3.15.3</li>
</ul>
<p>节点IP信息，<code>/etc/hosts</code> 内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">111.111.111.121 node01</span><br><span class="line">111.111.111.122 node02</span><br><span class="line">111.111.111.123 node03</span><br><span class="line">111.111.111.121 registry.local</span><br></pre></td></tr></table></figure>

<p>节点网卡配置如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: ~ # ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:17:6f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 111.111.111.121/24 brd 111.111.111.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.206.4/24 brd 192.168.206.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 111.111.111.120/32 brd 111.111.111.120 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::250:56ff:fe8c:176f/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: ens224: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:e4:71 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet6 2018::21/64 scope global noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 2018::20/64 scope global noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::6cd7:3d10:c933:a797/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>内核参数：<code>/etc/sysctl.d/kubernetes.conf</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net.bridge.bridge-nf-call-iptables&#x3D;1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables&#x3D;1</span><br><span class="line">net.ipv4.ip_forward&#x3D;1</span><br><span class="line">vm.swappiness&#x3D;0 # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span><br><span class="line">vm.overcommit_memory&#x3D;1 # 不检查物理内存是否够用</span><br><span class="line">vm.panic_on_oom&#x3D;0 # 开启 OOM</span><br><span class="line">fs.inotify.max_user_instances&#x3D;8192</span><br><span class="line">fs.inotify.max_user_watches&#x3D;1048576</span><br><span class="line">fs.file-max&#x3D;52706963</span><br><span class="line">fs.nr_open&#x3D;52706963</span><br><span class="line">net.netfilter.nf_conntrack_max&#x3D;2310720</span><br><span class="line">&#123;% if enable_ipv6 | bool %&#125;</span><br><span class="line">net.ipv6.conf.all.disable_ipv6&#x3D;0</span><br><span class="line">net.ipv6.conf.all.forwarding&#x3D;1</span><br><span class="line">net.ipv6.conf.default.forwarding&#x3D;1</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">net.ipv6.conf.all.disable_ipv6&#x3D;1</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



<h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><blockquote>
<p>为了使用 IPv4/IPv6 双栈的 Kubernetes 集群，需要满足以下先决条件：</p>
<ul>
<li>Kubernetes 1.16 版本及更高版本</li>
<li>提供商支持双协议栈网络（云提供商或其他提供商必须能够为 Kubernetes 节点提供可路由的 IPv4/IPv6 网络接口）</li>
<li>支持双协议栈的网络插件（如 Kubenet 或 Calico）</li>
</ul>
</blockquote>
<h2 id="启动-IPv4-IPv6-双协议栈"><a href="#启动-IPv4-IPv6-双协议栈" class="headerlink" title="启动 IPv4/IPv6 双协议栈"></a>启动 IPv4/IPv6 双协议栈</h2><h3 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h3><blockquote>
<p><strong>官网文档配置信息如下：</strong></p>
<p>要启用 IPv4/IPv6 双协议栈，为集群的相关组件启用 <code>IPv6DualStack</code> <a href="https://v1-19.docs.kubernetes.io/zh/docs/reference/command-line-tools-reference/feature-gates/">特性门控</a>， 并且设置双协议栈的集群网络分配：</p>
<ul>
<li>kube-apiserver:<ul>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
<li><code>--service-cluster-ip-range=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code></li>
</ul>
</li>
<li>kube-controller-manager:<ul>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
<li><code>--cluster-cidr=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code> 例如 <code>--cluster-cidr=10.244.0.0/16,fc00::/48</code></li>
<li><code>--service-cluster-ip-range=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code> 例如 <code>--service-cluster-ip-range=10.0.0.0/16,fd00::/108</code></li>
<li><code>--node-cidr-mask-size-ipv4|--node-cidr-mask-size-ipv6</code> 对于 IPv4 默认为 /24，对于 IPv6 默认为 /64</li>
</ul>
</li>
<li>kubelet:<ul>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
</ul>
</li>
<li>kube-proxy:<ul>
<li><code>--cluster-cidr=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code></li>
<li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li>
</ul>
</li>
</ul>
</blockquote>
<p>部署方式使用 kubeadm，master节点初始化时，使用yaml文件配置进行初始化。yaml配置信息修改如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">bootstrapTokens:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">abcdef.0123456789abcdef</span></span><br><span class="line">  <span class="attr">ttl:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">usages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">signing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">localAPIEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="string">&quot;111.111.111.121&quot;</span></span><br><span class="line">  <span class="attr">bindPort:</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">criSocket:</span> <span class="string">/var/run/dockershim.sock</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;node01&quot;</span></span><br><span class="line">  <span class="attr">taints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="comment"># 配置Kubelet，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controlPlaneEndpoint:</span> <span class="string">&quot;111.111.111.120:6443&quot;</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="comment"># 配置Cluster，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">CoreDNS</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">&quot;k8s.gcr.io&quot;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">&quot;v1.19.0&quot;</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="comment"># 配置pod、service的ipv6地址池</span></span><br><span class="line">  <span class="comment"># ipv6 CIDR不能过大（&lt;= 20），否则会报错&quot;specified --secondary-service-cluster-ip-range is too large&quot;，相关检测代码见下模块</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.10</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16,2019:20::/112</span></span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12,2019:30::/112</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="comment"># 配置KubeProxy，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">SupportIPVSProxyMode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># mode配置:</span></span><br><span class="line"><span class="comment"># ipvs在IPv6DualStack模式下，创建的nodePort service使用&lt; node ipv6 ip &gt;:&lt; nodePort &gt;无法访问。iptables无此问题</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">iptables</span></span><br></pre></td></tr></table></figure>



<p><strong>Kubernetes Service Subnet检测代码</strong></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Longer term we should read this from some config store, rather than a flag.</span></span><br><span class="line"><span class="comment">// validateClusterIPFlags is expected to be called after Complete()</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">validateClusterIPFlags</span><span class="params">(options *ServerRunOptions)</span> []<span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> errs []error</span><br><span class="line">    </span><br><span class="line">    ... <span class="comment">// 省略</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// note: While the cluster might be dualstack (i.e. pods with multiple IPs), the user may choose</span></span><br><span class="line">	<span class="comment">// to only ingress traffic within and into the cluster on one IP family only. this family is decided</span></span><br><span class="line">	<span class="comment">// by the range set on --service-cluster-ip-range. If/when the user decides to use dual stack services</span></span><br><span class="line">	<span class="comment">// the Secondary* must be of different IPFamily than --service-cluster-ip-range</span></span><br><span class="line">	<span class="keyword">if</span> secondaryServiceClusterIPRangeUsed &#123;</span><br><span class="line">		<span class="comment">// Should be dualstack IPFamily(PrimaryServiceClusterIPRange) != IPFamily(SecondaryServiceClusterIPRange)</span></span><br><span class="line">		dualstack, err := netutils.IsDualStackCIDRs([]*net.IPNet&#123;&amp;options.PrimaryServiceClusterIPRange, &amp;options.SecondaryServiceClusterIPRange&#125;)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;error attempting to validate dualstack for --service-cluster-ip-range and --secondary-service-cluster-ip-range&quot;</span>))</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> !dualstack &#123;</span><br><span class="line">			errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;--service-cluster-ip-range and --secondary-service-cluster-ip-range must be of different IP family&quot;</span>))</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// should be smallish sized cidr, this thing is kept in etcd</span></span><br><span class="line">		<span class="comment">// bigger cidr (specially those offered by IPv6) will add no value</span></span><br><span class="line">		<span class="comment">// significantly increase snapshotting time.</span></span><br><span class="line">		<span class="keyword">var</span> ones, bits = options.SecondaryServiceClusterIPRange.Mask.Size()</span><br><span class="line">		<span class="keyword">if</span> bits-ones &gt; <span class="number">20</span> &#123;</span><br><span class="line">			errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;specified --secondary-service-cluster-ip-range is too large&quot;</span>))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Calico"><a href="#Calico" class="headerlink" title="Calico"></a>Calico</h3><ol>
<li>Edit the CNI config (<code>calico-config</code> ConfigMap in the manifest), and enable IPv4 and IPv6 address allocation by setting both fields to true.</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;ipam&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico-ipam&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;assign_ipv4&quot;:</span> <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;assign_ipv6&quot;:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">&#125;<span class="string">,</span></span><br></pre></td></tr></table></figure>

<p>​    <code>calico-config</code> ConfigMap 完整配置项，供参考：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Source: calico/templates/calico-config.yaml</span></span><br><span class="line"><span class="comment"># This ConfigMap is used to configure a self-hosted Calico installation.</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">calico-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="comment"># Typha is disabled.</span></span><br><span class="line">  <span class="attr">typha_service_name:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">  <span class="comment"># Configure the backend to use.</span></span><br><span class="line">  <span class="attr">calico_backend:</span> <span class="string">&quot;bird&quot;</span></span><br><span class="line">  <span class="comment"># Configure the MTU to use for workload interfaces and tunnels.</span></span><br><span class="line">  <span class="comment"># - If Wireguard is enabled, set to your network MTU - 60</span></span><br><span class="line">  <span class="comment"># - Otherwise, if VXLAN or BPF mode is enabled, set to your network MTU - 50</span></span><br><span class="line">  <span class="comment"># - Otherwise, if IPIP is enabled, set to your network MTU - 20</span></span><br><span class="line">  <span class="comment"># - Otherwise, if not using any encapsulation, set to your network MTU.</span></span><br><span class="line">  <span class="attr">veth_mtu:</span> <span class="string">&quot;1440&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The CNI network configuration to install on each node. The special</span></span><br><span class="line">  <span class="comment"># values in this config will be automatically populated.</span></span><br><span class="line">  <span class="attr">cni_network_config:</span> <span class="string">|-</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;:</span> <span class="string">&quot;k8s-pod-network&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cniVersion&quot;:</span> <span class="string">&quot;0.3.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;plugins&quot;:</span> [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;log_level&quot;:</span> <span class="string">&quot;info&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;datastore_type&quot;:</span> <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;nodename&quot;:</span> <span class="string">&quot;__KUBERNETES_NODE_NAME__&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;mtu&quot;:</span> <span class="string">__CNI_MTU__</span>,</span><br><span class="line">          <span class="attr">&quot;ipam&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico-ipam&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;assign_ipv4&quot;:</span> <span class="string">&quot;true&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;assign_ipv6&quot;:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;policy&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;k8s&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;kubernetes&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;kubeconfig&quot;:</span> <span class="string">&quot;__KUBECONFIG_FILEPATH__&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;portmap&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;snat&quot;:</span> <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;capabilities&quot;:</span> &#123;<span class="attr">&quot;portMappings&quot;:</span> <span class="literal">true</span>&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;bandwidth&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;capabilities&quot;:</span> &#123;<span class="attr">&quot;bandwidth&quot;:</span> <span class="literal">true</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Configure IPv6 support by adding the following variable settings to the environment for the <code>calico-node</code> container</li>
</ol>
<table>
<thead>
<tr>
<th>Variable name</th>
<th>Value</th>
<th>Comments</th>
</tr>
</thead>
<tbody><tr>
<td><code>IP6</code></td>
<td><code>&quot;autodetect&quot;</code></td>
<td></td>
</tr>
<tr>
<td><code>IP6_AUTODETECTION_METHOD</code></td>
<td><code>&quot;interface=ens224&quot;</code></td>
<td>网卡为配置ipv6地址的网卡</td>
</tr>
<tr>
<td><code>FELIX_IPV6SUPPORT</code></td>
<td><code>&quot;true&quot;</code></td>
<td></td>
</tr>
<tr>
<td><code>CALICO_IPV6POOL_CIDR</code></td>
<td><code>2018:100::/112</code></td>
<td>配置IPv6地址池</td>
</tr>
</tbody></table>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><h3 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h3><p>使用Nginx，简单创建一个pod和service，验证功能</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">node01</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">## Kubernetes v1.19 不支持Service同时配置IPv4/IPv6。</span></span><br><span class="line">  <span class="comment"># 设置.spec.ipFamily为：</span></span><br><span class="line">  <span class="comment"># IPv4：API 服务器将从 service-cluster-ip-range 中分配 ipv4 地址</span></span><br><span class="line">  <span class="comment"># IPv6：API 服务器将从 service-cluster-ip-range 中分配 ipv6 地址</span></span><br><span class="line">  <span class="attr">ipFamily:</span> <span class="string">IPv6</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31111</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure>

<p><strong>网络测试：</strong><code>busybox.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:latest</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3600&quot;</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure>



<h3 id="验证寻址"><a href="#验证寻址" class="headerlink" title="验证寻址"></a>验证寻址</h3><p><strong>验证节点寻址</strong></p>
<p>示例中，节点名称为 <code>node01</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证是否配置了 IPv4/IPv6 Pod 地址范围</span></span></span><br><span class="line">kubectl get nodes node01 -o go-template --template=&#x27;&#123;&#123;range .spec.podCIDRs&#125;&#125;&#123;&#123;printf &quot;%s\n&quot; .&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.10.0.0/24</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2019:20::/120</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证节点是否检测到 IPv4 和 IPv6 接口</span></span></span><br><span class="line">kubectl get nodes node01 -o go-template --template=&#x27;&#123;&#123;range .status.addresses&#125;&#125;&#123;&#123;printf &quot;%s: %s \n&quot; .type .address&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> InternalIP: 2018::21</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> InternalIP: 111.111.111.121</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Hostname: node01</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 实际测试：未输出IPv6地址，仅输出IPv4地址和Hostname</span></span><br></pre></td></tr></table></figure>



<p><strong>验证 Pod 寻址</strong></p>
<p>示例中，Pod名称为 <code>myweb-7645d99c58-v2wfx</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证Pod是否获得 IPv4/IPv6 地址</span></span></span><br><span class="line">kubectl get pods myweb-7645d99c58-v2wfx -o go-template --template=&#x27;&#123;&#123;range .status.podIPs&#125;&#125;&#123;&#123;printf &quot;%s \n&quot; .ip&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.10.140.65</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2019:20::8c40</span></span><br></pre></td></tr></table></figure>



<h3 id="验证服务"><a href="#验证服务" class="headerlink" title="验证服务"></a>验证服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看测试准备流程中创建的Service</span></span></span><br><span class="line">kubectl get svc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        4h53m</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> myweb        NodePort    2019:30::73fe   &lt;none&gt;        80:31111/TCP   3h51m</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证NodePort（使用节点IPv6地址）</span></span></span><br><span class="line">curl -g -6 [2018::22]:31111</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kube proxy使用iptables，CLUETER-IP无法通过ping进行测试，并且在集群节点是无法访问的，需要从pod内部访问。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入busybox pod，执行如下两条命令测试：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - wget [2019:30::73fe]，访问成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - telnet 2019:30::73fe 80，显示Connected to 2019:30::73fe</span></span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/">Kubernetes v1.19 官方文档：IPv4/IPv6 双协议栈</a></p>
</li>
<li><p><a href="https://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/">Kubernetes v1.19 官方文档：验证 IPv4/IPv6 双协议栈</a></p>
</li>
<li><p><a href="https://docs.projectcalico.org/networking/ipv6">Calico 官方文档：Configure dual stack or IPv6 only</a></p>
</li>
<li><p><a href="https://github.com/kubernetes/website/issues/16801">Kubernetes Issues：Issue with k8s.io/docs/concepts/services-networking/dual-stack/ #16801</a></p>
</li>
<li><p><a href="https://github.com/kubernetes/kubeadm/issues/1612">Kubernetes Issues：Dual-Stack support for Kubeadm #1612</a></p>
</li>
<li><p><a href="https://github.com/kubernetes/kubeadm/issues/1828">Kubernetes Issues：Failed to parse subnet when creating IPv4/IPv6 dual stack #1828</a></p>
</li>
<li><p><a href="https://github.com/kubernetes/kubernetes/issues/83006">Kubernetes Issues：fialed to test IPv6DualStack feature of release version 1.16.0 #83006</a></p>
</li>
<li><p><a href="https://github.com/kubernetes/kubernetes/blob/v1.17.2/cmd/kube-apiserver/app/options/validation.go">Kubernetes IPv6 init报错 “specified –service-cluster-ip-range is too large”</a></p>
</li>
<li><p><a href="https://www.kubernetes.org.cn/5173.html">kubernetes calico IPV6支持</a></p>
</li>
<li><p><a href="https://jishuin.proginn.com/p/763bfbd3761a">简单示例说明 kube-proxy 如何与 iptables 配合使用</a></p>
</li>
<li><p><a href="https://blog.csdn.net/qq_36183935/article/details/90734847">kubernetes的Kube-proxy的iptables转发规则</a></p>
</li>
<li><p><a href="https://luyanan.com/article/info/19821386754432">kubeadm双栈升级 - expected at least one IP from each family (v4 or v6) for dual-stack networking</a></p>
</li>
<li><p><a href="https://blog.51cto.com/juestnow/2493362">kubernetes v1.18.2 双栈 部署calico</a></p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/34558421">Kubernetes 网络排错指南</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>IPv6</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：Kube-VIP实现高可用</title>
    <url>/2021/07/16/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AKube-VIP%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Kube vip为社区开源的一套Kubernetes HA解决方案，基于GO语言开发。轻量级，性能待验证。官方介绍如下：</p>
<p>Kubernetes Virtual IP and Load-Balancer for both control plane and Kubernetes services</p>
<p>The idea behind <code>kube-vip</code> is a small self-contained Highly-Available option for all environments, especially:</p>
<ul>
<li>Bare-Metal</li>
<li>On-Prem</li>
<li>Edge (ARM / Raspberry PI)</li>
<li>Virtualisation</li>
<li>Pretty much anywhere else :)</li>
</ul>
<h2 id="Kubernetes-高可用"><a href="#Kubernetes-高可用" class="headerlink" title="Kubernetes 高可用"></a>Kubernetes 高可用</h2><p>As an alternative to the more “traditional” approach of <code>keepalived</code> and <code>haproxy</code>, <a href="https://kube-vip.io/">kube-vip</a> implements both management of a virtual IP and load balancing in one service. Similar to option 2 above, <code>kube-vip</code> will be run as a static pod on the control plane nodes.</p>
<p>Like with <code>keepalived</code>, the hosts negotiating a virtual IP need to be in the same IP subnet. Similarly, like with <code>haproxy</code>, stream-based load-balancing allows TLS termination to be handled by the API Server instances behind it.</p>
<p>The configuration file <code>/etc/kube-vip/config.yaml</code> looks like this:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">localPeer:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">$&#123;ID&#125;</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">$&#123;IPADDR&#125;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">remotePeers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">$&#123;PEER1_ID&#125;</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">$&#123;PEER1_IPADDR&#125;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10000</span></span><br><span class="line"><span class="comment"># [...]</span></span><br><span class="line"><span class="attr">vip:</span> <span class="string">$&#123;APISERVER_VIP&#125;</span></span><br><span class="line"><span class="attr">gratuitousARP:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">singleNode:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">startAsLeader:</span> <span class="string">$&#123;IS_LEADER&#125;</span></span><br><span class="line"><span class="attr">interface:</span> <span class="string">$&#123;INTERFACE&#125;</span></span><br><span class="line"><span class="attr">loadBalancers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">API</span> <span class="string">Server</span> <span class="string">Load</span> <span class="string">Balancer</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">tcp</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">$&#123;APISERVER_DEST_PORT&#125;</span></span><br><span class="line">  <span class="attr">bindToVip:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">backends:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">$&#123;APISERVER_SRC_PORT&#125;</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">$&#123;HOST1_ADDRESS&#125;</span></span><br><span class="line">  <span class="comment"># [...]</span></span><br></pre></td></tr></table></figure>



<p>The <code>bash</code> style placeholders to expand are these:</p>
<ul>
<li><code>$&#123;ID&#125;</code> the current host’s symbolic name</li>
<li><code>$&#123;IPADDR&#125;</code> the current host’s IP address</li>
<li><code>$&#123;PEER1_ID&#125;</code> a symbolic name for the first vIP peer</li>
<li><code>$&#123;PEER1_IPADDR&#125;</code> IP address for the first vIP peer</li>
<li>entries (<code>id</code>, <code>address</code>, <code>port</code>) for additional vIP peers can follow</li>
<li><code>$&#123;APISERVER_VIP&#125;</code> is the virtual IP address negotiated between the <code>kube-vip</code> cluster hosts.</li>
<li><code>$&#123;IS_LEADER&#125;</code> is <code>true</code> for exactly one leader and <code>false</code> for the rest</li>
<li><code>$&#123;INTERFACE&#125;</code> is the network interface taking part in the negotiation of the virtual IP, e.g. <code>eth0</code>.</li>
<li><code>$&#123;APISERVER_DEST_PORT&#125;</code> the port through which Kubernetes will talk to the API Server.</li>
<li><code>$&#123;APISERVER_SRC_PORT&#125;</code> the port used by the API Server instances</li>
<li><code>$&#123;HOST1_ADDRESS&#125;</code> the first load-balanced API Server host’s IP address</li>
<li>entries (<code>port</code>, <code>address</code>) for additional load-balanced API Server hosts can follow</li>
</ul>
<p>To have the service started with the cluster, now the manifest <code>kube-vip.yaml</code> needs to be placed in <code>/etc/kubernetes/manifests</code> (create the directory first). It can be generated using the <code>kube-vip</code> docker image:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -it --rm plndr/kube-vip:0.1.1 /kube-vip sample manifest \</span></span><br><span class="line">    | sed &quot;s|plndr/kube-vip:&#x27;|plndr/kube-vip:0.1.1&#x27;|&quot; \</span><br><span class="line">    | sudo tee /etc/kubernetes/manifests/kube-vip.yaml</span><br></pre></td></tr></table></figure>

<p>The result, <code>/etc/kubernetes/manifests/kube-vip.yaml</code>, will look like this:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-vip</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/kube-vip</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">start</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/vip.yaml</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;plndr/kube-vip:0.1.1&#x27;</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kube-vip</span></span><br><span class="line">    <span class="attr">resources:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">securityContext:</span></span><br><span class="line">      <span class="attr">capabilities:</span></span><br><span class="line">        <span class="attr">add:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">NET_ADMIN</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">SYS_TIME</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/vip.yaml</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/kube-vip/config.yaml</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line"><span class="attr">status:</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>With the services up, now the Kubernetes cluster can be bootstrapped using <code>kubeadm init</code> (see <a href="https://github.com/kubernetes/kubeadm/blob/master/docs/ha-considerations.md#bootstrap-the-cluster">below</a>).</p>
<h2 id="Bootstrap-the-cluster"><a href="#Bootstrap-the-cluster" class="headerlink" title="Bootstrap the cluster"></a>Bootstrap the cluster</h2><p>Now the actual cluster bootstrap as described in <a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/">Creating Highly Available clusters with kubeadm</a> can take place.</p>
<p>Note that, if <code>$&#123;APISERVER_DEST_PORT&#125;</code> has been configured to a value different from <code>6443</code> in the configuration above, <code>kubeadm init</code> needs to be told to use that port for the API Server. Assuming that in a new cluster port 8443 is used for the load-balanced API Server and a virtual IP with the DNS name <code>vip.mycluster.local</code>, an argument <code>--control-plane-endpoint</code> needs to be passed to <code>kubeadm</code> as follows:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubeadm init --control-plane-endpoint vip.mycluster.local:8443 [additional arguments ...]</span></span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://kube-vip.io/">Kube-vip 官方文档</a></p>
</li>
<li><p><a href="https://kube-vip.io/architecture/">kube-vip architecture</a></p>
</li>
<li><p><a href="https://github.com/kubernetes/kubeadm/blob/master/docs/ha-considerations.md">High Availability Considerations</a></p>
</li>
<li><p><a href="https://blog.csdn.net/u013812710/article/details/116451771">k8s+kube-vip实现k8s高可用</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>HA</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：OpenStack服务配置HTTPS</title>
    <url>/2021/01/22/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AOpenStack%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AEHTTPS/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>需求：OpenStack endpoint 统一格式为 https + ip</p>
<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul>
<li><p>系统：CentOS Linux release 7.7.1908 (Core)</p>
</li>
<li><p>Kubernetes版本：v1.19.0</p>
</li>
<li><p>OpenStack版本：Train</p>
</li>
<li><p>部署方式：StarlingX Armada部署</p>
</li>
</ul>
<h2 id="网络架构"><a href="#网络架构" class="headerlink" title="网络架构"></a>网络架构</h2><p>Kubernetes上部署的OpenStack，通过以下3中方式提供服务：</p>
<ul>
<li><strong>nodePort</strong>：OpenStack Horizon服务使用该方式。将端口映射至宿主机的端口，可通过宿主机ip + 端口方式访问。</li>
<li><strong>ingress</strong>：OpenStack admin和public类型的endpoint使用该方式。</li>
<li><strong>service</strong>：OpenStack internal类型的endpoint使用该方式。</li>
</ul>
<p>以上3种方式的网络，升级为HTTPS方案分别如下：</p>
<ul>
<li><p><strong>nodePort</strong>：通过HAProxy进行HTTPS的证书验证和卸载，转发至后端nodePort端口</p>
</li>
<li><p><strong>ingress</strong>：ingress运行在7层，支持配置HTTPS，在ingress增加tls模块即可</p>
</li>
<li><p><strong>service</strong>：service运行在4层，不支持配置HTTPS，需要上层增加ingress</p>
</li>
</ul>
<p>这里根据需求，所有服务改为nodePort方式，通过HAProxy进行HTTPS证书验证和卸载</p>
<p><img src="/2021/01/22/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AOpenStack%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AEHTTPS/%E8%AF%81%E4%B9%A6%E5%8D%B8%E8%BD%BD.png" alt="证书卸载"></p>
<blockquote>
<p><strong>ingress方式配置HTTPS</strong></p>
<p>ingress对应的yaml，增加tls模块内容，即可开启HTTPS。</p>
<p>Kubernetes官方提供的ingress TLS的配置参考如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tls-example-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">https-example.foo.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">https-example.foo.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">service1</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="TLS证书"><a href="#TLS证书" class="headerlink" title="TLS证书"></a>TLS证书</h3><p><strong>1. 制作证书</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">certificates_dir=/tmp/certificates</span><br><span class="line">service_name=inspur</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建目录</span></span><br><span class="line">mkdir -p $&#123;certificates_dir&#125;/private</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置证书参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 认证多域名，增加alt_names即可</span></span><br><span class="line">cat &gt; $&#123;certificates_dir&#125;/$&#123;service_name&#125;-openssl.cnf &lt;&lt; EOF</span><br><span class="line">[req]</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">req_extensions = v3_req</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line">countryName = CN</span><br><span class="line">stateOrProvinceName = Xian</span><br><span class="line">localityName = Xian</span><br><span class="line">organizationalUnitName = Inspur</span><br><span class="line">commonName = $&#123;service_name&#125;</span><br><span class="line"></span><br><span class="line">[v3_req]</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = *.openstack.svc.cluster.local</span><br><span class="line">DNS.2 = *.openstack</span><br><span class="line">IP.1 = 111.111.111.88</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Key</span></span><br><span class="line">openssl genrsa -out $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key</span><br><span class="line">chmod 0600 $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Server Certificate</span></span><br><span class="line">openssl req -new -nodes -sha256 -x509 \</span><br><span class="line">    -subj &quot;/C=CN/ST=Xian/L=Xian/O=Inspur/CN=$&#123;service_name&#125;&quot; \</span><br><span class="line">    -config $&#123;certificates_dir&#125;/$&#123;service_name&#125;-openssl.cnf \</span><br><span class="line">    -days 3650 \</span><br><span class="line">    -extensions v3_req \</span><br><span class="line">    -key $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key \</span><br><span class="line">    -out $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating CA Certificate File</span></span><br><span class="line">cp $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt $&#123;certificates_dir&#125;/$&#123;service_name&#125;-ca.crt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Server PEM File</span></span><br><span class="line">cat $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key \</span><br><span class="line">    | tee $&#123;certificates_dir&#125;/$&#123;service_name&#125;.pem</span><br></pre></td></tr></table></figure>



<p><strong>openrc.sh</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Clear any old environment that may conflict.</span></span><br><span class="line">for key in $( set | awk &#x27;&#123;FS=&quot;=&quot;&#125;  /^OS_/ &#123;print $1&#125;&#x27; ); do unset $key ; done</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_TENANT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=https://111.111.111.80:35357/v3</span><br><span class="line">export OS_CACERT=/etc/kolla/certificates/haproxy-ca.crt    # CA Certificate File</span><br><span class="line">export OS_INTERFACE=internal</span><br><span class="line">export OS_ENDPOINT_TYPE=internalURL</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_REGION_NAME=RegionOne</span><br><span class="line">export OS_AUTH_PLUGIN=password</span><br></pre></td></tr></table></figure>



<h3 id="Kubernetes管理证书"><a href="#Kubernetes管理证书" class="headerlink" title="Kubernetes管理证书"></a>Kubernetes管理证书</h3><p><strong>1. 创建Secret资源</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用Secret方式上传证书至Kubernetes，挂载给pod即可使用该证书文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Secret方式</span></span><br><span class="line">kubectl create secret tls -n openstack tls-secret \</span><br><span class="line">    --cert=/tmp/certificates/private/inspur.crt \</span><br><span class="line">    --key=/tmp/certificates/private/inspur.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Secret yaml方式</span></span><br><span class="line">cat &gt; tls-secret.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: tls-secret</span><br><span class="line">  namespace: openstack</span><br><span class="line">data:</span><br><span class="line">  tls.crt: &lt; base64 encoded cert &gt;</span><br><span class="line">  tls.key: &lt; base64 encoded key &gt;</span><br><span class="line">type: kubernetes.io/tls</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl create -f tls-secret.yaml</span><br></pre></td></tr></table></figure>



<p><strong>2. Pod使用证书</strong></p>
<p>更新 <code>Deployment</code> 中，<code>volumes</code> 和 <code>volumeMounts</code>，设置secret和挂载目录。</p>
<p>Kubernetes官方提供的Pod的配置参考如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-test-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-container</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="comment"># name must match the volume name below</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/secret-volume</span></span><br><span class="line">  <span class="comment"># The secret data is exposed to Containers in the Pod through a Volume.</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">      <span class="attr">secret:</span></span><br><span class="line">        <span class="attr">secretName:</span> <span class="string">test-secret</span></span><br></pre></td></tr></table></figure>



<h3 id="HAProxy基础配置"><a href="#HAProxy基础配置" class="headerlink" title="HAProxy基础配置"></a>HAProxy基础配置</h3><p><code>haproxy.cfg</code> 中，增加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">global</span><br><span class="line">    ssl-default-bind-ciphers DEFAULT:!MEDIUM:!3DES</span><br><span class="line">    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11</span><br><span class="line">    tune.ssl.default-dh-param 4096</span><br></pre></td></tr></table></figure>



<h3 id="Keystone配置证书"><a href="#Keystone配置证书" class="headerlink" title="Keystone配置证书"></a>Keystone配置证书</h3><ol>
<li>使用http协议，先创建 <code>https endpoint</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne identity public https://111.111.111.88:32500/v3</span><br><span class="line">openstack endpoint create --region RegionOne identity internal https://111.111.111.88:32500/v3</span><br><span class="line">openstack endpoint create --region RegionOne identity admin https://111.111.111.88:32500/v3</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>删除http endpoint。</p>
<blockquote>
<p>openrc.sh中 <code>OS_INTERFACE</code> 字段和 <code>OS_ENDPOINT_TYPE</code> 替换为admin类型可以避免出错。</p>
</blockquote>
</li>
<li><p>更新haproxy配置，增加keystone https认证，重启haproxy。此时keystone的https端口正常响应</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Keystone</span></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line">frontend keystone_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.88:32500 ssl crt /tmp/certificates/inspur.pem</span><br><span class="line">    default_backend keystone_back</span><br><span class="line"></span><br><span class="line">backend keystone_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.89:30500 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint list</span><br></pre></td></tr></table></figure>



<h3 id="Glance配置证书"><a href="#Glance配置证书" class="headerlink" title="Glance配置证书"></a>Glance配置证书</h3><ol>
<li>更新haproxy配置，增加glance https认证，重启haproxy</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Glance</span></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line">frontend glance_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    timeout client 6h</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.88:32092 ssl crt /tmp/certificates/inspur.pem</span><br><span class="line">    default_backend glance_api_back</span><br><span class="line"></span><br><span class="line">backend glance_api_back</span><br><span class="line">    mode http</span><br><span class="line">    timeout server 6h</span><br><span class="line">    server node01 111.111.111.89:30092 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在Kubernetes界面中，更新glance服务配置文件：<code>Secret</code> &gt;&gt; <code>glance-etc</code> &gt;&gt; <code>glance-api.conf</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[keystone_authtoken]</span><br><span class="line">auth_uri = https://111.111.111.88:32500/v3</span><br><span class="line">auth_url = https://111.111.111.88:32500/v3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置pod中证书挂载地址</span></span><br><span class="line">cafile = /etc/tls/tls.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>更新Secret后，需要重建pod，以应用新的配置。参考命令：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除pod后会自动重建</span></span><br><span class="line">kubectl delete pod -n openstack &lt; glance-api pod name &gt;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>更新Glance endpoint，替换为https地址</li>
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack image list</span><br></pre></td></tr></table></figure>



<h3 id="OpenStack其他服务"><a href="#OpenStack其他服务" class="headerlink" title="OpenStack其他服务"></a>OpenStack其他服务</h3><p>按照上述Glance流程，参考文档【<a href="https://renyb2.github.io/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/">OpenStack部署：HTTPS</a>】修改其余服务设置即可</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://kubernetes.io/zh/docs/concepts/services-networking/ingress/">Kubernetes官方文档：Ingress</a></p>
</li>
<li><p><a href="https://kubernetes.io/zh/docs/tasks/inject-data-application/distribute-credentials-secure/">Kubernetes官方文档：使用 Secret 安全地分发凭证</a></p>
</li>
<li><p><a href="https://blog.51cto.com/wzlinux/2332908">Kubernetes 使用 ingress 配置 https 集群</a></p>
</li>
<li><p><a href="https://www.qikqiak.com/post/use-secret-in-k8s/">Kubernetes Secret 资源对象使用方法</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/kreo/p/13203973.html">签发SSL多域名自签证书</a></p>
</li>
<li><p><a href="https://blog.csdn.net/u013066244/article/details/78725842/">OpenSSL自签发配置有多域名或ip地址的证书</a></p>
</li>
<li><p><a href="https://renyb2.github.io/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/">OpenStack部署：HTTPS</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>OpenStack</tag>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：RabbitMQ</title>
    <url>/2021/05/15/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9ARabbitMQ/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>本文用来记录 <code>Kubernetes</code> 上部署的 <code>RabbitMQ</code> 集群遇到的一个问题。基础信息如下：</p>
<ul>
<li>宿主机系统：Centos 7.8</li>
<li>Docker Server版本：18.09.6</li>
<li>Kubernetes版本：v1.19.0</li>
<li>RabbitMQ部署方式：stx-openstack 3.0</li>
<li>RabbitMQ镜像版本：3.7.13</li>
</ul>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>3节点集群，由于非同时节点关机（如机房掉电），概率导致集群仲裁失败。故障现象是pod 为Running 状态，但是几分钟以后依然不能readay 1/1。pod日志显示” Waiting for Mnesia tables”</p>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>rabbitmq集群pod分0、1、2，共3节点。服务器掉电，最后退出的pod认为自己具有最新的数据，所以启动时应从最后退出的pod启动。但Kubernetes Statefulset维护的pod，启动方式为0 - 1 - 2顺序启动，只有0运行起来后才会运行后面的pod。如果0不是最后退出，则会启动卡住，等待最后退出的节点运行，形成死循环</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>pod 0 启动方式调整为强制启动，删除pod后自动重建，会强制拉起。命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Ensures that the node will start next time, even <span class="keyword">if</span> it was not the last to shut down.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Force boot cluster shut down unexpectedly <span class="keyword">in</span> an unknown order.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ref: https://www.rabbitmq.com/rabbitmqctl.8.html<span class="comment">#force_boot</span></span></span><br><span class="line">rabbitmqctl force_boot</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot">RabbitMQ官方文档：rabbitmqctl</a></p>
</li>
<li><p><a href="https://blog.csdn.net/u013256816/article/details/78348761">RabbitMQ管理（5）——集群管理</a></p>
</li>
<li><p><a href="https://stackoverflow.com/questions/60407082/rabbit-mq-error-while-waiting-for-mnesia-tables">Rabbit mq - Error while waiting for Mnesia tables</a></p>
</li>
<li><p><a href="https://www.sohu.com/a/338991483_470018">RabbitMQ原理、集群、基本操作及常见故障处理</a></p>
</li>
<li><p><a href="https://www.kubernetes.org.cn/1304.html">基于Kubernetes（k8s）的RabbitMQ 集群</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes部署：kubeadm部署高可用集群</title>
    <url>/2020/12/16/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9Akubeadm%E9%83%A8%E7%BD%B2%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h2 id="高可用集群部署"><a href="#高可用集群部署" class="headerlink" title="高可用集群部署"></a>高可用集群部署</h2><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><h4 id="1-检查centos版本-hostname"><a href="#1-检查centos版本-hostname" class="headerlink" title="1. 检查centos版本 / hostname"></a>1. 检查centos版本 / hostname</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看centos版本</span></span><br><span class="line">cat /etc/centos-release</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; CentOS Linux release 7.7.1908 (Core)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此处 hostname 的输出将会是该机器在 Kubernetes 集群中的节点名字</span></span><br><span class="line">hostname</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改hostname</span></span><br><span class="line">hostnamectl set-hostname NAME</span><br></pre></td></tr></table></figure>

<h4 id="2-检查网络"><a href="#2-检查网络" class="headerlink" title="2. 检查网络"></a>2. 检查网络</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ip route show</span></span><br><span class="line">default via 111.111.111.1 dev ens192 proto static metric 100</span><br><span class="line">111.111.111.0/24 dev ens192 proto kernel scope link src 111.111.111.81 metric 100</span><br><span class="line">172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:5b:38 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 111.111.111.81/24 brd 111.111.111.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::250:56ff:fe8c:5b38/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: ens224: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:1e:41 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure>

<blockquote>
<p>kubelet使用的IP地址</p>
<ul>
<li><code>ip route show</code> 命令中，可以知道机器的默认网卡，通常是 <code>第一块网卡</code>，如 <strong><em>default via 111.111.111.1 dev ens192</em></strong></li>
<li><code>ip a</code> 命令中，可显示默认网卡的 IP 地址，Kubernetes 将使用此 IP 地址与集群内的其他节点通信，如 <code>111.111.111.81</code></li>
<li>所有节点上 Kubernetes 所使用的 IP 地址必须可以互通（无需 NAT 映射、无安全组或防火墙隔离）</li>
</ul>
</blockquote>
<h4 id="3-环境基本配置"><a href="#3-环境基本配置" class="headerlink" title="3. 环境基本配置"></a>3. 环境基本配置</h4><blockquote>
<ul>
<li>任意节点 centos 版本为 7.6 / 7.7 或 7.8</li>
<li>任意节点 CPU 内核数量大于等于 2，且内存大于等于 4G</li>
<li>任意节点 hostname 不是 localhost，且不包含下划线、小数点、大写字母</li>
<li>任意节点都有固定的内网 IP 地址</li>
<li>任意节点都只有一个网卡，如果有特殊目的，我可以在完成 K8S 安装后再增加新的网卡</li>
<li>任意节点上 <a href="https://kuboard.cn/install/install-kubernetes.html#%E6%A3%80%E6%9F%A5%E7%BD%91%E7%BB%9C">Kubelet使用的 IP 地址</a> 可互通（无需 NAT 映射即可相互访问），且没有防火墙、安全组隔离</li>
<li>任意节点不会直接使用 docker run 或 docker-compose 运行容器</li>
</ul>
</blockquote>
<h3 id="安装-docker-kubelet"><a href="#安装-docker-kubelet" class="headerlink" title="安装 docker / kubelet"></a>安装 docker / kubelet</h3><blockquote>
<p>使用 root 身份在所有节点执行如下代码，安装软件：</p>
<ul>
<li>docker</li>
<li>nfs-utils</li>
<li>kubectl / kubeadm / kubelet</li>
</ul>
</blockquote>
<h4 id="1-快速安装"><a href="#1-快速安装" class="headerlink" title="1. 快速安装"></a>1. 快速安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在 master 节点和 worker 节点都要执行</span></span><br><span class="line">curl -sSL https://kuboard.cn/install-script/v1.16.2/install_kubelet.sh | sh</span><br></pre></td></tr></table></figure>

<h4 id="2-手动安装"><a href="#2-手动安装" class="headerlink" title="2. 手动安装"></a>2. 手动安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在 master 节点和 worker 节点都要执行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参考文档如下</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.docker.com/install/linux/docker-ce/centos/ </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.docker.com/install/linux/linux-postinstall/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版本</span></span><br><span class="line">yum remove -y docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-selinux \</span><br><span class="line">docker-engine-selinux \</span><br><span class="line">docker-engine</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 yum repository</span></span><br><span class="line">yum install -y yum-utils \</span><br><span class="line">device-mapper-persistent-data \</span><br><span class="line">lvm2</span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装并启动 docker</span></span><br><span class="line">yum install -y docker-ce-18.09.7 docker-ce-cli-18.09.7 containerd.io</span><br><span class="line">systemctl enable docker</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 nfs-utils</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 必须先安装 nfs-utils 才能挂载 nfs 网络存储</span></span><br><span class="line">yum install -y nfs-utils</span><br><span class="line">yum install -y wget</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 SeLinux</span></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭 swap</span></span><br><span class="line">swapoff -a</span><br><span class="line">yes | cp /etc/fstab /etc/fstab_bak</span><br><span class="line">cat /etc/fstab_bak |grep -v swap &gt; /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改 /etc/sysctl.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果有配置，则修改</span></span><br><span class="line">sed -i &quot;s#^net.ipv4.ip_forward.*#net.ipv4.ip_forward=1#g&quot;  /etc/sysctl.conf</span><br><span class="line">sed -i &quot;s#^net.bridge.bridge-nf-call-ip6tables.*#net.bridge.bridge-nf-call-ip6tables=1#g&quot;  /etc/sysctl.conf</span><br><span class="line">sed -i &quot;s#^net.bridge.bridge-nf-call-iptables.*#net.bridge.bridge-nf-call-iptables=1#g&quot;  /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 可能没有，追加</span></span><br><span class="line">echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.bridge.bridge-nf-call-ip6tables = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.bridge.bridge-nf-call-iptables = 1&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行命令以应用</span></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置K8S的yum源</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版本</span></span><br><span class="line">yum remove -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装kubelet、kubeadm、kubectl</span></span><br><span class="line">yum install -y kubelet-1.16.2 kubeadm-1.16.2 kubectl-1.16.2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改docker Cgroup Driver为systemd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="comment"># 将/usr/lib/systemd/system/docker.service文件中的这一行 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="comment"># 修改为 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果不修改，在添加 worker 节点时可能会碰到如下错误</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> [WARNING IsDockerSystemdCheck]: detected <span class="string">&quot;cgroupfs&quot;</span> as the Docker cgroup driver. The recommended driver is <span class="string">&quot;systemd&quot;</span>. </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Please follow the guide at https://kubernetes.io/docs/setup/cri/</span></span><br><span class="line">sed -i &quot;s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g&quot; /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 docker 镜像，提高 docker 镜像下载速度和稳定性</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果您访问 https://hub.docker.io 速度非常稳定，亦可以跳过这个步骤</span></span><br><span class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://f1361db2.m.daocloud.io</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 docker，并启动 kubelet</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl enable kubelet &amp;&amp; systemctl start kubelet</span><br><span class="line"></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure>

<blockquote>
<p>WARNING</p>
<p>如果此时执行 <code>service status kubelet</code> 命令，将得到 kubelet 启动失败的错误提示，请忽略此错误，因为必须完成后续步骤中 kubeadm init 的操作，kubelet 才能正常启动</p>
</blockquote>
<h3 id="安装-haproxy-keepalived"><a href="#安装-haproxy-keepalived" class="headerlink" title="安装 haproxy / keepalived"></a>安装 haproxy / keepalived</h3><h4 id="1-keepalived配置"><a href="#1-keepalived配置" class="headerlink" title="1. keepalived配置"></a>1. keepalived配置</h4><p>yum安装<code>keepalived</code>，编辑配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state &#123;&#123; state &#125;&#125;</span><br><span class="line">    interface &#123;&#123; interface &#125;&#125;</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority &#123;&#123; priority &#125;&#125;</span><br><span class="line">    advert_int 1</span><br><span class="line">    track_interface &#123;</span><br><span class="line">&#123;% for item in track_interface %&#125;</span><br><span class="line">        &#123;&#123; item &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        &#123;&#123; vip &#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>$&#123;STATE&#125;</code> is <code>MASTER</code> for one and <code>BACKUP</code> for all other hosts, hence the virtual IP will initially be assigned to the <code>MASTER</code>.</li>
<li><code>$&#123;INTERFACE&#125;</code> is the network interface taking part in the negotiation of the virtual IP, e.g. <code>eth0</code>.</li>
<li><code>$&#123;ROUTER_ID&#125;</code> should be the same for all <code>keepalived</code> cluster hosts while unique amongst all clusters in the same subnet. Many distros pre-configure its value to <code>51</code>.</li>
<li><code>$&#123;PRIORITY&#125;</code> should be higher on the master than on the backups. Hence <code>101</code> and <code>100</code> respectively will suffice.</li>
<li><code>$&#123;TRACK_INTERFACE&#125;</code> is a list of listening ports.</li>
<li><code>$&#123;AUTH_PASS&#125;</code> should be the same for all <code>keepalived</code> cluster hosts, e.g. <code>42</code></li>
<li><code>$&#123;APISERVER_VIP&#125;</code> is the virtual IP address negotiated between the <code>keepalived</code> cluster hosts.</li>
</ul>
<h4 id="2-haproxy配置"><a href="#2-haproxy配置" class="headerlink" title="2. haproxy配置"></a>2. haproxy配置</h4><p>yum安装<code>haproxy</code>，编辑配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">global</span><br><span class="line">  log 127.0.0.1 local2 info</span><br><span class="line">  pidfile /var/run/haproxy.pid</span><br><span class="line">  maxconn 10240</span><br><span class="line">  daemon</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">  log global</span><br><span class="line">  mode http</span><br><span class="line">  timeout connect 5000</span><br><span class="line">  timeout client 5000</span><br><span class="line">  timeout server 5000</span><br><span class="line">  timeout check 2000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######### K8s-APIServer LB #####################</span></span></span><br><span class="line">listen k8s-apiserver-lb</span><br><span class="line">  bind 0.0.0.0:8443</span><br><span class="line">  mode tcp</span><br><span class="line">  balance roundrobin</span><br><span class="line">&#123;% for item in groups.master %&#125;</span><br><span class="line">  server &#123;&#123; item &#125;&#125; &#123;&#123; hostvars[item].ansible_ssh_host &#125;&#125;:6443 check port 6443 inter 5000 fall 5</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######### K8s-Web #####################</span></span></span><br><span class="line">listen k8s-web</span><br><span class="line">  bind 0.0.0.0:32000</span><br><span class="line">  mode tcp</span><br><span class="line">  balance roundrobin</span><br><span class="line">&#123;% for item in groups.master %&#125;</span><br><span class="line">  server &#123;&#123; item &#125;&#125; &#123;&#123; hostvars[item].ansible_ssh_host &#125;&#125;:30000 check port 30000 inter 5000 fall 5</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####### stats ############################</span></span></span><br><span class="line">listen admin_stats</span><br><span class="line">  bind 0.0.0.0:8080</span><br><span class="line">  mode http</span><br><span class="line">  option httplog</span><br><span class="line">  maxconn 10</span><br><span class="line">  stats refresh 30s</span><br><span class="line">  stats uri /stats</span><br></pre></td></tr></table></figure>

<ul>
<li><code>maxconn </code> 最大并发连接数</li>
</ul>
<h3 id="后续流程参考后续文档"><a href="#后续流程参考后续文档" class="headerlink" title="后续流程参考后续文档"></a>后续流程参考后续文档</h3><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/high-availability/">Kubernetes官方文档：利用 kubeadm 创建高可用集群</a></p>
</li>
<li><p><a href="https://kuboard.cn/install/install-kubernetes.html#%E4%BB%8B%E7%BB%8D">安装Kubernetes高可用</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/8eb81d1674dc">kubeadm 搭建K8s高可用集群</a></p>
</li>
<li><p><a href="https://github.com/kubernetes/kubeadm/blob/master/docs/ha-considerations.md#options-for-software-load-balancing">High Availability Considerations</a></p>
</li>
<li><p><a href="https://blog.51cto.com/billy98/2350660">kubeadm安装kubernetes 1.13.2多master高可用集群</a></p>
</li>
<li><p><a href="https://jimmysong.io/kubernetes-handbook/practice/master-ha.html">Master节点高可用</a></p>
</li>
<li><p><a href="https://blog.csdn.net/qq_41772936/article/details/80718014">haproxy+keepalived高可用负载均衡构建</a></p>
</li>
<li><p><a href="https://github.com/mendickxiao/kubeasz/tree/master/docs">集群规划和基础参数设定</a></p>
</li>
<li><p><a href="https://blog.csdn.net/codemaster_2071/article/details/82634278">kubeadm安装kubernetes 多master高可用</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/rexcheny/p/10778567.html">Keepalive详解</a></p>
</li>
<li><p><a href="https://blog.51cto.com/12244079/2125384">HAProxy介绍及配置文件详解</a></p>
</li>
<li><p><a href="https://kubespray.io/#/docs/ha-mode?id=ha-endpoints-for-k8s">HA endpoints for K8s</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
        <tag>kubeadm</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux优化：脏数据回刷参数与调优</title>
    <url>/2021/11/04/Linux%E4%BC%98%E5%8C%96%EF%BC%9A%E8%84%8F%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%88%B7%E5%8F%82%E6%95%B0%E4%B8%8E%E8%B0%83%E4%BC%98/</url>
    <content><![CDATA[<blockquote>
<p>本文转自<a href="https://www.cnblogs.com/gmpy/">广漠飘羽</a> - <a href="https://www.cnblogs.com/gmpy/p/12657801.html">Linux 脏数据回刷参数与调优</a></p>
</blockquote>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>我们知道，Linux用cache/buffer缓存数据，且有个回刷任务在<strong>适当时候</strong>把脏数据回刷到存储介质中。什么是适当的时候？换句话说，什么时候触发回刷？是脏数据达到多少阈值还是定时触发，或者两者都有？</p>
<p>不同场景对触发回刷的时机的需求也不一样，<strong>对IO回刷触发时机的选择，是IO性能优化的一个重要方法</strong>。</p>
<p>Linux内核在<code>/proc/sys/vm</code>中有透出数个配置文件，可以对触发回刷的时机进行调整。内核的回刷进程是怎么运作的呢？这数个配置文件有什么作用呢？</p>
<h2 id="配置概述"><a href="#配置概述" class="headerlink" title="配置概述"></a>配置概述</h2><p>在<code>/proc/sys/vm</code>中有以下文件与回刷脏数据密切相关：</p>
<table>
<thead>
<tr>
<th align="center">配置文件</th>
<th align="center">功能</th>
<th align="center">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">dirty_background_ratio</td>
<td align="center">触发回刷的脏数据占可用内存的百分比</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">dirty_background_bytes</td>
<td align="center">触发回刷的脏数据量</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">dirty_bytes</td>
<td align="center">触发同步写的脏数据量</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">dirty_ratio</td>
<td align="center">触发同步写的脏数据占可用内存的百分比</td>
<td align="center">20</td>
</tr>
<tr>
<td align="center">dirty_expire_centisecs</td>
<td align="center">脏数据超时回刷时间（单位：1/100s）</td>
<td align="center">3000</td>
</tr>
<tr>
<td align="center">dirty_writeback_centisecs</td>
<td align="center">回刷进程定时唤醒时间（单位：1/100s）</td>
<td align="center">500</td>
</tr>
</tbody></table>
<p>对上述的配置文件，有几点要补充的：</p>
<ol>
<li>XXX_ratio 和 XXX_bytes 是同一个配置属性的不同计算方法，<strong>优先级 XXX_bytes &gt; XXX_ratio</strong></li>
<li><strong>可用内存</strong>并不是系统所有内存，而是<strong>free pages + reclaimable pages</strong></li>
<li><strong>脏数据超时</strong>表示内存中数据标识脏一定时间后，下次回刷进程工作时就必须回刷</li>
<li>回刷进程既会定时唤醒，也会在脏数据过多时被动唤醒。</li>
<li>dirty_background_XXX与dirty_XXX的差别在于前者只是唤醒回刷进程，此时应用依然可以异步写数据到Cache，当脏数据比例继续增加，触发dirty_XXX的条件，不再支持应用异步写。</li>
</ol>
<p>关于同步与异步IO的说明，可以看另一篇博客<a href="https://www.cnblogs.com/gmpy/p/12652578.html">《Linux IO模型》</a></p>
<p>更完整的功能介绍，可以看内核文档<code>Documentation/sysctl/vm.txt</code>。</p>
<h2 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h2><p>单纯的配置说明毕竟太抽象。结合网上的分享，我们看看在不同场景下，该如何配置？</p>
<h3 id="场景1：尽可能不丢数据"><a href="#场景1：尽可能不丢数据" class="headerlink" title="场景1：尽可能不丢数据"></a>场景1：尽可能不丢数据</h3><p>有些产品形态的数据非常重要，例如行车记录仪。在满足性能要求的情况下，要做到尽可能不丢失数据。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 此配置不一定适合您的产品，请根据您的实际情况配置 */</span></span><br><span class="line">dirty_background_ratio = <span class="number">5</span></span><br><span class="line">dirty_ratio = <span class="number">10</span></span><br><span class="line">dirty_writeback_centisecs = <span class="number">50</span></span><br><span class="line">dirty_expire_centisecs = <span class="number">100</span></span><br></pre></td></tr></table></figure>

<p>这样的配置有以下特点：</p>
<ol>
<li>当脏数据达到可用内存的5%时唤醒回刷进程</li>
<li>当脏数据达到可用内存的10%时，应用每一笔数据都必须同步等待</li>
<li>每隔500ms唤醒一次回刷进程</li>
<li>内存中脏数据存在时间超过1s则在下一次唤醒时回刷</li>
</ol>
<p>由于发生交通事故时，行车记录仪随时可能断电，事故前1~2s的数据尤为关键。因此在保证性能满足不丢帧的情况下，尽可能回刷数据。</p>
<p>此配置通过<strong>减少Cache</strong>，<strong>更加频繁唤醒回刷进程</strong>的方式，尽可能让数据回刷。</p>
<p>此时的性能理论上会比每笔数据都<code>O_SYNC</code>略高，比默认配置性能低，相当于用性能换数据安全。</p>
<h3 id="场景2：追求更高性能"><a href="#场景2：追求更高性能" class="headerlink" title="场景2：追求更高性能"></a>场景2：追求更高性能</h3><p>有些产品形态不太可能会掉电，例如服务器。此时不需要考虑数据安全问题，要做到尽可能高的IO性能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 此配置不一定适合您的产品，请根据您的实际情况配置 */</span></span><br><span class="line">dirty_background_ratio = <span class="number">50</span></span><br><span class="line">dirty_ratio = <span class="number">80</span></span><br><span class="line">dirty_writeback_centisecs = <span class="number">2000</span></span><br><span class="line">dirty_expire_centisecs = <span class="number">12000</span></span><br></pre></td></tr></table></figure>

<p>这样的配置有以下特点：</p>
<ol>
<li>当脏数据达到可用内存的50%时唤醒回刷进程</li>
<li>当脏数据达到可用内存的80%时，应用每一笔数据都必须同步等待</li>
<li>每隔20s唤醒一次回刷进程</li>
<li>内存中脏数据存在时间超过120s则在下一次唤醒时回刷</li>
</ol>
<p>与场景1相比，场景2的配置通过 <strong>增大Cache</strong>，<strong>延迟回刷唤醒时间</strong>来尽可能缓存更多数据，进而实现提高性能</p>
<h3 id="场景3：突然的IO峰值拖慢整体性能"><a href="#场景3：突然的IO峰值拖慢整体性能" class="headerlink" title="场景3：突然的IO峰值拖慢整体性能"></a>场景3：突然的IO峰值拖慢整体性能</h3><p>什么是IO峰值？突然间大量的数据写入，导致瞬间IO压力飙升，导致瞬间IO性能狂跌，对行车记录仪而言，有可能触发视频丢帧。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 此配置不一定适合您的产品，请根据您的实际情况配置 */</span></span><br><span class="line">dirty_background_ratio = <span class="number">5</span></span><br><span class="line">dirty_ratio = <span class="number">80</span></span><br><span class="line">dirty_writeback_centisecs = <span class="number">500</span></span><br><span class="line">dirty_expire_centisecs = <span class="number">3000</span></span><br></pre></td></tr></table></figure>

<p>这样的配置有以下特点：</p>
<ol>
<li>当脏数据达到可用内存的5%时唤醒回刷进程</li>
<li>当脏数据达到可用内存的80%时，应用每一笔数据都必须同步等待</li>
<li>每隔5s唤醒一次回刷进程</li>
<li>内存中脏数据存在时间超过30s则在下一次唤醒时回刷</li>
</ol>
<p>这样的配置，通过 <strong>增大Cache总容量</strong>，<strong>更加频繁唤醒回刷</strong>的方式，解决IO峰值的问题，此时能保证脏数据比例保持在一个比较低的水平，当突然出现峰值，也有足够的Cache来缓存数据。</p>
<h2 id="内核代码实现"><a href="#内核代码实现" class="headerlink" title="内核代码实现"></a>内核代码实现</h2><p>知其然，亦要知其所以然。翻看内核代码，寻找配置的实现，细细品味不同配置的细微差别。</p>
<p>基于内核代码版本：5.5.15</p>
<h3 id="sysctl文件"><a href="#sysctl文件" class="headerlink" title="sysctl文件"></a>sysctl文件</h3><p>在 <em>kernel/sysctl.c</em>中列出了所有的配置文件的信息。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">ctl_table</span> <span class="title">vm_table</span>[] = &#123;</span></span><br><span class="line">	...</span><br><span class="line">	&#123;</span><br><span class="line">		.procname	= <span class="string">&quot;dirty_background_ratio&quot;</span>,</span><br><span class="line">		.data		= &amp;dirty_background_ratio,</span><br><span class="line">		.maxlen		= <span class="keyword">sizeof</span>(dirty_background_ratio),</span><br><span class="line">		.mode		= <span class="number">0644</span>,</span><br><span class="line">		.proc_handler	= dirty_background_ratio_handler,</span><br><span class="line">		.extra1		= &amp;zero,</span><br><span class="line">		.extra2		= &amp;one_hundred,</span><br><span class="line">	&#125;,</span><br><span class="line">	&#123;</span><br><span class="line">		.procname	= <span class="string">&quot;dirty_ratio&quot;</span>,</span><br><span class="line">		.data		= &amp;vm_dirty_ratio,</span><br><span class="line">		.maxlen		= <span class="keyword">sizeof</span>(vm_dirty_ratio),</span><br><span class="line">		.mode		= <span class="number">0644</span>,</span><br><span class="line">		.proc_handler	= dirty_ratio_handler,</span><br><span class="line">		.extra1		= &amp;zero,</span><br><span class="line">		.extra2		= &amp;one_hundred,</span><br><span class="line">	&#125;,</span><br><span class="line">	&#123;</span><br><span class="line">		.procname	= <span class="string">&quot;dirty_writeback_centisecs&quot;</span>,</span><br><span class="line">		.data		= &amp;dirty_writeback_interval,</span><br><span class="line">		.maxlen		= <span class="keyword">sizeof</span>(dirty_writeback_interval),</span><br><span class="line">		.mode		= <span class="number">0644</span>,</span><br><span class="line">		.proc_handler	= dirty_writeback_centisecs_handler,</span><br><span class="line">	&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为了避免文章篇幅过大，我只列出了关键的3个配置项且不深入代码如何实现。</p>
<p>我们只需要知道，我们修改<code>/proc/sys/vm</code>配置项的信息，实际上修改了对应的某个全局变量的值。</p>
<p>每个全局变量都有默认值，追溯这些全局变量的定义</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&lt;mm/page-writeback.c&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dirty_background_ratio = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> dirty_background_bytes;</span><br><span class="line"><span class="keyword">int</span> vm_dirty_ratio = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> vm_dirty_bytes;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> dirty_writeback_interval = <span class="number">5</span> * <span class="number">100</span>; <span class="comment">/* centiseconds */</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> dirty_expire_interval = <span class="number">30</span> * <span class="number">100</span>; <span class="comment">/* centiseconds */</span></span><br></pre></td></tr></table></figure>

<p>总结如下：</p>
<table>
<thead>
<tr>
<th align="center">配置项名</th>
<th align="center">对应源码变量名</th>
<th align="center">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">dirty_background_bytes</td>
<td align="center">dirty_background_bytes</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">dirty_background_ratio</td>
<td align="center">dirty_background_ratio</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">dirty_bytes</td>
<td align="center">vm_dirty_bytes</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">dirty_ratio</td>
<td align="center">vm_dirty_ratio</td>
<td align="center">20</td>
</tr>
<tr>
<td align="center">dirty_writeback_centisecs</td>
<td align="center">dirty_writeback_interval</td>
<td align="center">500</td>
</tr>
<tr>
<td align="center">dirty_expire_centisecs</td>
<td align="center">dirty_expire_interval</td>
<td align="center">3000</td>
</tr>
</tbody></table>
<h3 id="回刷进程"><a href="#回刷进程" class="headerlink" title="回刷进程"></a>回刷进程</h3><p>通过<code>ps aux</code>，我们总能看到<strong>writeback</strong>的内核进程</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ps aux | grep <span class="string">&quot;writeback&quot;</span></span></span><br><span class="line">root        40  0.0  0.0      0     0 ?        I&lt;   06:44   0:00 [writeback]</span><br></pre></td></tr></table></figure>

<p>这实际上是一个工作队列对应的进程，在<code>default_bdi_init()</code>中创建。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* bdi_wq serves all asynchronous writeback tasks */</span></span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">workqueue_struct</span> *<span class="title">bdi_wq</span>;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> __init <span class="title">default_bdi_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	...</span><br><span class="line">	bdi_wq = alloc_workqueue(<span class="string">&quot;writeback&quot;</span>, WQ_MEM_RECLAIM | WQ_FREEZABLE |</span><br><span class="line">			WQ_UNBOUND | WQ_SYSFS, <span class="number">0</span>);</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>回刷进程的核心是函数<code>wb_workfn()</code>，通过函数<code>wb_init()</code>绑定。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">wb_init</span><span class="params">(struct bdi_writeback *wb, struct backing_dev_info *bdi</span></span></span><br><span class="line"><span class="function"><span class="params">		<span class="keyword">int</span> blkcg_id, <span class="keyword">gfp_t</span> gfp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	...</span><br><span class="line">	INIT_DELAYED_WORK(&amp;wb-&gt;dwork, wb_workfn);</span><br><span class="line">	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>唤醒回刷进程的操作是这样的</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wb_wakeup</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	spin_lock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">	<span class="keyword">if</span> (test_bit(WB_registered, &amp;wb-&gt;state))</span><br><span class="line">		mod_delayed_work(bdi_wq, &amp;wb-&gt;dwork, <span class="number">0</span>);</span><br><span class="line">	spin_unlock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>表示唤醒的回刷任务在工作队列<code>writeback</code>中执行，这样，就把工作队列和回刷工作绑定了。</p>
<p>我们暂时不探讨每次会回收了什么，关注点在于相关配置项怎么起作用。在<code>wb_workfn()</code>的最后，有这样的代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wb_workfn</span><span class="params">(struct work_struct *work)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	...</span><br><span class="line">	<span class="comment">/* 如果还有需要回收的内存，再次唤醒 */</span></span><br><span class="line">	<span class="keyword">if</span> (!list_empty(&amp;wb-&gt;work_list))</span><br><span class="line">		wb_wakeup(wb);</span><br><span class="line">	<span class="comment">/* 如果还有脏数据，延迟唤醒 */</span></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wb_has_dirty_io(wb) &amp;&amp; dirty_writeback_interval)</span><br><span class="line">		wb_wakeup_delayed(wb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wb_wakeup</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	spin_lock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">	<span class="keyword">if</span> (test_bit(WB_registered, &amp;wb-&gt;state))</span><br><span class="line">		mod_delayed_work(bdi_wq, &amp;wb-&gt;dwork, <span class="number">0</span>);</span><br><span class="line">	spin_unlock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wb_wakeup_delayed</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> timeout;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 在这里使用dirty_writeback_interval，设置下次唤醒时间 */</span></span><br><span class="line">	timeout = msecs_to_jiffies(dirty_writeback_interval * <span class="number">10</span>);</span><br><span class="line">	spin_lock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">	<span class="keyword">if</span> (test_bit(WB_registered, &amp;wb-&gt;state))</span><br><span class="line">		queue_delayed_work(bdi_wq, &amp;wb-&gt;dwork, timeout);</span><br><span class="line">	spin_unlock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据<code>kernel/sysctl.c</code>的内容，我们知道<code>dirty_writeback_centisecs</code>配置项对应的全局变量是<code>dirty_writeback_interval</code></p>
<p>可以看到，<code>dirty_writeback_interval</code>在<code>wb_wakeup_delayed()</code>中起作用，在<code>wb_workfn()</code>的最后根据<code>dirty_writeback_interval</code>设置下一次唤醒时间。</p>
<p>我们还发现通过<code>msecs_to_jiffies(XXX * 10)</code>来换算单位，表示<code>dirty_writeback_interval</code>乘以10之后的计量单位才是毫秒<strong>msecs</strong>。怪不得说<code>dirty_writeback_centisecs</code>的单位是<strong>1/100</strong>秒。</p>
<h3 id="脏数据量"><a href="#脏数据量" class="headerlink" title="脏数据量"></a>脏数据量</h3><p>脏数据量通过<code>dirty_background_XXX</code>和<code>dirty_XXX</code>表示，他们又是怎么工作的呢？</p>
<p>根据<code>kernel/sysctl.c</code>的内容，我们知道<code>dirty_background_XXX</code>配置项对应的全局变量是<code>dirty_background_XXX</code>，<code>dirty_XXX</code>对于的全局变量是<code>vm_dirty_XXX</code>。</p>
<p>我们把目光聚焦到函数<code>domain_dirty_limits()</code>，通过这个函数换算脏数据阈值。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">domain_dirty_limits</span><span class="params">(struct dirty_throttle_control *dtc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> bytes = vm_dirty_bytes;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> bg_bytes = dirty_background_bytes;</span><br><span class="line">	<span class="comment">/* convert ratios to per-PAGE_SIZE for higher precision */</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> ratio = (vm_dirty_ratio * PAGE_SIZE) / <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> bg_ratio = (dirty_background_ratio * PAGE_SIZE) / <span class="number">100</span>;</span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">if</span> (bytes)</span><br><span class="line">		thresh = DIV_ROUND_UP(bytes, PAGE_SIZE);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		thresh = (ratio * available_memory) / PAGE_SIZE;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (bg_bytes)</span><br><span class="line">		bg_thresh = DIV_ROUND_UP(bg_bytes, PAGE_SIZE);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		bg_thresh = (bg_ratio * available_memory) / PAGE_SIZE;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (bg_thresh &gt;= thresh)</span><br><span class="line">		bg_thresh = thresh / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	dtc-&gt;thresh = thresh;</span><br><span class="line">	dtc-&gt;bg_thresh = bg_thresh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的代码体现了如下的特征</p>
<ol>
<li>dirty_background_bytes/dirty_bytes的优先级高于dirty_background_ratio/dirty_ratio</li>
<li>dirty_background_bytes/ratio和dirty_bytes/ratio最终会统一换算成<strong>页</strong>做计量单位</li>
<li>dirty_background_bytes/dirty_bytes做进一除法，表示如果值为4097Bytes，换算后是2页</li>
<li>dirty_background_ratio/dirty_ratio相乘的基数是<strong>available_memory</strong>，表示可用内存</li>
<li>如果dirty_background_XXX大于dirty_XXX，则取dirty_XXX的一半</li>
</ol>
<p>可用内存是怎么计算来的呢？</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">global_dirtyable_memory</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> x;</span><br><span class="line">	</span><br><span class="line">	x = global_zone_page_state(NR_FREE_PAGES);</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * Pages reserved for the kernel should not be considered</span></span><br><span class="line"><span class="comment">	 * dirtyable, to prevent a situation where reclaim has to</span></span><br><span class="line"><span class="comment">	 * clean pages in order to balance the zones.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	 </span><br><span class="line">	 x += global_node_page_state(NR_INACTIVE_FILE);</span><br><span class="line">	 x += global_node_page_state(NR_ACTIVE_FILE); </span><br><span class="line">	 </span><br><span class="line">	 <span class="keyword">if</span> (!vm_highmem_is_dirtyable)</span><br><span class="line">	 	x -= highmem_dirtyable_memory(x);</span><br><span class="line">	 </span><br><span class="line">	 <span class="keyword">return</span> x + <span class="number">1</span>; <span class="comment">/* Ensure that we never return 0 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">可用内存 = 空闲页 - 内核预留页 + 活动文件页 + 非活动文件页 ( - 高端内存)</span><br></pre></td></tr></table></figure>

<p>脏数据达到阈值后是怎么触发回刷的呢？我们再看<code>balance_dirty_pages()</code>函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">balance_dirty_pages</span><span class="params">(struct bdi_writeback *wb,</span></span></span><br><span class="line"><span class="function"><span class="params">				<span class="keyword">unsigned</span> <span class="keyword">long</span> pages_dirtied)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> nr_reclaimable;   <span class="comment">/* = file_dirty + unstable_nfs */</span></span><br><span class="line">	...</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * Unstable writes are a feature of certain networked</span></span><br><span class="line"><span class="comment">	 * filesystems (i.e. NFS) in which data may have been</span></span><br><span class="line"><span class="comment">	 * written to the server&#x27;s write cache, but has not yet</span></span><br><span class="line"><span class="comment">	 * been flushed to permanent storage.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	nr_reclaimable = global_node_page_state(NR_FILE_DIRTY) +</span><br><span class="line">					global_node_page_state(NR_UNSTABLE_NFS);</span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">if</span> (nr_reclaimable &gt; gdtc-&gt;bg_thresh)</span><br><span class="line">		wb_start_background_writeback(wb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wb_start_background_writeback</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	wb_wakeup(wb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总结下有以下特征：</p>
<ol>
<li>可回收内存 = 文件脏页 + 文件系统不稳定页(NFS)</li>
<li>可回收内存达到<code>dirty_background_XXX</code>计算的阈值，只是唤醒脏数据回刷工作后直接返回，并不会等待回收完成，最终回收工作还是看<code>writeback</code>进程</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>性能优化</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux使用：Vim</title>
    <url>/2020/08/31/Linux%E4%BD%BF%E7%94%A8%EF%BC%9AVim/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p>
<p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。</p>
<p>连 vim 的官方网站 (<a href="http://www.vim.org/">http://www.vim.org</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p>
<p>参考文档：<a href="https://www.runoob.com/linux/linux-vim.html">https://www.runoob.com/linux/linux-vim.html</a></p>
</blockquote>
<a id="more"></a>



<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt; ~/.vimrc &lt;&lt; EOF</span><br><span class="line">&quot;设置编码&quot;</span><br><span class="line">set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936</span><br><span class="line">set termencoding=utf-8</span><br><span class="line">set encoding=utf-8</span><br><span class="line"></span><br><span class="line">&quot;显示行号&quot;</span><br><span class="line">set nu</span><br><span class="line"></span><br><span class="line">&quot;显示括号匹配&quot;</span><br><span class="line">set showmatch</span><br><span class="line"></span><br><span class="line">&quot;设置Tab长度为4空格&quot;</span><br><span class="line">set tabstop=4</span><br><span class="line">&quot;空格替代制表符&quot;</span><br><span class="line">set expandtab</span><br><span class="line">&quot;设置自动缩进长度为4空格&quot;</span><br><span class="line">set shiftwidth=4</span><br><span class="line">&quot;继承前一行的缩进方式，适用于多行注释&quot;</span><br><span class="line">set autoindent</span><br><span class="line"></span><br><span class="line">&quot;启动粘贴模式&quot;</span><br><span class="line">set paste</span><br><span class="line"></span><br><span class="line">&quot;括号自动补全&quot;</span><br><span class="line">inoremap &#x27; &#x27;&#x27;&lt;ESC&gt;i</span><br><span class="line">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span><br><span class="line">inoremap ( ()&lt;ESC&gt;i</span><br><span class="line">inoremap [ []&lt;ESC&gt;i</span><br><span class="line">inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;O</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>



<h2 id="常用按键"><a href="#常用按键" class="headerlink" title="常用按键"></a>常用按键</h2><h3 id="第一部分：一般模式"><a href="#第一部分：一般模式" class="headerlink" title="第一部分：一般模式"></a>第一部分：一般模式</h3><h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>h, j, k, l</td>
<td>光标向左，下，上，右移动</td>
</tr>
<tr>
<td>Ctrl + f / b</td>
<td>屏幕向下/上移动</td>
</tr>
<tr>
<td>Ctrl + d / u</td>
<td>屏幕向下/上移动半页</td>
</tr>
<tr>
<td>0</td>
<td>移动到一行的最前面</td>
</tr>
<tr>
<td>$</td>
<td>移动到一行的最后面字符</td>
</tr>
<tr>
<td>H / M / L</td>
<td>移动到屏幕最上方/中央/最下方那一行的第一个字符</td>
</tr>
<tr>
<td>G</td>
<td>移动到文件的最后一行</td>
</tr>
<tr>
<td>nG / ngg</td>
<td>移动到文件的第n行</td>
</tr>
<tr>
<td>gg</td>
<td>移动到文件的第一行</td>
</tr>
<tr>
<td>n[Enter]</td>
<td>向下移动n行</td>
</tr>
</tbody></table>
<h4 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>/ <word></word></td>
<td>向下查找word字符串</td>
</tr>
<tr>
<td>? <word></word></td>
<td>向上查找word字符串</td>
</tr>
<tr>
<td>n</td>
<td>代表重复前一个查找动作</td>
</tr>
<tr>
<td>N</td>
<td>代表反向重复前一个查找动作</td>
</tr>
<tr>
<td>: s/<old>/<new></new></old></td>
<td>将第一个old替换为new</td>
</tr>
<tr>
<td>: s/<old>/<new>/g</new></old></td>
<td>将一行中所有的old替换为new</td>
</tr>
<tr>
<td>:n1, n2s/<word1>/<word2>/g</word2></word1></td>
<td>将行n1与n2之间的word1替换为word2</td>
</tr>
<tr>
<td>:%s/<old>/<new>/g</new></old></td>
<td>将文件所有的old替换为new</td>
</tr>
<tr>
<td>:%s/<old>/<new>/gc</new></old></td>
<td>替换前要求确认</td>
</tr>
</tbody></table>
<h4 id="删除复制粘贴"><a href="#删除复制粘贴" class="headerlink" title="删除复制粘贴"></a>删除复制粘贴</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>x/X</td>
<td>向后/前删除一个字符</td>
</tr>
<tr>
<td>nx</td>
<td>连续删除n个字符</td>
</tr>
<tr>
<td>dd</td>
<td>删除整行</td>
</tr>
<tr>
<td>ndd</td>
<td>删除n行</td>
</tr>
<tr>
<td>d1G</td>
<td>删除光标所在到第一行数据</td>
</tr>
<tr>
<td>dG</td>
<td>删除光标所在到最后一行数据</td>
</tr>
<tr>
<td>d$</td>
<td>删除光标所在到该行最后一个字符</td>
</tr>
<tr>
<td>d0</td>
<td>删除光标所在到该行最前面一个字符</td>
</tr>
<tr>
<td>yy</td>
<td>复制光标所在的一行</td>
</tr>
<tr>
<td>nyy</td>
<td>向下复制n行</td>
</tr>
<tr>
<td>y1G</td>
<td>复制光标所在到第一行数据</td>
</tr>
<tr>
<td>yG</td>
<td>复制光标所在到最后一行数据</td>
</tr>
<tr>
<td>y$</td>
<td>复制光标所在到该行最后一个字符</td>
</tr>
<tr>
<td>y0</td>
<td>复制光标所在到该行最前面一个字符</td>
</tr>
<tr>
<td>p/P</td>
<td>粘贴数据在光标下/上一行</td>
</tr>
<tr>
<td>J</td>
<td>将光标所在行与下一行数据结合成同一行</td>
</tr>
<tr>
<td>u</td>
<td>回撤前一操作</td>
</tr>
<tr>
<td>Ctrl + r</td>
<td>重做前一操作</td>
</tr>
<tr>
<td>.</td>
<td>重复前一个操作</td>
</tr>
</tbody></table>
<h3 id="第二部分：编辑模式"><a href="#第二部分：编辑模式" class="headerlink" title="第二部分：编辑模式"></a>第二部分：编辑模式</h3><h4 id="进入插入或替换的编辑模式"><a href="#进入插入或替换的编辑模式" class="headerlink" title="进入插入或替换的编辑模式"></a>进入插入或替换的编辑模式</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>i, I</td>
<td>进入插入模式： i从当前光标所在处插入，I在目前所在行的第一个非空格符处插入</td>
</tr>
<tr>
<td>a, A</td>
<td>进入插入模式： a从当前光标所在的下一个字符插入，A从光标所在行的最后一个字符后插入</td>
</tr>
<tr>
<td>o, O</td>
<td>进入插入模式： o从当前光标所在行的下一行插入新的一行；O正好相反，从上一行插入新行</td>
</tr>
<tr>
<td>r, R</td>
<td>进入替换模式： r只会替换光标所在的那一个字符一次；R会一直替换光标所在文字，直到Esc</td>
</tr>
</tbody></table>
<h4 id="块选择"><a href="#块选择" class="headerlink" title="块选择"></a>块选择</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>v</td>
<td>字符选择，将光标经过的地方反白选择</td>
</tr>
<tr>
<td>V</td>
<td>行选择，将光标经过的行反白选择</td>
</tr>
<tr>
<td>Ctrl + v</td>
<td>块选择，可以用长方形选择数据</td>
</tr>
<tr>
<td>y</td>
<td>将反白的地方复制</td>
</tr>
<tr>
<td>d</td>
<td>删除反白的地方</td>
</tr>
</tbody></table>
<h4 id="多窗口"><a href="#多窗口" class="headerlink" title="多窗口"></a>多窗口</h4><table>
<thead>
<tr>
<th></th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>：sp filename</td>
<td>打开新窗口，如果有加filename,新窗口打开新文件，否则打开相同文件</td>
</tr>
<tr>
<td>Ctrl + w + s/v</td>
<td>水平/垂直分割打开新窗口</td>
</tr>
<tr>
<td>Ctrl + w + h/j/k/l</td>
<td>光标移动到左/下/上/右窗口</td>
</tr>
<tr>
<td>Ctrl + w + q</td>
<td>退出窗口</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux使用：通用手册</title>
    <url>/2021/05/07/Linux%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="常见场景"><a href="#常见场景" class="headerlink" title="常见场景"></a>常见场景</h2><h3 id="内核默认启动版本管理"><a href="#内核默认启动版本管理" class="headerlink" title="内核默认启动版本管理"></a>内核默认启动版本管理</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看当前默认启动内核</span></span><br><span class="line">[root@k104 ~]# grub2-editenv list</span><br><span class="line">saved_entry=CentOS Linux (3.10.0-1127.el7.x86_64) 7 (Core)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有可用内核</span></span><br><span class="line">[root@k104 ~]# cat /boot/grub2/grub.cfg | grep ^menuentry</span><br><span class="line">menuentry &#x27;CentOS Linux (5.4.134-1.el7.elrepo.x86_64) 7 (Core)&#x27; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option &#x27;gnulinux-5.4.134-1.el7.elrepo.x86_64-advanced-f7d63930-b583-4731-976f-29c94ff7bdd6&#x27; &#123;</span><br><span class="line">menuentry &#x27;CentOS Linux (3.10.0-1127.el7.x86_64) 7 (Core)&#x27; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option &#x27;gnulinux-3.10.0-1127.el7.x86_64-advanced-f7d63930-b583-4731-976f-29c94ff7bdd6&#x27; &#123;</span><br><span class="line">menuentry &#x27;CentOS Linux (0-rescue-3144d2251e4742d79fe35eb04ed8eba2) 7 (Core)&#x27; --class centos --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option &#x27;gnulinux-0-rescue-3144d2251e4742d79fe35eb04ed8eba2-advanced-f7d63930-b583-4731-976f-29c94ff7bdd6&#x27; &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改默认启动内核</span></span><br><span class="line">[root@k104 ~]# grub2-set-default &#x27;CentOS Linux (3.10.0-1127.el7.x86_64) 7 (Core)&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看系统当前内核</span></span><br><span class="line">[root@k104 ~]# uname -a</span><br><span class="line">Linux k104 3.10.0-1127.el7.x86_64 #1 SMP Tue Mar 31 23:36:51 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure>



<h3 id="IPv6管理"><a href="#IPv6管理" class="headerlink" title="IPv6管理"></a>IPv6管理</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置ipv6 ip</span></span><br><span class="line">ip -6 addr add 2018::10/64 dev eth0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置ipv6静态路由</span></span><br><span class="line">ip -6 route add 2019::/64 via 2018::1 dev eth0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认网关</span></span><br><span class="line">route add default gw 192.168.0.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看ipv6路由表</span></span><br><span class="line">ip -6 route show</span><br></pre></td></tr></table></figure>



<h3 id="tar-gz-压缩拆分"><a href="#tar-gz-压缩拆分" class="headerlink" title="tar.gz 压缩拆分"></a>tar.gz 压缩拆分</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 压缩拆分</span></span><br><span class="line">tar zcvf - k8s_install/ | split -b 3G - iECI_v210430.tar.gz.</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> split -b 指定拆分小包的大小</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成iECI_v210430.tar.gz.开头，aa、ab、ac...等小包</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压拆分</span></span><br><span class="line">cat iECI_v210430.tar.gz.* | tar zxv</span><br></pre></td></tr></table></figure>



<h3 id="搭建本地ISO-yum源"><a href="#搭建本地ISO-yum源" class="headerlink" title="搭建本地ISO yum源"></a>搭建本地ISO yum源</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 挂载ISO文件</span></span><br><span class="line">mount -o loop /root/CentOS-7-x86_64-Everything-2009.iso /mnt/cdrom/</span><br><span class="line">cat &gt;&gt; /etc/fstab &lt;&lt; EOF</span><br><span class="line">/root/CentOS-7-x86_64-Everything-2009.iso /mnt/cdrom/ iso9660 loop,defaults 0 0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新yum源文件</span></span><br><span class="line">cd /etc/yum.repos.d/ &amp;&amp; mkdir bak &amp;&amp; mv * bak </span><br><span class="line">cat &gt; /etc/yum.repos.d/local.repo &lt;&lt; EOF</span><br><span class="line">[local]</span><br><span class="line">name=local</span><br><span class="line">baseurl=file:///mnt/cdrom/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新yum源缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure>



<h3 id="Selinux修改服务端口"><a href="#Selinux修改服务端口" class="headerlink" title="Selinux修改服务端口"></a>Selinux修改服务端口</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看ssh服务端口</span></span><br><span class="line">semanage port -l |grep ssh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加ssh新端口</span></span><br><span class="line">semanage port -a -t ssh_port_t -p tcp 2202</span><br></pre></td></tr></table></figure>



<h3 id="Firewalld基础管理"><a href="#Firewalld基础管理" class="headerlink" title="Firewalld基础管理"></a>Firewalld基础管理</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有打开的端口</span></span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加开放端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=2202/tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 移除开放端口</span></span><br><span class="line">firewall-cmd --zone=public --remove-port=2202/tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新加载规则</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看端口是否开放</span></span><br><span class="line">firewall-cmd --zone=public --query-port=2202/tcp</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>通用手册</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux运维：CPU load average过高</title>
    <url>/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/</url>
    <content><![CDATA[<h2 id="load-average基础"><a href="#load-average基础" class="headerlink" title="load average基础"></a>load average基础</h2><p>top命令中load average显示的是最近1分钟、5分钟和15分钟的系统平均负载。</p>
<p>系统平均负载被定义为在<strong>特定时间间隔内</strong>运行队列中(<strong>在CPU上运行或者等待运行多少进程</strong>)的平均进程数。如果一个进程满足以下条件则其就会位于运行队列中：</p>
<ul>
<li>它没有在等待I/O操作的结果</li>
<li>它没有主动进入等待状态(也就是没有调用’wait’)</li>
<li>没有被停止(例如：等待终止)</li>
</ul>
<p>在Linux中，进程分为三种状态，一种是阻塞的进程blocked process，一种是可运行的进程runnable process，另外就是正在运行的进程running process。</p>
<p>进程可运行状态时，它处在一个运行队列run queue中，与其他可运行进程争夺CPU时间。 <strong>系统的load是指正在运行和准备好运行的进程的总数。</strong>比如现在系统有2个正在运行的进程，3个可运行进程，那么系统的load就是5。load average就是一定时间内的load数量。</p>
<p>一般来说只要每个CPU的当前活动进程数不大于3那么系统的性能就是良好的，如果每个CPU的任务数大于5，那么就表示这台机器的性能有严重问题。</p>
<p><strong>CPU使用率高并不总是意味着CPU工作繁忙，它有可能是正在等待其他子系统。</strong>在进行性能分析时，将所有子系统当做一个整体来看是非常重要的，因为在子系统中可能会出现瀑布效应。衡量CPU 系统负载的指标是load,load 就是对计算机系统能够承担的多少负载的度量,简单的说是进程队列的长度。简单的例子比如食堂有五个窗口，当有小于五个学生来打饭，五个窗口都能及时处理，但是当学生个数超过5个，必然会出现等待的学生。请求大于当前的处理能力，会出现等待，引起load升高。<br>Load Average 就是一段时间(1min,5min,15min)内平均Load。<strong>平均负载的最佳值是1</strong>，这意味着每个进程都可以在一个完整的CPU 周期内完成。</p>
<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>经反馈发现，虚机环境CentOS系统的CPU负载超过正常水平，并持续升高，经过一晚的时间，负载提升至1000+的水平。</p>
<p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/CPU%E8%B4%9F%E8%BD%BD%E8%BF%87%E9%AB%98.png" alt="CPU负载过高"></p>
<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul>
<li>12c32G vCenter 虚机 * 3台</li>
<li>部署Kubernetes + OpenStack</li>
</ul>
<h2 id="问题定位"><a href="#问题定位" class="headerlink" title="问题定位"></a>问题定位</h2><ol>
<li>通过top查看各CPU使用率，发现CPU各核使用率并不高，说明CPU性能并不是导致拥塞的瓶颈。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看CPU各核使用率</span></span><br><span class="line">top后按1</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/CPU%E4%BD%BF%E7%94%A8%E7%8E%87.png" alt="CPU使用率"></p>
<ol start="2">
<li>计算通常不会存在瓶颈，一般性能瓶颈出在IO处。接下来需要确认是否由于IO问题，导致拥塞，引起负载升高。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> IO监控命令</span></span><br><span class="line">[root@k104 ~]# iostat</span><br><span class="line">[root@k104 ~]# dstat</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 简单磁盘写测速</span></span><br><span class="line">[root@k104 ~]# dd if=/dev/zero of=test.img bs=1M count=1024</span><br><span class="line">1024+0 records in</span><br><span class="line">1024+0 records out</span><br><span class="line">1073741824 bytes (1.1 GB) copied, 0.603499 s, 1.8 GB/s</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>检测发现IO不存在瓶颈，推测可能程序有问题，未正常退出导致cpu load average异常升高。这里先寻找哪个进程有问题，命令如下：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有线程</span></span><br><span class="line">[root@k104 ~]# ps -eLl</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>检查发现cephcsi线程数过多，且都处于S（休眠）状态，统计数量与load average一致，故load average升高由cephcsi线程未正常退出导致。</li>
</ol>
<p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/%E4%BC%91%E7%9C%A0%E7%BA%BF%E7%A8%8B%E8%BF%87%E5%A4%9A.png" alt="休眠线程过多"></p>
<ol start="5">
<li>追踪定位cephcsi线程未正常退出原因，该线程为rook-ceph创建，提供cephfs服务，检查ceph状态。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph状态概况</span></span><br><span class="line">[root@k104 ~]# ceph -s</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph健康详情</span></span><br><span class="line">[root@k104 ~]# ceph health detail</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/ceph%E5%BC%82%E5%B8%B8.png" alt="ceph异常"></p>
<p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/ceph%E5%81%A5%E5%BA%B7%E5%BC%82%E5%B8%B8.png" alt="ceph健康异常"></p>
<ol start="6">
<li>发现cephfs异常，根据报错信息<code>1 mds daemon damaged</code>从网上寻找到如下解决办法：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ceph mds repaired 0</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>Ceph部分组件用途</strong></p>
<ul>
<li><strong>MDS：</strong>Ceph元数据服务器，跟踪文件层次结构并存储只供CephFS使用的元数据。Ceph块设备和RADOS网关不需要元数据。MDS不直接给client提供数据服务。</li>
<li><strong>CephFS：</strong>提供了一个任意大小且兼容POSlX的分布式文件系统。CephFS 依赖Ceph MDS 来跟踪文件层次结构，即元数据。</li>
<li><strong>CSI CephFS plugin：</strong>用来提供CephFS存储卷和挂载存储卷。</li>
</ul>
</blockquote>
<ol start="7">
<li>cephfs问题修复后，重启相关pod，cpu load average问题未出现。</li>
</ol>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://blog.csdn.net/xiaoqiaoq0/article/details/106932338">CPU负载均衡之loadavg计算</a></li>
<li><a href="https://blog.csdn.net/xingjing1226/article/details/81977129">线程的5种状态详解</a></li>
<li><a href="https://www.cnblogs.com/lddbupt/p/5779655.html">cpu load过高问题排查</a></li>
<li><a href="https://blog.csdn.net/canot/article/details/78079085">CPU load过高产生的原因及排查</a></li>
<li><a href="https://www.cnblogs.com/weifeng1463/p/9007369.html">cpu使用率低负载高，原因分析</a></li>
<li><a href="https://juejin.cn/post/6844904173843005447">记一次CPU使用率低负载高的排查过程</a></li>
<li><a href="https://blog.csdn.net/whatday/article/details/108933578">linux 查看线程数的方法</a></li>
<li><a href="https://blog.csdn.net/mayue_web/article/details/106942440">查看Linux的所有线程</a></li>
<li><a href="https://www.cnblogs.com/xrq730/p/11041741.html">对cpu与load的理解及线上问题处理思路解读</a></li>
<li><a href="https://www.jianshu.com/p/94d130b457ce">Linux CPU负载过高问题排查</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CPU</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：GNOME桌面</title>
    <url>/2020/11/09/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AGNOME%E6%A1%8C%E9%9D%A2/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>GNOME是一种<a href="https://baike.baidu.com/item/GNU">GNU</a>网络对象模型环境 ，GNU计划的一部分，开放源码运动的一个重要组成部分，是一种让使用者容易操作和设定电脑环境的工具，目标是基于<a href="https://baike.baidu.com/item/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6">自由软件</a>，为<a href="https://baike.baidu.com/item/Unix">Unix</a>或者<a href="https://baike.baidu.com/item/%E7%B1%BBUnix">类Unix</a>操作系统构造一个功能完善、操作简单以及界面友好的<a href="https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83">桌面环境</a>，是GNU计划的正式桌面。</p>
<p>GNOME可以运行在包括GNU/Linux(通常叫做<a href="https://baike.baidu.com/item/Linux">Linux</a>)，<a href="https://baike.baidu.com/item/Solaris">Solaris</a>，<a href="https://baike.baidu.com/item/HP-UX">HP-UX</a>，<a href="https://baike.baidu.com/item/BSD">BSD</a>和Apple’s Darwin系统上. GNOME 拥有很多强大的特性，如：高质量的平滑文本渲染， 首个国际化和可用性支持， 并且包括对反向文本的支持(注: 有些国家的文字是从右到左的排版的）。</p>
<p>GNOME运行在大多数类Unix系统，并被Sun Microsystems公司采纳为Solaris平台的标准桌面，取代了过时的<a href="https://baike.baidu.com/item/CDE">CDE</a>。Sun Microsystems公司也以Java Desktop System名义发布一个商业版的桌面：一个被SUSELinux系统使用的基于GNOME的桌面。GNOME也移植到Cygwin使其能运行于Microsoft Windows。GNOME 还被众多LiveCDLinux发行版使用，如<a href="https://baike.baidu.com/item/Gnoppix">Gnoppix</a>和Morphix。</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 列出可安装的桌面环境</span></span><br><span class="line">yum grouplist</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看安装的包有哪些内容</span></span><br><span class="line">yum group info  &quot;Graphical Administration Tools&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装GNOME及相应桌面管理工具</span></span><br><span class="line">yum -y groups install &quot;GNOME DESKTOP&quot; &quot;Graphical Administration Tools&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前默认启动模式</span></span><br><span class="line">systemctl get-default</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认启动图形化界面</span></span><br><span class="line">systemctl set-default graphical.target</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置默认启动命令行界面</span></span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令行界面热切换到图形界面</span></span><br><span class="line">init 5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 图形界面热切换到命令行界面</span></span><br><span class="line">init 3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载GNOME</span></span><br><span class="line">yum -y groupremove &quot;GNOME DESKTOP&quot; &quot;Graphical Administration Tools&quot;</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.cnblogs.com/gentsir/p/10300655.html">Centos 7 安装GNOME桌面环境</a></li>
<li><a href="https://blog.csdn.net/wqh0830/article/details/86701379">CentOS-7安装GNOME桌面</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>GNOME</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：HAProxy</title>
    <url>/2021/06/03/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AHAProxy/</url>
    <content><![CDATA[<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="Backend-配置域名"><a href="#Backend-配置域名" class="headerlink" title="Backend 配置域名"></a>Backend 配置域名</h3><p>HAProxy 版本1.6开始支持域名解析功能</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">resolvers</span> <span class="string">mynameservers</span></span><br><span class="line">    <span class="string">nameserver</span> <span class="string">ns1</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.10</span><span class="string">:53</span>                                <span class="comment"># 配置DNS服务器地址，ns1为服务器代号，可自定义</span></span><br><span class="line">    <span class="string">parse-resolv-conf</span>                                           <span class="comment"># 加载主机/etc/resolve.conf文件内的DNS配置信息</span></span><br><span class="line">    <span class="string">resolve_retries</span>       <span class="number">3</span></span><br><span class="line">    <span class="string">timeout</span> <span class="string">resolve</span>       <span class="string">1s</span></span><br><span class="line">    <span class="string">timeout</span> <span class="string">retry</span>         <span class="string">1s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">other</span>           <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">refused</span>         <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">nx</span>              <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">timeout</span>         <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">valid</span>           <span class="string">5s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">obsolete</span>        <span class="string">10s</span></span><br><span class="line"></span><br><span class="line"><span class="string">frontend</span> <span class="string">keystone-admin_front</span></span><br><span class="line">    <span class="string">mode</span> <span class="string">http</span></span><br><span class="line">    <span class="string">http-request</span> <span class="string">del-header</span> <span class="string">X-Forwarded-Proto</span></span><br><span class="line">    <span class="string">option</span> <span class="string">httplog</span></span><br><span class="line">    <span class="string">option</span> <span class="string">forwardfor</span></span><br><span class="line">    <span class="string">http-request</span> <span class="string">set-header</span> <span class="string">X-Forwarded-Proto</span> <span class="string">https</span> <span class="string">if</span> &#123; <span class="string">ssl_fc</span> &#125;</span><br><span class="line">    <span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:5000</span></span><br><span class="line">    <span class="string">default_backend</span> <span class="string">keystone-admin_back</span></span><br><span class="line"></span><br><span class="line"><span class="string">backend</span> <span class="string">keystone-admin_back</span></span><br><span class="line">    <span class="string">mode</span> <span class="string">http</span></span><br><span class="line">    <span class="string">default-server</span> <span class="string">init-addr</span> <span class="string">none</span> <span class="string">resolvers</span> <span class="string">mynameservers</span>        <span class="comment"># 初始域名后端解析地址为空，启动后从DNS服务器获取后端ip后更新解析地址</span></span><br><span class="line">    <span class="string">server</span> <span class="string">keystone-admin</span> <span class="string">keystone-api.openstack.svc.cluster.local:5000</span> <span class="string">check</span> <span class="string">inter</span> <span class="number">2000 </span><span class="string">rise</span> <span class="number">2</span> <span class="string">fall</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>



<h3 id="请求重定向"><a href="#请求重定向" class="headerlink" title="请求重定向"></a>请求重定向</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将所有访问9999端口的请求重定向至指定地址</span></span><br><span class="line"><span class="string">frontend</span> <span class="string">demo</span></span><br><span class="line">    <span class="string">mode</span> <span class="string">http</span></span><br><span class="line">    <span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:9999</span></span><br><span class="line">    <span class="string">redirect</span> <span class="string">location</span> <span class="string">http://keystone.openstack.svc.cluster.local</span></span><br></pre></td></tr></table></figure>



<h3 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h3><p>HAProxy将对应级别的log发送至指定日志服务器，默认为rsyslog日志服务</p>
<ul>
<li>HAProxy配置文件</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">global</span></span><br><span class="line">    <span class="string">log</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="string">local2</span> <span class="string">info</span>                        <span class="comment"># 使用本机local2进行日志记录（可选范围local1 ~ 7），生产环境不推荐开启日志，增加IO负担</span></span><br></pre></td></tr></table></figure>



<ul>
<li>rsyslog配置文件：<code>/etc/rsyslog.conf</code> ，修改后重启 <code>rsyslog</code> 服务</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides UDP syslog reception</span></span><br><span class="line"><span class="string">$ModLoad</span> <span class="string">imudp</span>                                       <span class="comment"># HAProxy基于udp方式发送日志消息，需要加载支持udp协议的模块</span></span><br><span class="line"><span class="string">$UDPServerRun</span> <span class="number">514</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides TCP syslog reception</span></span><br><span class="line"><span class="string">$ModLoad</span> <span class="string">imtcp</span></span><br><span class="line"><span class="string">$InputTCPServerRun</span> <span class="number">514</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Everybody gets emergency messages</span></span><br><span class="line"><span class="comment"># *.emerg                 :omusrmsg:*</span></span><br><span class="line"><span class="string">*.emerg</span>                  <span class="string">/var/log/messages</span>           <span class="comment"># rsyslog默认将严重消息发送至终端，HAProxy后端不可用为严重消息。这里将消息记录至文件内</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Haproxy log</span></span><br><span class="line"><span class="string">local2.*</span>                 <span class="string">/var/log/haproxy.log</span>        <span class="comment"># 将local2的日志记录入文件</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://www.haproxy.org/">HAProxy 官网</a></p>
</li>
<li><p><a href="http://cbonte.github.io/haproxy-dconv/2.4/configuration.html#1">HAProxy 官方文档（version 2.4.0）</a></p>
</li>
<li><p><a href="https://www.haproxy.com/documentation/hapee/latest/configuration/config-sections/resolvers/">HAProxy Resolvers</a></p>
</li>
<li><p><a href="https://phpor.net/blog/post/3812">haproxy 健康检查与域名解析</a></p>
</li>
<li><p><a href="http://www.ttlsa.com/linux/haproxy-study-tutorial/">HAProxy用法详解</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/kevingrace/p/10182538.html">Haproxy 重定向跳转设置 - 运维小结</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/yinzhengjie/p/12114081.html">HAProxy基础配置-haproxy的配置文件说明</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/yinzhengjie/p/12122239.html">HAProxy基础配置-配置haproxy的日志</a></p>
</li>
<li><p><a href="http://www.szl724.com/sysmaint/linux-os/3258.html">HAProxy日志重复记录messages和错误输出到终端的优化</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>HAProxy</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：IPTABLES</title>
    <url>/2021/03/11/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AIPTABLES/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><blockquote>
<p><strong>iptables</strong>其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫<strong>netfilter</strong></p>
<p>netfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。</p>
<p>iptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。</p>
<p>netfilter/iptables（下文中简称为iptables）组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（NAT）等功能。</p>
<p>Netfilter是Linux操作系统核心层内部的一个数据包处理模块，它具有如下功能：</p>
<ul>
<li>网络地址转换(Network Address Translate)</li>
<li>数据包内容修改</li>
<li>以及数据包过滤的防火墙功能</li>
</ul>
<p>所以说，虽然我们使用service iptables start启动iptables”服务”，但是其实准确的来说，iptables并没有一个守护进程，所以并不能算是真正意义上的服务，而应该算是内核提供的功能。</p>
<p>引用自<a href="https://www.zsythink.net/archives/1199">iptables详解（1）：iptables概念</a></p>
</blockquote>
<h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看filter表中INPUT链规则</span></span><br><span class="line">iptables -t filter -L INPUT --line -nxv</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -t  指定表名，默认filter</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -L  指定链名，默认所有链</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -v  查看详细信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -n  不对IP地址进行名称反解析，直接显示IP地址</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --line-numbers  显示规则编号，可简写为--line</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -x  显示精确数值</span></span><br></pre></td></tr></table></figure>



<h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 增加</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 放通从ens192网口来的所有ssh请求</span></span><br><span class="line">iptables -A INPUT -i ens192 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -o ens192 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 处理动作：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ACCEPT：允许数据包通过。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - DROP：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - REJECT：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - SNAT：源地址转换，解决内网用户用同一个公网地址上网的问题。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - MASQUERADE：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - DNAT：目标地址转换。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - REDIRECT：在本机做端口映射。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - LOG：在/var/<span class="built_in">log</span>/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 链名（转至指定链处理）</span></span><br></pre></td></tr></table></figure>



<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 删除</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -t 指定表</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -D 指定链</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;num&gt; 指定规则id</span></span><br><span class="line">iptables -t nat -D POSTROUTING 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除filter表中INPUT链第三条规则</span></span><br><span class="line">iptables -t filter -D INPUT 3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除源地址为192.168.1.146，动作为ACCEPT的规则</span></span><br><span class="line">iptables -t filter -D INPUT -s 192.168.1.146 -j ACCEPT</span><br></pre></td></tr></table></figure>



<h3 id="永久生效"><a href="#永久生效" class="headerlink" title="永久生效"></a>永久生效</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 规则添加至/etc/sysconfig/iptables即可永久保存</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> iptables服务管理</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># iptables规则永久保存</span></span></span><br><span class="line">iptables-save &gt; /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>





<h2 id="常用方式"><a href="#常用方式" class="headerlink" title="常用方式"></a>常用方式</h2><h3 id="路由转发"><a href="#路由转发" class="headerlink" title="路由转发"></a>路由转发</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 路由转发</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -s 指定源网段</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -d 指定目标网段 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -o 指定目标网段的网络接口</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -j MASQUERADE 地址伪装</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24  -d 10.10.1.0/24 -o eth0 -j MASQUERADE</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 服务器开启路由转发需开启内核转发</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 临时配置：<span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/ip_forward</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 永久配置：修改sysctl.conf，设置net.ipv4.ip_forward = 1，执行sysctl -p生效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 客户端设置网关为服务器ip</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> route add -net 10.10.1.0 netmask 255.255.255.0 gw 192.168.1.199</span></span><br></pre></td></tr></table></figure>





<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> start</span></span><br><span class="line">iptables -N IECI-INPUT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> base</span></span><br><span class="line">iptables -I IECI-INPUT -p tcp --dport 22 -j ACCEPT                   # ssh</span><br><span class="line">iptables -I IECI-INPUT -p tcp --sport 22 -j ACCEPT                   # ssh</span><br><span class="line">iptables -I IECI-INPUT -p udp --sport 123 -j ACCEPT                  # chronyd</span><br><span class="line">iptables -I IECI-INPUT -p udp --sport 53 -j ACCEPT                   # dns</span><br><span class="line">iptables -I IECI-INPUT -p udp --dport 53 -j ACCEPT                   # dns</span><br><span class="line">iptables -I IECI-INPUT -p udp --dport 67 -j ACCEPT                   # dhcp,检测不需要（已踢除）</span><br><span class="line">iptables -I IECI-INPUT -p icmp -j ACCEPT                             # ping</span><br><span class="line">iptables -I IECI-INPUT -i lo -j ACCEPT                               # 127.0.0.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> platform</span></span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.47 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.48 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.49 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.50 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.147 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens224 -s 6.6.6.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens224 -s 192.168.206.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens224 -s 169.254.202.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens161 -s 8.8.8.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 1984 -j ACCEPT       # haproxy dashboard</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubernetes</span></span><br><span class="line">iptables -I IECI-INPUT -i docker0 -j ACCEPT                          # docker</span><br><span class="line">iptables -I IECI-INPUT -i kube-ipvs0 -j ACCEPT                       # kubernates ipvs</span><br><span class="line">iptables -I IECI-INPUT -s 10.10.0.0/16 -j ACCEPT                     # pod</span><br><span class="line">iptables -I IECI-INPUT -s 10.96.0.0/12 -j ACCEPT                     # service</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 32000 -j ACCEPT      # kubernates dashboard</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> openstack</span></span><br><span class="line">iptables -I IECI-INPUT --dport 3260 -j ACCEPT                        # iscsi</span><br><span class="line">iptables -I IECI-INPUT --dport 5050 -j ACCEPT                        # ironic inspector</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 30680 -j ACCEPT      # nova vnc</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 31000 -j ACCEPT      # openstack dashboard</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> end</span></span><br><span class="line">iptables -I INPUT -j IECI-INPUT</span><br><span class="line">iptables -P INPUT DROP</span><br></pre></td></tr></table></figure>



<h3 id="iptables文件方式"><a href="#iptables文件方式" class="headerlink" title="iptables文件方式"></a>iptables文件方式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sample configuration <span class="keyword">for</span> iptables service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you can edit this manually or use system-config-firewall</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> please <span class="keyword">do</span> not ask us to add additional ports/services to this default configuration</span></span><br><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">:IECI-INPUT - [0:0]</span><br><span class="line">-A INPUT -j IECI-INPUT</span><br><span class="line">-A IECI-INPUT -i lo -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p icmp -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i docker0 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i kube-ipvs0 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p udp -m udp --sport 53 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p udp -m udp --sport 123 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --sport 22 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 10.10.0.0/16 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 10.96.0.0/12 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.147/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.47/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.48/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.49/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.50/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 30680 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 31000 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 1984 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 32000 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 6.6.6.0/24 -i ens224 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 8.8.8.0/24 -i ens161 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 192.168.206.0/24 -i ens224 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 169.254.202.0/24 -i ens224 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --dport 3260 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --dport 5050 -j ACCEPT</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://www.zsythink.net/archives/tag/iptables/">Iptables详解</a></p>
</li>
<li><p><a href="https://www.linuxprobe.com/25-iptables-common-examples.html">25个iptables常用示例</a></p>
</li>
<li><p><a href="https://blog.csdn.net/lemontree1945/article/details/80598242">Linux开启路由转发功能</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/hixiaowei/p/8954161.html">删除iptables nat 规则</a></p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s/ukmQ7PLU9AxQrcsdJoS1UQ">iptables 防火墙如何记录日志</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>IPTABLES</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：LVM</title>
    <url>/2021/01/19/Linux%E9%85%8D%E7%BD%AE%EF%BC%9ALVM/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote>
<p>​        LVM是 Logical Volume Manager(逻辑卷管理)的简写，它由Heinz Mauelshagen在Linux 2.4内核上实现。LVM将一个或多个硬盘的分区在逻辑上集合，相当于一个大硬盘来使用，当硬盘的空间不够使用的时候，可以继续将其它的硬盘的分区加入其中，这样可以实现磁盘空间的动态管理，相对于普通的磁盘分区有很大的灵活性。</p>
<p>​        与传统的磁盘与分区相比，LVM为计算机提供了更高层次的磁盘存储。它使系统管理员可以更方便的为应用与用户分配存储空间。在LVM管理下的存储卷可以按需要随时改变大小与移除(可能需对文件系统工具进行升级)。LVM也允许按用户组对存储卷进行管理，允许管理员用更直观的名称(如”sales’、 ‘development’)代替物理磁盘名(如’sda’、’sdb’)来标识存储卷。</p>
</blockquote>
<h2 id="LVM基本术语"><a href="#LVM基本术语" class="headerlink" title="LVM基本术语"></a>LVM基本术语</h2><p>前面谈到，LVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：</p>
<ul>
<li><p>物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。</p>
</li>
<li><p>物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</p>
</li>
<li><p>卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个“LVM分区”（逻辑卷），LVM卷组由一个或多个物理卷组成。</p>
</li>
<li><p>逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。</p>
</li>
<li><p>PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。</p>
</li>
<li><p>LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。</p>
</li>
</ul>
<p>简单来说就是：</p>
<ul>
<li>PV:是物理的磁盘分区</li>
<li>VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。</li>
<li>LV：也就是从VG中划分的逻辑分区</li>
</ul>
<p>如下图所示PV、VG、LV三者关系：</p>
<p><img src="/2021/01/19/Linux%E9%85%8D%E7%BD%AE%EF%BC%9ALVM/LVM-1.jpg" alt="LVM关系"></p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 新磁盘分区</span></span><br><span class="line">fdisk /dev/sdb</span><br><span class="line">n         # 新建分区</span><br><span class="line">l         # 选择逻辑分区，如果没有，则首先创建扩展分区，然后再添加逻辑分区（硬盘：最多四个分区P-P-P-P或P-P-P-E）</span><br><span class="line">6         # 分区号（从5开始），/dev/hda6</span><br><span class="line">t    8e   # 分区类型8e表示LVM分区</span><br><span class="line">w         # 写入分区表</span><br><span class="line"></span><br><span class="line">partprobe # 重读分区表</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pv/vg/lv概要信息</span></span><br><span class="line">pvs</span><br><span class="line">vgs</span><br><span class="line">lvs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pv/vg/lv详情</span></span><br><span class="line">pvdisplay</span><br><span class="line">vgdisplay</span><br><span class="line">lvdisplay</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建pv</span></span><br><span class="line">pvcreate /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除pv</span></span><br><span class="line">pvremove /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建vg</span></span><br><span class="line">vgcreate &lt;vg_name&gt; /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 扩容</span></span><br><span class="line">vgextend &lt;vg_name&gt; /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除vg</span></span><br><span class="line">vgremove &lt;vg_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建lv</span></span><br><span class="line">lvcreate &lt;lv_name&gt; &lt;vg_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 扩容lv</span></span><br><span class="line">lvextend -L 250G /dev/mapper/centos-root       # 调整到250G</span><br><span class="line">lvextend -L +250G /dev/mapper/centos-root      # 扩容250G</span><br><span class="line">lvextend -l +100%free /dev/mapper/centos-root  # 将vg剩余空间全部扩容进去</span><br><span class="line">lvcreate -l +100%free -n home centos           # -n 指定lv的名字，centos是vg的名字</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除lv</span></span><br><span class="line">lvremove &lt;lv_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新文件系统</span></span><br><span class="line">resize2fs /dev/mapper/centos-root      # ext4文件系统</span><br><span class="line">xfs_growfs /dev/mapper/centos-root     # xfs文件系统</span><br></pre></td></tr></table></figure>



<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>问题1：</strong>resize2fs报错如下：</p>
<p>resize2fs: Bad magic number in super-block while trying to open /dev/mapper/centos-home<br>Couldn’t find valid filesystem superblock.</p>
<p><strong>原因：</strong>文件系统是xfs（fdisk -l查看），不再支持resize2fs</p>
<p><strong>解决：</strong>使用XFS相应命令，如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xfs_growfs /dev/mapper/centos-root</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://www.cnblogs.com/gaojun/archive/2012/08/22/2650229.html">Linux LVM硬盘管理及LVM扩容</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/-abm/p/11349240.html">CentOS7上lvm分区调整（resize2fs: Bad magic number in super-block while trying to open …）</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>LVM</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：Ubuntu配置网卡</title>
    <url>/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AUbuntu%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><p>系统：Ubuntu 18.04.5 LTS</p>
<p>内核：GNU/Linux 4.15.0-112-generic x86_64</p>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>编辑 <code>/etc/netplan/00-installer-config.yaml</code> ，增加网卡配置信息。PS：不同安装方式，yaml文件名略有不同，需自行在 <code>/etc/netplan/</code> 目录下寻找</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> This is the network config written by <span class="string">&#x27;subiquity&#x27;</span></span></span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens160:</span><br><span class="line">      addresses: [111.111.111.61/24]</span><br><span class="line">      gateway4: 111.111.111.1</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [114.114.114.114]</span><br><span class="line">  version: 2</span><br></pre></td></tr></table></figure>

<p>执行命令 <code>netplan apply</code> 让配置直接生效</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.cnblogs.com/opsprobe/p/9979234.html">Ubuntu18.04的网络配置（静态IP和动态IP）</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：修改网卡名称</title>
    <url>/2021/01/12/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E4%BF%AE%E6%94%B9%E7%BD%91%E5%8D%A1%E5%90%8D%E7%A7%B0/</url>
    <content><![CDATA[<blockquote>
<p>网上资料都是要修改 <code>/etc/default/grub</code> 文件，增加 <code>net.ifnames=0, biosdevname=0</code> 参数。该方法重启后，网卡名称统一变为eth开头，无法达到任意修改的目的。整理如下方法，亲测 Centos 7.8 可行。</p>
</blockquote>
<p>环境信息：CentOS Linux release 7.8.2003 (Core)</p>
<p>网卡信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@renyb: rules.d # ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:63:bf:af brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.1.110/24 brd 192.168.1.255 scope global noprefixroute dynamic mynet1</span><br><span class="line">       valid_lft 6511sec preferred_lft 6511sec</span><br><span class="line">    inet6 fe80::a788:f7ed:8c55:1b9f/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span><br><span class="line">    link/ether 52:54:00:0f:32:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000</span><br><span class="line">    link/ether 52:54:00:0f:32:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line"></span><br><span class="line">root@renyb: rules.d # nmcli connection show</span><br><span class="line">NAME    UUID                                  TYPE      DEVICE</span><br><span class="line">ens33   b40bd401-b463-4d44-ab63-247307f2a2d6  ethernet  ens33</span><br><span class="line">virbr0  7f07fa4e-e769-4fd1-ab39-1b70c27a0952  bridge    virbr0</span><br></pre></td></tr></table></figure>





<h2 id="临时配置"><a href="#临时配置" class="headerlink" title="临时配置"></a>临时配置</h2><p>通过 <code>ip</code> 命令进行配置，重启失效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看网络设备信息</span></span><br><span class="line">nmcli connection show</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> down网卡</span></span><br><span class="line">ip link set dev ens33 down</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡DEVICE名称（ens33为设备名称）</span></span><br><span class="line">ip link set dev ens33 name mynet1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡NAME（ens33为网卡名称）</span></span><br><span class="line">nmcli connection modify ens33 connection.id mynet1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动网卡</span></span><br><span class="line">ip link set mynet1 up</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新加载网络设备信息</span></span><br><span class="line">nmcli connection reload</span><br></pre></td></tr></table></figure>





<h2 id="永久配置"><a href="#永久配置" class="headerlink" title="永久配置"></a>永久配置</h2><p>通过 <code>udev</code> 实现。Centos系统中，规则目录如下：</p>
<ul>
<li>系统规则：<code>/usr/lib/udev/rules.d/</code></li>
<li>自定义规则：<code>/etc/udev/rules.d</code></li>
</ul>
<h3 id="udev解析"><a href="#udev解析" class="headerlink" title="udev解析"></a>udev解析</h3><p>网卡相关udev的rule执行流程：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 用户自定义为优先级最高</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 依据/usr/lib/udev/rules.d/60-net.rules， 查看是否有ifcfg-xx配置文件（路径在/etc/sysconfig/network-scripts/),是否有定义了指定MAC地址的配置文件（ifcfg-xx ，xx必须和配置文件的内容DEVICE一致），如果有，则命名改网卡</span></span><br><span class="line">/usr/lib/udev/rules.d/60-net.rules</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 依据/usr/lib/udev/rules.d/71-biosdevname.rules，如果biosdevname使能了（安装了biosdevname这个包，且内核启动参数显式设置为1），且网卡没有在step1中定义，则按照biosdevname命名规则rename网卡；（注意，如果没有安装biosdevname这个包，就没有这个文件）</span></span><br><span class="line">/usr/lib/udev/rules.d/71-biosdevname.rules</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 依据/lib/udev/rules.d/75-net-description.rules，将udev工具会根据device属性将填写网卡的属性命名，可能一个网卡会有多个维度的名称哦</span></span><br><span class="line">/lib/udev/rules.d/75-net-description.rules</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> udev 根据step3中的赋值，按照指定的scheme规则，去给在step1 step2中没有命名的网卡命名</span></span><br><span class="line">/usr/lib/udev/rules.d/80-net-name-slot.rules</span><br></pre></td></tr></table></figure>



<h3 id="重命名流程"><a href="#重命名流程" class="headerlink" title="重命名流程"></a>重命名流程</h3><ol>
<li>新建文件：<code>/etc/udev/rules.d/70-persistent-net.rules</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> This is a sample udev rules file that demonstrates how to get udev to</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> the name of IPoIB interfaces to whatever you wish.  There is a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 16 character <span class="built_in">limit</span> on network device names.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Important items to note: ATTR&#123;<span class="built_in">type</span>&#125;==<span class="string">&quot;32&quot;</span> is IPoIB interfaces, and the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ATTR&#123;address&#125; match must start with ?* and only reference the last 8</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bytes of the address or <span class="keyword">else</span> the address might not match the variable QPN</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> portion.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Modern udev is <span class="keyword">case</span> sensitive and all addresses need to be <span class="keyword">in</span> lower <span class="keyword">case</span>.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ACTION==<span class="string">&quot;add&quot;</span>, SUBSYSTEM==<span class="string">&quot;net&quot;</span>, DRIVERS==<span class="string">&quot;?*&quot;</span>, ATTR&#123;<span class="built_in">type</span>&#125;==<span class="string">&quot;32&quot;</span>, ATTR&#123;address&#125;==<span class="string">&quot;?*00:02:c9:03:00:31:78:f2&quot;</span>, NAME=<span class="string">&quot;mlx4_ib3&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ATTR&#123;address&#125;: mac address</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NAME: device name</span></span><br><span class="line">ACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;type&#125;==&quot;1&quot;, ATTR&#123;address&#125;==&quot;00:0c:29:63:bf:af&quot;, NAME=&quot;mynet1&quot;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改网卡配置文件：<code>/etc/sysconfig/network-scripts/ifcfg-ens33</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@renyb: network-scripts # pwd</span><br><span class="line">/etc/sysconfig/network-scripts</span><br><span class="line">root@renyb: network-scripts # cat ifcfg-ens33</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡NAME</span></span><br><span class="line">NAME=mynet1</span><br><span class="line">UUID=b40bd401-b463-4d44-ab63-247307f2a2d6</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改网卡DEVICE NAME</span></span><br><span class="line">DEVICE=mynet1</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPV6_PRIVACY=no</span><br><span class="line">root@renyb: network-scripts # # 修改网卡配置文件名称</span><br><span class="line">root@renyb: network-scripts # mv ifcfg-ens33 ifcfg-mynet1</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://www.cnblogs.com/boltkiller/p/12696501.html">任意修改CentOS下网卡的显示名称和设备名称</a></p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/33932734">在 Linux 中如何编写基本的 udev 规则</a></p>
</li>
<li><p><a href="https://blog.csdn.net/u010039418/article/details/79260553">CentOS 7.4系统修改网卡名称</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/yinfutao/p/9634350.html">Linux系统修改网卡名（eth0-3）</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>网卡</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：VNC Server</title>
    <url>/2020/11/09/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AVNC-Server/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>VNC</strong> (Virtual Network Console)，即 <strong>虚拟网络控制台</strong>。它是一款优秀的远程控制工具软件，而且是基于 UNIX 和 Linux 操作系统的<strong>免费开源</strong>的。</p>
<blockquote>
<p><strong>1、优点</strong><br>远程控制能力强大，高效实用，其性能可以和 Windows 和 MAC 中的任何远程控制软件媲美</p>
</blockquote>
<blockquote>
<p><strong>2、VNC基本上是由两部分组成</strong></p>
<ul>
<li>一部分是客户端的应用程序(vncviewer)；</li>
<li>另外一部分是服务器端的应用程序(vncserver)；</li>
</ul>
</blockquote>
<blockquote>
<p><strong>3、特点</strong></p>
<ul>
<li>同样可以远程连入UNIX、Linux进行图形化操作的还有流行的Xmanager，VNC与之相比——两者工作原理不一样；</li>
<li><strong>VNC</strong> 是远程连入操作系统，所有操作在UNIX、Linux主机服务端进行，即使操作过程中“本地电脑与操作主机网络断开”，也不影响操作的顺利进行；</li>
<li><strong>Xmanager</strong> 是通过端口将主机服务器的UI界面引导到本地电脑进行展现，如操作过程出现“本地电脑与操作主机网络断开”，操作将中断失败！如果操作中进行的工作任务非常重要，不能中断，如ORACLE RAC实施，结果是灾难性的；</li>
<li>更重要的是，VNC是免费的、开源的，Xmanager收费的；</li>
</ul>
</blockquote>
<blockquote>
<p><strong>4、工作流程</strong></p>
<ul>
<li>（1）在服务器端启动 VNC Server。</li>
<li>（2）VNC客户端通过浏览器或 VNC Viewer 连接至VNC Server；</li>
<li>（3）VNC Server传送一对话窗口至客户端，要求输入连接密码， 以及存取的VNC Server显示装置。</li>
<li>（4）在客户端输入联机密码后，VNC Server验证客户端是否具有存取权限。</li>
<li>（5）若是客户端通过 VNC Server 的验证，客户端即要求VNC Server显示桌面环境。</li>
<li>（6）VNC Server通过X Protocol 要求X Server将画面显示控制权交由VNC Server负责。</li>
<li>（7）VNC Server将来由 X Server 的桌面环境利用VNC通信协议送至客户端， 并且允许客户端控制VNC Server的桌面环境及输入装置。</li>
</ul>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>VNC RPM ( rpm -qa | grep vnc )：<ul>
<li>tigervnc-icons-1.8.0-19.el7.noarch</li>
<li>tigervnc-server-1.8.0-19.el7.x86_64</li>
<li>gtk-vnc2-0.7.0-3.el7.x86_64</li>
<li>tigervnc-license-1.8.0-19.el7.noarch</li>
<li>gvnc-0.7.0-3.el7.x86_64</li>
<li>tigervnc-server-minimal-1.8.0-19.el7.x86_64</li>
<li>tigervnc-1.8.0-19.el7.x86_64</li>
</ul>
</li>
</ul>
<h3 id="VNC-服务端安装"><a href="#VNC-服务端安装" class="headerlink" title="VNC 服务端安装"></a>VNC 服务端安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 检查服务器是否安装了 VNC</span></span><br><span class="line">rpm -qa | grep vnc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装VNC</span></span><br><span class="line">yum install tigervnc tigervnc-server -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看VNC Server模板配置文件</span></span><br><span class="line">cat /lib/systemd/system/vncserver@.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Quick HowTo:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. Copy this file to /etc/systemd/system/vncserver@.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. Replace &lt;USER&gt; with the actual user name and edit vncserver</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    parameters <span class="keyword">in</span> the wrapper script located <span class="keyword">in</span> /usr/bin/vncserver_wrapper</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. Run `systemctl daemon-reload`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. Run `systemctl <span class="built_in">enable</span> vncserver@:&lt;display&gt;.service`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;USER&gt; 配置登录远程桌面的用户名</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;display&gt; 配置登录远程桌面的端口</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VNC 的默认监听端口是 5900，监听端口规则为590+usernumber【如 1:root对应端口号5901】</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cp vnc config</span></span><br><span class="line">cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> update config</span></span><br><span class="line">sed -i &#x27;s/&lt;USER&gt;/root/&#x27; /etc/systemd/system/vncserver@.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> vnc password</span></span><br><span class="line">vncpasswd</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable vncserver@:1.service</span><br><span class="line">systemctl start vncserver@:1.service</span><br><span class="line">systemctl status vncserver@:1.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> check port</span></span><br><span class="line">netstat -lantu | grep 5901</span><br></pre></td></tr></table></figure>



<h3 id="VNC-客户端安装"><a href="#VNC-客户端安装" class="headerlink" title="VNC 客户端安装"></a>VNC 客户端安装</h3><p>下载地址：<a href="https://www.realvnc.com/en/connect/download/viewer/">https://www.realvnc.com/en/connect/download/viewer/</a></p>
<p>VNC address：<code>&lt;ip&gt;:&lt;port&gt;</code></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://blog.csdn.net/llag_haveboy/article/details/84960479">Linux 上安装配置 VNC Server</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VNC</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：开启大页内存</title>
    <url>/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E5%BC%80%E5%90%AF%E5%A4%A7%E9%A1%B5%E5%86%85%E5%AD%98/</url>
    <content><![CDATA[<h2 id="大页内存"><a href="#大页内存" class="headerlink" title="大页内存"></a>大页内存</h2><h3 id="Centos-开启大页内存"><a href="#Centos-开启大页内存" class="headerlink" title="Centos 开启大页内存"></a>Centos 开启大页内存</h3><blockquote>
<p>系统：CentOS Linux release 7.7.1908 (Core)</p>
</blockquote>
<p>编辑 <code>/etc/default/grub</code> ，在 <code>GRUB_CMDLINE_LINUX</code> 字段增加如下：</p>
<ul>
<li><code>default_hugepagesz</code> ：默认大页每页大小</li>
<li><code>hugepagesz</code> ：大页每页大小，可选值：4K、2M（默认）、1G</li>
<li><code>hugepages</code> ：大页数量</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)&quot;</span><br><span class="line">GRUB_DEFAULT=saved</span><br><span class="line">GRUB_DISABLE_SUBMENU=true</span><br><span class="line">GRUB_TERMINAL_OUTPUT=&quot;console&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rd.lvm.lv=centos_centos/root rd.lvm.lv=centos_centos/swap rhgb quiet&quot;</span><br><span class="line">GRUB_DISABLE_RECOVERY=&quot;true&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet intel_iommu=off default_hugepagesz=1G hugepagesz=1G hugepages=40&quot;</span><br></pre></td></tr></table></figure>

<p>重新生成grub文件，重启host</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg</span><br></pre></td></tr></table></figure>



<h3 id="Ubuntu-开启大页内存"><a href="#Ubuntu-开启大页内存" class="headerlink" title="Ubuntu 开启大页内存"></a>Ubuntu 开启大页内存</h3><blockquote>
<p>系统：Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-112-generic x86_64)</p>
</blockquote>
<p>编辑 <code>/etc/default/grub</code> ，在 <code>GRUB_CMDLINE_LINUX</code> 字段增加如下：</p>
<ul>
<li><code>default_hugepagesz</code> ：默认大页每页大小</li>
<li><code>hugepagesz</code> ：大页每页大小，可选值：4K、2M（默认）、1G</li>
<li><code>hugepages</code> ：大页数量</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> If you change this file, run <span class="string">&#x27;update-grub&#x27;</span> afterwards to update</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /boot/grub/grub.cfg.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For full documentation of the options <span class="keyword">in</span> this file, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   info -f grub -n <span class="string">&#x27;Simple configuration&#x27;</span></span></span><br><span class="line"></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT_STYLE=hidden</span><br><span class="line">GRUB_TIMEOUT=0</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;default_hugepagesz=1G hugepagesz=1G hugepages=2&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">enable</span> BadRAM filtering, modify to suit your needs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This works with Linux (no patch required) and with any kernel that obtains</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_BADRAM=<span class="string">&quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">disable</span> graphical terminal (grub-pc only)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_TERMINAL=console</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The resolution used on graphical terminal</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> note that you can use only modes <span class="built_in">which</span> your graphic card supports via VBE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you can see them <span class="keyword">in</span> real GRUB with the <span class="built_in">command</span> `vbeinfo<span class="string">&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_GFXMODE=640x480</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment <span class="keyword">if</span> you don<span class="string">&#x27;t want GRUB to pass &quot;root=UUID=xxx&quot; parameter to Linux</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_DISABLE_LINUX_UUID=<span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">disable</span> generation of recovery mode menu entries</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_DISABLE_RECOVERY=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to get a beep at grub start</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_INIT_TUNE=<span class="string">&quot;480 440 1&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>执行 <code>update-grub</code> ，生效配置</p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>查看系统大页内存，<code>HugePages_Total = hugepagesz * hugepages </code> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS</span></span><br><span class="line">[root@k134 ~]# cat /proc/meminfo | grep -i huge</span><br><span class="line">HugePages_Total:     100</span><br><span class="line">HugePages_Free:       83</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:    1048576 kB</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Ubuntu</span></span><br><span class="line">root@inspur:~# cat /proc/meminfo | grep -i huge</span><br><span class="line">AnonHugePages:         0 kB</span><br><span class="line">ShmemHugePages:        0 kB</span><br><span class="line">HugePages_Total:      15</span><br><span class="line">HugePages_Free:       15</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:    1048576 kB</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://blog.csdn.net/yutianzuijin/article/details/41912871">大页内存(HugePages)在通用程序优化中的应用</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>大页内存</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux配置：远程服务器通过本机代理联网</title>
    <url>/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>解决问题如下：</p>
<p>线上服务器无法访问公网，申请公网访问流程过于复杂，部署环境又需要连接公网来安装包，可使用本方式配置代理联网。</p>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><ol>
<li>通过<code>Fiddler</code>，在本地Windows机器上启动HTTP代理服务</li>
<li>通过Xshell/MobaXterm等远程连接软件，建立<code>SSH Tunnel</code></li>
<li>连接远程服务器后，在服务器设置<code>http_proxy</code> <code>https_proxy</code> <code>no_proxy</code></li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%90%86%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt="远程代理架构图"></p>
<h2 id="资源包"><a href="#资源包" class="headerlink" title="资源包"></a>资源包</h2><p><strong>Fiddler</strong></p>
<ul>
<li>链接：<a href="https://pan.baidu.com/s/1-0wsdRkJ6MsDG7MvvvZVLQ">https://pan.baidu.com/s/1-0wsdRkJ6MsDG7MvvvZVLQ</a> </li>
<li>提取码：x0cc </li>
</ul>
<h2 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h2><h3 id="1-部署Fiddler"><a href="#1-部署Fiddler" class="headerlink" title="1. 部署Fiddler"></a>1. 部署Fiddler</h3><p>下载并解压Fiddler至本地文件夹，双击<code>Fiddler.exe</code>运行Fiddler，对Fiddler做如下配置：</p>
<ul>
<li>勾选允许远程计算机连接</li>
</ul>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%83%A8%E7%BD%B2Fiddler.png" alt="部署Fiddler"></p>
<h3 id="2-配置SSH工具"><a href="#2-配置SSH工具" class="headerlink" title="2. 配置SSH工具"></a>2. 配置SSH工具</h3><h5 id="MobaXterm"><a href="#MobaXterm" class="headerlink" title="MobaXterm"></a>MobaXterm</h5><ol>
<li>点击<code>Tunneling</code>，进入<code>SSH Tunneling</code>设置页面</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEMobaXterm-1.png" alt="配置MobaXterm-1"></p>
<ol start="2">
<li>点击<code>New SSH tunnel</code>，创建新的SSH tunnel</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEMobaXterm-2.png" alt="配置MobaXterm-2"></p>
<ol start="3">
<li>点击<code>Remote port forwarding</code>，设置远程代理，填写如下参数：<ul>
<li>Local server：port使用Fiddler中启动的本地代理端口（ <code>hostname</code> + <code>port</code> ）</li>
<li>SSH server：远程SSH登录信息（ <code>ip</code> + <code>port</code> + <code>username</code> ）</li>
<li>Remote clients：填写远端服务器的一个端口，程序会在远程服务器启动该端口用于转发（<code>forwarded port</code>）</li>
</ul>
</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEMobaXterm-3.png" alt="配置MobaXterm-3"></p>
<h5 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h5><ol>
<li>进入ssh连接属性页面，<code> 连接</code> –&gt; <code>SSH</code> –&gt; <code>隧道</code>，点击添加 </li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEXshell-1.png" alt="配置Xshell-1"></p>
<ol start="2">
<li>修改源主机信息，填写远程ssh的ip，侦听端口随便定义，远程主机会将http请求转发至该端口，进行网络访问</li>
</ol>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEXshell-2.png" alt="配置Xshell-2"></p>
<p><img src="/2020/11/17/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E8%BF%87%E6%9C%AC%E6%9C%BA%E4%BB%A3%E7%90%86%E8%81%94%E7%BD%91/%E9%85%8D%E7%BD%AEXshell-3.png" alt="配置Xshell-3"></p>
<h3 id="3-配置远端服务器"><a href="#3-配置远端服务器" class="headerlink" title="3. 配置远端服务器"></a>3. 配置远端服务器</h3><p>参考系统：<code>CentOS Linux release 7.6.1810</code></p>
<ul>
<li><p>临时配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 代理端口使用SSH tunnel中remote clients部分配置的forwarded port</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置环境变量</span></span><br><span class="line">export https_proxy=https://127.0.0.1:8888</span><br><span class="line">export http_proxy=http://127.0.0.1:8888</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试网络访问</span></span><br><span class="line">curl www.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> HTTP与HTTPS可正常访问，ping公网ip是不通的，正常yum安装满足需求</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>永久配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt; /etc/environment &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认http访问均走如下代理</span></span><br><span class="line">http_proxy=&quot;http://127.0.0.1:8888&quot;</span><br><span class="line">https_proxy=&quot;https://127.0.0.1:8888&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问以下ip不经过代理</span></span><br><span class="line">no_proxy=&quot;localhost,127.0.0.1&quot;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>




</li>
</ul>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="问题：代理突然连不上网"><a href="#问题：代理突然连不上网" class="headerlink" title="问题：代理突然连不上网"></a>问题：代理突然连不上网</h3><p>解决方法：</p>
<ol>
<li><p>远程服务器检查8888端口是否有异常状态的连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -tunlp | grep 8888</span><br></pre></td></tr></table></figure>

</li>
</ol>
<ol start="2">
<li><p>正常状态输出如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tcp        0      0 127.0.0.1:8888          0.0.0.0:*               LISTEN      18860/sshd: boco4a</span><br></pre></td></tr></table></figure>
</li>
<li><p>异常状态会存在多个异常状态TCP连接（如TIME_WITE，CLOSE_WITE等）占用8888端口，使用<code>kill -9 &lt;pid&gt;</code>杀掉进程，重新建立SSH tunnel连接即可</p>
</li>
</ol>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.jianshu.com/p/75bf2dc43450">如何用fiddler进行代理设置</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB使用：通用手册</title>
    <url>/2021/07/27/MongoDB%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>参考：<a href="https://www.runoob.com/mongodb/mongodb-linux-install.html">https://www.runoob.com/mongodb/mongodb-linux-install.html</a></p>
<p>下载：<a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a></p>
<h2 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h2><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongo 192.168.122.12:27017/admin -u admin -p inspur@123</span><br></pre></td></tr></table></figure>



<h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建admin用户</span></span><br><span class="line">&gt; db.createUser(&#123;user:&quot;admin&quot;,pwd:&quot;inspur@123&quot;,roles:[&#123;&quot;role&quot;:&quot;userAdminAnyDatabase&quot;,&quot;db&quot;:&quot;admin&quot;&#125;]&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有用户</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>通用手册</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL使用：通用手册</title>
    <url>/2021/07/27/MySQL%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>参考：<a href="https://www.runoob.com/mysql/mysql-install.html">https://www.runoob.com/mysql/mysql-install.html</a></p>
<p>下载：<a href="http://repo.mysql.com/">http://repo.mysql.com/</a></p>
<h2 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h2><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -pinspur@123 -h 111.111.19.236</span><br></pre></td></tr></table></figure>



<h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 允许用户远程登录（mysql 8.x）</span></span><br><span class="line"><span class="keyword">UPDATE</span> mysql.user <span class="keyword">SET</span> host = <span class="string">&#x27;%&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># PS：需退出重连</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户远程登录（mysql 5.7）</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;Inspur@123&#x27;</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure>



<h3 id="查询状态"><a href="#查询状态" class="headerlink" title="查询状态"></a>查询状态</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看全局参数</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询状态</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">STATUS</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询支持的存储引擎</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">ENGINES</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询指定存储引擎状态</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">ENGINE</span> <span class="keyword">INNODB</span> <span class="keyword">STATUS</span>;</span><br></pre></td></tr></table></figure>



<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>问题 1：</strong>初始化后，重置root密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 初始化方式：mysqld --initialize</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看初始化密码</span></span><br><span class="line">[root@localhost log]# cat /var/log/mysqld.log  | grep &#x27;temporary password&#x27;</span><br><span class="line">2021-07-27T07:56:26.750789Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: t-:33aMYyaC+</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改root密码</span></span><br><span class="line">[root@localhost log]# mysqladmin -uroot -p&#x27;t-:33aMYyaC+&#x27; password Inspur@123</span><br></pre></td></tr></table></figure>



<p><strong>问题 2：</strong>MySQL服务无法启动，<code>/var/log/mysqld.log</code> 中有如下报错，关键内容为： <code>Can&#39;t determine file permissions</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2021-10-19T09:00:38.314740Z 0 [ERROR] InnoDB: Operating system error number 13 in a file operation.</span><br><span class="line">2021-10-19T09:00:38.314766Z 0 [ERROR] InnoDB: The error means mysqld does not have the access rights to the directory.</span><br><span class="line">2021-10-19T09:00:38.314772Z 0 [ERROR] InnoDB: os_file_get_status() failed on &#x27;./ibdata1&#x27;. Can&#x27;t determine file permissions</span><br><span class="line">2021-10-19T09:00:38.314781Z 0 [ERROR] InnoDB: Plugin initialization aborted with error Generic error</span><br><span class="line">2021-10-19T09:00:39.415592Z 0 [ERROR] Plugin &#x27;InnoDB&#x27; init function returned error.</span><br><span class="line">2021-10-19T09:00:39.415630Z 0 [ERROR] Plugin &#x27;InnoDB&#x27; registration as a STORAGE ENGINE failed.</span><br><span class="line">2021-10-19T09:00:39.415636Z 0 [ERROR] Failed to initialize builtin plugins.</span><br><span class="line">2021-10-19T09:00:39.415642Z 0 [ERROR] Aborting</span><br></pre></td></tr></table></figure>

<p><strong>解决：</strong>关闭selinux</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>通用手册</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL测试：性能基准测试</title>
    <url>/2021/10/13/MySQL%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="常见指标"><a href="#常见指标" class="headerlink" title="常见指标"></a>常见指标</h2><ul>
<li>TPS：单位时间内所处理的事务数</li>
<li>QPS：单位时间内所处理的查询数</li>
<li>Latency：响应时延，通常参考95%请求所在的响应时延。</li>
<li>并发量：同时处理的查询请求数量</li>
</ul>
<h2 id="测试软件"><a href="#测试软件" class="headerlink" title="测试软件"></a>测试软件</h2><p>通常使用 <code>sysbench</code> 测试MySQL性能。sysbench是一款开源的多线程性能测试工具，由C语言编写，可以执行CPU、内存、线程、IO、数据库等方面的性能测试。</p>
<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><ul>
<li><strong>规格：</strong>4C8G，100G数据盘</li>
<li><strong>系统：</strong>CentOS Linux release 7.9.2009 (Core)</li>
<li><strong>MySQL版本：</strong>Percona Server 5.7.35-38</li>
<li><strong>sysbench版本：</strong>1.0.20</li>
</ul>
<h2 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h2><h3 id="编译安装sysbench"><a href="#编译安装sysbench" class="headerlink" title="编译安装sysbench"></a>编译安装sysbench</h3><p>本文以“sysbench-1.0.20”版本、数据库以Percona Server为例，下载源码，并编译安装。</p>
<ol>
<li><p>下载地址：</p>
<ul>
<li>sysbench源码：<a href="https://github.com/akopytov/sysbench/releases">https://github.com/akopytov/sysbench/releases</a></li>
<li>Percona Server 5.7.35-38：<a href="https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA">https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA</a>   提取码：8p8f</li>
</ul>
</li>
<li><p>Percona Server需要安装如下rpm包：</p>
<ul>
<li>ePercona-Server-devel-57-5.7.35-38.1.el7.x86_64.rpm（提供mysql_config命令及sysbench所需要的软件库）</li>
<li>Percona-Server-client-57-5.7.35-38.1.el7.x86_64.rpm</li>
<li>Percona-Server-server-57-5.7.35-38.1.el7.x86_64.rpm</li>
<li>Percona-Server-shared-57-5.7.35-38.1.el7.x86_64.rpm</li>
<li>Percona-Server-shared-compat-57-5.7.35-38.1.el7.x86_64.rpm</li>
</ul>
</li>
<li><p>安装sysbench的依赖包。</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install gcc gcc-c++ automake make libtool -y</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>查询Percona Server的库文件保存路径，记录回显信息中的“pkgincludedir”和“pkglibdir”的值，供后续步骤使用。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mysql-5 ~]# mysql_config --help</span><br><span class="line">Usage: /usr/bin/mysql_config-64 [OPTIONS]</span><br><span class="line">Compiler: GNU 4.8.5</span><br><span class="line">Options:</span><br><span class="line">        --cflags         [-I/usr/include/mysql -m64 ]</span><br><span class="line">        --cxxflags       [-I/usr/include/mysql -m64 ]</span><br><span class="line">        --include        [-I/usr/include/mysql]</span><br><span class="line">        --libs           [-L/usr/lib64/mysql -lmysqlclient -lpthread -lz -lm -lrt -lcoredumper -lssl -lcrypto -ldl]</span><br><span class="line">        --libs_r         [-L/usr/lib64/mysql -lmysqlclient -lpthread -lz -lm -lrt -lcoredumper -lssl -lcrypto -ldl]</span><br><span class="line">        --plugindir      [/usr/lib64/mysql/plugin]</span><br><span class="line">        --socket         [/var/lib/mysql/mysql.sock]</span><br><span class="line">        --port           [0]</span><br><span class="line">        --version        [5.7.35-38]</span><br><span class="line">        --libmysqld-libs [-L/usr/lib64/mysql -l ]</span><br><span class="line">        --variable=VAR   VAR is one of:</span><br><span class="line">                pkgincludedir [/usr/include/mysql]</span><br><span class="line">                pkglibdir     [/usr/lib64/mysql]</span><br><span class="line">                plugindir     [/usr/lib64/mysql/plugin]</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>下载并安装sysbench。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载sysbench源码</span></span><br><span class="line">wget https://github.com/akopytov/sysbench/archive/refs/tags/1.0.20.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf sysbench-1.0.20.tar.gz &amp;&amp; cd sysbench-1.0.20</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置及生成编译文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - “/usr/include/mysql”为步骤3中查到的“pkgincludedir”的值。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - “/usr/lib64/mysql” 为步骤3中查到的“pkglibdir”的值。</span></span><br><span class="line">./autogen.sh</span><br><span class="line">./configure --with-mysql-includes=/usr/include/mysql --with-mysql-libs=/usr/lib64/mysql --with-mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证sysbench</span></span><br><span class="line">sysbench --version</span><br></pre></td></tr></table></figure>



<h3 id="MySQL数据库准备"><a href="#MySQL数据库准备" class="headerlink" title="MySQL数据库准备"></a>MySQL数据库准备</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 允许用户远程登录（mysql 5.7）</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;Inspur@123&#x27;</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建测试数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> sbtest;</span><br></pre></td></tr></table></figure>



<h3 id="清理缓存及swap"><a href="#清理缓存及swap" class="headerlink" title="清理缓存及swap"></a>清理缓存及swap</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">sync</span><br><span class="line">echo 3 &gt;/proc/sys/vm/drop_caches</span><br><span class="line">swapoff -a &amp;&amp; swapon -a</span><br></pre></td></tr></table></figure>



<h3 id="清理并加载测试数据"><a href="#清理并加载测试数据" class="headerlink" title="清理并加载测试数据"></a>清理并加载测试数据</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清理测试数据</span></span><br><span class="line">sysbench /root/sysbench-1.0.20/src/lua/oltp_read_write.lua \</span><br><span class="line">  --db-driver=mysql --mysql-host=127.0.0.1 \</span><br><span class="line">  --mysql-port=3306 --mysql-user=root \</span><br><span class="line">  --mysql-password=&#x27;Inspur@123&#x27; \</span><br><span class="line">  --table_size=500000 --tables=4 \</span><br><span class="line">  --threads=1 --report-interval=2 cleanup</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载测试数据</span></span><br><span class="line">sysbench /root/sysbench-1.0.20/src/lua/oltp_read_write.lua \</span><br><span class="line">  --db-driver=mysql --mysql-host=127.0.0.1 \</span><br><span class="line">  --mysql-port=3306 --mysql-user=root \</span><br><span class="line">  --mysql-password=&#x27;Inspur@123&#x27; \</span><br><span class="line">  --table_size=500000 --tables=4 \</span><br><span class="line">  --threads=1 --report-interval=2 prepare</span><br></pre></td></tr></table></figure>



<h2 id="测试开始"><a href="#测试开始" class="headerlink" title="测试开始"></a>测试开始</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 运行测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 数据量必须与加载的数据量一致，否则测出来的数据没有参考价值。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 并发数由 --threads 参数控制。</span></span><br><span class="line">sysbench /root/sysbench-1.0.20/src/lua/oltp_read_write.lua \</span><br><span class="line">  --db-driver=mysql --mysql-host=127.0.0.1 \</span><br><span class="line">  --mysql-port=3306 --mysql-user=root \</span><br><span class="line">  --mysql-password=&#x27;Inspur@123&#x27; \</span><br><span class="line">  --table_size=500000 --tables=4 \</span><br><span class="line">  --threads=1 --report-interval=2 run</span><br></pre></td></tr></table></figure>



<h2 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h2><p>以如下24线程测试结果解析该数据库性能数据：</p>
<ul>
<li>TPS：1427.66</li>
<li>QPS：28553.18</li>
<li>Latency（95th percentile）：41.85</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)</span><br><span class="line"></span><br><span class="line">Running the test with following options:</span><br><span class="line">Number of threads: 24</span><br><span class="line">Report intermediate results every 2 second(s)</span><br><span class="line">Initializing random number generator from current time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Initializing worker threads...</span><br><span class="line"></span><br><span class="line">Threads started!</span><br><span class="line"></span><br><span class="line">[ 2s ] thds: 24 tps: 1467.54 qps: 29452.70 (r/w/o: 20636.07/5871.16/2945.47) lat (ms,95%): 44.98 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 4s ] thds: 24 tps: 1094.50 qps: 21940.91 (r/w/o: 15363.94/4386.48/2190.49) lat (ms,95%): 44.98 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 6s ] thds: 24 tps: 1529.42 qps: 30551.81 (r/w/o: 21378.82/6115.16/3057.83) lat (ms,95%): 38.25 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 8s ] thds: 24 tps: 1524.10 qps: 30495.54 (r/w/o: 21350.93/6095.41/3049.20) lat (ms,95%): 40.37 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 10s ] thds: 19 tps: 1523.76 qps: 30353.84 (r/w/o: 21226.75/6091.06/3036.03) lat (ms,95%): 42.61 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">SQL statistics:</span><br><span class="line">    queries performed:</span><br><span class="line">        read:                            200410</span><br><span class="line">        write:                           57260</span><br><span class="line">        other:                           28630</span><br><span class="line">        total:                           286300</span><br><span class="line">    transactions:                        14315  (1427.66 per sec.)</span><br><span class="line">    queries:                             286300 (28553.18 per sec.)</span><br><span class="line">    ignored errors:                      0      (0.00 per sec.)</span><br><span class="line">    reconnects:                          0      (0.00 per sec.)</span><br><span class="line"></span><br><span class="line">General statistics:</span><br><span class="line">    total time:                          10.0257s</span><br><span class="line">    total number of events:              14315</span><br><span class="line"></span><br><span class="line">Latency (ms):</span><br><span class="line">         min:                                    2.12</span><br><span class="line">         avg:                                   16.76</span><br><span class="line">         max:                                  608.98</span><br><span class="line">         95th percentile:                       41.85</span><br><span class="line">         sum:                               239986.30</span><br><span class="line"></span><br><span class="line">Threads fairness:</span><br><span class="line">    events (avg/stddev):           596.4583/16.73</span><br><span class="line">    execution time (avg/stddev):   9.9994/0.01</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://support.huaweicloud.com/prtg-kunpengat/sysbench_01_0001.html#:~:text=%E7%BC%96%E8%AF%91%E5%92%8C%E5%AE%89%E8%A3%85%201%20%E5%AE%89%E8%A3%85sysbench%E7%9A%84%E4%BE%9D%E8%B5%96%E5%8C%85%E3%80%82...%202%20%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89%E5%AE%89%E8%A3%85MariaDB%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%82...%203%20%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%9B%E5%85%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%82systemctl%20start,-zxvf%201....%209%20%E7%BC%96%E8%AF%91%E5%B9%B6%E5%AE%89%E8%A3%85%E3%80%82make%20make%20install%2010%20%E6%9F%A5%E8%AF%A2sysbench%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%82">华为云文档：安装Sysbench</a></li>
<li><a href="https://github.com/akopytov/sysbench">Github：sysbench</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>性能基准测试</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL部署：Galera Cluster</title>
    <url>/2021/11/05/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9AGalera-Cluster/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>Galera Cluster</strong>是由Codership开发的MySQL多主结构集群，这些主节点互为其它节点的从节点。不同于MySQL原生的主从异步复制，Galera采用的是多主同步复制，并针对同步复制过程中，会大概率出现的事务冲突和死锁进行优化，就是复制不基于官方binlog而是Galera复制插件，重写了wsrep api。</p>
<blockquote>
<p>异步复制中，主库将数据更新传播给从库后立即提交事务，而不论从库是否成功读取或重放数据变化。这种情况下，在主库事务提交后的短时间内，主从库数据并不一致。</p>
<p>同步复制时，主库的单个更新事务需要在所有从库上同步 更新。换句话说，当主库提交事务时，集群中所有节点的数据保持一致。</p>
</blockquote>
<p>对于读操作，从每个节点读取到的数据都是相同的。对于写操作，当数据写入某一节点后，集群会将其同步到其它节点。</p>
<p><img src="/2021/11/05/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9AGalera-Cluster/Galera-cluster-01.png" alt="Galera cluster"></p>
<p>就各个集群方案来说，其优势为：</p>
<ul>
<li>多主多活下，可对任一节点进行读写操作，就算某个节点挂了，也不影响其它的节点的读写，都不需要做故障切换操作，也不会中断整个集群对外提供的服务。</li>
<li>拓展性优秀，新增节点会自动拉取在线节点的数据（当有新节点加入时，集群会选择出一个Donor Node为新节点提供数据），最终集群所有节点数据一致，而不需要手动备份恢复。</li>
</ul>
<p>其劣势为：</p>
<ul>
<li>能做到数据的强一致性，毫无疑问，也是以牺牲性能为代价。</li>
</ul>
<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul>
<li>Linux版本：CentOS 7.8.2003 * 3</li>
<li>MySQL版本：5.7.34</li>
<li>Galera版本：3.25.3.34</li>
<li>MySQL Wsrep版本：5.7.34</li>
</ul>
<h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 配置/etc/hosts文件，主机名解析</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 关闭firewalld与selinux</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 修改时区</span></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 配置yum源</span></span><br><span class="line">cat &gt; /etc/yum.repos.d/galera.repo &lt;&lt;EOF</span><br><span class="line">[galera]</span><br><span class="line">name=galera</span><br><span class="line">baseurl=http://releases.galeracluster.com/galera-3/centos/7/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[mysql-wsrep]</span><br><span class="line">name=mysql-wsrep</span><br><span class="line">baseurl=http://releases.galeracluster.com/mysql-wsrep-5.7/centos/7/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>



<h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y mysql-wsrep-5.7 galera-3</span><br></pre></td></tr></table></figure>









<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.cnblogs.com/hyry/p/14620259.html">Linux 下部署Galera-Cluster-MySQL</a></li>
<li><a href="https://blog.csdn.net/NewRain_wang/article/details/103607056">mysql之galera集群部署</a></li>
<li><a href="https://www.cnblogs.com/lgx211/p/12456859.html#:~:text=mysql%E9%9B%86%E7%BE%A4%EF%BC%88MySQL%20Cluster%EF%BC%89%E4%B9%9F%E6%98%AFmysql%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84%E3%80%82.%20MySQL%20Cluster%E6%98%AF%E5%A4%9A%E4%B8%BB%E5%A4%9A%E4%BB%8E%E7%BB%93%E6%9E%84%E7%9A%84.%20%E5%B0%B1%E5%90%84%E4%B8%AA%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%85%B6%E4%BC%98%E5%8A%BF%E4%B8%BA%EF%BC%9A.%20mysql%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84%E5%B7%A5%E5%85%B7%EF%BC%8C%E6%97%A0%E9%9C%80%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6%E3%80%82.,%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E4%BC%98%E7%A7%80%EF%BC%8C99.999%25%E7%9A%84%E5%8F%AF%E7%94%A8%E6%80%A7%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%8A%A8%E5%88%87%E5%88%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%83%BD%E8%B7%A8%E8%8A%82%E7%82%B9%E5%86%97%E4%BD%99%E6%95%B0%E6%8D%AE%EF%BC%88%E5%85%B6%E6%95%B0%E6%8D%AE%E9%9B%86%E5%B9%B6%E4%B8%8D%E6%98%AF%E5%AD%98%E5%82%A8%E6%9F%90%E4%B8%AA%E7%89%B9%E5%AE%9A%E7%9A%84MySQL%E5%AE%9E%E4%BE%8B%E4%B8%8A%EF%BC%8C%E8%80%8C%E6%98%AF%E8%A2%AB%E5%88%86%E5%B8%83%E5%9C%A8%E5%A4%9A%E4%B8%AAData%20Nodes%E4%B8%AD%EF%BC%8C%E5%8D%B3%E4%B8%80%E4%B8%AAtable%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%83%BD%E8%A2%AB%E5%88%86%E6%95%A3%E5%9C%A8%E5%A4%9A%E4%B8%AA%E7%89%A9%E7%90%86%E8%8A%82%E7%82%B9%E4%B8%8A%EF%BC%8C%E4%BB%BB%E4%BD%95%E6%95%B0%E6%8D%AE%E9%83%BD%E4%BC%9A%E5%9C%A8%E5%A4%9A%E4%B8%AAData%20Nodes%E4%B8%8A%E5%86%97%E4%BD%99%E5%A4%87%E4%BB%BD%E3%80%82.%20%E4%BB%BB%E4%BD%95%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%8F%98%E6%9B%B4%E6%93%8D%E4%BD%9C%EF%BC%8C%E9%83%BD%E5%B0%86%E5%9C%A8%E4%B8%80%E7%BB%84Data%20Nodes%E4%B8%8A%E5%90%8C%E6%AD%A5%EF%BC%8C%E4%BB%A5%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%EF%BC%89%E3%80%82.%20%E5%8F%AF%E4%BC%B8%E7%BC%A9%E6%80%A7%E4%BC%98%E7%A7%80%EF%BC%8C%E8%83%BD%E8%87%AA%E5%8A%A8%E5%88%87%E5%88%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%96%B9%E4%BE%BF%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B0%B4%E5%B9%B3%E6%8B%93%E5%B1%95%E3%80%82.">多图文，详细介绍mysql各个集群方案</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Galera</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL部署：Percona Server</title>
    <url>/2021/10/27/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9APercona-Server/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Percona Server由领先的MySQL咨询公司Percona发布。Percona Server是一款独立的数据库产品，其可以完全与MySQL兼容，可以在不更改代码的情况了下将存储引擎更换成XtraDB 。</p>
<p>Percona团队的最终声明是“Percona Server是由Oracle发布的最接近官方MySQL Enterprise发行版的版本”，因此与其他更改了大量基本核心MySQL代码的分支有所区别。Percona Server的一个缺点是他们自己管理代码，不接受外部开发人员的贡献，以这种方式确保他们对产品中所包含功能的控制。</p>
<p>官网地址：<a href="http://www.percona.com/">http://www.percona.com/</a></p>
<h2 id="CentOS系统"><a href="#CentOS系统" class="headerlink" title="CentOS系统"></a>CentOS系统</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ul>
<li><strong>规格：</strong>4C8G，100G数据盘</li>
<li><strong>系统：</strong>CentOS Linux release 7.9.2009 (Core)</li>
<li><strong>MySQL版本：</strong>Percona Server 5.7.35-38</li>
</ul>
<h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><ol>
<li><p>下载地址：</p>
<ul>
<li>Percona Server 5.7.35-38：<a href="https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA">https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA</a>   提取码：8p8f</li>
</ul>
</li>
<li><p>Linux基础配置</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭selinux</span></span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Percona Server依赖的软件包</span></span><br><span class="line">yum install -y perl libaio openssl-devel</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载Percona Server冲突的软件包</span></span><br><span class="line">yum remove -y mariadb-libs</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>安装Percona Server</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 解压安装包</span></span><br><span class="line">tar xvf Percona-Server-5.7.35-38-r3692a61-el7-x86_64-bundle.tar</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> rpm包安装</span></span><br><span class="line">rpm -ivh \</span><br><span class="line">  Percona-Server-client-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-server-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-shared-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-shared-compat-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-devel-57-5.7.35-38.1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>配置Percona Server，MySQL配置文件目录：<code>/etc/percona-server.conf.d/mysqld.cnf</code>，文件内容如下：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Percona Server template configuration</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remove leading <span class="comment"># and set to the amount of RAM for the most important data</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cache <span class="keyword">in</span> MySQL. Start at 70% of total RAM <span class="keyword">for</span> dedicated server, <span class="keyword">else</span> 10%.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> innodb_buffer_pool_size = 128M</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remove leading <span class="comment"># to turn on a very important data integrity option: logging</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> changes to the binary <span class="built_in">log</span> between backups.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> log_bin</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remove leading <span class="comment"># to set options mainly useful for reporting servers.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The server defaults are faster <span class="keyword">for</span> transactions and fast SELECTs.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> join_buffer_size = 128M</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sort_buffer_size = 2M</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> read_rnd_buffer_size = 2M</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Database files location</span></span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb Storage Engine</span></span><br><span class="line">innodb_buffer_pool_size=3G</span><br><span class="line">innodb_change_buffer_max_size=50</span><br><span class="line">innodb_undo_log_truncate=ON</span><br><span class="line">innodb_open_files=20000</span><br><span class="line">innodb_io_capacity=12000</span><br><span class="line">innodb_io_capacity_max=24000</span><br><span class="line">innodb_doublewrite=ON</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_log_files_in_group=2</span><br><span class="line">innodb_log_file_size=512M</span><br><span class="line">innodb_log_buffer_size=64M</span><br><span class="line">innodb_sort_buffer_size=16M</span><br><span class="line">innodb_sync_spin_loops=180</span><br><span class="line">innodb_spin_wait_delay=2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Buffer</span></span><br><span class="line">join_buffer_size=32M</span><br><span class="line">key_buffer_size=16M</span><br><span class="line">preload_buffer_size=1M</span><br><span class="line">read_buffer_size=1M</span><br><span class="line">read_rnd_buffer_size=16M</span><br><span class="line">sort_buffer_size=16M</span><br><span class="line">binlog_cache_size=1M</span><br><span class="line">bulk_insert_buffer_size=16M</span><br><span class="line">thread_cache_size=64</span><br><span class="line">table_open_cache_instances=64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Connections</span></span><br><span class="line">max_connections=2000</span><br><span class="line">max_user_connections=1800</span><br><span class="line">max_connect_errors=2000</span><br><span class="line">open_files_limit=20000</span><br><span class="line">table_open_cache=20000</span><br><span class="line">table_definition_cache=20000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Plugins</span></span><br><span class="line">plugin-load-add=validate_password.so</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System Variables</span></span><br><span class="line">performance_schema=OFF</span><br><span class="line">validate_password_policy=0</span><br><span class="line">skip_name_resolve</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>启动数据库</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>修改root密码</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看初始化密码</span></span><br><span class="line">[root@localhost log]# cat /var/log/mysqld.log  | grep &#x27;temporary password&#x27;</span><br><span class="line">2021-07-27T07:56:26.750789Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: t-:33aMYyaC+</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改root密码</span></span><br><span class="line">[root@localhost log]# mysqladmin -uroot -p&#x27;t-:33aMYyaC+&#x27; password Inspur@123</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>放通root远程登录</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 允许用户远程登录（mysql 8.x）</span></span><br><span class="line"><span class="keyword">UPDATE</span> mysql.user <span class="keyword">SET</span> host = <span class="string">&#x27;%&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># PS：需退出重连</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户远程登录（mysql 5.7）</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;Inspur@123&#x27;</span>;</span><br><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> Grant_priv=<span class="string">&#x27;Y&#x27;</span> <span class="keyword">where</span> <span class="keyword">User</span>=<span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> Host=<span class="string">&#x27;%&#x27;</span>;    <span class="comment"># Percona赋予所有权限不包含Grant权限</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure>



<h3 id="登录数据库"><a href="#登录数据库" class="headerlink" title="登录数据库"></a>登录数据库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mysql-5 ~]# mysql -uroot -pInspur@123</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 205</span><br><span class="line">Server version: 5.7.35-38 Percona Server (GPL), Release 38, Revision 3692a61</span><br><span class="line"></span><br><span class="line">Copyright (c) 2009-2021 Percona LLC and/or its affiliates</span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="Ubuntu系统"><a href="#Ubuntu系统" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h2><h3 id="环境配置-1"><a href="#环境配置-1" class="headerlink" title="环境配置"></a>环境配置</h3><ul>
<li><strong>规格：</strong>4C8G，100G数据盘</li>
<li><strong>系统：</strong>Ubuntu 16.04.7 LTS</li>
<li><strong>MySQL版本：</strong>Percona Server 5.7.35-38</li>
</ul>
<h3 id="安装流程-1"><a href="#安装流程-1" class="headerlink" title="安装流程"></a>安装流程</h3><ol>
<li><p>Install <code>GnuPG</code>, the GNU Privacy Guard:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo apt install gnupg2</span><br></pre></td></tr></table></figure>
</li>
<li><p>Fetch the repository packages from Percona web:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ wget https:&#x2F;&#x2F;repo.percona.com&#x2F;apt&#x2F;percona-release_latest.$(lsb_release -sc)_all.deb</span><br></pre></td></tr></table></figure>
</li>
<li><p>Install the downloaded package with <strong>dpkg</strong>. To do that, run the following commands as root or with <strong>sudo</strong>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb</span><br></pre></td></tr></table></figure>
</li>
<li><p>Remember to update the local cache:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br></pre></td></tr></table></figure>

<p>Once you install this package the Percona repositories should be added. You can check the repository setup in the <code>/etc/apt/sources.list.d/percona-release.list</code> file.</p>
</li>
<li><p>After that you can install the server package:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo apt install percona-server-server-5.7</span><br></pre></td></tr></table></figure>

</li>
</ol>
<blockquote>
<p>Note</p>
<p><em>Percona Server for MySQL</em> 5.7 comes with the <a href="https://www.percona.com/doc/percona-server/5.7/tokudb/tokudb_intro.html#tokudb-intro">TokuDB storage engine</a> and <a href="https://www.percona.com/doc/percona-server/5.7/myrocks/index.html#myrocks-intro">MyRocks storage engine</a>. These storage engines are installed as plugin.</p>
<p>For information on how to install and configure TokuDB, refer to the <a href="https://www.percona.com/doc/percona-server/5.7/tokudb/tokudb_installation.html#tokudb-installation">TokuDB Installation</a> guide.</p>
<p>For information on how to install and configure MyRocks, refer to the <a href="https://www.percona.com/doc/percona-server/5.7/myrocks/install.html#myrocks-install">Percona MyRocks Installation Guide</a> guide.</p>
</blockquote>
<p>The <em>Percona Server for MySQL</em> distribution contains several useful User Defined Functions (UDF) from Percona Toolkit. After the installation completes, run the following commands to create these functions:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -e &quot;CREATE FUNCTION fnvla_64 RETURNS INTEGER SONAME &#39;libfnvla_udf.so&#39;&quot;</span><br><span class="line">mysql -e &quot;CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME &#39;libfnv_udf.so&#39;&quot;</span><br><span class="line">mysql -e &quot;CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME &#39;libmurmur_udf.so&#39;&quot;</span><br></pre></td></tr></table></figure>

<p>For more details on the UDFs, see <a href="https://www.percona.com/doc/percona-server/5.7/management/udf_percona_toolkit.html">Percona Toolkit UDFS</a>.</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.percona.com/software/documentation">Percona官方文档</a></li>
<li><a href="https://www.percona.com/doc/percona-server/5.7/index.html">Percona官方文档：<em>Percona Server for MySQL</em> 5.7 - Documentation</a></li>
<li><a href="https://www.percona.com/doc/percona-server/8.0/index.html">Percona官方文档：<em>Percona Server for MySQL</em> 8.0 - Documentation</a></li>
<li><a href="https://www.percona.com/doc/percona-server/5.7/installation/yum_repo.html">Percona官方文档：Installing <em>Percona Server for MySQL</em> on Red Hat Enterprise Linux and CentOS</a></li>
<li><a href="https://repo.percona.com/apt/">Percona官方资源：Ubuntu系统</a></li>
<li><a href="https://www.cnblogs.com/keme/p/10239838.html">Percona 数据库</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/preface.html">MySQL官方文档</a></li>
<li><a href="https://www.biaodianfu.com/mysql-percona-or-mariadb.html">MySQL分支的选择：Percona还是MariaDB</a></li>
<li><a href="https://www.cnblogs.com/dingkailinux/p/8881327.html">Mysql-Percona mysql5.7简单安装</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Percona</tag>
      </tags>
  </entry>
  <entry>
    <title>NVIDIA使用：vGPU</title>
    <url>/2022/03/30/NVIDIA%E4%BD%BF%E7%94%A8%EF%BC%9AvGPU/</url>
    <content><![CDATA[<h2 id="vGPU选择"><a href="#vGPU选择" class="headerlink" title="vGPU选择"></a>vGPU选择</h2><p>NVIDIA 虚拟 GPU 软件产品包括 GRID 虚拟 PC (GRID vPC)、GRID 虚拟应用程序 (GRID vApp)，以及 Quadro 虚拟数据中心工作站 (Quadro vDWS)。</p>
<ul>
<li>vGPU推荐对比：<a href="https://www.nvidia.cn/data-center/graphics-cards-for-virtualization/">https://www.nvidia.cn/data-center/graphics-cards-for-virtualization/</a></li>
<li>vGPU支持型号：<a href="https://docs.nvidia.com/grid/gpus-supported-by-vgpu.html">https://docs.nvidia.com/grid/gpus-supported-by-vgpu.html</a></li>
<li>vGPU支持服务器：<a href="https://www.nvidia.com/en-us/data-center/resources/vgpu-certified-servers/">https://www.nvidia.com/en-us/data-center/resources/vgpu-certified-servers/</a></li>
<li>vGPU文档：<a href="https://docs.nvidia.com/grid/index.html">https://docs.nvidia.com/grid/index.html</a></li>
</ul>
<p><img src="/2022/03/30/NVIDIA%E4%BD%BF%E7%94%A8%EF%BC%9AvGPU/vGPU%E6%94%AF%E6%8C%81%E6%83%85%E5%86%B5.png" alt="vGPU支持情况"></p>
<h2 id="vGPU驱动安装"><a href="#vGPU驱动安装" class="headerlink" title="vGPU驱动安装"></a>vGPU驱动安装</h2><blockquote>
<p>vGPU驱动说明：</p>
<p>A physical GPU that is passed through to a VM is bound to the vfio-pci kernel module. A physical GPU that is bound to the vfio-pci kernel module can be used only for pass-through. To enable the GPU to be used for vGPU, the GPU must be unbound from vfio-pci kernel module and bound to the nvidia kernel module.</p>
</blockquote>
<h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul>
<li>系统：CentOS Linux release 7.8.2003 (Core)</li>
<li>内核：3.10.0-1127.el7.x86_64</li>
</ul>
<h3 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看GPU信息</span></span><br><span class="line">[root@k205 ~]# lspci -nnn -D | grep NVIDIA</span><br><span class="line">0000:86:00.0 3D controller [0302]: NVIDIA Corporation TU104GL [Tesla T4] [10de:1eb8] (rev a1)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基础依赖包</span></span><br><span class="line">[root@k205 ~]# yum install -y gcc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装NVIDIA驱动</span></span><br><span class="line">[root@k205 ~]# ./NVIDIA-Linux-x86_64-460.32.04-vgpu-kvm.run</span><br></pre></td></tr></table></figure>

<h3 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h3><p><strong>问题1：</strong>安装报<code>X library path &#39;/usr/lib64&#39; ... were not queryable from the system</code>，问题截图如下：</p>
<p><img src="/2022/03/30/NVIDIA%E4%BD%BF%E7%94%A8%EF%BC%9AvGPU/%E9%97%AE%E9%A2%981.png" alt="X library not queryable"></p>
<p><strong>解决办法：</strong>关闭<code>vnc server</code></p>
<h2 id="vGPU使用"><a href="#vGPU使用" class="headerlink" title="vGPU使用"></a>vGPU使用</h2><h3 id="宿主机使用"><a href="#宿主机使用" class="headerlink" title="宿主机使用"></a>宿主机使用</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看GPU PCI信息</span></span><br><span class="line">[root@k205 ~]# lspci -nnn -D | grep NVIDIA</span><br><span class="line">0000:86:00.0 3D controller [0302]: NVIDIA Corporation TU104GL [Tesla T4] [10de:1eb8] (rev a1)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看GPU PCI详情</span></span><br><span class="line">[root@k205 ~]# lspci -d 10de: -k</span><br><span class="line">86:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1)</span><br><span class="line">        Subsystem: NVIDIA Corporation Device 12a2</span><br><span class="line">        Kernel driver in use: nvidia</span><br><span class="line">        Kernel modules: nouveau, nvidia_vgpu_vfio, nvidia</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看支持的vGPU类型</span></span><br><span class="line">[root@k205 mdev_supported_types]# cd /sys/class/mdev_bus/0000:86:00.0/mdev_supported_types &amp;&amp; ls</span><br><span class="line">nvidia-222  nvidia-224  nvidia-226  nvidia-228  nvidia-230  nvidia-232  nvidia-234  nvidia-319  nvidia-321</span><br><span class="line">nvidia-223  nvidia-225  nvidia-227  nvidia-229  nvidia-231  nvidia-233  nvidia-252  nvidia-320</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看指定类型vGPU信息</span></span><br><span class="line">[root@k205 mdev_supported_types]# cat nvidia-222/name</span><br><span class="line">GRID T4-1B</span><br><span class="line">[root@k205 mdev_supported_types]# cat nvidia-222/available_instances</span><br><span class="line">16</span><br><span class="line">[root@k205 mdev_supported_types]# cat nvidia-222/description</span><br><span class="line">num_heads=4, frl_config=45, framebuffer=1024M, max_resolution=5120x2880, max_instance=16</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> num_heads: The maximum number of virtual display heads that the vGPU <span class="built_in">type</span> supports</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> frl_config: The frame rate limiter (FRL) configuration <span class="keyword">in</span> frames per second</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> framebuffer: The frame buffer size <span class="keyword">in</span> Mbytes</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> max_resolution: The maximum resolution per display head</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> max_instance: The maximum number of vGPU instances per physical GPU</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建vGPU</span></span><br><span class="line">[root@k205 mdev_supported_types]# uuidgen</span><br><span class="line">8da209ce-7865-48f0-9b04-fd6ef55dca63</span><br><span class="line">[root@k205 mdev_supported_types]# echo 8da209ce-7865-48f0-9b04-fd6ef55dca63 &gt; nvidia-222/create</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看现有vGPU设备</span></span><br><span class="line">[root@k205 mdev_supported_types]# ls /sys/bus/mdev/devices/</span><br><span class="line">8da209ce-7865-48f0-9b04-fd6ef55dca63</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除指定vGPU设备</span></span><br><span class="line">[root@k205 mdev_supported_types]# echo 1 &gt; nvidia-222/devices/8da209ce-7865-48f0-9b04-fd6ef55dca63/remove</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 脚本</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有vGPU类型信息</span></span><br><span class="line">vGPU_DIR=&#x27;/sys/class/mdev_bus/0000:86:00.0/mdev_supported_types&#x27;</span><br><span class="line">for type in $(ls $vGPU_DIR)</span><br><span class="line">do</span><br><span class="line">	echo &quot;-----&quot;</span><br><span class="line">	echo &quot;$type&quot;</span><br><span class="line">	echo &quot;name: $(cat $vGPU_DIR/$type/name)&quot;</span><br><span class="line">	echo &quot;description: $(cat $vGPU_DIR/$type/description)&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h3 id="虚机使用"><a href="#虚机使用" class="headerlink" title="虚机使用"></a>虚机使用</h3><p>创建虚机增加如下配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-device vfio-pci,sysfsdev=/sys/bus/mdev/devices/8da209ce-7865-48f0-9b04-fd6ef55dca63 -uuid xxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure>

<p>虚机xml内相关配置如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hostdev</span> <span class="attr">mode</span>=<span class="string">&#x27;subsystem&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;mdev&#x27;</span> <span class="attr">managed</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">model</span>=<span class="string">&#x27;vfio-pci&#x27;</span> <span class="attr">display</span>=<span class="string">&#x27;off&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">address</span> <span class="attr">uuid</span>=<span class="string">&#x27;8da209ce-7865-48f0-9b04-fd6ef55dca63&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&#x27;hostdev0&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">&#x27;pci&#x27;</span> <span class="attr">domain</span>=<span class="string">&#x27;0x0000&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;0x00&#x27;</span> <span class="attr">slot</span>=<span class="string">&#x27;0x07&#x27;</span> <span class="attr">function</span>=<span class="string">&#x27;0x0&#x27;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hostdev</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>后面就是虚拟机内部安装对应的驱动程序了，一般名称为：<em>xxxx_grid_win10_server2016_server2019_64bit_international.exe</em></p>
<h2 id="vGPU授权"><a href="#vGPU授权" class="headerlink" title="vGPU授权"></a>vGPU授权</h2><p>NVIDIA的vGPU在虚拟机内部使用是需要购买license的，具体的部署方式是需要搭建一台授权服务器，虚拟机内部安装显卡驱动后需要配置授权服务器的地址和端口，前提是虚拟机和授权服务器网络是通的，虚拟机每次开机后都要连接到授权服务器进行授权。</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://docs.nvidia.com/grid/9.0/grid-vgpu-user-guide/index.html#abstract">NVIDIA官方文档：Virtual GPU Software User Guide</a></li>
<li><a href="https://docs.nvidia.com/grid/index.html">NVIDIA官方文档：NVIDIA® Virtual GPU (vGPU) Software Documentation</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/424967206">英伟达显卡虚拟化vGPU实践指南</a></li>
</ul>
]]></content>
      <categories>
        <category>Accelerator</category>
      </categories>
      <tags>
        <tag>NVIDIA</tag>
        <tag>Accelerator</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx部署：安装文档</title>
    <url>/2021/11/24/Nginx%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。</p>
<h2 id="部署Nginx"><a href="#部署Nginx" class="headerlink" title="部署Nginx"></a>部署Nginx</h2><h3 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础依赖包</span></span><br><span class="line">yum install -y make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure>



<h3 id="源码安装PCRE"><a href="#源码安装PCRE" class="headerlink" title="源码安装PCRE"></a>源码安装PCRE</h3><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取源码包</span></span><br><span class="line">cd /usr/local/src &amp;&amp; wget http://downloads.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf pcre-8.45.tar.gz &amp;&amp; cd pcre-8.45</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译安装</span></span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pcre版本</span></span><br><span class="line">pcre-config --version</span><br></pre></td></tr></table></figure>



<h3 id="源码安装Nginx"><a href="#源码安装Nginx" class="headerlink" title="源码安装Nginx"></a>源码安装Nginx</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取源码包</span></span><br><span class="line">cd /usr/local/src &amp;&amp; wget http://nginx.org/download/nginx-1.21.4.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf nginx-1.21.4.tar.gz &amp;&amp; cd nginx-1.21.4</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译安装</span></span><br><span class="line">./configure --prefix=/usr/local/webserver/nginx \</span><br><span class="line">    --with-http_stub_status_module \</span><br><span class="line">    --with-http_ssl_module \</span><br><span class="line">    --with-pcre=/usr/local/src/pcre-8.45</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 软链接</span></span><br><span class="line">ln -s /usr/local/webserver/nginx/sbin/nginx /usr/local/bin/nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看版本</span></span><br><span class="line">nginx -v</span><br></pre></td></tr></table></figure>



<h3 id="配置Nginx基础环境"><a href="#配置Nginx基础环境" class="headerlink" title="配置Nginx基础环境"></a>配置Nginx基础环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建Nginx运行使用的用户：www</span></span><br><span class="line">groupadd www</span><br><span class="line">useradd -g www www</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份配置文件</span></span><br><span class="line">cp /usr/local/webserver/nginx/conf/nginx.conf /usr/local/webserver/nginx/conf/nginx.conf.template</span><br></pre></td></tr></table></figure>



<h3 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h3><p>将 <code>/usr/local/webserver/nginx/conf/nginx.conf</code> 替换为以下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行使用的用户</span></span><br><span class="line"><span class="string">user</span> <span class="string">www</span> <span class="string">www;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置值和CPU核心数一致</span></span><br><span class="line"><span class="string">worker_processes</span> <span class="number">2</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志位置和日志级别</span></span><br><span class="line"><span class="string">error_log</span> <span class="string">/usr/local/webserver/nginx/logs/nginx_error.log</span> <span class="string">crit;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PID文件目录</span></span><br><span class="line"><span class="string">pid</span> <span class="string">/usr/local/webserver/nginx/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies the value for maximum file descriptors that can be opened by this process.</span></span><br><span class="line"><span class="string">worker_rlimit_nofile</span> <span class="number">65535</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="string">events</span> &#123;</span><br><span class="line">    <span class="string">use</span> <span class="string">epoll;</span></span><br><span class="line">    <span class="string">worker_connections</span> <span class="number">65535</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">http</span> &#123;</span><br><span class="line">    <span class="string">include</span> <span class="string">mime.types;</span></span><br><span class="line">    <span class="string">default_type</span> <span class="string">application/octet-stream;</span></span><br><span class="line">    <span class="string">log_format</span> <span class="string">main</span>  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                     <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                     <span class="string">&#x27;&quot;$http_user_agent&quot; $http_x_forwarded_for&#x27;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># charset gb2312;</span></span><br><span class="line">     </span><br><span class="line">    <span class="string">server_names_hash_bucket_size</span> <span class="number">128</span><span class="string">;</span></span><br><span class="line">    <span class="string">client_header_buffer_size</span> <span class="string">32k;</span></span><br><span class="line">    <span class="string">large_client_header_buffers</span> <span class="number">4</span> <span class="string">32k;</span></span><br><span class="line">    <span class="string">client_max_body_size</span> <span class="string">8m;</span></span><br><span class="line">     </span><br><span class="line">    <span class="string">sendfile</span> <span class="string">on;</span></span><br><span class="line">    <span class="string">tcp_nopush</span> <span class="string">on;</span></span><br><span class="line">    <span class="string">keepalive_timeout</span> <span class="number">60</span><span class="string">;</span></span><br><span class="line">    <span class="string">tcp_nodelay</span> <span class="string">on;</span></span><br><span class="line">    <span class="string">fastcgi_connect_timeout</span> <span class="number">300</span><span class="string">;</span></span><br><span class="line">    <span class="string">fastcgi_send_timeout</span> <span class="number">300</span><span class="string">;</span></span><br><span class="line">    <span class="string">fastcgi_read_timeout</span> <span class="number">300</span><span class="string">;</span></span><br><span class="line">    <span class="string">fastcgi_buffer_size</span> <span class="string">64k;</span></span><br><span class="line">    <span class="string">fastcgi_buffers</span> <span class="number">4</span> <span class="string">64k;</span></span><br><span class="line">    <span class="string">fastcgi_busy_buffers_size</span> <span class="string">128k;</span></span><br><span class="line">    <span class="string">fastcgi_temp_file_write_size</span> <span class="string">128k;</span></span><br><span class="line">    <span class="string">gzip</span> <span class="string">on;</span> </span><br><span class="line">    <span class="string">gzip_min_length</span> <span class="string">1k;</span></span><br><span class="line">    <span class="string">gzip_buffers</span> <span class="number">4</span> <span class="string">16k;</span></span><br><span class="line">    <span class="string">gzip_http_version</span> <span class="number">1.0</span><span class="string">;</span></span><br><span class="line">    <span class="string">gzip_comp_level</span> <span class="number">2</span><span class="string">;</span></span><br><span class="line">    <span class="string">gzip_types</span> <span class="string">text/plain</span> <span class="string">application/x-javascript</span> <span class="string">text/css</span> <span class="string">application/xml;</span></span><br><span class="line">    <span class="string">gzip_vary</span> <span class="string">on;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># limit_zone crawler $binary_remote_addr 10m;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#下面是server虚拟主机的配置</span></span><br><span class="line">    <span class="string">server</span> &#123;</span><br><span class="line">        <span class="string">listen</span> <span class="number">80</span><span class="string">;</span> <span class="comment"># 监听端口</span></span><br><span class="line">        <span class="string">server_name</span> <span class="string">localhost;</span> <span class="comment"># 域名</span></span><br><span class="line">        <span class="string">index</span> <span class="string">index.html</span> <span class="string">index.htm</span> <span class="string">index.php;</span></span><br><span class="line">        <span class="string">root</span> <span class="string">/usr/local/webserver/nginx/html;</span> <span class="comment"># 站点目录</span></span><br><span class="line">        <span class="string">access_log</span> <span class="string">off;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">location</span> <span class="string">/status</span> &#123;</span><br><span class="line">            <span class="string">stub_status</span> <span class="string">on;</span></span><br><span class="line">            <span class="comment"># access_log off;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="string">location</span> <span class="string">~</span> <span class="string">.*\.(php|php5)?$</span> &#123;</span><br><span class="line">            <span class="comment"># fastcgi_pass unix:/tmp/php-cgi.sock;</span></span><br><span class="line">            <span class="string">fastcgi_pass</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:9000;</span></span><br><span class="line">            <span class="string">fastcgi_index</span> <span class="string">index.php;</span></span><br><span class="line">            <span class="string">include</span> <span class="string">fastcgi.conf;</span></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    	<span class="string">location</span> <span class="string">~</span> <span class="string">.*\.(gif|jpg|jpeg|png|bmp|swf|ico)$</span> &#123;</span><br><span class="line">            <span class="string">expires</span> <span class="string">30d;</span></span><br><span class="line">            <span class="comment"># access_log off;</span></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="string">location</span> <span class="string">~</span> <span class="string">.*\.(js|css)?$</span> &#123;</span><br><span class="line">      	    <span class="string">expires</span> <span class="string">15d;</span></span><br><span class="line">   		    <span class="comment"># access_log off;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>检测nginx.conf配置正确性</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@k44: conf # nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/webserver/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/webserver/nginx/conf/nginx.conf test is successful</span><br></pre></td></tr></table></figure>



<h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure>



<h2 id="管理Nginx"><a href="#管理Nginx" class="headerlink" title="管理Nginx"></a>管理Nginx</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 重新载入配置文件</span></span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 Nginx</span></span><br><span class="line">nginx -s reopen</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止 Nginx</span></span><br><span class="line">nginx -s stop </span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="http://nginx.org/">Nginx官网</a></li>
<li><a href="http://www.pcre.org/">PCRE官网</a></li>
<li><a href="https://www.runoob.com/linux/nginx-install-setup.html">菜鸟教程：Nginx安装</a></li>
</ul>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack使用：自定义实例root密码</title>
    <url>/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h2 id="OpenStack安装信息"><a href="#OpenStack安装信息" class="headerlink" title="OpenStack安装信息"></a>OpenStack安装信息</h2><ul>
<li>安装工具：kolla ansible</li>
<li>安装版本：Train版</li>
<li>虚拟化层：qemu</li>
<li>Nova配置：默认配置，未做修改</li>
</ul>
<h2 id="官方镜像地址"><a href="#官方镜像地址" class="headerlink" title="官方镜像地址"></a>官方镜像地址</h2><ul>
<li>Cirros：<a href="https://download.cirros-cloud.net/">https://download.cirros-cloud.net/</a></li>
<li>Centos：<a href="http://cloud.centos.org/centos/">http://cloud.centos.org/centos/</a></li>
<li>Ubuntu：<a href="http://cloud-images.ubuntu.com/releases/">http://cloud-images.ubuntu.com/releases/</a></li>
</ul>
<h2 id="密码注入：Cloud-Init"><a href="#密码注入：Cloud-Init" class="headerlink" title="密码注入：Cloud Init"></a>密码注入：Cloud Init</h2><blockquote>
<p>推荐使用该方式修改root密码，适用性强。</p>
</blockquote>
<p>创建实例时，在<code>配置项</code>填写<code>定制化脚本</code>，并勾选<code>配置驱动</code>（默认不勾选，不勾选会出现密码不生效的问题）</p>
<p>支持两种形式内容，一种是cloud-init配置文件，另一种是脚本文件。</p>
<ul>
<li><p>传入cloud-init配置文件，内容参考如下，有以下几点要特别注意：</p>
<ul>
<li><p><code>#cloud-config</code> 井号和cloud-config中间不能有空格，有空格就会注入失败</p>
</li>
<li><p><code>root:123456</code> 中间不能有空格，有空格就会注入失败</p>
</li>
<li><p>Windows使用cloudbase-init工具进行初始化，传入的userdata与linux中的cloud-init格式有差距，具体使用方法可参考：<a href="https://cloudbase-init.readthedocs.io/en/1.1.2/userdata.html#cloud-config">Cloudbase-init官方文档：Userdata</a></p>
</li>
</ul>
</li>
</ul>
<p><strong>Linux Userdata密码注入</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cloud-config</span></span><br><span class="line"><span class="attr">chpasswd:</span></span><br><span class="line">  <span class="attr">list:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">root:123456</span></span><br><span class="line">  <span class="attr">expire:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">ssh_pwauth:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><strong>Windows Userdata密码注入</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cloud-config</span></span><br><span class="line"><span class="attr">users:</span></span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line">    <span class="attr">name:</span> <span class="string">Administrator</span></span><br><span class="line">    <span class="attr">passwd:</span> <span class="string">StrongPassw0rd</span></span><br></pre></td></tr></table></figure>

<ul>
<li>传入脚本文件，内容参考如下：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">passwd root &lt;&lt; EOF</span><br><span class="line">1234qwer</span><br><span class="line">1234qwer</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/Horizon%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81.png" alt="Horizon修改root密码"></p>
<h2 id="密码修改：qemu-guest-agent"><a href="#密码修改：qemu-guest-agent" class="headerlink" title="密码修改：qemu-guest-agent"></a>密码修改：qemu-guest-agent</h2><blockquote>
<p><strong>镜像内部需要安装：qemu-guest-agent</strong></p>
<table>
<thead>
<tr>
<th>组件</th>
<th>版本</th>
<th>位置</th>
</tr>
</thead>
<tbody><tr>
<td>libvirt</td>
<td>1.2.16+</td>
<td>宿主机</td>
</tr>
<tr>
<td>python-libvirt</td>
<td>1.2.16+</td>
<td>宿主机</td>
</tr>
<tr>
<td>qemu-guest-agent</td>
<td>2.3+</td>
<td>虚机内部</td>
</tr>
</tbody></table>
<p>cirros镜像不适用该方式，版本：cirros-0.4.0-x86_64-disk.img。<br>centos镜像适用。版本：CentOS-7-x86_64-GenericCloud-2003.qcow2。</p>
</blockquote>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>qemu guest agent，简称qga，是一个运行在虚拟机内部的普通应用程序，可实现宿主机libvirt和虚拟机的通信，宿主机可通过向虚机中的qga发送命令控制虚机。这种通信不依赖网络，而是通过virtio-serial的方式。使用virtio传递消息，对虚拟机和主机的网络设置没有任何要求，且效率更高，类似于VMware Tools。虚机xml文件内 <code>virtio-serial</code> 代码段如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">channel</span> <span class="attr">type</span>=<span class="string">&#x27;unix&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">mode</span>=<span class="string">&#x27;bind&#x27;</span> <span class="attr">path</span>=<span class="string">&#x27;/var/lib/libvirt/qemu/org.qemu.guest_agent.0.instance-00000180.sock&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">type</span>=<span class="string">&#x27;virtio&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;org.qemu.guest_agent.0&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">&#x27;virtio-serial&#x27;</span> <span class="attr">controller</span>=<span class="string">&#x27;0&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;0&#x27;</span> <span class="attr">port</span>=<span class="string">&#x27;1&#x27;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">channel</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="Libvirt层面修改流程"><a href="#Libvirt层面修改流程" class="headerlink" title="Libvirt层面修改流程"></a>Libvirt层面修改流程</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">virsh set-user-password &lt;domain&gt; &lt;user&gt; &lt;password&gt;</span><br></pre></td></tr></table></figure>



<h3 id="OpenStack层面修改流程"><a href="#OpenStack层面修改流程" class="headerlink" title="OpenStack层面修改流程"></a>OpenStack层面修改流程</h3><p><strong>步骤1：修改image元数据</strong></p>
<p><strong>方式1：前端修改</strong></p>
<p>编辑镜像，在<code>元数据</code> - <code>libvirt Driver Options for Images</code> - <code>QEMU Guest Agent</code>，设置为<code>yes</code>即可</p>
<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/Horizon%E8%AE%BE%E7%BD%AEimage%E5%85%83%E6%95%B0%E6%8D%AE.png" alt="Horizon设置image元数据"></p>
<p><strong>方式2：后端修改</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加image元数据信息</span></span><br><span class="line">openstack image list</span><br><span class="line">openstack image set --property hw_qemu_guest_agent=yes &lt;image id or name&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/image%E4%BF%A1%E6%81%AF.png" alt="image信息"></p>
<p>不设置该参数，修改密码时会报<code>QEMU guest agent is not enabled (HTTP 409)</code>，错误如下：</p>
<p><img src="/2020/11/06/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8Broot%E5%AF%86%E7%A0%81/%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81409.png" alt="修改root密码409"></p>
<p><strong>步骤2：使用更新后的镜像创建虚机</strong></p>
<p><strong>步骤3：后端修改虚机密码</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack server list</span><br><span class="line">openstack server set --root-password &lt;server id or name&gt;</span><br></pre></td></tr></table></figure>



<h2 id="密码修改：virt-edit"><a href="#密码修改：virt-edit" class="headerlink" title="密码修改：virt-edit"></a>密码修改：virt-edit</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p>通过 <code>libguestfs-tools</code> ，可直接访问虚机磁盘，通过修改虚机磁盘内的 <code>/etc/shadow</code> 文件，达到修改密码的目的。</p>
<blockquote>
<p><strong>libguestfs is a set of tools for accessing and modifying virtual machine (VM) disk images</strong>. You can use this for viewing and editing files inside guests, scripting changes to VMs, <a href="https://libguestfs.org/virt-df.1.html">monitoring disk used/free statistics</a>, <a href="https://libguestfs.org/virt-builder.1.html">creating guests</a>, P2V, <a href="https://libguestfs.org/virt-v2v.1.html">V2V</a>, performing backups, cloning VMs, building VMs, formatting disks, resizing disks, and much more.</p>
<p><strong>libguestfs can access almost any disk image imaginable</strong>. It can do it securely — without needing root and with multiple layers of defence against rogue disk images. It can access disk images on remote machines or on CDs/USB sticks. It can access proprietary systems like VMware and Hyper-V.</p>
<p>All this functionality is available through a scriptable shell called <a href="https://libguestfs.org/guestfish.1.html">guestfish</a>, or an interactive rescue shell <a href="https://libguestfs.org/virt-rescue.1.html">virt-rescue</a>.</p>
</blockquote>
<h3 id="修改流程"><a href="#修改流程" class="headerlink" title="修改流程"></a>修改流程</h3><ol>
<li>安装 <code>libguestfs-tools</code>，若libvirt使用docker方式运行，则需要在docker镜像内打包该工具，参考Dockerfile如下：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">FROM registry.local:9001/library/centos-source-libvirt:train</span><br><span class="line"></span><br><span class="line">RUN rpm --rebuilddb &amp;&amp; yum install libguestfs-tools -y &amp;&amp; yum clean all &amp;&amp; rm -rf /var/cache/yum</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>注意：</strong></p>
<ol>
<li>docker yum安装容易出现：<strong>Rpmdb checksum is invalid: dCDPT(pkg checksums): …</strong> 。需要在安装前先执行 <code>rpm --rebuilddb</code> 且必须与 yum 命令处于同一个 RUN 内。<strong>也就是有时候在使用dockerfile build的时候，如果有多条 “RUN yum install -y …” 指令，需要在每条之前都加上 “rpm –rebuilddb”</strong>。</li>
</ol>
</blockquote>
<ol start="2">
<li>关闭需要修改密码的虚机。</li>
<li>生成新的密码串。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> openssl是一个加密工具，-1 是指普通加密，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hello为key（随意指定，加密算法需要）， 123456才是密码，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下面就是是生成的密码串，这样我们只要将这些进行对应的替换就可以了 </span></span><br><span class="line">openssl passwd -1 -salt &#x27;hello&#x27; &#x27;123456&#x27;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>宿主机内，通过 <code>virt-edit</code> 命令修改虚机磁盘内 <code>/etc/shadow</code> 文件中记录的root密码，将内容替换为第三步生成的密文。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> virt-edit instance-00000020 /etc/shadow</span></span><br><span class="line"></span><br><span class="line">root:$1$hello$ZwmhCpcG.I1XIfVjdarKc1:10933:0:99999:7:::</span><br><span class="line">bin:*:10933:0:99999:7:::</span><br><span class="line">daemon:*:10933:0:99999:7:::</span><br><span class="line">adm:*:10933:0:99999:7:::</span><br><span class="line">lp:*:10933:0:99999:7:::</span><br><span class="line">sync:*:10933:0:99999:7:::</span><br><span class="line">shutdown:*:10933:0:99999:7:::</span><br><span class="line">halt:*:10933:0:99999:7:::</span><br><span class="line">uucp:*:10933:0:99999:7:::</span><br><span class="line">operator:*:10933:0:99999:7:::</span><br><span class="line">ftp:*:10933:0:99999:7:::</span><br><span class="line">nobody:*:10933:0:99999:7:::</span><br><span class="line">cirros:$1$ecgqyiea$GZzgQPRzx7sFFoZ7p8ewU.:10933:0:99999:7:::</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>注意：</strong></p>
<ol>
<li><code>/etc/shadow</code> 文件中，第一个冒号与第二个冒号之间为加密后的密文。</li>
<li>libvirt容器直接运行 <code>virt-edit</code> 命令很容易报错，内容如下：</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">supermin: failed to find a suitable kernel (host_cpu=x86_64).</span><br><span class="line"></span><br><span class="line">I looked for kernels in /boot and modules in /lib/modules.</span><br><span class="line"></span><br><span class="line">If this is a Xen guest, and you only have Xen domU kernels</span><br><span class="line">installed, try installing a fullvirt kernel (only for</span><br><span class="line">supermin use, you shouldn&#x27;t boot the Xen guest with it).</span><br><span class="line">libguestfs: trace: launch = -1 (error)</span><br></pre></td></tr></table></figure>

<p>原因：supermin需要访问内核，但是未在libvirt容器内找到内核</p>
<p>解决方案：<strong>libvirt容器透传主机的 /boot 与 /lib/modules</strong>。</p>
</blockquote>
<ol start="5">
<li>修改后保存退出，启动虚机即可用新密码登录。</li>
</ol>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://libguestfs.org/">libguestfs-tools官方文档</a></li>
<li><a href="https://docs.openstack.org/image-guide/">OpenStack Virtual Machine Image Guide</a></li>
<li><a href="https://blog.51cto.com/11954248/2503692">OpenStack Train版操作笔记（14）—使用官方云镜像启动实例并命令行修改root密码</a></li>
<li><a href="https://blog.csdn.net/zhongbeida_xue/article/details/80417019">openstack虚拟机系统密码的修改方案</a></li>
<li><a href="https://www.cnblogs.com/CloudMan6/p/6686040.html">cloud-init 典型应用 - 每天5分钟玩转 OpenStack（174）</a></li>
<li><a href="https://cloudbase-init.readthedocs.io/en/latest/userdata.html#cloud-config">cloudbase-init官方文档：Cloud config</a></li>
<li><a href="https://wiki.libvirt.org/page/Qemu_guest_agent">Libvirt官方文档：Qemu guest agent</a></li>
<li><a href="https://www.cnblogs.com/fzxiaomange/p/qmp-qemu-interactive.html">基于QMP实现对qemu虚拟机进行交互</a></li>
<li><a href="https://www.jianshu.com/p/974ff5a02cd5">kvm 虚拟化(二 修改root密码)</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1542892">Bug 1542892- supermin: failed to find a suitable kernel (host_cpu=x86_64)</a></li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：Cyborg</title>
    <url>/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Cyborg (previously known as <a href="https://wiki.openstack.org/wiki/Nomad">Nomad</a>) is an OpenStack project that aims to provide a general purpose management framework for acceleration resources (i.e. various types of accelerators such as GPU, FPGA, ASIC, NP, SoCs, NVMe/NOF SSDs, ODP, DPDK/SPDK and so on).</p>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><h3 id="Cyborg内部架构"><a href="#Cyborg内部架构" class="headerlink" title="Cyborg内部架构"></a>Cyborg内部架构</h3><img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/cyborg-architecture.png" alt="cyborg-architecture" style="zoom:100%;">

<ul>
<li><strong>cyborg-api</strong> - cyborg-api is a cyborg service that provides <strong>REST API</strong> interface for the Cyborg project. It supports POST/PUT/DELETE/GET operations and interacts with cyborg-agent and cyborg-db via cyborg-conductor.</li>
<li><strong>cyborg-conductor</strong> - cyborg-conductor is a cyborg service that coordinates interaction, DB access between cyborg-api and cyborg-agent.</li>
<li><strong>cyborg-agent</strong> - cyborg-agent is a cyborg service that is responsible for interaction with accelerator backends via the Cyborg Driver. For now the only implementation in play is the Cyborg generic Driver. It will also handle the communication with the Nova placement service. Cyborg-Agent will also write to a local cache for local accelerator events.</li>
<li><strong>Vendor drivers</strong> - Cyborg can be integrated with drivers for various accelerator device types, such as FPGA, GPU, NIC, and so forth. You are welcome to extend your own driver for a new type of accelerator device.</li>
</ul>
<h3 id="加速资源使用架构"><a href="#加速资源使用架构" class="headerlink" title="加速资源使用架构"></a>加速资源使用架构</h3><img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/cyborg-nova-interaction.png" alt="cyborg-nova-interaction" style="zoom:100%;">

<h2 id="Blueprints-for-Cyborg"><a href="#Blueprints-for-Cyborg" class="headerlink" title="Blueprints for Cyborg"></a>Blueprints for Cyborg</h2><h3 id="Cyborg-API"><a href="#Cyborg-API" class="headerlink" title="Cyborg API"></a>Cyborg API</h3><p>This blueprint provides the initial design for the cyborg api. The cyborg api should support the basic operations concerning accelerators, and does not necessarily have to be user facing api at the early stage.</p>
<p>The api should support the following interfaces:</p>
<ul>
<li>attach: either attaching existing physical accelerators or creating new virtual functions and then allocating to the VM</li>
<li>detach: detaching existing physical accelerators or deallocating virtual functions for the VM</li>
<li>list: list all the attached accelerators</li>
<li>update: make modification to the accelerators (either the state or the device itself)</li>
<li>admin: for certain configurations that does not related to the resource centric CRUD operations.</li>
</ul>
<h3 id="Cyborg-Agent"><a href="#Cyborg-Agent" class="headerlink" title="Cyborg Agent"></a>Cyborg Agent</h3><p>The Cyborg agent will reside on compute hosts and potentially other hosts that may make use of accelerators.</p>
<p>Agent responsibilities:</p>
<ul>
<li>Inspect hardware to locate accelerators</li>
<li>Manage installing drivers, dependencies and other setup and teardown</li>
<li>Manage connecting the instance to the accelerator once it has spawned</li>
<li>Report data about available accelerators, status, and utilization to the Cyborg server</li>
</ul>
<p>Hardware Discovery:<br>The instance is scanned for accelerators and usage levels of existing accelerators every few seconds and this information is reported in a heartbeat message to the Cyborg server to help manage scheduling and availability.</p>
<p>Hardware Management:<br>Ansible will be used to manage configuration files and other setup for each accelerator and it’s driver. Setup and teardown playbooks will be made for each set of supported hardware. A configuration change on cyborg managed hardware will boil down to running the uninstall playbook and the install playbook with different configuration options.</p>
<p>Instance connection:<br>Once a instance is spawned that requires connecting to a specific accelerator on the host Cyborg server will send a message to Cyborg agent to inform the agent of the new instance. Since the connection method may change dramatically between different accelerators the driver should probably provide a connect function to call out to.</p>
<h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><h3 id="Cyborg-discovery-accelerates-device-workflow"><a href="#Cyborg-discovery-accelerates-device-workflow" class="headerlink" title="Cyborg discovery accelerates device workflow"></a>Cyborg discovery accelerates device workflow</h3><img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/cyborg_acc_discover.drawio.png" alt="cyborg_acc_discover.drawio" style="zoom:100%;">

<p>加速资源发现的工作流程如下：</p>
<ol>
<li>根据配置的驱动信息，调用指定驱动的<code>discover()</code>方法，后续流程以NVIDIA GPU驱动为例。</li>
<li>调用系统<code>lspci -nnn -D</code>命令，获取所有PCI设备。</li>
<li>根据<code>VENDOR_ID</code>及<code>GPU_TAG</code>匹配到GPU设备信息。</li>
<li>通过正则表达式，从命令行输出中提取并格式化关键信息。</li>
<li>根据配置文件中是否启用了vGPU，判断添加何种resource class与可用设备数量。</li>
<li>根据<code>VENDOR_ID</code>和<code>PRODUCT_ID</code>生成特定的traits。</li>
<li>实例化DriverDevice()。</li>
<li>返回实例化后的DriverDevice()对象，RPC方式发送给cyborg conductor，进行资源上报。</li>
</ol>
<h3 id="Cyborg-and-Nova-interaction-workflow"><a href="#Cyborg-and-Nova-interaction-workflow" class="headerlink" title="Cyborg and Nova interaction workflow"></a>Cyborg and Nova interaction workflow</h3><p>This flow is captured by the following sequence diagram, in which the Nova conductor and scheduler are together represented as the Nova controller.</p>
<img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/cyborg-and-nova-interaction-workflow.png" alt="cyborg-and-nova-interaction-workflow" style="zoom:100%;">

<p>A Cyborg client module is added to nova (cyborg-client-module). All Cyborg API calls are routed through that.</p>
<ol>
<li><p>The Nova API server receives a <code>POST /servers API</code> request with a flavor that includes a device profile name.</p>
</li>
<li><p>The Nova API server calls the Cyborg API <code>GET /v2/device_profiles?name=$device_profile_name</code> and gets back the device profile. The request groups in that device profile are added to the request spec.</p>
</li>
<li><p>The Nova scheduler invokes Placement and gets a list of allocation candidates. It selects one of those candidates and makes claim(s) in Placement. The Nova conductor then sends a RPC message <code>build_and_run_instances</code> to the Nova compute manager.</p>
</li>
<li><p>Nova conductor manager calls the Cyborg API <code>POST /v2/accelerator_requests</code> with the device profile name. Cyborg creates a set of unbound ARQs for that device profile and returns them to Nova.</p>
</li>
<li><p>The Cyborg client in Nova matches each ARQ to the resource provider picked for that accelerator.</p>
</li>
<li><p>The Nova compute manager calls the Cyborg API <code>PATCH /v2/accelerator_requests</code> to bind the ARQ with the host name, device’s RP UUID and instance UUID. This is an asynchronous call which prepares or reconfigures the device in the background.</p>
</li>
<li><p>Cyborg, on completion of the bindings (successfully or otherwise), calls Nova’s <code>POST /os-server-external-events</code> API with:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;events&quot;</span>: [</span><br><span class="line">        &#123; <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;accelerator-request-bound&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;tag&quot;</span>: $device_profile_name,</span><br><span class="line">            <span class="attr">&quot;server_uuid&quot;</span>: $instance_uuid,</span><br><span class="line">            <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;completed&quot;</span> # or <span class="string">&quot;failed&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        ...</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>The Nova compute manager waits for the notification, subject to the timeout mentioned in Section Other deployer impact. It then calls the Cyborg REST API <code>GET /v2/accelerator_requests?instance=&lt;uuid&gt;&amp;bind_state=resolved</code>.</p>
</li>
<li><p>The Nova virt driver uses the attach handles returned from the Cyborg call to compose PCI passthrough devices into the VM’s definition.</p>
</li>
<li><p>If there is any error after binding has been initiated, Nova must unbind the relevant ARQs by calling Cyborg API. It may then retry on another host or delete the (unbound) ARQs for the instance.</p>
</li>
</ol>
<h3 id="Nova-allocate-mdevs"><a href="#Nova-allocate-mdevs" class="headerlink" title="Nova allocate mdevs"></a>Nova allocate mdevs</h3><p>Source Code：<a href="https://opendev.org/openstack/nova/src/branch/stable/victoria/nova/virt/libvirt/driver.py">(stable/victoria) Nova Compute Libvirt Driver - def _allocate_mdevs(self, allocations) </a></p>
<img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/nova_allocate_mdevs.drawio.png" alt="nova_allocate_mdevs.drawio" style="zoom:100%;">

<p>nova compute创建mdev设备的流程如下：</p>
<ol>
<li>整理出需要分配的vGPU信息。</li>
<li>判断需要分配的vGPU是否由同一个rp提供，目前仅支持从一个rp创建vGPU，若存在多个rp，则选取第一个。</li>
<li>从placement获取vGPU的rp详细信息。</li>
<li>从配置文件中获取当前支持的vGPU类型。</li>
<li>根据rp的device信息与支持的vGPU类型，获取可用的mdevs信息（所有的mdevs - 已分配的mdevs）。</li>
<li>若存在可用mdev设备，则直接pop弹出一个。</li>
<li>若不存在可用mdev设备，则调用<code>nova.privsep.libvirt.create_mdev()</code>，创建一个mdev设备。</li>
<li>分配mdev设备，直至数量等于需求值。</li>
</ol>
<p>代码<strong>PDB调试</strong>流程见下图：</p>
<img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/pbd_allocate_mdevs_1.png" alt="pbd_allocate_mdevs_1" style="zoom:100%;">

<img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/pbd_allocate_mdevs_2.png" alt="pbd_allocate_mdevs_2" style="zoom:100%;">

<img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/pbd_allocate_mdevs_3.png" alt="pbd_allocate_mdevs_3" style="zoom:100%;">

<img src="/2022/05/10/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACyborg/pbd_allocate_mdevs_4.png" alt="pbd_allocate_mdevs_4" style="zoom:100%;">



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://opendev.org/openstack/cyborg">OpenDev：openstack/cyborg</a></li>
<li><a href="https://wiki.openstack.org/wiki/Cyborg">OpenStack Wiki：Cyborg</a></li>
<li><a href="https://docs.openstack.org/cyborg/latest/user/architecture.html">OpenStack User Guide：Cyborg architecture</a></li>
<li><a href="https://docs.openstack.org/cyborg/latest/admin/index.html">OpenStack Admin Guide：Acceleration Service</a></li>
<li><a href="https://blueprints.launchpad.net/openstack-cyborg">Blueprints for Cyborg (OpenStack)</a></li>
<li><a href="https://wiki.openstack.org/wiki/Cyborg/TestReport/InspurFPGA">Cyborg/TestReport/InspurFPGA</a></li>
<li><a href="https://blog.csdn.net/wuyongpeng0912/article/details/113752165">nova实现vGPU功能</a></li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Accelerator</tag>
        <tag>Cyborg</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：Glance Image Cache</title>
    <url>/2020/12/22/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9AGlance-Image-Cache/</url>
    <content><![CDATA[<h2 id="The-Glance-Image-Cache"><a href="#The-Glance-Image-Cache" class="headerlink" title="The Glance Image Cache"></a>The Glance Image Cache</h2><blockquote>
<p>The Glance API server may be configured to have an optional local image cache. A local image cache stores a copy of image files, essentially enabling multiple API servers to serve the same image file, resulting in an increase in scalability due to an increased number of endpoints serving an image file.</p>
<p>This local image cache is transparent to the end user – in other words, the end user doesn’t know that the Glance API is streaming an image file from its local cache or from the actual backend storage system.</p>
</blockquote>
<h2 id="Configuration-options-for-the-Image-Cache"><a href="#Configuration-options-for-the-Image-Cache" class="headerlink" title="Configuration options for the Image Cache"></a>Configuration options for the Image Cache</h2><p>Config File：<code>glance-api.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line"><span class="comment"># This is the base directory where Glance stores the cache data (Required to be set, as does not have a default).</span></span><br><span class="line">image_cache_dir = /var/lib/glance/image-cache</span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to the sqlite file database that will be used for cache management.</span></span><br><span class="line">image_cache_driver = sqlite</span><br><span class="line"></span><br><span class="line"><span class="comment"># This is a relative path from the image_cache_dir directory (Default:cache.db)</span></span><br><span class="line">image_cache_sqlite_db = cache.db</span><br><span class="line"></span><br><span class="line"><span class="comment"># The size when the glance-cache-pruner will remove the oldest images, to reduce the bytes until under this value. (Default:10 GB)</span></span><br><span class="line">image_cache_max_size = 1073741824</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line"><span class="comment"># Enabling the Image Cache Management Middlewar. There are three types you can chose: </span></span><br><span class="line"><span class="comment">#   - cachemanagement</span></span><br><span class="line"><span class="comment">#   - keystone+cachemanagement</span></span><br><span class="line"><span class="comment">#   - trusted-auth+cachemanagement.</span></span><br><span class="line">flavor = keystone+cachemanagement</span><br></pre></td></tr></table></figure>





<h2 id="Managing-the-Glance-Image-Cache"><a href="#Managing-the-Glance-Image-Cache" class="headerlink" title="Managing the Glance Image Cache"></a>Managing the Glance Image Cache</h2><blockquote>
<p>While image files are automatically placed in the image cache on successful requests to <code>GET /v2/images/&#123;image_id&#125;/file</code>, eg: <code>openstack image save --file &lt;file name&gt; &lt;image id&gt;</code>.</p>
<p>the image cache is not automatically managed. Here, we describe the basics of how to manage the local image cache on Glance API servers and how to automate this cache management.</p>
</blockquote>
<h3 id="Glance-Image-Cache-API"><a href="#Glance-Image-Cache-API" class="headerlink" title="Glance Image Cache API"></a>Glance Image Cache API</h3><table>
<thead>
<tr>
<th>Description</th>
<th>Method</th>
<th>URL</th>
</tr>
</thead>
<tbody><tr>
<td>Get cached image</td>
<td>GET</td>
<td><code>/v2/cached_images</code></td>
</tr>
<tr>
<td>Delete cached image</td>
<td>DELETE</td>
<td><code>/v2/cached_images/&#123;image_id&#125;</code></td>
</tr>
<tr>
<td>Delete all cached image</td>
<td>DELETE</td>
<td><code>/v2/cached_images</code></td>
</tr>
<tr>
<td>Get queued image</td>
<td>GET</td>
<td><code>/v2/queued_images</code></td>
</tr>
<tr>
<td>Put image to queue</td>
<td>PUT</td>
<td><code>/v2/queued_images/&#123;image_id&#125;</code></td>
</tr>
<tr>
<td>Delete queued image</td>
<td>DELETE</td>
<td><code>/v2/queued_images/&#123;image_id&#125;</code></td>
</tr>
<tr>
<td>Delete all queued image</td>
<td>DELETE</td>
<td><code>/v2/queued_images</code></td>
</tr>
</tbody></table>
<p>Src File：<code>glance/api/middleware/cache_manage.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Copyright 2011 OpenStack Foundation</span></span><br><span class="line"><span class="comment"># All Rights Reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may</span></span><br><span class="line"><span class="comment">#    not use this file except in compliance with the License. You may obtain</span></span><br><span class="line"><span class="comment">#    a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#         http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">#    distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT</span></span><br><span class="line"><span class="comment">#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the</span></span><br><span class="line"><span class="comment">#    License for the specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment">#    under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Image Cache Management API</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> oslo_log <span class="keyword">import</span> log <span class="keyword">as</span> logging</span><br><span class="line"><span class="keyword">import</span> routes</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> glance.api.v2 <span class="keyword">import</span> cached_images</span><br><span class="line"><span class="keyword">from</span> glance.common <span class="keyword">import</span> wsgi</span><br><span class="line"><span class="keyword">from</span> glance.i18n <span class="keyword">import</span> _LI</span><br><span class="line"></span><br><span class="line">LOG = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CacheManageFilter</span>(<span class="params">wsgi.Middleware</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, app</span>):</span></span><br><span class="line">        mapper = routes.Mapper()</span><br><span class="line">        resource = cached_images.create_resource()</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/cached_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;get_cached_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;GET&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/cached_images/&#123;image_id&#125;&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_cached_image&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/cached_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_cached_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images/&#123;image_id&#125;&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;queue_image&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;PUT&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;get_queued_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;GET&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images/&#123;image_id&#125;&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_queued_image&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        mapper.connect(<span class="string">&quot;/v2/queued_images&quot;</span>,</span><br><span class="line">                       controller=resource,</span><br><span class="line">                       action=<span class="string">&quot;delete_queued_images&quot;</span>,</span><br><span class="line">                       conditions=dict(method=[<span class="string">&quot;DELETE&quot;</span>]))</span><br><span class="line"></span><br><span class="line">        self._mapper = mapper</span><br><span class="line">        self._resource = resource</span><br><span class="line"></span><br><span class="line">        LOG.info(_LI(<span class="string">&quot;Initialized image cache management middleware&quot;</span>))</span><br><span class="line">        super(CacheManageFilter, self).__init__(app)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="comment"># Map request to our resource object if we can handle it</span></span><br><span class="line">        match = self._mapper.match(request.path_info, request.environ)</span><br><span class="line">        <span class="keyword">if</span> match:</span><br><span class="line">            request.environ[<span class="string">&#x27;wsgiorg.routing_args&#x27;</span>] = (<span class="literal">None</span>, match)</span><br><span class="line">            <span class="keyword">return</span> self._resource(request)</span><br><span class="line">        <span class="comment"># Pass off downstream if we don&#x27;t match the request path</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="sqlite数据库"><a href="#sqlite数据库" class="headerlink" title="sqlite数据库"></a>sqlite数据库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlite&gt; .tables</span><br><span class="line">cached_images</span><br><span class="line">sqlite&gt; .schema cached_images</span><br><span class="line">CREATE TABLE cached_images (</span><br><span class="line">                        image_id TEXT PRIMARY KEY,</span><br><span class="line">                        last_accessed REAL DEFAULT 0.0,</span><br><span class="line">                        last_modified REAL DEFAULT 0.0,</span><br><span class="line">                        size INTEGER DEFAULT 0,</span><br><span class="line">                        hits INTEGER DEFAULT 0,</span><br><span class="line">                        checksum TEXT</span><br><span class="line">                    );</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>image_id：缓存镜像id</li>
<li>last_accessed：镜像最近一次被访问的时间</li>
<li>last_modified：镜像最近一次更改的时间</li>
<li>size：镜像大小</li>
<li>hits：镜像缓存命中次数，命中一次 +1</li>
<li>checksum：校验值</li>
</ul>
<p>Src File：<code>glance/image_cache/drivers/sqlite.py</code></p>
<p><code>SQLite Driver</code>创建表的流程如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize_db</span>(<span class="params">self</span>):</span></span><br><span class="line">    db = CONF.image_cache_sqlite_db</span><br><span class="line">    self.db_path = os.path.join(self.base_dir, db)</span><br><span class="line">    lockutils.set_defaults(self.base_dir)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @lockutils.synchronized(&#x27;image_cache_db_init&#x27;, external=True)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_db</span>():</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = sqlite3.connect(self.db_path, check_same_thread=<span class="literal">False</span>,</span><br><span class="line">                                   factory=SqliteConnection)</span><br><span class="line">            conn.executescript(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                CREATE TABLE IF NOT EXISTS cached_images (</span></span><br><span class="line"><span class="string">                    image_id TEXT PRIMARY KEY,</span></span><br><span class="line"><span class="string">                    last_accessed REAL DEFAULT 0.0,</span></span><br><span class="line"><span class="string">                    last_modified REAL DEFAULT 0.0,</span></span><br><span class="line"><span class="string">                    size INTEGER DEFAULT 0,</span></span><br><span class="line"><span class="string">                    hits INTEGER DEFAULT 0,</span></span><br><span class="line"><span class="string">                    checksum TEXT</span></span><br><span class="line"><span class="string">                );</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span>)</span><br><span class="line">            conn.close()</span><br><span class="line">        <span class="keyword">except</span> sqlite3.DatabaseError <span class="keyword">as</span> e:</span><br><span class="line">            msg = _(<span class="string">&quot;Failed to initialize the image cache database. &quot;</span></span><br><span class="line">                    <span class="string">&quot;Got error: %s&quot;</span>) % e</span><br><span class="line">            LOG.error(msg)</span><br><span class="line">            <span class="keyword">raise</span> exception.BadDriverConfiguration(driver_name=<span class="string">&#x27;sqlite&#x27;</span>,</span><br><span class="line">                                                   reason=msg)</span><br><span class="line"></span><br><span class="line">    create_db()</span><br></pre></td></tr></table></figure>





<h2 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h2><h3 id="Glance-image-cache流程"><a href="#Glance-image-cache流程" class="headerlink" title="Glance image cache流程"></a>Glance image cache流程</h3><p>Src File：<code>glance/image_cache/__init__.py</code></p>
<p>入口函数：主要传入CHUNKSIZE值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cache_image_file</span>(<span class="params">self, image_id, image_file</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Cache an image file.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param image_id: Image ID</span></span><br><span class="line"><span class="string">        :param image_file: Image file to cache</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :returns: True if image file was cached, False otherwise</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        CHUNKSIZE = <span class="number">64</span> * units.Mi</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.cache_image_iter(image_id,</span><br><span class="line">                                     utils.chunkiter(image_file, CHUNKSIZE))</span><br></pre></td></tr></table></figure>

<p><code>cache_image_iter()</code> &gt; <code>get_caching_iter()</code> &gt; <code>cache_tee_iter</code>，打开缓存文件写入缓存内容，文件名为<code>image_id</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cache_image_iter</span>(<span class="params">self, image_id, image_iter, image_checksum=None</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Cache an image with supplied iterator.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param image_id: Image ID</span></span><br><span class="line"><span class="string">    :param image_file: Iterator retrieving image chunks</span></span><br><span class="line"><span class="string">    :param image_checksum: Checksum of image</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :returns: True if image file was cached, False otherwise</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self.driver.is_cacheable(image_id):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> self.get_caching_iter(image_id, image_checksum,</span><br><span class="line">                                       image_iter):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_caching_iter</span>(<span class="params">self, image_id, image_checksum, image_iter</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Returns an iterator that caches the contents of an image</span></span><br><span class="line"><span class="string">    while the image contents are read through the supplied</span></span><br><span class="line"><span class="string">    iterator.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param image_id: Image ID</span></span><br><span class="line"><span class="string">    :param image_checksum: checksum expected to be generated while</span></span><br><span class="line"><span class="string">                           iterating over image data</span></span><br><span class="line"><span class="string">    :param image_iter: Iterator that will read image contents</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self.driver.is_cacheable(image_id):</span><br><span class="line">        <span class="keyword">return</span> image_iter</span><br><span class="line"></span><br><span class="line">    LOG.debug(<span class="string">&quot;Tee&#x27;ing image &#x27;%s&#x27; into cache&quot;</span>, image_id)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> self.cache_tee_iter(image_id, image_iter, image_checksum)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cache_tee_iter</span>(<span class="params">self, image_id, image_iter, image_checksum</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        current_checksum = hashlib.md5()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> self.driver.open_for_write(image_id) <span class="keyword">as</span> cache_file:</span><br><span class="line">            <span class="keyword">for</span> chunk <span class="keyword">in</span> image_iter:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    cache_file.write(chunk)</span><br><span class="line">                <span class="keyword">finally</span>:</span><br><span class="line">                    current_checksum.update(chunk)</span><br><span class="line">                    <span class="keyword">yield</span> chunk</span><br><span class="line">            cache_file.flush()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (image_checksum <span class="keyword">and</span></span><br><span class="line">                    image_checksum != current_checksum.hexdigest()):</span><br><span class="line">                msg = _(<span class="string">&quot;Checksum verification failed. Aborted &quot;</span></span><br><span class="line">                        <span class="string">&quot;caching of image &#x27;%s&#x27;.&quot;</span>) % image_id</span><br><span class="line">                <span class="keyword">raise</span> exception.GlanceException(msg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> exception.GlanceException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">with</span> excutils.save_and_reraise_exception():</span><br><span class="line">            <span class="comment"># image_iter has given us bad, (size_checked_iter has found a</span></span><br><span class="line">            <span class="comment"># bad length), or corrupt data (checksum is wrong).</span></span><br><span class="line">            LOG.exception(encodeutils.exception_to_unicode(e))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        LOG.exception(_LE(<span class="string">&quot;Exception encountered while tee&#x27;ing &quot;</span></span><br><span class="line">                          <span class="string">&quot;image &#x27;%(image_id)s&#x27; into cache: %(error)s. &quot;</span></span><br><span class="line">                          <span class="string">&quot;Continuing with response.&quot;</span>) %</span><br><span class="line">                      &#123;<span class="string">&#x27;image_id&#x27;</span>: image_id,</span><br><span class="line">                       <span class="string">&#x27;error&#x27;</span>: encodeutils.exception_to_unicode(e)&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># If no checksum provided continue responding even if</span></span><br><span class="line">        <span class="comment"># caching failed.</span></span><br><span class="line">        <span class="keyword">for</span> chunk <span class="keyword">in</span> image_iter:</span><br><span class="line">            <span class="keyword">yield</span> chunk</span><br></pre></td></tr></table></figure>



<h3 id="Glance-image-cache清理流程"><a href="#Glance-image-cache清理流程" class="headerlink" title="Glance image cache清理流程"></a>Glance image cache清理流程</h3><p>源生为一次性可执行命令，官方建议使用<code>cron</code>运行<code>glance-cache-pruner</code></p>
<p>Src File：<code>glance/image_cache/__init__.py</code></p>
<p>当前缓存文件大小与配置中的<code>image_cache_max_size</code>值进行比较，大于<code>image_cache_max_size</code>则开启清理操作，根据缓存文件的<code>last_accessed</code>字段，依次删除活跃度最低的镜像，直至缓存文件大小小于<code>image_cache_max_size</code>值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prune</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Removes all cached image files above the cache&#x27;s maximum</span></span><br><span class="line"><span class="string">    size. Returns a tuple containing the total number of cached</span></span><br><span class="line"><span class="string">    files removed and the total size of all pruned image files.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    max_size = CONF.image_cache_max_size</span><br><span class="line">    current_size = self.driver.get_cache_size()</span><br><span class="line">    <span class="keyword">if</span> max_size &gt; current_size:</span><br><span class="line">        LOG.debug(<span class="string">&quot;Image cache has free space, skipping prune...&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    overage = current_size - max_size</span><br><span class="line">    LOG.debug(<span class="string">&quot;Image cache currently %(overage)d bytes over max &quot;</span></span><br><span class="line">              <span class="string">&quot;size. Starting prune to max size of %(max_size)d &quot;</span>,</span><br><span class="line">              &#123;<span class="string">&#x27;overage&#x27;</span>: overage, <span class="string">&#x27;max_size&#x27;</span>: max_size&#125;)</span><br><span class="line"></span><br><span class="line">    total_bytes_pruned = <span class="number">0</span></span><br><span class="line">    total_files_pruned = <span class="number">0</span></span><br><span class="line">    entry = self.driver.get_least_recently_accessed()</span><br><span class="line">    <span class="keyword">while</span> entry <span class="keyword">and</span> current_size &gt; max_size:</span><br><span class="line">        image_id, size = entry</span><br><span class="line">        LOG.debug(<span class="string">&quot;Pruning &#x27;%(image_id)s&#x27; to free %(size)d bytes&quot;</span>,</span><br><span class="line">                  &#123;<span class="string">&#x27;image_id&#x27;</span>: image_id, <span class="string">&#x27;size&#x27;</span>: size&#125;)</span><br><span class="line">        self.driver.delete_cached_image(image_id)</span><br><span class="line">        total_bytes_pruned = total_bytes_pruned + size</span><br><span class="line">        total_files_pruned = total_files_pruned + <span class="number">1</span></span><br><span class="line">        current_size = current_size - size</span><br><span class="line">        entry = self.driver.get_least_recently_accessed()</span><br><span class="line"></span><br><span class="line">    LOG.debug(<span class="string">&quot;Pruning finished pruning. &quot;</span></span><br><span class="line">              <span class="string">&quot;Pruned %(total_files_pruned)d and &quot;</span></span><br><span class="line">              <span class="string">&quot;%(total_bytes_pruned)d.&quot;</span>,</span><br><span class="line">              &#123;<span class="string">&#x27;total_files_pruned&#x27;</span>: total_files_pruned,</span><br><span class="line">               <span class="string">&#x27;total_bytes_pruned&#x27;</span>: total_bytes_pruned&#125;)</span><br><span class="line">    <span class="keyword">return</span> total_files_pruned, total_bytes_pruned</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://docs.openstack.org/glance/train/admin/cache.html">OpenStack Documentation：The Glance Image Cache</a></p>
</li>
<li><p><a href="https://docs.openstack.org/glance/train/admin/">OpenStack Documentation：Glance Administration Guide</a></p>
</li>
<li><p><a href="https://docs.openstack.org/glance/train/configuration/configuring.html">OpenStack Documentation：Basic Configuration</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Glance</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：Glance Image Soft Delete</title>
    <url>/2021/01/05/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9AGlance-Image-Soft-Delete/</url>
    <content><![CDATA[<h2 id="Configuration-options-for-the-Image-Soft-Delete"><a href="#Configuration-options-for-the-Image-Soft-Delete" class="headerlink" title="Configuration options for the Image Soft Delete"></a>Configuration options for the Image Soft Delete</h2><p>Config File：<code>glance-api.conf</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Turn on/off delayed delete.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Typically when an image is deleted, the ``glance-api`` service puts the image</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> into ``deleted`` state and deletes its data at the same time. Delayed delete</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is a feature <span class="keyword">in</span> Glance that delays the actual deletion of image data until a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> later point <span class="keyword">in</span> time (as determined by the configuration option</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ``scrub_time``).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> When delayed delete is turned on, the ``glance-api`` service puts the image</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> into ``pending_delete`` state upon deletion and leaves the image data <span class="keyword">in</span> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> storage backend <span class="keyword">for</span> the image scrubber to delete at a later time. The image</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scrubber will move the image into ``deleted`` state upon successful deletion</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> of image data.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NOTE: When delayed delete is turned on, image scrubber MUST be running as a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> periodic task to prevent the backend storage from filling up with undesired</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> usage.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Possible values:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * True</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * False</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Related options:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``scrub_time``</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``wakeup_time``</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``scrub_pool_size``</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  (boolean value)</span></span><br><span class="line">delayed_delete = True</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The amount of time, <span class="keyword">in</span> seconds, to delay image scrubbing.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> When delayed delete is turned on, an image is put into ``pending_delete``</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> state upon deletion until the scrubber deletes its image data. Typically, soon</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> after the image is put into ``pending_delete`` state, it is available <span class="keyword">for</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scrubbing. However, scrubbing can be delayed until a later point using this</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> configuration option. This option denotes the time period an image spends <span class="keyword">in</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ``pending_delete`` state before it is available <span class="keyword">for</span> scrubbing.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> It is important to realize that this has storage implications. The larger the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ``scrub_time``, the longer the time to reclaim backend storage from deleted</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> images.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Possible values:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * Any non-negative <span class="built_in">integer</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Related options:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     * ``delayed_delete``</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  (<span class="built_in">integer</span> value)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Minimum value: 0</span></span><br><span class="line">scrub_time = 9999999999999</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://blog.csdn.net/zhongbeida_xue/article/details/89016403">openstack中glance镜像的延迟删除、软删除、删除保护</a></p>
</li>
<li><p><a href="https://docs.openstack.org/train/api/index.html">OpenStack Train API Reference Documentation</a></p>
</li>
<li><p><a href="https://docs.openstack.org/api-ref/compute/?expanded=#delete-server">OpenStack API Documentation: Compute API</a></p>
</li>
<li><p><a href="https://docs.openstack.org/api-ref/image/v2/?expanded=">OpenStack API Documentation: Image Service API v2 (CURRENT)</a></p>
</li>
<li><p><a href="https://docs.openstack.org/api-ref/image/v2/?expanded=">OpenStack API Documentation: Using Glance’s Image Public APIs</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Glance</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：Nova与Cyborg交互流程研究</title>
    <url>/2022/04/13/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ANova%E4%B8%8ECyborg%E4%BA%A4%E4%BA%92%E6%B5%81%E7%A8%8B%E7%A0%94%E7%A9%B6/</url>
    <content><![CDATA[<p>本文只研究含有加速资源的虚机在生命周期管理的流程，即深挖<code>Nova</code>与<code>Cyborg</code>组件之间的交互流程，对<code>Nova</code>与其余组件的交互并不做详细展开，有兴趣可以对代码中具体函数进行深入分析。</p>
<h2 id="组件版本"><a href="#组件版本" class="headerlink" title="组件版本"></a>组件版本</h2><ul>
<li>Nova：22.4.0（Victoria）</li>
<li>Cyborg： 5.0.1（Victoria）</li>
<li>Placement：4.0.0（Victoria）</li>
</ul>
<h2 id="社区支持情况"><a href="#社区支持情况" class="headerlink" title="社区支持情况"></a>社区支持情况</h2><blockquote>
<p>Nova supports only specific operations for instances with accelerators. The lists of supported and unsupported operations are as below:</p>
<ul>
<li>Supported operations.<ul>
<li>Creation and deletion.</li>
<li>Reboots (soft and hard).</li>
<li>Pause and unpause.</li>
<li>Stop and start.</li>
<li>Take a snapshot.</li>
<li>Backup.</li>
<li>Rescue and unrescue.</li>
<li>Rebuild.</li>
<li>Evacuate.</li>
<li>Shelve and unshelve.</li>
</ul>
</li>
<li>Unsupported operations<ul>
<li>Resize.</li>
<li>Suspend and resume.</li>
<li>Cold migration.</li>
<li>Live migration.</li>
</ul>
</li>
</ul>
<p>Changed in version 22.0.0(Victoria): Added support for rebuild and evacuate operations.</p>
<p>Changed in version 23.0.0(Wallaby): Added support for shelve and unshelve operations.</p>
</blockquote>
<h2 id="加速资源虚机创建"><a href="#加速资源虚机创建" class="headerlink" title="加速资源虚机创建"></a>加速资源虚机创建</h2><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p><img src="/2022/04/13/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ANova%E4%B8%8ECyborg%E4%BA%A4%E4%BA%92%E6%B5%81%E7%A8%8B%E7%A0%94%E7%A9%B6/%E5%8A%A0%E9%80%9F%E8%B5%84%E6%BA%90%E8%99%9A%E6%9C%BA%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B.drawio.png" alt="加速资源虚机创建流程.drawio"></p>
<h3 id="各模块作用"><a href="#各模块作用" class="headerlink" title="各模块作用"></a>各模块作用</h3><ul>
<li><strong>Nova API：</strong>响应创建虚机请求，调用conductor进行创建虚机处理。</li>
<li><strong>Nova Conductor：</strong>先调用Nova Scheduler选择计算节点，其次向Cyborg发起请求，绑定该节点instance uuid与resource provider，最后调用Nova Computer在指定计算节点创建虚机。</li>
<li><strong>Cyborg API：</strong>响应Nova Conductor请求，调用Cyborg Conductor创建并绑定ARQ。</li>
<li><strong>Cyborg Conductor：</strong>负责创建并绑定ARQ，数据库层面操作。（Cyborg agent仅处理FPGA烧录及资源发现操作。）</li>
<li><strong>Nova Computer：</strong>寻找可用的加速资源设备，若没有现成的则创建一个，生成xml并孵化虚机。</li>
</ul>
<h3 id="代码调用关系"><a href="#代码调用关系" class="headerlink" title="代码调用关系"></a>代码调用关系</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 1. nova.api.openstack.coumpute.servers</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, req, body</span>):</span></span><br><span class="line">    -&gt; (instances, resv_id) = self.compute_api.create(context, *</span><br><span class="line"><span class="comment"># 2. nova.compute.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, context, instance_type, *</span></span></span><br><span class="line"><span class="function"><span class="params">    -&gt; self._create_instance(<span class="params"> *</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params">def _create_instance(<span class="params">self, context, instance_type, *</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">    -&gt; self.compute_task_api.schedule_and_build_instances(<span class="params"> *</span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova api -&gt; nova conductor</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 3. nova.conductor.manager</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params">def schedule_and_build_instances(<span class="params">self, context, build_requests, *</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; host_lists = self._schedule_instances(<span class="params">context, request_specs[<span class="number">0</span>], *</span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; accel_uuids = self._create_and_bind_arq_for_instance(<span class="params"> *</span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.compute_rpcapi.build_and_run_instance(<span class="params"> *</span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova conductor -&gt; nova scheduler</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 4. nova.scheduler.manager</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def select_destinations(<span class="params">self, ctxt, request_spec=None, *</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova conductor -&gt; cyborg api</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 5. nova.conductor.manager</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_and_bind_arq_for_instance(<span class="params">self, context, instance, host, *</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return self._create_and_bind_arqs(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_and_bind_arqs(<span class="params">self, context, instance_uuid, extra_specs, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; arqs = cyclient.create_arqs_and_match_resource_providers(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; cyclient.bind_arqs(<span class="params">bindings=bindings</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 6. nova.accelerator.cyborg</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def create_arqs_and_match_resource_providers(<span class="params">self, dp_name, rg_rp_map</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; arqs = self._create_arqs(<span class="params">dp_name</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_arqs(<span class="params">self, dp_name</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; resp, err_msg = self._call_cyborg(<span class="params">self._client.post, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def bind_arqs(<span class="params">self, bindings</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; resp, err_msg = self._call_cyborg(<span class="params">self._client.patch, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## Part 1: _create_arqs()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 7. cyborg.api.controllers.v2.arqs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">@authorize_wsgi.authorize_wsgi(<span class="params"><span class="string">&quot;cyborg:arq&quot;</span>, <span class="string">&quot;create&quot;</span>, False</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def post(<span class="params">self, req</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">       obj_extarq = objects.ExtARQ(<span class="params">context, **extarq_fields</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; new_extarq = pecan.request.conductor_api.arq_create(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 8. cyborg.conductor.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def arq_create(<span class="params">self, context, obj_extarq, devprof_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; obj_extarq.create(<span class="params">context, devprof_id</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 9. cyborg.objects.ext_arq</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def create(<span class="params">self, context, device_profile_id=None</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; db_extarq = self.dbapi.extarq_create(<span class="params">context, values</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 10. cyborg.db.sqlalchemy.api</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def extarq_create(<span class="params">self, context, values</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## Part 2: bind_arqs()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 11. cyborg.api.controllers.v2.arqs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">@authorize_wsgi.authorize_wsgi(<span class="params"><span class="string">&quot;cyborg:arq&quot;</span>, <span class="string">&quot;update&quot;</span>, False</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def patch(<span class="params">self, patch_list</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; objects.ExtARQ.apply_patch(<span class="params">context, patch_list, valid_fields</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 12. cyborg.objects.extarq.ext_arq_job</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def apply_patch(<span class="params">cls, context, patch_list, valid_fields</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; job = extarq.start_bind_job(<span class="params">context, valid_fields</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def start_bind_job(<span class="params">self, context, valid_fields</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return self._bind_job(<span class="params">context, dep</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _bind_job(<span class="params">self, context, deployable</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.bind(<span class="params">context, deployable</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 13. cyborg.objects.ext_arq</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def bind(<span class="params">self, context, deployable</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self._allocate_attach_handle(<span class="params">context, deployable</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.update_check_state(<span class="params">context, constants.ARQ_BOUND</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _allocate_attach_handle(<span class="params">self, context, deployable</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; ah = AttachHandle.allocate(<span class="params">context, deployable.id</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 14. cyborg.objects.attach_handle</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def allocate(<span class="params">cls, context, deployable_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; db_ah = cls.dbapi.attach_handle_allocate(<span class="params">context, deployable_id</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 15. cyborg.db.sqlalchemy.api</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def attach_handle_allocate(<span class="params">self, context, deployable_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; ah = self._do_allocate_attach_handle(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _do_allocate_attach_handle(<span class="params">self, context, deployable_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova conductor -&gt; nova compute</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 16. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def build_and_run_instance(<span class="params">self, context, instance, image, request_spec, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; result = self._do_build_and_run_instance(<span class="params">*args, **kwargs</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 17. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _do_build_and_run_instance(<span class="params">self, context, instance, image, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self._build_and_run_instance(<span class="params">context, instance, image, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 18. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _build_and_run_instance(<span class="params">self, context, instance, image, injected_files, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; with self._build_resources(<span class="params">context, instance, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.driver.spawn(<span class="params">context, instance, image_meta, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 19. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _build_resources(<span class="params">self, context, instance, requested_networks, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; arqs = self._get_bound_arq_resources(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _get_bound_arq_resources(<span class="params">self, context, instance, arq_uuids</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return arqs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 20. nova.virt.libvirt.driver</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def spawn(<span class="params">self, context, instance, image_meta, injected_files,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; mdevs = self._allocate_mdevs(<span class="params">allocations</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self._create_guest_with_network(<span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _allocate_mdevs(<span class="params">self, allocations</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; mdevs_available = self._get_existing_mdevs_not_assigned(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; chosen_mdev = self._create_new_mediated_device(<span class="params">parent_device</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return chosen_mdevs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_guest_with_network(<span class="params">self, context, xml, instance, network_info, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; guest = self._create_guest(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_guest(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; guest = libvirt_guest.Guest.create(<span class="params">xml, self._host</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>



<h2 id="加速资源虚机删除"><a href="#加速资源虚机删除" class="headerlink" title="加速资源虚机删除"></a>加速资源虚机删除</h2><h3 id="各模块作用-1"><a href="#各模块作用-1" class="headerlink" title="各模块作用"></a>各模块作用</h3><ul>
<li><strong>Nova API：</strong>响应删除虚机请求，根据虚机不同状态做出相应的处理：<ul>
<li>虚机正常：先释放各类资源，然后调用其宿主机节点的nova compute组件进行删除操作。</li>
</ul>
</li>
<li><strong>Cyborg API：</strong>响应Nova API请求，调用Cyborg Conductor解绑并删除ARQ。</li>
<li><strong>Cyborg Conductor：</strong>负责解绑并删除ARQ，数据库层面操作。</li>
<li><strong>Nova Computer：</strong>删除虚机，不删除已创建的vGPU资源。</li>
</ul>
<h3 id="代码调用关系-1"><a href="#代码调用关系-1" class="headerlink" title="代码调用关系"></a>代码调用关系</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 1. nova.api.openstack.coumpute.servers</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, req, id</span>):</span></span><br><span class="line">    -&gt; self._delete(req.environ[&#x27;nova.context&#x27;], req, id)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete</span>(<span class="params">self, context, req, instance_uuid</span>):</span></span><br><span class="line">    -&gt; self.compute_api.delete(context, instance)</span><br><span class="line"><span class="comment"># 2. nova.compute.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; self._delete_instance(context, instance)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete_instance</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; self._delete(context, instance, &#x27;delete&#x27;, self._do_delete, *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete</span>(<span class="params">self, context, instance, delete_type, cb, **instance_attrs</span>):</span></span><br><span class="line">    -&gt; self._local_delete(cctxt, instance, bdms, delete_type, cb)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_local_delete</span>(<span class="params">self, context, instance, bdms, delete_type, cb</span>):</span></span><br><span class="line">    -&gt; compute_utils.delete_arqs_if_needed(context, instance)</span><br><span class="line">    -&gt; cb(context, instance, bdms, local=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api -&gt; cyborg api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 3. nova.compute.utils</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_arqs_if_needed</span>(<span class="params">context, instance</span>):</span></span><br><span class="line">    -&gt; cyclient.delete_arqs_for_instance(instance.uuid)</span><br><span class="line"><span class="comment"># 4. nova.accelerator.cyborg</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_arqs_for_instance</span>(<span class="params">self, instance_uuid</span>):</span></span><br><span class="line">    -&gt; resp, err_msg = self._call_cyborg(self._client.delete, *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. cyborg.api.controllers.v2.arqs</span></span><br><span class="line"><span class="meta">@authorize_wsgi.authorize_wsgi(&quot;cyborg:arq&quot;, &quot;delete&quot;, False)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, arqs=None, instance=None</span>):</span></span><br><span class="line">    -&gt; pecan.request.conductor_api.arq_delete_by_instance_uuid( *</span><br><span class="line"><span class="comment"># 6. cyborg.conductor.manager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">arq_delete_by_instance_uuid</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; ExtARQ.delete_by_instance(context, instance)</span><br><span class="line"><span class="comment"># 7. cyborg.objects.ext_arq</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_by_instance</span>(<span class="params">cls, context, instance_uuid</span>):</span></span><br><span class="line">    -&gt; obj_extarq.unbind(context)</span><br><span class="line">    -&gt; obj_extarq.destroy(context)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Part 1: obj_extarq.unbind(context)</span></span><br><span class="line"><span class="comment"># 8. cyborg.objects.ext_arq</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unbind</span>(<span class="params">self, context</span>):</span></span><br><span class="line">    -&gt; attach_handle.deallocate(context)</span><br><span class="line"><span class="comment"># 9. cyborg.objects.attach_handle</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deallocate</span>(<span class="params">self, context</span>):</span></span><br><span class="line">    -&gt; self.dbapi.attach_handle_update(context, self.uuid, values)</span><br><span class="line"><span class="comment"># 10. cyborg.db.sqlalchemy.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">attach_handle_update</span>(<span class="params">self, context, uuid, values</span>):</span></span><br><span class="line">    -&gt; return self._do_update_attach_handle(context, uuid, values)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_do_update_attach_handle</span>(<span class="params">self, context, uuid, values</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Part 2: obj_extarq.destroy(context)</span></span><br><span class="line"><span class="comment"># 11. cyborg.objects.ext_arq</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">destroy</span>(<span class="params">self, context</span>):</span></span><br><span class="line">    -&gt; self.dbapi.extarq_delete(context, self.arq.uuid)</span><br><span class="line"><span class="comment"># 12. cyborg.db.sqlalchemy.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extarq_delete</span>(<span class="params">self, context, uuid</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api -&gt; nova compute</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 13. nova.compute.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_do_delete</span>(<span class="params">self, context, instance, bdms, local=False</span>):</span></span><br><span class="line">    -&gt; self.compute_rpcapi.terminate_instance(context, instance, bdms)</span><br><span class="line"><span class="comment"># 14. nova.compute.manager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">terminate_instance</span>(<span class="params">self, context, instance, bdms</span>):</span></span><br><span class="line">    -&gt; do_terminate_instance(instance, bdms)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_terminate_instance</span>(<span class="params">instance, bdms</span>):</span></span><br><span class="line">    -&gt; self._delete_instance(context, instance, bdms)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete_instance</span>(<span class="params">self, context, instance, bdms</span>):</span></span><br><span class="line">    -&gt; self._shutdown_instance(context, instance, bdms)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_shutdown_instance</span>(<span class="params">self, context, instance,</span></span></span><br><span class="line"><span class="function"><span class="params">    -&gt; self.driver.destroy(<span class="params">context, instance, network_info, *</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params">    -&gt; compute_utils.delete_arqs_if_needed(<span class="params">context, instance</span>)</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="comment"># 15. nova.virt.libvirt.driver</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params">def destroy(<span class="params">self, context, instance, network_info, block_device_info=None, *</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">    -&gt; self._destroy(<span class="params">instance</span>)</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">def _destroy(<span class="params">self, instance, attempt=<span class="number">1</span></span>):</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">    -&gt; guest.poweroff(<span class="params"></span>)</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="comment"># 16. nova.virt.libvirt.guest</span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">def poweroff(<span class="params">self</span>):</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">    -&gt; self._domain.destroy(<span class="params"></span>)</span></span></span></span></span><br></pre></td></tr></table></figure>



<h2 id="加速资源虚机开机"><a href="#加速资源虚机开机" class="headerlink" title="加速资源虚机开机"></a>加速资源虚机开机</h2><h3 id="各模块作用-2"><a href="#各模块作用-2" class="headerlink" title="各模块作用"></a>各模块作用</h3><ul>
<li><strong>Nova API：</strong>响应虚机启动请求，调用宿主机节点的nova compute服务，启动虚机。</li>
<li><strong>Nova Computer：</strong>查询虚机对应的加速资源信息，生成xml文件，在宿主机创建并启动虚机。</li>
<li><strong>Cyborg API：</strong>响应Nova Compute的请求，返回虚机对应的ARQ信息。</li>
</ul>
<h3 id="代码调用关系-2"><a href="#代码调用关系-2" class="headerlink" title="代码调用关系"></a>代码调用关系</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 1. nova.api.openstack.coumpute.servers</span></span><br><span class="line"><span class="meta">@wsgi.action(&#x27;os-start&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_start_server</span>(<span class="params">self, req, id, body</span>):</span></span><br><span class="line">    -&gt; self.compute_api.start(context, instance)</span><br><span class="line"><span class="comment"># 2. nova.compute.api</span></span><br><span class="line"><span class="meta">@check_instance_state(vm_state=[vm_states.STOPPED])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; self.compute_rpcapi.start_instance(context, instance)</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api -&gt; nova compute</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 3. nova.compute.manager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_instance</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; self._power_on(context, instance)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_power_on</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; accel_info = self._get_accel_info(context, instance)</span><br><span class="line">    -&gt; self.driver.power_on(context, instance, *</span><br><span class="line"></span><br><span class="line"><span class="comment"># Part 1: self._get_accel_info()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_accel_info</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; accel_info = cyclient.get_arqs_for_instance(instance.uuid)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Part 2: self.driver.power_on()</span></span><br><span class="line"><span class="comment"># 4. nova.virt.libvirt.driver</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power_on</span>(<span class="params">self, context, instance, network_info, *</span></span></span><br><span class="line"><span class="function"><span class="params">    -&gt; self._hard_reboot(<span class="params">context, instance, network_info, block_device_info, *</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params">def _hard_reboot(<span class="params">self, context, instance, network_info, *</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">    -&gt; self._create_guest_with_network(<span class="params"> *</span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params">def _create_guest_with_network(<span class="params">self, context, xml, instance, network_info, *</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; guest = self._create_guest(<span class="params"> *</span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_guest(<span class="params"> *</span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>



<h2 id="加速资源虚机关机"><a href="#加速资源虚机关机" class="headerlink" title="加速资源虚机关机"></a>加速资源虚机关机</h2><h3 id="各模块作用-3"><a href="#各模块作用-3" class="headerlink" title="各模块作用"></a>各模块作用</h3><ul>
<li><strong>Nova API：</strong>响应虚机关机请求，调用宿主机节点的nova compute服务，销毁虚机。</li>
<li><strong>Nova Computer：</strong>在宿主机上销毁虚机。</li>
</ul>
<h3 id="代码调用关系-3"><a href="#代码调用关系-3" class="headerlink" title="代码调用关系"></a>代码调用关系</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 1. nova.api.openstack.coumpute.servers</span></span><br><span class="line"><span class="meta">@wsgi.action(&#x27;os-stop&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_stop_server</span>(<span class="params">self, req, id, body</span>):</span></span><br><span class="line">    -&gt; self.compute_api.stop(context, instance)</span><br><span class="line"><span class="comment"># 2. nova.compute.api</span></span><br><span class="line"><span class="meta">@check_instance_state(vm_state=[vm_states.ACTIVE, vm_states.ERROR])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stop</span>(<span class="params">self, context, instance, do_cast=True, clean_shutdown=True</span>):</span></span><br><span class="line">    -&gt; self.force_stop(context, instance, do_cast, clean_shutdown)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">force_stop</span>(<span class="params">self, context, instance, do_cast=True, clean_shutdown=True</span>):</span></span><br><span class="line">    -&gt; self.compute_rpcapi.stop_instance(context, instance, do_cast=do_cast, *</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api -&gt; nova compute</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 3. nova.compute.manager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stop_instance</span>(<span class="params">self, context, instance, clean_shutdown</span>):</span></span><br><span class="line">    -&gt; self._power_off_instance(instance, clean_shutdown)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_power_off_instance</span>(<span class="params">self, instance, clean_shutdown=True</span>):</span></span><br><span class="line">    -&gt; self.driver.power_off(instance, timeout, retry_interval)</span><br><span class="line"><span class="comment"># 4. nova.virt.libvirt.driver</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power_off</span>(<span class="params">self, instance, timeout=<span class="number">0</span>, retry_interval=<span class="number">0</span></span>):</span></span><br><span class="line">    -&gt; self._destroy(instance)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_destroy</span>(<span class="params">self, instance, attempt=<span class="number">1</span></span>):</span></span><br><span class="line">    -&gt; guest.poweroff()</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://docs.openstack.org/api-guide/compute/accelerator-support.html">Using accelerators with Cyborg</a></li>
<li><a href="http://www.c114.com.cn/tech/222/a1107306.html">OpenStack硬件管理加速利器：Cyborg</a></li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Cyborg</tag>
        <tag>Nova</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：novaclient</title>
    <url>/2020/12/16/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9Anovaclient/</url>
    <content><![CDATA[<h2 id="研发环境"><a href="#研发环境" class="headerlink" title="研发环境"></a>研发环境</h2><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>OpenStack：Train版 </li>
<li>Python：2.7.5</li>
</ul>
<table>
<thead>
<tr>
<th>Python库</th>
<th>版本</th>
</tr>
</thead>
<tbody><tr>
<td>keystoneauth1</td>
<td>4.0.1</td>
</tr>
<tr>
<td>openstacksdk</td>
<td>0.45.0</td>
</tr>
<tr>
<td>oslo.config</td>
<td>7.0.0</td>
</tr>
<tr>
<td>oslo.i18n</td>
<td>3.25.1</td>
</tr>
<tr>
<td>oslo.serialization</td>
<td>2.29.2</td>
</tr>
<tr>
<td>oslo.utils</td>
<td>3.42.1</td>
</tr>
<tr>
<td>python-cinderclient</td>
<td>6.0.0</td>
</tr>
<tr>
<td>python-keystoneclient</td>
<td>3.22.0</td>
</tr>
<tr>
<td>python-novaclient</td>
<td>16.0.0</td>
</tr>
<tr>
<td>python-openstackclient</td>
<td>5.2.1</td>
</tr>
</tbody></table>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> loading</span><br><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> session</span><br><span class="line"><span class="keyword">from</span> novaclient <span class="keyword">import</span> client <span class="keyword">as</span> nova_client</span><br><span class="line"></span><br><span class="line">NOVA_API_VERSION = <span class="string">&quot;2.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从keystone处获取认证信息</span></span><br><span class="line">loader = loading.get_plugin_loader(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">auth = loader.load_from_options(auth_url=<span class="string">&quot;http://111.111.9.234:35357/v3&quot;</span>,</span><br><span class="line">                                username=<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                                password=<span class="string">&quot;Inspur@123&quot;</span>,</span><br><span class="line">                                project_name=<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                                project_domain_id=<span class="string">&quot;default&quot;</span>,</span><br><span class="line">                                user_domain_id=<span class="string">&quot;default&quot;</span>)</span><br><span class="line">sess = session.Session(auth=auth)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用认证信息，获取novaclient</span></span><br><span class="line">nova = nova_client.Client(NOVA_API_VERSION, session=sess)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用novaclient，获取nova相关信息</span></span><br><span class="line">servers = nova.servers.list()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ser <span class="keyword">in</span> servers:</span><br><span class="line">    <span class="keyword">print</span> ser.id</span><br><span class="line">    <span class="keyword">print</span> ser.name</span><br><span class="line">    <span class="keyword">print</span> ser.image</span><br><span class="line">    <span class="keyword">print</span> ser.flavor</span><br><span class="line">    <span class="keyword">print</span> ser.key_name</span><br><span class="line">    <span class="keyword">print</span> ser.status</span><br><span class="line">    <span class="keyword">print</span> ser.created</span><br><span class="line">    <span class="keyword">print</span> ser.addresses</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[nova]</span><br><span class="line">endpoint_type &#x3D; internal</span><br><span class="line">auth_url &#x3D; http:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">auth_type &#x3D; password</span><br><span class="line">project_domain_id &#x3D; default</span><br><span class="line">user_domain_id &#x3D; default</span><br><span class="line">region_name &#x3D; RegionOne</span><br><span class="line">project_name &#x3D; service</span><br><span class="line">username &#x3D; nova</span><br><span class="line">password &#x3D; 8rMN88CaCkvNyvx5b9YrXYwkPDEgKTE7Kb5xfWnL</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[nova]</span><br><span class="line">auth_url &#x3D; http:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">auth_type &#x3D; password</span><br><span class="line">project_domain_id &#x3D; default</span><br><span class="line">user_domain_id &#x3D; default</span><br><span class="line">region_name &#x3D; RegionOne</span><br><span class="line">project_name &#x3D; admin</span><br><span class="line">username &#x3D; admin</span><br><span class="line">password &#x3D; admin</span><br><span class="line">endpoint_type &#x3D; internal</span><br></pre></td></tr></table></figure>



<h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="nova-servers-list"><a href="#nova-servers-list" class="headerlink" title="nova.servers.list()"></a>nova.servers.list()</h3><p><strong>item</strong>结构</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;OS-EXT-STS:task_state&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;demo-net&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;OS-EXT-IPS-MAC:mac_addr&quot;</span>: <span class="string">&quot;fa:16:3e:8b:c8:00&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;version&quot;</span>: <span class="number">4</span>,</span><br><span class="line">                <span class="attr">&quot;addr&quot;</span>: <span class="string">&quot;10.0.0.221&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;OS-EXT-IPS:type&quot;</span>: <span class="string">&quot;fixed&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;links&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;href&quot;</span>: <span class="string">&quot;http://111.111.111.80:8774/v2.1/servers/077c1c6d-5390-4856-89dc-7072c5d5d5d4&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;rel&quot;</span>: <span class="string">&quot;self&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;href&quot;</span>: <span class="string">&quot;http://111.111.111.80:8774/servers/077c1c6d-5390-4856-89dc-7072c5d5d5d4&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;rel&quot;</span>: <span class="string">&quot;bookmark&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;locked_reason&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;image&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3086f549-23e2-4c0d-b791-b17998952d68&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;links&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;href&quot;</span>: <span class="string">&quot;http://111.111.111.80:8774/images/3086f549-23e2-4c0d-b791-b17998952d68&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;rel&quot;</span>: <span class="string">&quot;bookmark&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:user_data&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-STS:vm_state&quot;</span>: <span class="string">&quot;active&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:instance_name&quot;</span>: <span class="string">&quot;instance-00000001&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:root_device_name&quot;</span>: <span class="string">&quot;/dev/vda&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-SRV-USG:launched_at&quot;</span>: <span class="string">&quot;2020-12-08T17:41:17.000000&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;flavor&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;ephemeral&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;ram&quot;</span>: <span class="number">512</span>,</span><br><span class="line">        <span class="attr">&quot;original_name&quot;</span>: <span class="string">&quot;m1.tiny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;vcpus&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;extra_specs&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;swap&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;disk&quot;</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;077c1c6d-5390-4856-89dc-7072c5d5d5d4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;security_groups&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;default&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;host_status&quot;</span>: <span class="string">&quot;UP&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;user_id&quot;</span>: <span class="string">&quot;439ca237905e417593165391458960d6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:hostname&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-DCF:diskConfig&quot;</span>: <span class="string">&quot;MANUAL&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;accessIPv4&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;accessIPv6&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:reservation_id&quot;</span>: <span class="string">&quot;r-56k4gluj&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;progress&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-STS:power_state&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-AZ:availability_zone&quot;</span>: <span class="string">&quot;nova&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;config_drive&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;ACTIVE&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:ramdisk_id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;updated&quot;</span>: <span class="string">&quot;2020-12-08T17:41:18Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hostId&quot;</span>: <span class="string">&quot;cd9cf8191851aeae24077dd7d3ca4c6c01d1b5d0ff7be81de482259b&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:host&quot;</span>: <span class="string">&quot;node02&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-SRV-USG:terminated_at&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;tags&quot;</span>: [],</span><br><span class="line">    <span class="attr">&quot;key_name&quot;</span>: <span class="string">&quot;mykey&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:kernel_id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;locked&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:hypervisor_hostname&quot;</span>: <span class="string">&quot;node02&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;OS-EXT-SRV-ATTR:launch_index&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;created&quot;</span>: <span class="string">&quot;2020-12-08T17:40:57Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tenant_id&quot;</span>: <span class="string">&quot;1249bd160bab49e89c4c1d795ec68746&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;os-extended-volumes:volumes_attached&quot;</span>: [],</span><br><span class="line">    <span class="attr">&quot;trusted_image_certificates&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://docs.openstack.org/python-novaclient/latest/user/python-api.html">OpenStack API Documentation：The novaclient Python API</a></p>
</li>
<li><p><a href="https://docs.openstack.org/keystoneauth/latest/index.html">OpenStack API Documentation：Common Authentication Library for OpenStack Clients</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/e04c217eeb21">novaclient开发中遇到的问题小结</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/freshchen/p/11656975.html">Python调用 Openstack 主要服务(keystone,nova,glance,neutron,heat)</a></p>
</li>
<li><p><a href="https://blog.51cto.com/eddy72/2457564">Python通过OpenStack API接口筛选虚机</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/ggykx/p/12175689.html">OpenStack中创建实例流程详解</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>CLI</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack部署：Glance对接Cinder</title>
    <url>/2021/09/06/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AGlance%E5%AF%B9%E6%8E%A5Cinder/</url>
    <content><![CDATA[<h2 id="Glance-Cinder-store-proposal"><a href="#Glance-Cinder-store-proposal" class="headerlink" title="Glance/Cinder-store-proposal"></a>Glance/Cinder-store-proposal</h2><h3 id="Glance-Cinder-Driver"><a href="#Glance-Cinder-Driver" class="headerlink" title="Glance Cinder Driver"></a>Glance Cinder Driver</h3><p>There is currently a Cinder store in Glance, however it does not support uploads and downloads. This is a proposal to allow Cinder to act as a data store for Glance images that supports upload and download by using Cinder volumes as containers for image data. There would be a 1-to-1 mapping of Glance images to Cinder volumes.</p>
<h4 id="What-are-the-benefits-of-this-approach"><a href="#What-are-the-benefits-of-this-approach" class="headerlink" title="What are the benefits of this approach?"></a>What are the benefits of this approach?</h4><p>This will allow Glance to store images on the large and diverse array of SAN and NAS storage systems supported by Cinder. It also allows for storing images as block devices to enable the features mentioned in the “Subsequent Features” section of this wiki page.</p>
<p>Glance and Cinder using common backend storage will allow for storage optimizations when creating volumes from images or storing images as volumes. Some examples are deduplication and fast replication (create-volume-from-image).</p>
<h4 id="How-do-you-configure-Glance-on-Cinder"><a href="#How-do-you-configure-Glance-on-Cinder" class="headerlink" title="How do you configure Glance on Cinder?"></a>How do you configure Glance on Cinder?</h4><p>These new configuration options will need to be added to the current Cinder store options:</p>
<ul>
<li><strong>cinder_store_tenant</strong> - string - The Cinder tenant in which to store images</li>
<li><strong>cinder_store_user</strong> - string - The Cinder user used to access Cinder</li>
<li><strong>cinder_store_key</strong> - string - The Cinder key used to access Cinder</li>
<li><strong>cinder_volume_type</strong> - string (optional)- The uuid of the volume type to assign to volumes created by Glance</li>
</ul>
<h4 id="How-would-an-image-upload-work"><a href="#How-would-an-image-upload-work" class="headerlink" title="How would an image upload work?"></a>How would an image upload work?</h4><p><img src="/2021/09/06/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AGlance%E5%AF%B9%E6%8E%A5Cinder/Glance-cinder-upload.png" alt="Glance-cinder-upload"></p>
<ol>
<li>The user begins streaming the image data to Glance as usual.</li>
<li>Make a request to the Cinder API to create a new volume with the configured <em>volume type</em> with the volume size being the smallest possible volume size that is greater than the image size.</li>
<li>Attach the newly created volume to the Glance node using the Brick library.</li>
<li>Stream the incoming bits into the volume.</li>
<li>Detach the volume from the Glance node using the Brick library, set the image location to “cinder://<volume-uuid>‘, and return image details to the user.</volume-uuid></li>
</ol>
<h4 id="How-would-an-image-download-work"><a href="#How-would-an-image-download-work" class="headerlink" title="How would an image download work?"></a>How would an image download work?</h4><p><img src="/2021/09/06/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AGlance%E5%AF%B9%E6%8E%A5Cinder/Glance-cinder-download.png" alt="Glance-cinder-download"></p>
<ol>
<li>The user sends a request to download the image</li>
<li>Retrieve the backend volume id from the image location and attach the volume to the Glance node using Brick library</li>
<li>Stream the bits from the volume to the user</li>
<li>Detach the volume from the glance node using Brick library</li>
</ol>
<h4 id="How-would-a-Nova-boot-work"><a href="#How-would-a-Nova-boot-work" class="headerlink" title="How would a Nova boot work?"></a>How would a Nova boot work?</h4><p>Nova would download the image via Glance without needing knowledge that Cinder is storing the images.</p>
<h4 id="Single-tenant-vs-Multi-tenant-How-do-we-prevent-the-volume-being-deleted-changed-out-from-under-Glance"><a href="#Single-tenant-vs-Multi-tenant-How-do-we-prevent-the-volume-being-deleted-changed-out-from-under-Glance" class="headerlink" title="Single tenant vs Multi tenant? How do we prevent the volume being deleted/changed out from under Glance?"></a>Single tenant vs Multi tenant? How do we prevent the volume being deleted/changed out from under Glance?</h4><h5 id="Single-tenant"><a href="#Single-tenant" class="headerlink" title="Single-tenant"></a>Single-tenant</h5><p>The Cinder store will only allow for ‘single-tenant’ use. Glance will use the credentials and tenant provided in glance-api.conf to create and attach to volumes. Credentials will not be stored in the image location. Volumes cannot be deleted without the Glance service knowing since only the glance user will have access to it’s volumes in Cinder.</p>
<h5 id="Multi-tenant"><a href="#Multi-tenant" class="headerlink" title="Multi-tenant"></a>Multi-tenant</h5><p>Multi-tenant, I.E. storing volumes in the users tenant, should not be supported because:</p>
<ul>
<li>There is no way to support image sharing</li>
<li>Reauthentication due to the user token expiring would present problems</li>
<li>There is no way to prevent users from deleting/modifying volumes without Glance having knowledge.</li>
</ul>
<h4 id="How-do-we-allow-for-Image-Sharing"><a href="#How-do-we-allow-for-Image-Sharing" class="headerlink" title="How do we allow for Image Sharing?"></a>How do we allow for Image Sharing?</h4><p>This is trivial because the service user will have access to all image volumes in cinder.</p>
<h3 id="Example-Configuration"><a href="#Example-Configuration" class="headerlink" title="Example Configuration"></a>Example Configuration</h3><p>以 <code>kolla/centos-source-glance-api:train</code> 镜像在Kubernetes中部署为例，Cinder使用iSCSI后端存储，介绍Glance Cinder Driver配置思路。</p>
<h4 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h4><p>以Cinder使用iSCSI后端存储为例，Glance用户需要通过iSCSI方式，把Cinder卷挂载至本地，挂载中Glance需要有访问和使用iSCSI的权限，涉及提权操作，需要配置如下相关配置文件：</p>
<ul>
<li>/etc/glance/glance-api.conf（配置cinder连接信息）</li>
<li>/etc/glance/rootwrap.conf（提权相关）</li>
<li>/etc/glance/rootwrap.d/glance_cinder_store.filters（提权相关）</li>
<li>/etc/sudoers.d/glance-sudoers（提权相关）</li>
</ul>
<p><strong>/etc/glance/glance-api.conf</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[glance_store]</span><br><span class="line">default_store = cinder</span><br><span class="line">stores = cinder</span><br><span class="line">cinder_http_retries = 3</span><br><span class="line">cinder_catalog_info = volumev2::publicURL</span><br><span class="line">rootwrap_config = /etc/glance/rootwrap.conf</span><br><span class="line">[cinder]</span><br><span class="line">cinder_http_retries = 3</span><br><span class="line">cinder_catalog_info = volumev2::publicURL</span><br><span class="line">rootwrap_config = /etc/glance/rootwrap.conf</span><br></pre></td></tr></table></figure>



<p><strong>/etc/glance/rootwrap.conf</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Configuration <span class="keyword">for</span> nova-rootwrap</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This file should be owned by (and only-writeable by) the root user</span></span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line"><span class="meta">#</span><span class="bash"> List of directories to load filter definitions from (separated by <span class="string">&#x27;,&#x27;</span>).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> These directories MUST all be only writeable by root !</span></span><br><span class="line">filters_path=/etc/glance/rootwrap.d</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> List of directories to search executables <span class="keyword">in</span>, <span class="keyword">in</span> <span class="keyword">case</span> filters <span class="keyword">do</span> not</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> explicitely specify a full path (separated by <span class="string">&#x27;,&#x27;</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If not specified, defaults to system PATH environment variable.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> These directories MUST all be only writeable by root !</span></span><br><span class="line">exec_dirs=/sbin,/usr/sbin,/bin,/usr/bin,/usr/local/bin,/usr/local/sbin,/var/lib/openstack/bin,/var/lib/kolla/venv/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Enable logging to syslog</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default value is False</span></span><br><span class="line">use_syslog=False</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Which syslog facility to use.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Valid values include auth, authpriv, syslog, local0, local1...</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default value is <span class="string">&#x27;syslog&#x27;</span></span></span><br><span class="line">syslog_log_facility=syslog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Which messages to <span class="built_in">log</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> INFO means <span class="built_in">log</span> all usage</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ERROR means only <span class="built_in">log</span> unsuccessful attempts</span></span><br><span class="line">syslog_log_level=ERROR</span><br></pre></td></tr></table></figure>



<p><strong>/etc/glance/rootwrap.d/glance_cinder_store.filters</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> glance-rootwrap <span class="built_in">command</span> filters <span class="keyword">for</span> glance cinder store</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This file should be owned by (and only-writable by) the root user</span></span><br><span class="line"></span><br><span class="line">[Filters]</span><br><span class="line"><span class="meta">#</span><span class="bash"> cinder store driver</span></span><br><span class="line">disk_chown: RegExpFilter, chown, root, chown, \d+, /dev/(?!.*/\.\.).*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> os-brick library commands</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> os_brick.privileged.run_as_root oslo.privsep context</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This line ties the superuser privs with the config files, context name,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and (implicitly) the actual python code invoked.</span></span><br><span class="line">privsep-rootwrap: RegExpFilter, privsep-helper, root, privsep-helper, --config-file, /etc/(?!\.\.).*, --privsep_context, os_brick.privileged.default, --privsep_sock_path, /tmp/.*</span><br></pre></td></tr></table></figure>



<p><strong>/etc/sudoers.d/glance-sudoers</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Defaults:glance !requiretty</span><br><span class="line"></span><br><span class="line">Defaults secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/var/lib/openstack/bin:/var/lib/kolla/venv/bin&quot;</span><br><span class="line"></span><br><span class="line">glance ALL = (root) NOPASSWD: /var/lib/kolla/venv/bin/glance-rootwrap /etc/glance/rootwrap.conf *, /var/lib/openstack/bin/glance-rootwrap /etc/glance/rootwrap.conf *</span><br></pre></td></tr></table></figure>



<h4 id="POD配置"><a href="#POD配置" class="headerlink" title="POD配置"></a>POD配置</h4><p>Glance容器需要与主机的iSCSI服务有交互，同时有提权的需求。参考相关配置项如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="string">...</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hostdir-iscsi</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/iscsi</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/dev</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="string">...</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="string">...</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hostdir-iscsi</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/iscsi/</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/dev</span></span><br><span class="line">              <span class="attr">mountPropagation:</span> <span class="string">HostToContainer</span></span><br><span class="line">            <span class="string">...</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">          <span class="string">...</span></span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://wiki.openstack.org/wiki/Glance/Cinder-store-proposal">Glance/Cinder-store-proposal</a></li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Glance</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack部署：Trove</title>
    <url>/2021/08/05/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9ATrove/</url>
    <content><![CDATA[<h2 id="Building-guest-image"><a href="#Building-guest-image" class="headerlink" title="Building guest image"></a>Building guest image</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 构建镜像踩的坑（基于Wallaby版源码做的修改）：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. apt、pip源为国外源，下载慢，大概率失败，需要替换为国内源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 编译ubuntu镜像时，宿主机为centos，导致pkg_map解析包名错误。需增加如下环境变量：<span class="built_in">export</span> DISTRO_NAME=<span class="variable">$&#123;guest_os&#125;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. root密码没有，无法登陆。需下functions_qemu文件中，增加<span class="built_in">local</span> root_password=<span class="string">&quot;inspur_trove@123&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. elements guest-agent中<span class="built_in">source</span>-repository-guest-agent获取位置需要修改，调整为本地代码库及本地文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5. v版之后，guest-agent镜像切换为docker，docker image从docker源上下载。如果本地为http源，则需要打包镜像时将该域名添加为insecure-registries</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 6. ubuntu系统自带的systemd-resolved服务，会导致域名解析文件不生效。解决办法如下：ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基础参数</span></span><br><span class="line">guest_os=ubuntu</span><br><span class="line">guest_os_release=bionic</span><br><span class="line">dev_mode=false</span><br><span class="line">guest_username=ubuntu</span><br><span class="line">output_image_path=$HOME/images/trove-guest-$&#123;guest_os&#125;-$&#123;guest_os_release&#125;.qcow2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入trove/integration/scripts目录，执行如下构建镜像命令，前期准备注意以下两点：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 需要切换为普通用户执行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 普通用户最好可以免密sudo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./trovestack build-image \</span></span><br><span class="line">    $&#123;guest_os&#125; \</span><br><span class="line">    $&#123;guest_os_release&#125; \</span><br><span class="line">    $&#123;dev_mode&#125; \</span><br><span class="line">    $&#123;guest_username&#125; \</span><br><span class="line">    $&#123;output_image_path&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传镜像至glance</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack image create trove-guest-ubuntu-bionic<span class="_">-a</span> \</span></span><br><span class="line">  --private \</span><br><span class="line">  --disk-format qcow2 \</span><br><span class="line">  --container-format bare \</span><br><span class="line">  --tag trove --tag mysql \</span><br><span class="line">  --file ~/trove-guest-ubuntu-bionic.qcow2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像与trove关联</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version create 8.0 mysql mysql <span class="string">&quot;&quot;</span> \</span></span><br><span class="line">  --image-tags trove,mysql \</span><br><span class="line">  --active --default</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 同步数据库配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> trove-manage db_load_datastore_config_parameters mysql 8.0 \</span></span><br><span class="line">  /var/lib/kolla/venv/lib/python3.6/site-packages/trove/templates/mysql/validation-rules.json</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看datastore version</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version list mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除datastore version</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version delete &lt; datastore version id &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新datastore version关联镜像</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version <span class="built_in">set</span> --image &lt; image id &gt; &lt; datastore version id &gt;</span></span><br></pre></td></tr></table></figure>





<h3 id="Create-database-instance"><a href="#Create-database-instance" class="headerlink" title="Create database instance"></a>Create database instance</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 基础环境准备：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 数据库实例所使用的网络必须内网，且存在一个路由与外部网络连接</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 数据库实例所在网络必须与rabbitmq可以通信</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 数据库实例所在的网络必须可以解析到registry.local域名</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据库实例</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack database instance create mysql_instance_1 \</span></span><br><span class="line">    --flavor mysql \</span><br><span class="line">    --size 5 \</span><br><span class="line">    --nic net-id=a899ca4e-95ed-4e91-8877-562e24200ce4 \</span><br><span class="line">    --databases test --users demo:password \</span><br><span class="line">    --datastore mysql --datastore-version 8.0 \</span><br><span class="line">    --is-public \</span><br><span class="line">    --allowed-cidr 0.0.0.0/0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看数据库实例</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack database instance list</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看数据库实例虚机</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack server list --all</span></span><br></pre></td></tr></table></figure>





<h3 id="DEV"><a href="#DEV" class="headerlink" title="DEV"></a>DEV</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 放通实例安全组ssh端口</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack security group rule create --ingress --ethertype IPv4 --dst-port 22 --protocol tcp --remote-ip 0.0.0.0/0 &lt; security group id &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 放通实例安全组icmp</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack security group rule create --ingress --ethertype IPv4 --protocol icmp --remote-ip 0.0.0.0/0 &lt; security group id &gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://wiki.openstack.org/wiki/Trove">WIKI：Trove</a></p>
</li>
<li><p><a href="https://docs.openstack.org/trove/wallaby/install/install-redhat.html">OpenStack Documentation：Install and configure for Red Hat Enterprise Linux and CentOS</a></p>
</li>
<li><p><a href="https://docs.openstack.org/trove/wallaby/user/create-db.html">OpenStack Documentation：Create and access a database instance</a></p>
</li>
<li><p><a href="https://docs.openstack.org/trove/latest/user/set-up-clustering.html">OpenStack Documentation：Set up database clustering</a></p>
</li>
<li><p><a href="https://docs.openstack.org/trove/wallaby/admin/upgrade.html">OpenStack Documentation：Trove upgrade</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/jackyzzy/p/7384347.html">OpenStack trove原理及配置实践</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/mh20131118/p/12970338.html">OpenStack的Trove组件详解</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Trove</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack部署：默认端口号</title>
    <url>/2020/12/05/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9A%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3%E5%8F%B7/</url>
    <content><![CDATA[<h2 id="组件默认端口号"><a href="#组件默认端口号" class="headerlink" title="组件默认端口号"></a>组件默认端口号</h2><table>
<thead>
<tr>
<th>OpenStack service</th>
<th>Default ports</th>
<th>Port type</th>
</tr>
</thead>
<tbody><tr>
<td>Block Storage (cinder)</td>
<td>8776</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Compute (nova) endpoints</td>
<td>8774</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Compute API (nova-api)</td>
<td>8773, 8775</td>
<td></td>
</tr>
<tr>
<td>Compute ports for access to virtual machine consoles</td>
<td>5900-5999</td>
<td></td>
</tr>
<tr>
<td>Compute VNC proxy for browsers ( openstack-nova-novncproxy)</td>
<td>6080</td>
<td></td>
</tr>
<tr>
<td>Compute VNC proxy for traditional VNC clients (openstack-nova-xvpvncproxy)</td>
<td>6081</td>
<td></td>
</tr>
<tr>
<td>Proxy port for HTML5 console used by Compute service</td>
<td>6082</td>
<td></td>
</tr>
<tr>
<td>Data processing service (sahara) endpoint</td>
<td>8386</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Identity service (keystone) administrative endpoint</td>
<td>35357</td>
<td>adminurl</td>
</tr>
<tr>
<td>Identity service public endpoint</td>
<td>5000</td>
<td>publicurl</td>
</tr>
<tr>
<td>Image service (glance) API</td>
<td>9292</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Image service registry</td>
<td>9191</td>
<td></td>
</tr>
<tr>
<td>Networking (neutron)</td>
<td>9696</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Object Storage (swift)</td>
<td>6000, 6001, 6002</td>
<td></td>
</tr>
<tr>
<td>Orchestration (heat) endpoint</td>
<td>8004</td>
<td>publicurl and adminurl</td>
</tr>
<tr>
<td>Orchestration AWS CloudFormation-compatible API (openstack-heat-api-cfn)</td>
<td>8000</td>
<td></td>
</tr>
<tr>
<td>Orchestration AWS CloudWatch-compatible API (openstack-heat-api-cloudwatch)</td>
<td>8003</td>
<td></td>
</tr>
<tr>
<td>Telemetry (ceilometer)</td>
<td>8777</td>
<td>publicurl and adminurl</td>
</tr>
</tbody></table>
<h2 id="基础服务默认端口号"><a href="#基础服务默认端口号" class="headerlink" title="基础服务默认端口号"></a>基础服务默认端口号</h2><table>
<thead>
<tr>
<th>Openstack service</th>
<th>Default ports</th>
<th>Used by</th>
</tr>
</thead>
<tbody><tr>
<td>HTTP</td>
<td>80</td>
<td>OpenStack dashboard (Horizon) when it is not configured to use secure access.</td>
</tr>
<tr>
<td>HTTP alternate</td>
<td>8080</td>
<td>OpenStack Object Storage (swift) service.</td>
</tr>
<tr>
<td>HTTPS</td>
<td>443</td>
<td>Any OpenStack service that is enabled for SSL, especially secure-access dashboard.</td>
</tr>
<tr>
<td>rsync</td>
<td>873</td>
<td>OpenStack Object Storage. Required.</td>
</tr>
<tr>
<td>iSCSI target</td>
<td>3260</td>
<td>OpenStack Block Storage. Required.</td>
</tr>
<tr>
<td>MySQL database service</td>
<td>3306</td>
<td>Most OpenStack components.</td>
</tr>
<tr>
<td>Message Broker (AMQP traffic)</td>
<td>5672</td>
<td>OpenStack Block Storage, Networking, Orchestration, and Compute.</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle使用：通用手册</title>
    <url>/2020/09/14/Oracle%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<p>Oracle Database，又名Oracle RDBMS，简称Oracle。是甲骨文公司推出的一款关系数据库管理系统。Oracle数据库系统是目前世界上流行的关系数据库管理系统，拥有可移植性好、使用方便、功能强等优点，在各类大、中、小、微机环境中都适用。Oracle是一种高效率、可靠性好的、适应高吞吐量的数据库解决方案。</p>
<h3 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h3><p>11.2</p>
<h3 id="Oracle-登录"><a href="#Oracle-登录" class="headerlink" title="Oracle 登录"></a>Oracle 登录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 格式：sqlplus &lt;username&gt;/&lt;password&gt;[@ip:port/instance name] [as sysdba]</span></span><br><span class="line">sqlplus sys/123@10.121.9.104:49161 as sysdba</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-用户管理"><a href="#Oracle-用户管理" class="headerlink" title="Oracle 用户管理"></a>Oracle 用户管理</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看当前用户</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改用户密码</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> &lt;username&gt; <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&quot;&lt;new password&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-数据库设置"><a href="#Oracle-数据库设置" class="headerlink" title="Oracle 数据库设置"></a>Oracle 数据库设置</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 开启时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 清空共享池</span></span><br><span class="line"><span class="comment">会清空历史sql的缓存记录，清空后再次执行这些sql时会产生大量的硬解析，影响数据库性能</span></span><br><span class="line"><span class="comment">生产环境慎用，系统繁忙时执行，容易导致数据库宕机</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-表操作"><a href="#Oracle-表操作" class="headerlink" title="Oracle 表操作"></a>Oracle 表操作</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line">desc &lt;table name&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t</span><br><span class="line">(</span><br><span class="line">    tid <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    tname <span class="built_in">varchar2</span>(<span class="number">20</span>),</span><br><span class="line">    tcontent <span class="built_in">blob</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看表内容</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表，在垃圾桶留下记录，可flashback闪回</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> &lt;<span class="keyword">table</span> <span class="keyword">name</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表，不会在垃圾桶留下记录，不可恢复</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> &lt;<span class="keyword">table</span> <span class="keyword">name</span>&gt; <span class="keyword">purge</span>;</span><br></pre></td></tr></table></figure>



<h3 id="Oracle-存储过程语法"><a href="#Oracle-存储过程语法" class="headerlink" title="Oracle 存储过程语法"></a>Oracle 存储过程语法</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> [<span class="keyword">or</span> <span class="keyword">replace</span>] <span class="keyword">procedure</span> 存储过程名（param1 <span class="keyword">in</span> <span class="keyword">type</span>，param2 <span class="keyword">out</span> <span class="keyword">type</span>）</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">    变量<span class="number">1</span> 类型（值范围）;</span><br><span class="line">    变量2 类型（值范围）;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">into</span> 变量<span class="number">1</span> <span class="keyword">from</span> 表A <span class="keyword">where</span>列名=param1；</span><br><span class="line">    <span class="keyword">if</span> (判断条件) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">select</span> 列名 <span class="keyword">into</span> 变量<span class="number">2</span> <span class="keyword">from</span> 表A <span class="keyword">where</span>列名=param1；</span><br><span class="line">        dbms_output.Put_line(<span class="string">&#x27;打印信息&#x27;</span>);</span><br><span class="line">    elsif (判断条件) then</span><br><span class="line">        dbms_output.Put_line(&#x27;打印信息&#x27;);</span><br><span class="line">    else</span><br><span class="line">        raise 异常名（NO_DATA_FOUND）;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line">exception</span><br><span class="line">    when others then</span><br><span class="line">        <span class="keyword">rollback</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>



<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ul>
<li><p><a href="https://docs.oracle.com/cd/E11882_01/index.htm?xd_co_f=94201a14-f246-4e54-ba51-c48c9c02f224">Oracle 官方文档</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/c1024/p/11012016.html">Oracle数据库初学者入门教程</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/xswt/p/11394032.html">Oracle常用命令</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/joeyJss/p/11458653.html">Oracle存储过程的语法</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>通用手册</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle测试：SQL性能测试</title>
    <url>/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="使用Oracle-SQL测试"><a href="#使用Oracle-SQL测试" class="headerlink" title="使用Oracle SQL测试"></a>使用Oracle SQL测试</h2><blockquote>
<p>实验环境</p>
<p>机器：win10虚机</p>
<p>配置：4c8G + 500G硬盘</p>
</blockquote>
<h3 id="持续写入"><a href="#持续写入" class="headerlink" title="持续写入"></a>持续写入</h3><p>每次insert操作后，进行一次commit操作，性能低。<code>实验用时：00:02:39.66</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t(x <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 定义函数proc</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">procedure</span> proc</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> .. <span class="number">1000000</span></span><br><span class="line">        <span class="keyword">loop</span></span><br><span class="line">            <span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">values</span>(i);</span><br><span class="line">            <span class="keyword">commit</span>;</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 运行函数proc</span></span><br><span class="line">exec proc;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E6%8C%81%E7%BB%AD%E5%86%99%E5%85%A5.png" alt="持续写入"></p>
<h3 id="批量写入"><a href="#批量写入" class="headerlink" title="批量写入"></a>批量写入</h3><p>对insert操作进行批量提交，性能相较于上者有所提升。<code>实验用时：00:01:25.37</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t(x <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 定义函数proc</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">procedure</span> proc</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> .. <span class="number">1000000</span></span><br><span class="line">        <span class="keyword">loop</span></span><br><span class="line">            <span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">values</span>(i);</span><br><span class="line">        <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 运行函数proc</span></span><br><span class="line">exec proc;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E6%89%B9%E9%87%8F%E5%86%99%E5%85%A5.png" alt="批量写入"></p>
<h3 id="connect-by方式写入"><a href="#connect-by方式写入" class="headerlink" title="connect by方式写入"></a>connect by方式写入</h3><p>Oracle提供的层次查询（Hierarchical Queries）功能中的connect by子句可以快速插入连续数字。该方法会将数据写入数据缓冲区(data buffer)中，然后刷入磁盘中。<code>实验用时：00:00:01.56</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t(x <span class="built_in">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用connect by level，插入连续数字</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">select</span> <span class="keyword">rownum</span> <span class="keyword">from</span> dual <span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">level</span>&lt;=<span class="number">1000000</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E9%9B%86%E5%90%88%E5%86%99%E5%85%A5.png" alt="connect by写入"></p>
<h3 id="直接路径写入"><a href="#直接路径写入" class="headerlink" title="直接路径写入"></a>直接路径写入</h3><p>该方式跳过了数据缓冲区(data buffer)， 直接写进磁盘中，这种方式称之为直接路径读写方式。<code>实验用时：00:00:00.78</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用connect by level，插入连续数字</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t <span class="keyword">as</span> <span class="keyword">select</span> <span class="keyword">rownum</span> x <span class="keyword">from</span> dual <span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">level</span>&lt;=<span class="number">1000000</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E7%9B%B4%E6%8E%A5%E8%B7%AF%E5%BE%84%E5%86%99%E5%85%A5.png" alt="直接路径写入"></p>
<h3 id="并行模式直接写入"><a href="#并行模式直接写入" class="headerlink" title="并行模式直接写入"></a>并行模式直接写入</h3><p>并行加直接路径，而且是不写日志。<code>实验用时：00:00:00.67</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t <span class="keyword">purge</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空共享池，注意在生产环境中千万不能做这步操作</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">flush</span> <span class="keyword">shared_pool</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启sql时间统计</span></span><br><span class="line"><span class="keyword">set</span> timing <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用connect by level，插入连续数字</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t nologging <span class="keyword">parallel</span> <span class="number">4</span> <span class="keyword">as</span> <span class="keyword">select</span> <span class="keyword">rownum</span> x <span class="keyword">from</span> dual <span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">level</span>&lt;=<span class="number">1000000</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E5%B9%B6%E8%A1%8C%E6%A8%A1%E5%BC%8F%E5%86%99%E5%85%A5.png" alt="并行模式写入"></p>
<h3 id="大对象存储"><a href="#大对象存储" class="headerlink" title="大对象存储"></a>大对象存储</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建测试表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t</span><br><span class="line">(</span><br><span class="line">    tid <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    tname <span class="built_in">varchar2</span>(<span class="number">20</span>),</span><br><span class="line">    tcontent <span class="built_in">blob</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建普通序列号</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">sequence</span> sequ_t;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注册目录</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">directory</span> TEST_DIR <span class="keyword">as</span> <span class="string">&#x27;C:\Users\lenovo\Desktop&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 存储文件对象</span></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">    tempimg <span class="built_in">blob</span>;  <span class="comment">-- 定义临时变量存放数据   </span></span><br><span class="line">    tempdir bfile := bfilename(&#x27;TEST_DIR&#x27;,&#x27;test.png&#x27;);  <span class="comment">-- 非常重要：DIR必须大写</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> t <span class="keyword">values</span> (sequ_t.nextval,<span class="string">&#x27;test.png&#x27;</span>,empty_blob())</span><br><span class="line">    <span class="keyword">returning</span> tcontent <span class="keyword">into</span> tempimg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 使用内置的包，给tempimg写入数据</span></span><br><span class="line">    dbms_lob.fileopen(tempdir);  <span class="comment">-- 打开指定文件</span></span><br><span class="line">    dbms_lob.loadfromfile(tempimg,tempdir,dbms_lob.getlength(tempdir));</span><br><span class="line">    dbms_lob.fileclose(tempdir);  <span class="comment">-- 关闭文件        </span></span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span> ;</span><br><span class="line">/</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 读取文件对象</span></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">    l_file utl_file.file_type;  <span class="comment">-- 定义写入磁盘文件的类型和格式</span></span><br><span class="line">    l_buffer raw(32767);  <span class="comment">-- 定义缓冲区大小</span></span><br><span class="line">    l_amount binary_integer := 3276;  <span class="comment">-- 每次位移个数</span></span><br><span class="line">    l_pos int :=1;  <span class="comment">-- 开始位置</span></span><br><span class="line">    l_blob blob;  <span class="comment">-- 临时数据存放</span></span><br><span class="line">    l_blob_len int;  <span class="comment">-- 总长度</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="comment">-- 将数据库中的数据，存放在blob变量中  </span></span><br><span class="line">    <span class="keyword">select</span> tcontent <span class="keyword">into</span> l_blob <span class="keyword">from</span> t <span class="keyword">where</span> tname=<span class="string">&#x27;test.png&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 获取blob文件的长度</span></span><br><span class="line">    l_blob_len := dbms_lob.getlength(l_blob);</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 准备写入磁盘文件</span></span><br><span class="line">    l_file := utl_file.fopen(&#x27;TEST_DIR&#x27;,&#x27;t.png&#x27;,&#x27;wb&#x27;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 写入数据</span></span><br><span class="line">    while l_pos&lt;l_blob_len</span><br><span class="line">    loop</span><br><span class="line">        dbms_lob.read(l_blob,l_amount,l_pos,l_buffer);</span><br><span class="line">        utl_file.put_raw(l_file,l_buffer,true);</span><br><span class="line">        l_pos := l_pos + l_amount;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">loop</span>;</span><br><span class="line">    utl_file.fclose(l_file); </span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">/</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E5%AD%98%E5%82%A8image.png" alt="存储image"></p>
<p><img src="/2020/09/15/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASQL%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/%E8%AF%BB%E5%8F%96image.png" alt="读取image"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://docs.oracle.com/database/121/ARPLS/d_lob.htm#ARPLS600">Oracle 官方文档：DBMS_LOB</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>性能基准测试</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle测试：SwingBench</title>
    <url>/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SwingBench是Oracle UK的一个员工在一个被抛弃的项目的基础上开发的。目前稳定版本2.6，基于JDK。该工具是免费的，可以在作者的网站上自由下载，并且拥有详细的使用文档。SwingBench 可以执行4种不同的标准测试(benchmark)，拥有三种前端展示方式SwingBench/Charbench/Minibench，其中 Charbench是字符模式的，另外两种是GUI模式的。另外还可以通过ClusterOverview可以聚合显示所有的结果。SwingBench 的开发目的主要是用来展示RAC的负载和测试，但也可用于单实例环境。2.3版本开始支持TimesTen。</p>
<blockquote>
<p>SwingBench consists of a load generator, a coordinator and a cluster overview. The software enables a load to be generated and the transactions/response times to be charted.</p>
<p>SwingBench can be used to demonstrate and test technologies such as Real Application Clusters, Online table rebuilds, Standby databases, Online backup and recovery etc.</p>
<p>The code that ships with SwingBench includes 6 benchmarks, OrderEntry, SalesHistory, TPC-DS Like, JSON, CallingCircle and StressTest..</p>
<ul>
<li>OrderEntry is based on the “oe” schema that ships with Oracle 12c/Oracle 18c/Oracle 19c. It has been modified so that Spatial, Intermedia schema’s do not need to be installed. It can be run continuously (that is until you run out of space). It introduces heavy contention on a small number of tables and is designed to stress interconnects and memory. It is installed using the “oewizard” located in the bin directory. Both a pure jdbc and pl/sql (lower network overhead) variant exist of the benchmark.</li>
<li>SalesHistory is based on the “sh” schema that ships with Oracle 12c/Oracle 18c/Oracle 19c and is designed to test the performance of complicated queries when run against large tables. It is read only and can be scaled over a number of default sizes from 1GB to 1TB. A custom mode also allows for the creation of smaller and larger schemas</li>
<li>CallingCircle (deprecated) simulates the SQL that is generated for an online telco application. It requires data files to be generated and copied from the database server to the load generator before each run, it typically requires between 1 and 8 GB of disk space. Both benchmarks are heavily CPU intensive. Experience has shown that you require at least 1 processor of load generator to every 2 processors of database server. It is designed to stress the CPU and memory without the need for a powerful I/O subsystem. Its is installed using the “ccwizard” located in the bin directory</li>
<li>StressTest simply fires random inserts,updates,selects and updates against a well know table.</li>
<li>JSON Stresstest is based on simple JSON documents modelling people flying between airports. It follow a basic CRUD model</li>
<li>TPC-DS Like Benchmark is a benchmark similar to TPC-DS. It features both a query and transaction workload in separate configuration files.</li>
</ul>
<p>The entire framework is developed in Java and as a result can be run on wide variety of platforms. It also provides a simple API to allow developers to build their own benchmarks.</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>系统：win10虚机</p>
<p>配置：4c8g，500G硬盘</p>
<h3 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h3><p>官方下载地址：<a href="http://www.dominicgiles.com/downloads.html">http://www.dominicgiles.com/downloads.html</a></p>
<h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><h4 id="安装JDK-1-8"><a href="#安装JDK-1-8" class="headerlink" title="安装JDK 1.8"></a>安装JDK 1.8</h4><p>版本：jdk-8u131-windows-i586（链接：<a href="https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg">https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg</a> 提取码：4ztk）</p>
<p>系统环境变量：</p>
<ul>
<li>JAVA_HOME：C:\Program Files (x86)\Java\jdk1.8.0_131</li>
<li>CLASSPATH：.;%JAVA_HOME%\bin;%JAVA_HOME%\lib\dt.jar%JAVA_HOME%\lib\tools.jar;</li>
<li>PATH：新增两行，%JAVA_HOME%\bin，%JAVA_HOME%\jre\lib</li>
</ul>
<h4 id="安装SwingBench"><a href="#安装SwingBench" class="headerlink" title="安装SwingBench"></a>安装SwingBench</h4><p>SwingBench压缩包下载完，解压即可使用。</p>
<h2 id="Oewizard加载数据"><a href="#Oewizard加载数据" class="headerlink" title="Oewizard加载数据"></a>Oewizard加载数据</h2><h3 id="运行Oewizard"><a href="#运行Oewizard" class="headerlink" title="运行Oewizard"></a>运行Oewizard</h3><p>进入<code>.\SwingBench\winbin</code>目录下，双击运行<code>oewizard.bat</code>。</p>
<blockquote>
<p>实验时，出现双击后无响应的情况，在cmd中运行<code>oewizard.bat</code>文件，报错如下：<br>Error occurred during initialization of VM<br>Could not reserve enough space for 2097152KB object heap</p>
<p>解决方式：系统环境变量中添加如下变量<br>变量名：<code>JAVA_TOOL_OPTIONS</code>    变量值：<code>-Xms1024m</code><br>变量名：<code>_JAVA_OPTIONS</code>    变量值：<code>-Xmx1024m</code></p>
</blockquote>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-1.png" alt="oewizard-1"></p>
<h3 id="Benchmark-Version"><a href="#Benchmark-Version" class="headerlink" title="Benchmark Version"></a>Benchmark Version</h3><p>选择默认选项，version 2.0</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-2.png" alt="oewizard-2"></p>
<h3 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h3><p>选择默认选项，Create the Order Entry Schema (User, Table, indexes, Data etc)</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-3.png" alt="oewizard-3"></p>
<h3 id="Database-Details"><a href="#Database-Details" class="headerlink" title="Database Details"></a>Database Details</h3><p>填写Oracle数据库的连接信息</p>
<ul>
<li><p>Connect String：格式为<code>ip[：port][：service name]</code>，eg：<code>10.121.9.104:49161</code></p>
</li>
<li><p>Connection Type：使用默认选项，<code>Type IV jdbc driver (Thin)</code></p>
</li>
<li><p>Administrator Username：<code>sys as sysdba</code></p>
</li>
<li><p>Administrator Password：使用sys的密码，如果未设置，可在oracle中使用如下命令设置</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">sys</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&quot;&lt;new password&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-4.png" alt="oewizard-4"></p>
<h3 id="Schema-Details"><a href="#Schema-Details" class="headerlink" title="Schema Details"></a>Schema Details</h3><ul>
<li><p>Username：<code>sys as sysdba</code></p>
</li>
<li><p>Password：sys的密码</p>
</li>
<li><p>Schema’s Tablespace：使用的是SYSTEM</p>
</li>
<li><p>Tablespaces’s Datafile：自动生成</p>
</li>
</ul>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-5.png" alt="oewizard-5"></p>
<h3 id="Database-Options"><a href="#Database-Options" class="headerlink" title="Database Options"></a>Database Options</h3><p>全使用默认选项，直接下一步</p>
<ul>
<li><p>Partitioning Model：<code>No Partitioning</code></p>
</li>
<li><p>Compression Used：<code>No Compression</code></p>
</li>
<li><p>Tablespace Type：<code>Bigfile Tablespace</code></p>
</li>
<li><p>Indexing Used：<code>All Indexes</code></p>
</li>
</ul>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-6.png" alt="oewizard-6"></p>
<h3 id="Sizing-Details"><a href="#Sizing-Details" class="headerlink" title="Sizing Details"></a>Sizing Details</h3><p>加载的测试数据大小，根据需求选择。实验选择的最小数据量1GB，点击下一步</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-7.png" alt="oewizard-7"></p>
<h3 id="ALL-Details-Entered"><a href="#ALL-Details-Entered" class="headerlink" title="ALL Details Entered"></a>ALL Details Entered</h3><p>Level of Parallelism：设置导入时的并发，只影响数据导入速度，默认为4</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/oewizard-8.png" alt="oewizard-8"></p>
<h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/SwingBench%E5%8A%A0%E8%BD%BD%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE.png" alt="SwingBench加载测试数据"></p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/SwingBench%E5%8A%A0%E8%BD%BD%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%EF%BC%88%E5%AE%8C%E6%88%90%EF%BC%89.png" alt="SwingBench加载测试数据（完成）"></p>
<h2 id="SwingBench性能测试"><a href="#SwingBench性能测试" class="headerlink" title="SwingBench性能测试"></a>SwingBench性能测试</h2><h3 id="开启SwingBench"><a href="#开启SwingBench" class="headerlink" title="开启SwingBench"></a>开启SwingBench</h3><p>进入<code>.\SwingBench\winbin</code>目录下，双击运行<code>SwingBench.bat</code>。界面功能区分布如下：</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/SwingBench-1.png" alt="SwingBench-1"></p>
<h3 id="User-Details"><a href="#User-Details" class="headerlink" title="User Details"></a>User Details</h3><p>设置Oracle数据库的连接信息。<code>注意：必须使用sysdba用户，普通用户获取不到数据库的性能数据</code></p>
<ul>
<li>Username：<code>sys as sysdba</code></li>
<li>Password：sys的密码</li>
<li>Connect String：格式为<code>ip[：port][：service name]</code>，eg：<code>10.121.9.104:49161</code></li>
<li>Driver Type：使用默认选项，<code>Oracle jdbc Driver</code></li>
</ul>
<p>填写完成后，进行连接测试，提示如下则表明连接正常</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/SwingBench-4.png" alt="SwingBench-4"></p>
<h3 id="Load"><a href="#Load" class="headerlink" title="Load"></a>Load</h3><p>设置压力参数</p>
<ul>
<li>Number of Users：并发数，默认为4</li>
<li>Benchmark Run Time (hh:min)：运行时长</li>
</ul>
<h3 id="Server-Monitoring（ssh）"><a href="#Server-Monitoring（ssh）" class="headerlink" title="Server Monitoring（ssh）"></a>Server Monitoring（ssh）</h3><p>设置Oracle主机的ssh信息，SwingBench会ssh到主机，获取监控信息</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/SwingBench-2.png" alt="SwingBench-2"></p>
<h3 id="Oracle-AWR静态分析"><a href="#Oracle-AWR静态分析" class="headerlink" title="Oracle AWR静态分析"></a>Oracle AWR静态分析</h3><ul>
<li>勾选Connect database statistics</li>
<li>勾选Take AWR Snapshots at Start and End</li>
<li>Admin Username：<code>sys as sysdba</code></li>
<li>Admin Password：sys的密码</li>
</ul>
<h3 id="性能图表"><a href="#性能图表" class="headerlink" title="性能图表"></a>性能图表</h3><p>支持的图表如下</p>
<p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/SwingBench-5.png" alt="SwingBench-5"></p>
<h3 id="运行SwingBench"><a href="#运行SwingBench" class="headerlink" title="运行SwingBench"></a>运行SwingBench</h3><p><img src="/2020/09/18/Oracle%E6%B5%8B%E8%AF%95%EF%BC%9ASwingBench/SwingBench-3.png" alt="SwingBench-3"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="http://www.dominicgiles.com/simplebenchmark.html">SwingBench官方文档</a></li>
<li><a href="https://www.cnblogs.com/liangqihui/p/7193956.html">如何使用SwingBench进行oracle数据库压力测试</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>性能基准测试</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle部署：安装文档</title>
    <url>/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="win10安装"><a href="#win10安装" class="headerlink" title="win10安装"></a>win10安装</h2><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><p>版本：Oracle 11.2.0.1.0</p>
<p>链接：<a href="https://pan.baidu.com/s/12ctlN7GaU4JbIOuawpsiqA">https://pan.baidu.com/s/12ctlN7GaU4JbIOuawpsiqA</a> </p>
<p>提取码：bah3</p>
<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><p>解压后，双击setup.exe。目录建议全英文</p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-1.png" alt="win10-1"></p>
<h4 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h4><p>双击setup.exe后，自动启动安装程序，检测环境配置。</p>
<p>我本次目的是测试安装流程，点击是继续安装即可。对安装无影响，对性能有影响。</p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-2.png" alt="win10-2"></p>
<h4 id="配置安全更新"><a href="#配置安全更新" class="headerlink" title="配置安全更新"></a>配置安全更新</h4><p>电子邮箱配置自己的即可，会接受安全问题通知，也可以不填</p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-3.png" alt="win10-3"></p>
<h4 id="安装选项"><a href="#安装选项" class="headerlink" title="安装选项"></a>安装选项</h4><p>选择创建和配置数据库，点击下一步</p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-4.png" alt="win10-4"></p>
<h4 id="系统类"><a href="#系统类" class="headerlink" title="系统类"></a>系统类</h4><p>这里在win10上实验，选择的桌面类</p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-5.png" alt="win10-5"></p>
<h4 id="典型安装"><a href="#典型安装" class="headerlink" title="典型安装"></a>典型安装</h4><p>设置数据库文件存储目录、数据库版本、字符集、数据库名及管理口令（用户名为<code>system</code>）</p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-6.png" alt="win10-6"></p>
<h4 id="后续步骤"><a href="#后续步骤" class="headerlink" title="后续步骤"></a>后续步骤</h4><p>典型安装完成后，按照流程下一步即可完成安装</p>
<h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p>CMD：<code>sqlplus system/&lt;system password&gt;</code></p>
<p>网页：<code>https://localhost:1158/em</code>，用户名<code>system</code>，口令为典型安装中配置的管理口令</p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-8.png" alt="win10-8"></p>
<p><img src="/2020/09/10/Oracle%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/win10-7.png" alt="win10-7"></p>
<h2 id="Ubuntu-18-Docker安装"><a href="#Ubuntu-18-Docker安装" class="headerlink" title="Ubuntu 18 Docker安装"></a>Ubuntu 18 Docker安装</h2><h3 id="安装包-1"><a href="#安装包-1" class="headerlink" title="安装包"></a>安装包</h3><p>版本：Oracle Express Edition 11g Release 2</p>
<p>GitHub：<a href="https://github.com/wnameless/docker-oracle-xe-11g">https://github.com/wnameless/docker-oracle-xe-11g</a></p>
<h3 id="安装步骤-1"><a href="#安装步骤-1" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h4><p>参考文档：<a href="https://www.runoob.com/docker/ubuntu-docker-install.html">https://www.runoob.com/docker/ubuntu-docker-install.html</a></p>
<p>安装命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure>

<p>也可以使用国内 daocloud 一键安装命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure>

<h4 id="安装Oracle-11G"><a href="#安装Oracle-11G" class="headerlink" title="安装Oracle 11G"></a>安装Oracle 11G</h4><h5 id="Installation-Local"><a href="#Installation-Local" class="headerlink" title="Installation(Local)"></a>Installation(Local)</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/wnameless/docker-oracle-xe-11g.git</span><br><span class="line">cd docker-oracle-xe-11g</span><br><span class="line">docker build -t wnameless/oracle-xe-11g .</span><br></pre></td></tr></table></figure>

<h5 id="Installation-DockerHub"><a href="#Installation-DockerHub" class="headerlink" title="Installation(DockerHub)"></a>Installation(DockerHub)</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull wnameless/oracle-xe-11g-r2</span><br></pre></td></tr></table></figure>

<p>SSH server has been removed since 18.04, please use “docker exec”</p>
<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>Run with 1521 port opened:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 49161:1521 wnameless/oracle-xe-11g-r2</span><br></pre></td></tr></table></figure>

<p>Run this, if you want the database to be connected remotely:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 49161:1521 -e ORACLE_ALLOW_REMOTE=true wnameless/oracle-xe-11g-r2</span><br></pre></td></tr></table></figure>

<h4 id="默认信息"><a href="#默认信息" class="headerlink" title="默认信息"></a>默认信息</h4><p>By default, the password verification is disable(password never expired)<br>Connect database with following setting:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hostname: localhost</span><br><span class="line">port: 49161</span><br><span class="line">sid: xe</span><br><span class="line">username: system</span><br><span class="line">password: oracle</span><br></pre></td></tr></table></figure>

<p>Password for SYS &amp; SYSTEM</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">oracle</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>PostgreSQL部署：安装文档</title>
    <url>/2022/04/24/PostgreSQL%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PostgreSQL 是一个免费的对象-关系数据库服务器(ORDBMS)，在灵活的BSD许可证下发行。</p>
<p>PostgreSQL 开发者把它念作 <strong>post-gress-Q-L</strong>。</p>
<p>PostgreSQL 的 Slogan 是 “世界上最先进的开源关系型数据库”。</p>
<p>最新中文文档可参考：<a href="https://github.com/postgres-cn/pgdoc-cn/releases">官方手册</a></p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ul>
<li><strong>函数</strong>：通过函数，可以在数据库服务器端执行指令程序。</li>
<li><strong>索引</strong>：用户可以自定义索引方法，或使用内置的 B 树，哈希表与 GiST 索引。</li>
<li><strong>触发器</strong>：触发器是由SQL语句查询所触发的事件。如：一个INSERT语句可能触发一个检查数据完整性的触发器。触发器通常由INSERT或UPDATE语句触发。 多版本并发控制：PostgreSQL使用多版本并发控制（MVCC，Multiversion concurrency control）系统进行并发控制，该系统向每个用户提供了一个数据库的”快照”，用户在事务内所作的每个修改，对于其他的用户都不可见，直到该事务成功提交。</li>
<li><strong>规则</strong>：规则（RULE）允许一个查询能被重写，通常用来实现对视图（VIEW）的操作，如插入（INSERT）、更新（UPDATE）、删除（DELETE）。</li>
<li><strong>数据类型</strong>：包括文本、任意精度的数值数组、JSON 数据、枚举类型、XML 数据等。</li>
<li><strong>全文检索</strong>：通过 Tsearch2 或 OpenFTS，8.3版本中内嵌 Tsearch2。</li>
<li><strong>NoSQL</strong>：JSON，JSONB，XML，HStore 原生支持，至 NoSQL 数据库的外部数据包装器。</li>
<li><strong>数据仓库</strong>：能平滑迁移至同属 PostgreSQL 生态的 GreenPlum，DeepGreen，HAWK 等，使用 FDW 进行 ETL。</li>
</ul>
<h2 id="Ubuntu系统"><a href="#Ubuntu系统" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ul>
<li><strong>规格：</strong>4C8G，100G数据盘</li>
<li><strong>系统：</strong>Ubuntu 16.04.7 LTS</li>
<li><strong>PostgreSQL版本：</strong>PostgreSQL 9.5.25</li>
</ul>
<h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><p>Ubuntu 可以使用 apt-get 安装 PostgreSQL：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install postgresql postgresql-client</span></span><br></pre></td></tr></table></figure>

<p>安装完毕后，系统会创建一个数据库超级用户 postgres，密码为空。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo -i -u postgres</span></span><br></pre></td></tr></table></figure>

<p>这时使用以下命令进入 postgres，输出以下信息，说明安装成功：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">~$ psql</span><br><span class="line">psql (9.5.17)</span><br><span class="line">Type &quot;<span class="keyword">help</span><span class="string">&quot; for help.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">postgres=# </span></span><br></pre></td></tr></table></figure>

<p>输入以下命令退出 PostgreSQL 提示符：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">\q</span><br></pre></td></tr></table></figure>

<p>PostgreSQL 安装完成后默认是已经启动的，但是也可以通过下面的方式来手动启动服务。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/postgresql start    <span class="comment"># 开启</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/postgresql stop     <span class="comment"># 关闭</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/postgresql restart  <span class="comment"># 重启</span></span></span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.postgresql.org/">PostgreSQL官网</a></li>
<li><a href="https://github.com/postgres-cn/pgdoc-cn/releases">PostgreSQL 官方：中文手册</a></li>
<li><a href="https://www.runoob.com/postgresql/postgresql-tutorial.html">菜鸟教程：PostgreSQL 教程</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Python</title>
    <url>/2022/03/08/Python/</url>
    <content><![CDATA[<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>在需要调试的代码位置，加入如下代码，即可进入PDB交互式源代码调试模式。详细用法参考官方文档：<a href="https://docs.python.org/zh-cn/3/library/pdb.html">pdb — Python 的调试器</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pdb;pdb.set_trace()</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left"><strong>命令</strong></th>
<th><strong>解释</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">break 或 b 设置断点</td>
<td>设置断点</td>
</tr>
<tr>
<td align="left">continue 或 c</td>
<td>继续执行程序</td>
</tr>
<tr>
<td align="left">list 或 l</td>
<td>查看当前行的代码段</td>
</tr>
<tr>
<td align="left">step 或 s</td>
<td>进入函数</td>
</tr>
<tr>
<td align="left">return 或 r</td>
<td>执行代码直到从当前函数返回</td>
</tr>
<tr>
<td align="left">exit 或 q</td>
<td>中止并退出</td>
</tr>
<tr>
<td align="left">next 或 n</td>
<td>执行下一行</td>
</tr>
<tr>
<td align="left">pp</td>
<td>打印变量的值</td>
</tr>
<tr>
<td align="left">help</td>
<td>帮助</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>开发语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis部署：安装文档</title>
    <url>/2021/11/19/Redis%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster. <a href="https://redis.io/topics/introduction">Learn more →</a></p>
<h2 id="部署Redis"><a href="#部署Redis" class="headerlink" title="部署Redis"></a>部署Redis</h2><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础包</span></span><br><span class="line">yum install gcc make -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载资源包</span></span><br><span class="line">cd /usr/local/src &amp;&amp; wget https://download.redis.io/releases/redis-6.2.6.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar xzf redis-6.2.6.tar.gz &amp;&amp; cd redis-6.2.6</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 问题：由于未安装gcc，导致第一次make失败，在安装gcc安装后，再次make报错fatal error: jemalloc/jemalloc.h: No such file or directory</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决：该问题是由于第一轮make失败有残留导致，需清理后再编译，命令：make distclean &amp;&amp; make &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成配置文件</span></span><br><span class="line">mkdir /etc/redis &amp;&amp; cp redis.conf /etc/redis/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据持久化目录</span></span><br><span class="line">mkdir /var/lib/redis</span><br></pre></td></tr></table></figure>



<h3 id="配置Redis"><a href="#配置Redis" class="headerlink" title="配置Redis"></a>配置Redis</h3><p>修改 <code>/etc/redis/redis.conf</code> 配置文件如下参数。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务监听地址</span></span><br><span class="line">bind * -::*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用密码认证及默认密码</span></span><br><span class="line">requirepass redis@Inspur.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志文件</span></span><br><span class="line">logfile /var/log/redis.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> RDB持久化规则</span></span><br><span class="line">save 3600 1</span><br><span class="line">save 300 100</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据持久化目录</span></span><br><span class="line">dir /var/lib/redis</span><br></pre></td></tr></table></figure>



<h3 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h3><p>创建 <code>/usr/lib/systemd/system/redis-server.service</code> 配置文件，内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis Server</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=always</span><br><span class="line">ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>重新加载systemctl配置文件，启动redis服务。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start redis-server</span><br><span class="line">systemctl enable redis-server</span><br></pre></td></tr></table></figure>



<h3 id="测试Redis"><a href="#测试Redis" class="headerlink" title="测试Redis"></a>测试Redis</h3><p>远程登录redis并验证可用性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@vsphere162: ~ # redis-cli -h vsphere161 -a redis@Inspur.1</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">vsphere161:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line">vsphere161:6379&gt; exit</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://redis.io/download">Redis官方文档</a></li>
<li><a href="https://www.cnblogs.com/kismetv/p/9137897.html">深入学习Redis：持久化</a></li>
<li><a href="https://www.cnblogs.com/lovychen/p/6529358.html">redis使用日志（3）：如何设置持久化 </a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>TiDB部署：安装文档</title>
    <url>/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>官方文档：<a href="https://docs.pingcap.com/zh/tidb/stable/production-deployment-using-tiup">https://docs.pingcap.com/zh/tidb/stable/production-deployment-using-tiup</a></p>
<h2 id="使用-TiUP-部署-TiDB-集群"><a href="#使用-TiUP-部署-TiDB-集群" class="headerlink" title="使用 TiUP 部署 TiDB 集群"></a>使用 TiUP 部署 TiDB 集群</h2><p><a href="https://github.com/pingcap/tiup">TiUP</a> 是 TiDB 4.0 版本引入的集群运维工具，<a href="https://github.com/pingcap/tiup/tree/master/components/cluster">TiUP cluster</a> 是 TiUP 提供的使用 Golang 编写的集群管理组件，通过 TiUP cluster 组件就可以进行日常的运维工作，包括部署、启动、关闭、销毁、弹性扩缩容、升级 TiDB 集群；管理 TiDB 集群参数。</p>
<p>目前 TiUP 可以支持部署 TiDB、TiFlash、TiDB Binlog、TiCDC，以及监控系统。本文将介绍不同集群拓扑的具体部署步骤。</p>
<h3 id="第-1-步：软硬件环境需求及前置检查"><a href="#第-1-步：软硬件环境需求及前置检查" class="headerlink" title="第 1 步：软硬件环境需求及前置检查"></a>第 1 步：软硬件环境需求及前置检查</h3><p><a href="https://docs.pingcap.com/zh/tidb/stable/hardware-and-software-requirements">软硬件环境需求</a></p>
<p><a href="https://docs.pingcap.com/zh/tidb/stable/check-before-deployment">环境与系统配置检查</a></p>
<h3 id="第-2-步：在中控机上安装-TiUP-组件"><a href="#第-2-步：在中控机上安装-TiUP-组件" class="headerlink" title="第 2 步：在中控机上安装 TiUP 组件"></a>第 2 步：在中控机上安装 TiUP 组件</h3><p>使用普通用户登录中控机，以 <code>tidb</code> 用户为例，后续安装 TiUP 及集群管理操作均通过该用户完成：</p>
<ol>
<li><p>执行如下命令安装 TiUP 工具：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl --proto &#x27;=https&#x27; --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>按如下步骤设置 TiUP 环境变量：</p>
<p>重新声明全局环境变量：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure>

<p>确认 TiUP 工具是否安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">which tiup</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 TiUP cluster 组件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果已经安装，则更新 TiUP cluster 组件至最新版本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup update --self &amp;&amp; tiup update cluster</span><br></pre></td></tr></table></figure>

<p>预期输出 <code>“Update successfully!”</code> 字样。</p>
</li>
<li><p>验证当前 TiUP cluster 版本信息。执行如下命令查看 TiUP cluster 组件版本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup --binary cluster</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h3 id="第-3-步：编辑初始化配置文件"><a href="#第-3-步：编辑初始化配置文件" class="headerlink" title="第 3 步：编辑初始化配置文件"></a>第 3 步：编辑初始化配置文件</h3><p>请根据不同的集群拓扑，编辑 TiUP 所需的集群初始化配置文件。</p>
<p>这里举出常见的 6 种场景，请根据链接中的拓扑说明，以及给出的配置文件模板，新建一个配置文件 <code>topology.yaml</code>。如果有其他组合场景的需求，请根据多个模板自行调整。</p>
<ul>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/minimal-deployment-topology">最小拓扑架构</a></p>
<p>最基本的集群拓扑，包括 tidb-server、tikv-server、pd-server，适合 OLTP 业务。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/tiflash-deployment-topology">增加 TiFlash 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiFlash。TiFlash 是列式的存储引擎，已经逐步成为集群拓扑的标配。适合 Real-Time HTAP 业务。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/ticdc-deployment-topology">增加 TiCDC 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiCDC。TiCDC 是 4.0 版本开始支持的 TiDB 增量数据同步工具，支持多种下游 (TiDB/MySQL/MQ)。相比于 TiDB Binlog，TiCDC 有延迟更低、天然高可用等优点。在部署完成后，需要启动 TiCDC，<a href="https://docs.pingcap.com/zh/tidb/stable/manage-ticdc">通过 <code>cdc cli</code> 创建同步任务</a>。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/tidb-binlog-deployment-topology">增加 TiDB Binlog 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiDB Binlog。TiDB Binlog 是目前广泛使用的增量同步组件，可提供准实时备份和同步功能。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/tispark-deployment-topology">增加 TiSpark 拓扑架构</a></p>
<p>包含最小拓扑的基础上，同时部署 TiSpark 组件。TiSpark 是 PingCAP 为解决用户复杂 OLAP 需求而推出的产品。TiUP cluster 组件对 TiSpark 的支持目前为实验性特性。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/hybrid-deployment-topology">混合部署拓扑架构</a></p>
<p>适用于单台机器，混合部署多个实例的情况，也包括单机多实例，需要额外增加目录、端口、资源配比、label 等配置。</p>
</li>
<li><p><a href="https://docs.pingcap.com/zh/tidb/stable/geo-distributed-deployment-topology">跨机房部署拓扑架构</a></p>
<p>以典型的 <code>两地三中心</code> 架构为例，介绍跨机房部署架构，以及需要注意的关键设置。</p>
</li>
</ul>
<blockquote>
<p><strong>注意：</strong></p>
<ul>
<li><code>topology.yaml</code>配置文件内不能使用主机名，需要使用ip地址。使用主机名会在启动时出现报错。</li>
<li>对于需要全局生效的参数，请在配置文件中 <code>server_configs</code> 的对应组件下配置。</li>
<li>对于需要某个节点生效的参数，请在具体节点的 <code>config</code> 中配置。</li>
<li>配置的层次结构使用 <code>.</code> 表示。如：<code>log.slow-threshold</code>。更多格式参考 <a href="https://github.com/pingcap/tiup/blob/master/examples/topology.example.yaml">TiUP 配置参数模版</a>。</li>
<li>更多参数说明，请参考 <a href="https://github.com/pingcap/tidb/blob/master/config/config.toml.example">TiDB <code>config.toml.example</code></a>、<a href="https://github.com/tikv/tikv/blob/master/etc/config-template.toml">TiKV <code>config.toml.example</code></a> 、 <a href="https://github.com/pingcap/pd/blob/master/conf/config.toml">PD <code>config.toml.example</code></a> 和 <a href="https://docs.pingcap.com/zh/tidb/stable/tiflash-configuration">TiFlash 配置参数</a>。</li>
</ul>
</blockquote>
<h3 id="第-4-步：执行部署命令"><a href="#第-4-步：执行部署命令" class="headerlink" title="第 4 步：执行部署命令"></a>第 4 步：执行部署命令</h3><blockquote>
<p><strong>注意：</strong></p>
<p>通过 TiUP 进行集群部署可以使用密钥或者交互密码方式来进行安全认证：</p>
<ul>
<li>如果是密钥方式，可以通过 <code>-i</code> 或者 <code>--identity_file</code> 来指定密钥的路径；</li>
<li>如果是密码方式，可以通过 <code>-p</code> 进入密码交互窗口；</li>
<li>如果已经配置免密登陆目标机，则不需填写认证。</li>
</ul>
<p>一般情况下 TiUP 会在目标机器上创建 <code>topology.yaml</code> 中约定的用户和组，以下情况例外：</p>
<ul>
<li><code>topology.yaml</code> 中设置的用户名在目标机器上已存在。</li>
<li>在命令行上使用了参数 <code>--skip-create-user</code> 明确指定跳过创建用户的步骤。</li>
</ul>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster deploy tidb-test v4.0.0 ./topology.yaml --user root [-p] [-i /home/root/.ssh/gcp_rsa]</span><br></pre></td></tr></table></figure>

<p>以上部署命令中：</p>
<ul>
<li>通过 TiUP cluster 部署的集群名称为 <code>tidb-test</code></li>
<li>部署版本为 <code>v4.0.0</code>，最新版本可以通过执行 <code>tiup list tidb</code> 来查看 TiUP 支持的版本</li>
<li>初始化配置文件为 <code>topology.yaml</code></li>
<li>–user root：通过 root 用户登录到目标主机完成集群部署，该用户需要有 ssh 到目标机器的权限，并且在目标机器有 sudo 权限。也可以用其他有 ssh 和 sudo 权限的用户完成部署。</li>
<li>[-i] 及 [-p]：非必选项，如果已经配置免密登陆目标机，则不需填写。否则选择其一即可，[-i] 为可登录到目标机的 root 用户（或 –user 指定的其他用户）的私钥，也可使用 [-p] 交互式输入该用户的密码</li>
<li>如果需要指定在目标机创建的用户组名，可以参考<a href="https://github.com/pingcap/tiup/blob/master/examples/topology.example.yaml#L7">这个例子</a>。</li>
</ul>
<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-1.png" alt="TiUP-1"></p>
<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-2.png" alt="TiUP-2"></p>
<p>预期日志结尾输出会有 <code>Deployed cluster </code>tidb-test<code> successfully</code> 关键词，表示部署成功。</p>
<h3 id="第-5-步：查看-TiUP-管理的集群情况"><a href="#第-5-步：查看-TiUP-管理的集群情况" class="headerlink" title="第 5 步：查看 TiUP 管理的集群情况"></a>第 5 步：查看 TiUP 管理的集群情况</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster list</span><br></pre></td></tr></table></figure>

<p>TiUP 支持管理多个 TiDB 集群，该命令会输出当前通过 TiUP cluster 管理的所有集群信息，包括集群名称、部署用户、版本、密钥信息等：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Starting &#x2F;home&#x2F;tidb&#x2F;.tiup&#x2F;components&#x2F;cluster&#x2F;v1.0.0&#x2F;cluster list</span><br><span class="line">Name              User  Version        Path                                                        PrivateKey</span><br><span class="line">----              ----  -------        ----                                                        ----------</span><br><span class="line">tidb-test         tidb  v4.0.0      &#x2F;home&#x2F;tidb&#x2F;.tiup&#x2F;storage&#x2F;cluster&#x2F;clusters&#x2F;tidb-test         &#x2F;home&#x2F;tidb&#x2F;.tiup&#x2F;storage&#x2F;cluster&#x2F;clusters&#x2F;tidb-test&#x2F;ssh&#x2F;id_rsa</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-3.png" alt="TiUP-3"></p>
<h3 id="第-6-步：检查部署的-TiDB-集群情况"><a href="#第-6-步：检查部署的-TiDB-集群情况" class="headerlink" title="第 6 步：检查部署的 TiDB 集群情况"></a>第 6 步：检查部署的 TiDB 集群情况</h3><p>例如，执行如下命令检查 <code>tidb-test</code> 集群情况：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster display tidb-test</span><br></pre></td></tr></table></figure>

<p>预期输出包括 <code>tidb-test</code> 集群中实例 ID、角色、主机、监听端口和状态（由于还未启动，所以状态为 Down/inactive）、目录信息。</p>
<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-4.png" alt="TiUP-4"></p>
<h3 id="第-7-步：启动集群"><a href="#第-7-步：启动集群" class="headerlink" title="第 7 步：启动集群"></a>第 7 步：启动集群</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster start tidb-test</span><br></pre></td></tr></table></figure>

<p>预期结果输出 <code>Started cluster </code>tidb-test<code> successfully</code> 标志启动成功。</p>
<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-5.png" alt="TiUP-5"></p>
<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-6.png" alt="TiUP-6"></p>
<h3 id="第-8-步：验证集群运行状态"><a href="#第-8-步：验证集群运行状态" class="headerlink" title="第 8 步：验证集群运行状态"></a>第 8 步：验证集群运行状态</h3><ul>
<li>通过 TiUP 检查集群状态</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tiup cluster display tidb-test</span><br></pre></td></tr></table></figure>

<p>预期结果输出，注意 Status 状态信息为 <code>Up</code> 说明集群状态正常</p>
<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-7.png" alt="TiUP-7"></p>
<ul>
<li>执行如下命令登录数据库：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -u root -h 10.0.1.4 -P 4000</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/16/TiDB%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/tiup-8.png" alt="TiUP-8"></p>
<p>此外，也需要验证监控系统、<a href="https://docs.pingcap.com/zh/tidb/stable/dashboard-intro">TiDB Dashboard</a> 的运行状态，以及简单命令的执行，验证方式可参考<a href="https://docs.pingcap.com/zh/tidb/stable/post-installation-check">验证集群运行状态</a>。</p>
<h3 id="TiUP管理命令"><a href="#TiUP管理命令" class="headerlink" title="TiUP管理命令"></a>TiUP管理命令</h3><h4 id="集群管理"><a href="#集群管理" class="headerlink" title="集群管理"></a>集群管理</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看集群列表</span></span><br><span class="line">tiup cluster list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">tiup cluster display tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动集群</span></span><br><span class="line">tiup cluster start tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止集群</span></span><br><span class="line">tiup cluster stop tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改集群参数</span></span><br><span class="line">tiup cluster edit-config tidb-test</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除集群</span></span><br><span class="line">tiup cluster destroy tidb-test</span><br></pre></td></tr></table></figure>

<h4 id="集群组件管理"><a href="#集群组件管理" class="headerlink" title="集群组件管理"></a>集群组件管理</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动组件所有节点</span></span><br><span class="line">tiup cluster start tidb-test -R pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭组件所有节点</span></span><br><span class="line">tiup cluster stop tidb-test -R tidb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动某几个节点的组件</span></span><br><span class="line">tiup cluster start tidb-test -N &lt;ip&gt;:&lt;port&gt;,&lt;ip&gt;:&lt;port&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭某几个节点的组件</span></span><br><span class="line">tiup cluster stop tidb-test -N &lt;ip&gt;:&lt;port&gt;,&lt;ip&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>TiDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows使用：通用手册</title>
    <url>/2021/11/29/Windows%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<h2 id="常见场景"><a href="#常见场景" class="headerlink" title="常见场景"></a>常见场景</h2><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mstsc</span><br></pre></td></tr></table></figure>



<h3 id="计算MD5"><a href="#计算MD5" class="headerlink" title="计算MD5"></a>计算MD5</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">certutil -hashfile  &lt;文件名&gt;  &lt;hash类型&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成MD5</span></span><br><span class="line">certutil -hashfile demo.txt MD5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成SHA1</span></span><br><span class="line">certutil -hashfile demo.txt SHA1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成SHA256</span></span><br><span class="line">certutil -hashfile demo.txt SHA256</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成SHA512</span></span><br><span class="line">certutil -hashfile demo.txt SHA512</span><br></pre></td></tr></table></figure>



<h3 id="网卡MTU管理"><a href="#网卡MTU管理" class="headerlink" title="网卡MTU管理"></a>网卡MTU管理</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看各网卡MTU值</span></span><br><span class="line">netsh interface ipv4 show subinterfaces</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改指定网卡MTU值</span></span><br><span class="line">netsh interface ipv4 set subinterface &lt;interface_name&gt; mtu=&lt;value&gt; store=persistent </span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>通用手册</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Jmeter</title>
    <url>/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/</url>
    <content><![CDATA[<p>The <strong>Apache JMeter™</strong> application is open source software, a 100% pure Java application designed to load test functional behavior and measure performance. It was originally designed for testing Web Applications but has since expanded to other test functions.</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载地址：<a href="http://apache.mirrors.pair.com//jmeter/binaries/apache-jmeter-5.3.zip">http://apache.mirrors.pair.com//jmeter/binaries/apache-jmeter-5.3.zip</a></p>
<h3 id="Windows部署"><a href="#Windows部署" class="headerlink" title="Windows部署"></a>Windows部署</h3><h4 id="Java环境"><a href="#Java环境" class="headerlink" title="Java环境"></a>Java环境</h4><p>版本：jdk-8u131-windows-i586（链接：<a href="https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg">https://pan.baidu.com/s/1bBvyYNtrrzJTpFN9z0fnpg</a> 提取码：4ztk）</p>
<p>系统环境变量：</p>
<ul>
<li>JAVA_HOME：C:\Program Files (x86)\Java\jdk1.8.0_131</li>
<li>CLASSPATH：.;%JAVA_HOME%\bin;%JAVA_HOME%\lib\dt.jar%JAVA_HOME%\lib\tools.jar;</li>
<li>PATH：新增两行，%JAVA_HOME%\bin，%JAVA_HOME%\jre\lib</li>
</ul>
<h4 id="Jmeter"><a href="#Jmeter" class="headerlink" title="Jmeter"></a>Jmeter</h4><p>开箱即用。可执行文件：<code>.\bin\jmeter.bat</code></p>
<h3 id="Linux部署"><a href="#Linux部署" class="headerlink" title="Linux部署"></a>Linux部署</h3><h4 id="Java环境-1"><a href="#Java环境-1" class="headerlink" title="Java环境"></a>Java环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y java-1.8.0-openjdk</span><br></pre></td></tr></table></figure>

<h4 id="Jmeter-1"><a href="#Jmeter-1" class="headerlink" title="Jmeter"></a>Jmeter</h4><p>环境变量<code>/etc/profile</code>增加如下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JMETER_HOME=/root/jmeter</span><br><span class="line">export CLASSPATH=$JMETER_HOME/lib/ext/ApacheJMeter_core.jar:$JMETER_HOME/lib/jorphan.jar:$CLASSPATH</span><br><span class="line">export PATH=$JMETER_HOME/bin:$PATH:$HOME/bin</span><br></pre></td></tr></table></figure>

<p>环境变量配置生效：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<p>验证：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jmeter --version</span><br></pre></td></tr></table></figure>



<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>思路：</strong>通过Windows图形界面生成配置文件，上传至服务器进行压测</p>
<h3 id="http-https-性能测试"><a href="#http-https-性能测试" class="headerlink" title="http/https 性能测试"></a>http/https 性能测试</h3><h4 id="1-添加线程组"><a href="#1-添加线程组" class="headerlink" title="1. 添加线程组"></a>1. 添加线程组</h4><p>Test Plan中添加<code>Thread Group</code></p>
<p>总请求量 = 并发用户数 * 循环轮次</p>
<ul>
<li><p><code>Number of Threads (users)</code>：设置并发用户数</p>
</li>
<li><p><code>Loop Count</code>：设置循环轮次</p>
</li>
<li><p><code>Ramp-up period (seconds)</code>：设置压力启动时间（从开始到最大压力之间的时间）</p>
</li>
</ul>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-1.png" alt="jmeter-1"></p>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-2.png" alt="jmeter-2"></p>
<h4 id="2-设置http-https请求"><a href="#2-设置http-https请求" class="headerlink" title="2. 设置http/https请求"></a>2. 设置http/https请求</h4><p>Thread Group中添加<code>HTTP Request</code>，填写http/https请求的配置</p>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-3.png" alt="jmeter-3"></p>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-4.png" alt="jmeter-4"></p>
<h4 id="3-添加统计分析功能"><a href="#3-添加统计分析功能" class="headerlink" title="3. 添加统计分析功能"></a>3. 添加统计分析功能</h4><p>通常，添加如下两个统计分析功能：</p>
<ul>
<li>Summary Report</li>
<li>jp@gc - Transactions Per Second（需要单独安装，安装流程见插件 - QPS统计）</li>
</ul>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-5.png" alt="jmeter-5"></p>
<h4 id="4-导出配置"><a href="#4-导出配置" class="headerlink" title="4. 导出配置"></a>4. 导出配置</h4><p>保存jmx文件，上传至压力服务器。</p>
<h4 id="5-压力执行"><a href="#5-压力执行" class="headerlink" title="5. 压力执行"></a>5. 压力执行</h4><p>linux运行，生成结果文件至<code>test.jtl</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jmeter -n -t vm.jmx -l test.jtl</span><br></pre></td></tr></table></figure>



<h4 id="6-查看性能测试结果"><a href="#6-查看性能测试结果" class="headerlink" title="6. 查看性能测试结果"></a>6. 查看性能测试结果</h4><p>下载<code>test.jtl</code>，在Windows Jmeter的统计分析功能中打开查看。</p>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-6.png" alt="jmeter-6"></p>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-7.png" alt="jmeter-7"></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p><strong>Jmeter插件官网：</strong><a href="https://jmeter-plugins.org/wiki/Start/">https://jmeter-plugins.org/wiki/Start/</a></p>
<h3 id="QPS统计"><a href="#QPS统计" class="headerlink" title="QPS统计"></a>QPS统计</h3><p>下载地址：<a href="https://jmeter-plugins.org/files/packages/jpgc-graphs-basic-2.0.zip">https://jmeter-plugins.org/files/packages/jpgc-graphs-basic-2.0.zip</a></p>
<p>解压后，移动压缩包内lib目录下的文件至Jmeter\lib目录下同位置即可，重启Jmeter。</p>
<p><img src="/2020/09/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AJmeter/jmeter-8.png" alt="jmeter-8"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://jmeter.apache.org/">Jmeter官方网站</a></p>
</li>
<li><p><a href="https://jmeter-plugins.org/wiki/Start/">Jmeter官方插件</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>性能测试工具</category>
      </categories>
      <tags>
        <tag>Jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>性能测试工具：Sysbench</title>
    <url>/2021/12/24/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9ASysbench/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>源码地址：<a href="https://github.com/akopytov/sysbench">https://github.com/akopytov/sysbench</a></p>
<blockquote>
<p>sysbench is a scriptable multi-threaded benchmark tool based on LuaJIT. It is most frequently used for database benchmarks, but can also be used to create arbitrarily complex workloads that do not involve a database server.</p>
<p>sysbench comes with the following bundled benchmarks:</p>
<ul>
<li><code>oltp_*.lua</code>: a collection of OLTP-like database benchmarks</li>
<li><code>fileio</code>: a filesystem-level benchmark</li>
<li><code>cpu</code>: a simple CPU benchmark</li>
<li><code>memory</code>: a memory access benchmark</li>
<li><code>threads</code>: a thread-based scheduler benchmark</li>
<li><code>mutex</code>: a POSIX mutex benchmark</li>
</ul>
<p><strong>Features</strong></p>
<ul>
<li>extensive statistics about rate and latency is available, including latency percentiles and histograms;</li>
<li>low overhead even with thousands of concurrent threads. sysbench is capable of generating and tracking hundreds of millions of events per second;</li>
<li>new benchmarks can be easily created by implementing pre-defined hooks in user-provided Lua scripts;</li>
<li>can be used as a general-purpose Lua interpreter as well, simply replace <code>#!/usr/bin/lua</code> with <code>#!/usr/bin/sysbench</code> in your script.</li>
</ul>
</blockquote>
<p>简单的说，sysbench是一个基于Lua即时编译器（<a href="http://luajit.org/luajit.html">http://luajit.org/luajit.html</a> ）实现的多线程基准测试工具。它被频繁用于数据库基准测试，除此之外，它也可以被用于进行其他复杂的负载测试，比如fileio，cpu，memory等。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本文以“sysbench-1.0.20”版本为例，下载源码，并编译安装。</p>
<ol>
<li>下载地址：<ul>
<li>sysbench源码：<a href="https://github.com/akopytov/sysbench/releases">https://github.com/akopytov/sysbench/releases</a></li>
</ul>
</li>
<li>安装sysbench的依赖包。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install gcc gcc-c++ automake make libtool mariadb-devel -y</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>下载并安装sysbench。</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载sysbench源码</span></span><br><span class="line">wget https://github.com/akopytov/sysbench/archive/refs/tags/1.0.20.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">mv 1.0.20.tar.gz sysbench-1.0.20.tar.gz</span><br><span class="line">tar zxvf sysbench-1.0.20.tar.gz &amp;&amp; cd sysbench-1.0.20</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置及生成编译文件</span></span><br><span class="line">./autogen.sh &amp;&amp; ./configure</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证sysbench</span></span><br><span class="line">sysbench --version</span><br></pre></td></tr></table></figure>



<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="CPU性能测试"><a href="#CPU性能测试" class="headerlink" title="CPU性能测试"></a>CPU性能测试</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 10秒钟CPU素数计算次数</span></span><br><span class="line">sysbench cpu --cpu-max-prime=20000 --threads=1 run</span><br></pre></td></tr></table></figure>



<h3 id="内存性能测试"><a href="#内存性能测试" class="headerlink" title="内存性能测试"></a>内存性能测试</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 内存顺序：10秒钟，内存顺序访问次数与速度</span></span><br><span class="line">sysbench memory --threads=1 --memory-block-size=8K --memory-total-size=200G --memory-access-mode=seq run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存随机：10秒钟，内存随机访问次数与速度</span></span><br><span class="line">sysbench memory --threads=1 --memory-block-size=8K --memory-total-size=200G --memory-access-mode=rnd run</span><br></pre></td></tr></table></figure>



<h3 id="存储性能测试"><a href="#存储性能测试" class="headerlink" title="存储性能测试"></a>存储性能测试</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fileio options:</span><br><span class="line">  --file-num=N                  number of files to create [128]</span><br><span class="line">  --file-block-size=N           block size to use in all IO operations [16384]</span><br><span class="line">  --file-total-size=SIZE        total size of files to create [2G]</span><br><span class="line">  --file-test-mode=STRING       test mode &#123;seqwr, seqrewr, seqrd, rndrd, rndwr, rndrw&#125;</span><br><span class="line">  --file-io-mode=STRING         file operations mode &#123;sync,async,mmap&#125; [sync]</span><br><span class="line">  --file-extra-flags=[LIST,...] list of additional flags to use to open files &#123;sync,dsync,direct&#125; []</span><br><span class="line">  --file-fsync-freq=N           do fsync() after this number of requests (0 - don&#x27;t use fsync()) [100]</span><br><span class="line">  --file-fsync-all[=on|off]     do fsync() after each write operation [off]</span><br><span class="line">  --file-fsync-end[=on|off]     do fsync() at the end of test [on]</span><br><span class="line">  --file-fsync-mode=STRING      which method to use for synchronization &#123;fsync, fdatasync&#125; [fsync]</span><br><span class="line">  --file-merged-requests=N      merge at most this number of IO requests if possible (0 - don&#x27;t merge) [0]</span><br><span class="line">  --file-rw-ratio=N             reads/writes ratio for combined test [1.5]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载4k测试数据</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=4k --file-total-size=20G --file-test-mode=rndrw prepare</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 随机读</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=4k --file-total-size=20G --time=60 --file-test-mode=rndrd run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 随机写</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=4k --file-total-size=20G --time=60 --file-test-mode=rndwr run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载1M测试数据</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=1M --file-total-size=20G --file-test-mode=rndrw prepare</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 顺序读</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=1M --file-total-size=20G --time=60 --file-test-mode=seqrd run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 顺序写</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=1M --file-total-size=20G --time=60 --file-test-mode=seqwr run</span><br></pre></td></tr></table></figure>



<h3 id="MySQL性能测试"><a href="#MySQL性能测试" class="headerlink" title="MySQL性能测试"></a>MySQL性能测试</h3><p>参考本博客文档：《MySQL测试：性能基准测试》</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://github.com/akopytov/sysbench">Github：sysbench</a></li>
</ul>
]]></content>
      <categories>
        <category>性能测试工具</category>
      </categories>
      <tags>
        <tag>Sysbench</tag>
      </tags>
  </entry>
  <entry>
    <title>消息队列：ActiveMQ</title>
    <url>/2022/04/24/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AActiveMQ/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache ActiveMQ is an open-source message broker written in Java. It supports several cross-language clients and protocols.</p>
<p>The Apache ActiveMQ message broker is a fast, reliable, scalable, and totally integrated open source messaging platform for handling lots of messages (ingest) or lots of consumers (dispatch). It uses memory as the storage format; it can be configured to store data persistently on a disk if necessary. The initial startup time can be slow due to the fact that ActiveMQ will load all historical information into memory. However, after the first startup period, which could take up to several minutes depending on how much history you have stored in your queues and other configuration settings, performance starts to scale well up until a point when we consider other factors such as system resources.</p>
<p>Based on its origins as an experience of just moving from an in-house messaging solution to a commercial product, ActiveMQ can be considered as one of those products that have been constantly developed and improved, offering extremely high quality and solid stability.</p>
<p>ActiveMQ provides both a simple embedded broker and a fully deployed, highly available enterprise solution. Its most important features and strengths are high availability and failover (a setup with one broker can survive up to 99.999% of message loss), support for many ways of connecting clients (including web consoles, command-line tools, and libraries, JMS client libraries, etc.), clustering across physical boundaries, load balancing through multiple internal queues per topic, flexible configuration such as persistent or non-persistent messages according to the need, the persistence of data by file or database, security implementation based on JAAS authentication model which also supports LDAP implementation.</p>
<p>ActiveMQ is truly the preferred messaging solution for Java developers, infrastructure architects, and system integrators. It can be used in both small deployments (in which case you will probably use the embedded broker) or big enterprise solutions (which require clustering and failover).</p>
<p>Depending on your needs, ActiveMQ can be easily scaled out to real high availability scenarios with full load balancing across all brokers, including dynamic addition of new nodes when existing ones go down; stateful failover with automatic re-sync and potential data loss (which is always possible), fully supported by ActiveMQ itself: just another two nodes that need to be configured into a cluster for high availability.</p>
<p>Apache ActiveMQ is cross-platform and runs in a Java Virtual Machine (JVM). You could use ActiveMQ on either Linux, Windows, or OS X.</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Ubuntu系统"><a href="#Ubuntu系统" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h3><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><ul>
<li><strong>规格：</strong>4C8G，100G数据盘</li>
<li><strong>系统：</strong>20.04.3 LTS (GNU/Linux 5.4.0-107-generic x86_64)</li>
<li><strong>PostgreSQL版本：</strong>PostgreSQL 9.5.25</li>
</ul>
<blockquote>
<p><strong>Pre-Installation Requirements</strong></p>
<p><strong>Hardware:</strong></p>
<ul>
<li>60 MB of free disk space for the ActiveMQ binary distribution.</li>
<li>200 MB of free disk space for the ActiveMQ source or developer’s distributions.</li>
</ul>
<p><strong>Operating Systems:</strong></p>
<ul>
<li>Windows: Windows XP SP2, Windows 2000.</li>
<li>Unix: Ubuntu Linux, Powerdog Linux, MacOS, AIX, HP-UX, Solaris, or any Unix platform that supports Java.</li>
</ul>
<p><strong>Environment:</strong></p>
<ul>
<li>Java Developer Kit (JDK) 1.7.x or greater for deployment and 1.7.x (Java 7) for compiling/building.</li>
<li>The JAVA_HOME environment variable must be set to the directory where the JDK is installed, e.g., <code>c:\Program Files\jdk.1.7.0_xx_xx</code>.</li>
<li>Maven 3.0 or greater (required when installing source or developer’s releases).</li>
<li><a href="http://cvs.apache.org/repository/geronimo-spec/jars/">JARs</a> that will be used must be added to the classpath.</li>
</ul>
</blockquote>
<h4 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础依赖包</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install openjdk-8-jdk</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载资源包</span></span><br><span class="line">sudo wget http://www.apache.org/dist/activemq/5.16.4/apache-activemq-5.16.4-bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压资源包</span></span><br><span class="line">sudo tar zxvf apache-activemq-*gz -C /opt/ </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建服务用户</span></span><br><span class="line">sudo addgroup --quiet --system activemq</span><br><span class="line">sudo adduser --quiet --system --ingroup activemq --no-create-home --disabled-password activemq</span><br><span class="line">sudo chown -R activemq:activemq /opt/apache-activemq*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建systemctl服务</span></span><br><span class="line">ACTIVEMQ_DIR=$(cd /opt/apache-activemq* &amp;&amp; pwd)</span><br><span class="line">cat &gt; /usr/lib/systemd/system/activemq.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Apache ActiveMQ</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">User=activemq</span><br><span class="line">Group=activemq</span><br><span class="line">ExecStart=$&#123;ACTIVEMQ_DIR&#125;/bin/activemq start</span><br><span class="line">ExecStop=$&#123;ACTIVEMQ_DIR&#125;/bin/activemq stop</span><br><span class="line">ExecRestart=$&#123;ACTIVEMQ_DIR&#125;/bin/activemq stop : $&#123;ACTIVEMQ_DIR&#125;/bin/activemq start</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务</span></span><br><span class="line">sudo systemctl start activemq</span><br><span class="line">sudo systemctl status activemq</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://activemq.apache.org/components/classic/documentation">官方文档：ActiveMQ 5 Documentation</a></li>
<li><a href="https://activemq.apache.org/version-5-getting-started">官方文档：Version 5 Getting Started</a></li>
<li><a href="https://vitux.com/how-to-install-apache-activemq-on-ubuntu/">How to Install Apache ActiveMQ on Ubuntu 20.04</a></li>
</ul>
]]></content>
      <categories>
        <category>消息队列</category>
      </categories>
      <tags>
        <tag>ActiveMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>消息队列：Mosquitto</title>
    <url>/2020/08/31/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AMosquitto/</url>
    <content><![CDATA[<h2 id="Mosquitto"><a href="#Mosquitto" class="headerlink" title="Mosquitto"></a>Mosquitto</h2><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的”轻量级”通讯协议，该协议构建于TCP/IP协议上，由IBM在1999年发布。MQTT最大优点在于，可以以极少的代码和有限的带宽，为连接远程设备提供实时可靠的消息服务。作为一种低开销、低带宽占用的即时通讯协议，使其在物联网、小型设备、移动应用等方面有较广泛的应用。</p>
<p>MQTT是一个基于客户端-服务器的消息发布/订阅传输协议。MQTT协议是轻量、简单、开放和易于实现的，这些特点使它适用范围非常广泛。在很多情况下，包括受限的环境中，如：机器与机器（M2M）通信和物联网（IoT）。其在，通过卫星链路通信传感器、偶尔拨号的医疗设备、智能家居、及一些小型化设备中已广泛使用。</p>
<a id="more"></a>

<p><img src="/2020/08/31/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AMosquitto/1573118328615.png" alt="1573118328615"></p>
<h3 id="config-解析"><a href="#config-解析" class="headerlink" title="config 解析"></a>config 解析</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim mosquitto.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> General configuration</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端心跳的间隔时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash">retry_interval 20</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 系统状态的刷新时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sys_interval 10</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 系统资源的回收时间，0表示尽快处理</span></span><br><span class="line"><span class="meta">#</span><span class="bash">store_clean_interval 10</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务进程的PID</span></span><br><span class="line"><span class="meta">#</span><span class="bash">pid_file /var/run/mosquitto.pid</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务进程的系统用户</span></span><br><span class="line"><span class="meta">#</span><span class="bash">user mosquitto</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端心跳消息的最大并发数</span></span><br><span class="line"><span class="meta">#</span><span class="bash">max_inflight_messages 10</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端心跳消息缓存队列</span></span><br><span class="line"><span class="meta">#</span><span class="bash">max_queued_messages 100</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 用于设置客户端长连接的过期时间，默认永不过期</span></span><br><span class="line"><span class="meta">#</span><span class="bash">persistent_client_expiration</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default listener</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务绑定的IP地址</span></span><br><span class="line"><span class="meta">#</span><span class="bash">bind_address</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务绑定的端口号</span></span><br><span class="line"><span class="meta">#</span><span class="bash">port 1883</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许的最大连接数，-1表示没有限制</span></span><br><span class="line"><span class="meta">#</span><span class="bash">max_connections -1</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> cafile：CA证书文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> capath：CA证书目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> certfile：PEM证书文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> keyfile：PEM密钥文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">cafile</span></span><br><span class="line"><span class="meta">#</span><span class="bash">capath</span></span><br><span class="line"><span class="meta">#</span><span class="bash">certfile</span></span><br><span class="line"><span class="meta">#</span><span class="bash">keyfile</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 必须提供证书以保证数据安全性</span></span><br><span class="line"><span class="meta">#</span><span class="bash">require_certificate <span class="literal">false</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 若require_certificate值为<span class="literal">true</span>，use_identity_as_username也必须为<span class="literal">true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">use_identity_as_username <span class="literal">false</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用PSK（Pre-shared-key）支持</span></span><br><span class="line"><span class="meta">#</span><span class="bash">psk_hint</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> SSL/TSL加密算法，可以使用“openssl ciphers”命令获取</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> as the output of that <span class="built_in">command</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ciphers</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Persistence</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 消息自动保存的间隔时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash">autosave_interval 1800</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 消息自动保存功能的开关</span></span><br><span class="line"><span class="meta">#</span><span class="bash">autosave_on_changes <span class="literal">false</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 持久化功能的开关</span></span><br><span class="line">persistence true</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 持久化DB文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">persistence_file mosquitto.db</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 持久化DB文件目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash">persistence_location /var/lib/mosquitto/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Logging</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 4种日志模式：stdout、stderr、syslog、topic</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> none 则表示不记日志，此配置可以提升些许性能</span></span><br><span class="line">log_dest none</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 选择日志的级别（可设置多项）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">log_type error</span></span><br><span class="line"><span class="meta">#</span><span class="bash">log_type warning</span></span><br><span class="line"><span class="meta">#</span><span class="bash">log_type notice</span></span><br><span class="line"><span class="meta">#</span><span class="bash">log_type information</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否记录客户端连接信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash">connection_messages <span class="literal">true</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否记录日志时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash">log_timestamp <span class="literal">true</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Security</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端ID的前缀限制，可用于保证安全性</span></span><br><span class="line"><span class="meta">#</span><span class="bash">clientid_prefixes</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许匿名用户</span></span><br><span class="line"><span class="meta">#</span><span class="bash">allow_anonymous <span class="literal">true</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 用户/密码文件，默认格式：username:password</span></span><br><span class="line"><span class="meta">#</span><span class="bash">password_file</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> PSK格式密码文件，默认格式：identity:key</span></span><br><span class="line"><span class="meta">#</span><span class="bash">psk_file</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> pattern write sensor/%u/data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ACL权限配置，常用语法如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 用户限制：user &lt;username&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 话题限制：topic [<span class="built_in">read</span>|write] &lt;topic&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 正则限制：pattern write sensor/%u/data</span></span><br><span class="line"><span class="meta">#</span><span class="bash">acl_file</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Bridges</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> =================================================================</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许服务之间使用“桥接”模式（可用于分布式部署）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">connection &lt;name&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">address &lt;host&gt;[:&lt;port&gt;]</span></span><br><span class="line"><span class="meta">#</span><span class="bash">topic &lt;topic&gt; [[[out | <span class="keyword">in</span> | both] qos-level] <span class="built_in">local</span>-prefix remote-prefix]</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置桥接的客户端ID</span></span><br><span class="line"><span class="meta">#</span><span class="bash">clientid</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 桥接断开时，是否清除远程服务器中的消息</span></span><br><span class="line"><span class="meta">#</span><span class="bash">cleansession <span class="literal">false</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否发布桥接的状态信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash">notifications <span class="literal">true</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置桥接模式下，消息将会发布到的话题地址</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="variable">$SYS</span>/broker/connection/&lt;clientid&gt;/state</span></span><br><span class="line"><span class="meta">#</span><span class="bash">notification_topic</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置桥接的keepalive数值</span></span><br><span class="line"><span class="meta">#</span><span class="bash">keepalive_interval 60</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 桥接模式，目前有三种：automatic、lazy、once</span></span><br><span class="line"><span class="meta">#</span><span class="bash">start_type automatic</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 桥接模式automatic的超时时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash">restart_timeout 30</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 桥接模式lazy的超时时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash">idle_timeout 60</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 桥接客户端的用户名</span></span><br><span class="line"><span class="meta">#</span><span class="bash">username</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 桥接客户端的密码</span></span><br><span class="line"><span class="meta">#</span><span class="bash">password</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> bridge_cafile：桥接客户端的CA证书文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bridge_capath：桥接客户端的CA证书目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bridge_certfile：桥接客户端的PEM证书文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bridge_keyfile：桥接客户端的PEM密钥文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">bridge_cafile</span></span><br><span class="line"><span class="meta">#</span><span class="bash">bridge_capath</span></span><br><span class="line"><span class="meta">#</span><span class="bash">bridge_certfile</span></span><br><span class="line"><span class="meta">#</span><span class="bash">bridge_keyfile</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 自己的配置可以放到以下目录中</span></span><br><span class="line"><span class="meta">#</span><span class="bash">include_dir /mqtt/config/conf.d</span></span><br></pre></td></tr></table></figure>

<h3 id="Qos-解析"><a href="#Qos-解析" class="headerlink" title="Qos 解析"></a>Qos 解析</h3><h4 id="Qos-0-–-gt-最多一次"><a href="#Qos-0-–-gt-最多一次" class="headerlink" title="Qos=0 –&gt; 最多一次"></a>Qos=0 –&gt; 最多一次</h4><blockquote>
<p>sequenceDiagram</p>
<p>ClientA-&gt;&gt;ServerBroker: 发送消息<br>ServerBroker-&gt;&gt;ClientB: 发送消息</p>
</blockquote>
<h4 id="Qos-1-–-gt-至少一次"><a href="#Qos-1-–-gt-至少一次" class="headerlink" title="Qos=1 –&gt; 至少一次"></a>Qos=1 –&gt; 至少一次</h4><blockquote>
<p>sequenceDiagram</p>
<p>ClientA-&gt;&gt;ServerBroker: 1.发送消息PUBLISH<br>ServerBroker-&gt;&gt;ServerBroker: 1.1存储消息<br>ServerBroker-&gt;&gt;ClientA: 1.2发送消息回应PUBACK<br>ServerBroker-&gt;&gt;ClientB: 2.发送消息<br>ClientB-&gt;&gt;ServerBroker: 2.1发送消息回应PUBACK<br>ServerBroker-&gt;&gt;ServerBroker: 2.2删除消息</p>
</blockquote>
<h4 id="Qos-2-–-gt-有且仅有一次"><a href="#Qos-2-–-gt-有且仅有一次" class="headerlink" title="Qos=2 –&gt; 有且仅有一次"></a>Qos=2 –&gt; 有且仅有一次</h4><blockquote>
<p>sequenceDiagram</p>
<p>ClientA-&gt;&gt;ServerBroker: 1.发送消息PUBLISH<br>ServerBroker-&gt;&gt;ServerBroker: 1.1存储消息<br>ServerBroker-&gt;&gt;ClientA: 1.2发送消息回应Rec<br>ClientA-&gt;&gt;ServerBroker: 2.发送消息Rel<br>ServerBroker-&gt;&gt;ServerBroker: 2.1删除消息<br>ServerBroker-&gt;&gt;ServerBroker: 2.2存储消息到发送列队<br>ServerBroker-&gt;&gt;ClientB: 2.3发送消息<br>ServerBroker-&gt;&gt;ClientA: 2.4发送消息回应Comp<br>ClientB-&gt;&gt;ServerBroker: 3.发送消息回应Rec<br>ServerBroker-&gt;&gt;ServerBroker: 3.1删除2.2中存储的消息（一次确认）<br>ServerBroker-&gt;&gt;ServerBroker: 3.2存储消息<br>ServerBroker-&gt;&gt;ClientB: 3.3发送消息Rel<br>ClientB-&gt;&gt;ServerBroker: 3.4发送消息回应Comp<br>ServerBroker-&gt;&gt;ServerBroker: 3.5删除消息(二次确认)</p>
</blockquote>
<p><img src="/2020/08/31/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AMosquitto/1573118624880.png" alt="1573118624880"></p>
<h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3><h4 id="实验1：Mosquitto-内存数据落盘机制"><a href="#实验1：Mosquitto-内存数据落盘机制" class="headerlink" title="实验1：Mosquitto 内存数据落盘机制"></a>实验1：Mosquitto 内存数据落盘机制</h4><h5 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h5><p>​    Mosquitto 内存数据落盘持久化时，是否会产生重复数据</p>
<h5 id="实验结论"><a href="#实验结论" class="headerlink" title="实验结论"></a>实验结论</h5><p>​    Mosquitto 不会重复持久化已经持久化过的数据</p>
<h5 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h5><p>​    mosquitto version 1.4.15</p>
<h5 id="实验方法"><a href="#实验方法" class="headerlink" title="实验方法"></a>实验方法</h5><ol>
<li>发送者保持同样的发送速率，降低订阅者消费速度，触发mqtt的持久化机制</li>
<li>更改mqtt持久化的间隔（3s 和 30s），观测持久化的数据大小是否不同</li>
</ol>
<h5 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h5><blockquote>
<p>发送者：发送1w条消息，用时 31.16837883 s</p>
<p>订阅者：每分钟消化1条，1min内堆积9999条消息</p>
<p>Mosquitto：持久化间隔 3s，1min内涨幅 27842 Byte</p>
</blockquote>
<p><img src="/2020/08/31/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AMosquitto/1573112430542.png" alt="1573112430542"></p>
<blockquote>
<p>发送者：发送1w条消息，</p>
<p>订阅者：每分钟消化1条，1min内堆积9999条消息</p>
<p>Mosquitto：持久化间隔 30s，1min内涨幅 27842 Byte</p>
</blockquote>
<p><img src="/2020/08/31/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AMosquitto/1573113441213.png" alt="1573113441213"></p>
<h5 id="实验脚本"><a href="#实验脚本" class="headerlink" title="实验脚本"></a>实验脚本</h5><h6 id="send-py"><a href="#send-py" class="headerlink" title="send.py"></a>send.py</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Send msg to mqtt (linux, python2)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">__author__ &#x3D; &#39;RYB&#39;</span><br><span class="line"></span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line">import paho.mqtt.publish as publish</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def ranstr(num):</span><br><span class="line">    salt &#x3D; &#39;&#39;.join(random.sample(string.ascii_letters + string.digits, num))</span><br><span class="line">    return salt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def publish_msg(msg_num):</span><br><span class="line">    for i in range(msg_num):</span><br><span class="line">        msg &#x3D; &#123;</span><br><span class="line">            &quot;id&quot;: i,</span><br><span class="line">            &quot;Timestamp&quot;: int(time.time() * 1000),</span><br><span class="line">            &quot;str1&quot;: ranstr(50),</span><br><span class="line">            &quot;str2&quot;: ranstr(50)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        publish.single(&quot;test&quot;, payload&#x3D;json.dumps(msg), qos&#x3D;2, hostname&#x3D;&quot;10.244.0.164&quot;, port&#x3D;1883)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Start &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">start &#x3D; time.time()</span><br><span class="line">print(&quot;Running...&quot;)</span><br><span class="line">publish_msg(10000)</span><br><span class="line">end &#x3D; time.time()</span><br><span class="line">print(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; End &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">print(&quot;Run Time: %s s&quot; % str(end - start))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="rec-py"><a href="#rec-py" class="headerlink" title="rec.py"></a>rec.py</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Receive msg from mqtt (linux, python2)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">__author__ &#x3D; &#39;RYB&#39;</span><br><span class="line"></span><br><span class="line">import time</span><br><span class="line">import paho.mqtt.subscribe as subscribe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def on_message_sleep(client, userdata, msg):</span><br><span class="line">    print(msg.topic + &#39; --&gt; &#39; + msg.payload)</span><br><span class="line">    time.sleep(60)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subscribe.callback(on_message_sleep, &quot;test&quot;, qos&#x3D;2, hostname&#x3D;&quot;mosquitto&quot;, port&#x3D;1883)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ul>
<li><p>[MQTT 入门介绍]: <a href="https://www.runoob.com/w3cnote/mqtt-intro.html">https://www.runoob.com/w3cnote/mqtt-intro.html</a></p>
</li>
<li><p>[MQTT协议之消息发布]: <a href="https://www.jianshu.com/p/8f10b7aeaddb">https://www.jianshu.com/p/8f10b7aeaddb</a></p>
</li>
<li><p>[mosquitto官方中文文档]: <a href="https://mcxiaoke.gitbooks.io/mqtt-cn/content/mqtt/04-OperationalBehavior.html">https://mcxiaoke.gitbooks.io/mqtt-cn/content/mqtt/04-OperationalBehavior.html</a></p>
</li>
<li><p>[mosquitto.conf man page]: <a href="https://mosquitto.org/man/mosquitto-conf-5.html">https://mosquitto.org/man/mosquitto-conf-5.html</a></p>
</li>
<li><p>[Python paho-mqtt 模块使用]: <a href="https://blog.csdn.net/weixin_41656968/article/details/80848542#12publish">https://blog.csdn.net/weixin_41656968/article/details/80848542#12publish</a></p>
</li>
<li><p>[从moquette源码看IOT接入协议MQTT的实现]: <a href="https://juejin.im/post/5b6af53fe51d453509565e89">https://juejin.im/post/5b6af53fe51d453509565e89</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>消息队列</category>
      </categories>
      <tags>
        <tag>MQTT</tag>
      </tags>
  </entry>
  <entry>
    <title>消息队列：RabbitMQ</title>
    <url>/2022/04/24/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9ARabbitMQ/</url>
    <content><![CDATA[<h2 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h2><p>参考<a href="https://www.rabbitmq.com/tutorials/tutorial-one-python.html">官方代码示例</a></p>
<h3 id="Producer示例"><a href="#Producer示例" class="headerlink" title="Producer示例"></a>Producer示例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">username = <span class="string">&#x27;glance-rabbitmq-user&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;glancepFAlXGtyZc7lTi0*&#x27;</span></span><br><span class="line">host = <span class="string">&#x27;osh-openstack-rabbitmq-rabbitmq-0.rabbitmq.openstack.svc.cluster.local&#x27;</span></span><br><span class="line">port = <span class="number">5672</span></span><br><span class="line">vhost = <span class="string">&#x27;glance&#x27;</span></span><br><span class="line">exchange = <span class="string">&#x27;demo&#x27;</span></span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(username, password)</span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(</span><br><span class="line">        host=host, port=port, virtual_host=vhost, credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line">channel.exchange_declare(exchange=exchange, durable=<span class="literal">True</span>, exchange_type=<span class="string">&#x27;fanout&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    msg=json.dumps(&#123;<span class="string">&#x27;OrderId&#x27;</span>:<span class="string">&quot;1000%s&quot;</span>%i&#125;)</span><br><span class="line">    channel.basic_publish(exchange=exchange, routing_key=<span class="string">&#x27;&#x27;</span>, body=msg,</span><br><span class="line">                          properties=pika.BasicProperties(delivery_mode=<span class="number">2</span>))</span><br><span class="line">    print(msg)</span><br><span class="line"></span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure>

<h3 id="Consumer示例"><a href="#Consumer示例" class="headerlink" title="Consumer示例"></a>Consumer示例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line">username = <span class="string">&#x27;glance-rabbitmq-user&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;glancepFAlXGtyZc7lTi0*&#x27;</span></span><br><span class="line">host = <span class="string">&#x27;osh-openstack-rabbitmq-rabbitmq-0.rabbitmq.openstack.svc.cluster.local&#x27;</span></span><br><span class="line">port = <span class="number">5672</span></span><br><span class="line">vhost = <span class="string">&#x27;glance&#x27;</span></span><br><span class="line">exchange = <span class="string">&#x27;demo&#x27;</span></span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(username, password)</span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(</span><br><span class="line">        host=host, port=port, virtual_host=vhost, credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line">result = channel.queue_declare(<span class="string">&#x27;&#x27;</span>, exclusive=<span class="literal">True</span>)</span><br><span class="line">channel.exchange_declare(exchange=exchange, durable=<span class="literal">True</span>, exchange_type=<span class="string">&#x27;fanout&#x27;</span>)</span><br><span class="line">channel.queue_bind(exchange=exchange, queue=result.method.queue)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">ch, method, properties, body</span>):</span></span><br><span class="line">    ch.basic_ack(delivery_tag=method.delivery_tag)</span><br><span class="line">    print(body.decode())</span><br><span class="line"></span><br><span class="line">channel.basic_consume(result.method.queue, callback, auto_ack=<span class="literal">False</span>)</span><br><span class="line">channel.start_consuming()</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.rabbitmq.com/tutorials/tutorial-one-python.html">RabbitMQ官方代码示例</a></li>
<li><a href="https://www.cnblogs.com/guyuyun/p/14970592.html">Python三方库：Pika（RabbitMQ基础使用）</a></li>
</ul>
]]></content>
      <categories>
        <category>消息队列</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>研发工具：Chrome翻墙</title>
    <url>/2020/12/21/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/</url>
    <content><![CDATA[<h2 id="谷歌上网助手GHelper-–-Chrome插件"><a href="#谷歌上网助手GHelper-–-Chrome插件" class="headerlink" title="谷歌上网助手GHelper – Chrome插件"></a>谷歌上网助手GHelper – Chrome插件</h2><blockquote>
<p>专门为科研、外贸、跨境电商、海淘人员、开发人员服务的上网加速工具，chrome内核浏览器专用!可以解决chrome扩展无法自动更新的问题，同时可以访问谷歌google搜索，gmail邮箱，google+等谷歌产品</p>
<p>简单易用的《谷歌上网助手》，可以解决chrome扩展无法自动更新的问题，同时可以访问谷歌google搜索，gmail邮箱，google+等谷歌服务。</p>
<p>《谷歌上网助手》一键安装，无需其他配置，即可访问谷歌。</p>
<p>使用本插件可以免费上：</p>
<ul>
<li>google.com     谷歌搜索</li>
<li>mail.google.com   gmail邮箱</li>
<li>chrome商店访问</li>
</ul>
</blockquote>
<h2 id="资源包"><a href="#资源包" class="headerlink" title="资源包"></a>资源包</h2><p>链接：<a href="https://pan.baidu.com/s/1Q7ltgX75BwLRyrrUSsQg4A">https://pan.baidu.com/s/1Q7ltgX75BwLRyrrUSsQg4A</a><br>提取码：tav2 </p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>下载解压资源包，找见<code>Ghelper2.2.1.crx</code></li>
</ol>
<p><img src="/2020/12/21/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.png" alt="文件目录"></p>
<ol start="2">
<li>打开<code>Chrome浏览器</code>，点击<code>设置</code> - <code>扩展应用</code>（也可直接浏览地址：<code>chrome://extensions/</code>），打开<code>开发者模式</code>开关</li>
</ol>
<p><img src="/2020/12/21/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/Chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F.png" alt="image-20201221203859502"></p>
<ol start="3">
<li>拖拽<code>Ghelper2.2.1.crx</code>至Chrome页面，进行安装</li>
<li>点击谷歌上网助手，注册并登陆账户即可访问Google</li>
</ol>
<p><img src="/2020/12/21/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E8%BF%9B%E5%85%A5Ghelper.png" alt="image-20201221204045444"></p>
<p><img src="/2020/12/21/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E7%99%BB%E5%BD%95Ghelper.png" alt="image-20201221204105401"></p>
<ol start="5">
<li><p>访问Google搜索</p>
<p><img src="/2020/12/21/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/%E8%AE%BF%E9%97%AEGoogle.png" alt="image-20201221204155970"></p>
</li>
</ol>
<p><img src="/2020/12/21/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AChrome%E7%BF%BB%E5%A2%99/Google%E6%90%9C%E7%B4%A2.png" alt="image-20201221204215545"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://chrome.google.com/webstore/detail/%E8%B0%B7%E6%AD%8C%E4%B8%8A%E7%BD%91%E5%8A%A9%E6%89%8B/nonmafimegllfoonjgplbabhmgfanaka?hl=zh-CN">Chrome应用商店：谷歌上网助手</a></li>
<li><a href="https://www.wonxun.net/share/426">谷歌上网助手GHelper – Chrome插件下载(谷歌浏览器插件)</a></li>
</ul>
]]></content>
      <categories>
        <category>研发工具</category>
      </categories>
      <tags>
        <tag>研发工具</tag>
        <tag>翻墙</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>研发工具：Jupyter</title>
    <url>/2022/04/14/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AJupyter/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Free software, open standards, and web services for interactive computing across all programming languages</p>
<blockquote>
<h3 id="JupyterLab-A-Next-Generation-Notebook-Interface"><a href="#JupyterLab-A-Next-Generation-Notebook-Interface" class="headerlink" title="JupyterLab: A Next-Generation Notebook Interface"></a>JupyterLab: A Next-Generation Notebook Interface</h3><p>JupyterLab is the latest web-based interactive development environment for notebooks, code, and data. Its flexible interface allows users to configure and arrange workflows in data science, scientific computing, computational journalism, and machine learning. A modular design invites extensions to expand and enrich functionality.</p>
<h3 id="Jupyter-Notebook-The-Classic-Notebook-Interface"><a href="#Jupyter-Notebook-The-Classic-Notebook-Interface" class="headerlink" title="Jupyter Notebook: The Classic Notebook Interface"></a>Jupyter Notebook: The Classic Notebook Interface</h3><p>The Jupyter Notebook is the original web application for creating and sharing computational documents. It offers a simple, streamlined, document-centric experience.</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础包</span></span><br><span class="line">yum install -y gcc python3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据目录</span></span><br><span class="line">mkdir /usr/local/jupyter</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Jupyter</span></span><br><span class="line">pip3 install --upgrade pip</span><br><span class="line">pip3 install jupyter jupyterlab</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行Jupyter Lab</span></span><br><span class="line">jupyter lab --ip 0.0.0.0 --allow-root --notebook-dir=/usr/local/jupyter</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行Jupyter Notebook</span></span><br><span class="line">jupyter notebook --ip 0.0.0.0 --allow-root --notebook-dir=/usr/local/jupyter</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看访问信息</span></span><br><span class="line">jupyter lab list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置systemctl</span></span><br><span class="line">cat &gt; /usr/lib/systemd/system/jupyter.service &lt;&lt; EOF </span><br><span class="line">[Unit]</span><br><span class="line">Description=Jupyter Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">KillMode=mixed</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/local/bin/jupyter lab --ip 0.0.0.0 --allow-root --notebook-dir=/usr/local/jupyter</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>



<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>Web访问地址：<code>http://&lt;ip&gt;:8888/?token=&lt;token&gt;</code>,点击<code>Python</code>即可开始编写。测试代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"></span><br><span class="line">th = np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span>(<span class="params">sty</span>):</span></span><br><span class="line">    mpl.style.use(sty)</span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    ax.set_title(<span class="string">&#x27;style: &#123;!r&#125;&#x27;</span>.format(sty), color=<span class="string">&#x27;C0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    ax.plot(th, np.cos(th), <span class="string">&#x27;C1&#x27;</span>, label=<span class="string">&#x27;C1&#x27;</span>)</span><br><span class="line">    ax.plot(th, np.sin(th), <span class="string">&#x27;C2&#x27;</span>, label=<span class="string">&#x27;C2&#x27;</span>)</span><br><span class="line">    ax.legend()</span><br><span class="line"></span><br><span class="line">demo(<span class="string">&#x27;seaborn&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2022/04/14/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AJupyter/%E6%BC%94%E7%A4%BA1.png" alt="演示1"></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://jupyter.org/">Jupyter官网</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/33105153">Jupyter Notebook介绍、安装及使用教程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/87403131">JupyterLab，极其强大的下一代notebook！</a></li>
</ul>
]]></content>
      <categories>
        <category>研发工具</category>
      </categories>
      <tags>
        <tag>研发工具</tag>
        <tag>Jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL优化：服务性能</title>
    <url>/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/</url>
    <content><![CDATA[<blockquote>
<p>性能优化优先顺序：</p>
<ol>
<li>数据库结构设计和SQL语句</li>
<li>数据库存储引擎的选择和参数配置</li>
<li>系统选择和优化</li>
<li>硬件升级</li>
</ol>
</blockquote>
<h2 id="服务器硬件"><a href="#服务器硬件" class="headerlink" title="服务器硬件"></a>服务器硬件</h2><h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><ul>
<li>64位的CPU一定要工作在64位的系统下</li>
<li>32位操作系统对单线程运行的MySQL有很大的限制</li>
<li>频率决定单个SQL处理快慢；核数决定并行处理SQL数量，即QPS</li>
<li>对于并发比较高的场景，CPU的数量比频率重要</li>
<li>对于CPU密集型场景或比较复杂的SQL，CPU频率越高越好</li>
<li>Web类应用，核数优先级大于频率</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看CPU是否超频</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看CPU最大频率</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu*/cpufreq/cpuinfo_max_freq</span><br></pre></td></tr></table></figure>



<h3 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h3><ul>
<li>内存选择时，应选择主板所能使用的最高频率的内存</li>
<li>内存的大小对性能很重要，所以要尽可能的大</li>
<li>在数据量大于内存时，内存不能缓存全部的数据，提升内存对性能有较明显的提升</li>
</ul>
<h3 id="I-O子系统"><a href="#I-O子系统" class="headerlink" title="I/O子系统"></a>I/O子系统</h3><p>优先级：PCIe &gt; SSD &gt; 传统磁盘 + RAID10 &gt; 磁盘 &gt; SAN</p>
<p>传统磁盘需要注意：</p>
<ul>
<li>存储容量</li>
<li>传输速度</li>
<li>访问时间</li>
<li>主轴转速</li>
<li>物理尺寸</li>
</ul>
<p>RAID级别的选择：主库建议RAID10，从库建议RAID0、RAID5。</p>
<table>
<thead>
<tr>
<th>等级</th>
<th>特点</th>
<th>是否冗余</th>
<th>盘数</th>
<th>读</th>
<th>写</th>
</tr>
</thead>
<tbody><tr>
<td>RAID0</td>
<td>便宜，快速，危险</td>
<td>否</td>
<td>N</td>
<td>快</td>
<td>快</td>
</tr>
<tr>
<td>RAID1</td>
<td>高速读，简单，安全</td>
<td>是</td>
<td>2</td>
<td>快</td>
<td>慢</td>
</tr>
<tr>
<td>RAID5</td>
<td>安全，成本折中</td>
<td>是</td>
<td>N+1</td>
<td>快</td>
<td>取决于最慢的盘</td>
</tr>
<tr>
<td>RAID10</td>
<td>贵，高速，安全</td>
<td>是</td>
<td>2N</td>
<td>快</td>
<td>快</td>
</tr>
</tbody></table>
<p>相比于机械磁盘，固态磁盘有以下几个特点：</p>
<ol>
<li>更好的随机读写性能</li>
<li>更好的支持并发</li>
<li>更容易损坏</li>
</ol>
<p>使用场景：</p>
<ul>
<li><p>适用于存在大量随机IO的场景</p>
</li>
<li><p>适用于解决单线程负载的IO瓶颈</p>
</li>
</ul>
<h2 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h2><h3 id="内核相关参数：-etc-sysctl-conf"><a href="#内核相关参数：-etc-sysctl-conf" class="headerlink" title="内核相关参数：/etc/sysctl.conf"></a>内核相关参数：/etc/sysctl.conf</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加连接数和队列长度</span></span><br><span class="line">net.core.somaxconn=65535</span><br><span class="line">net.core.netdev_max_backlog=65535</span><br><span class="line">net.ipv4.tcp_max_syn_backlog=65535</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加快tcp连接回收速度</span></span><br><span class="line">net.ipv4.tcp_fin_timeout=10</span><br><span class="line">net.ipv4.tcp_tw_reuse=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 网络接收和发送缓冲区大小</span></span><br><span class="line">net.core.wmem_default=87380</span><br><span class="line">net.core.wmem_max=16777216</span><br><span class="line">net.core.rmem_default=87380</span><br><span class="line">net.core.rmem_max=16777216</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tcp存活探测</span></span><br><span class="line">net.ipv4.tcp_keepalive_time=120</span><br><span class="line">net.ipv4.tcp_keepalive_intvl=30</span><br><span class="line">net.ipv4.tcp_keepalive_probes=3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 单个共享内存段的最大值</span></span><br><span class="line">kernel.shmmax=4294967296</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 这个参数应该设置的足够大，以便能在一个共享内存段下容纳下整个Innodb缓冲池的大小</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 对于64位linux系统，可取的最大值为物理内存值-1byte，建议值为大于物理内存的一半，一般取值大于Innodb缓冲池的大小即可。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存交换分区</span></span><br><span class="line">vm.swappiness=5</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 内存使用率超过95%才会使用交换分区</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 内存交换分区，在内存不足时会对性能产生明显的影响</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 脏页</span></span><br><span class="line">vm.dirty_background_ratio=50</span><br><span class="line">vm.dirty_ratio=80</span><br><span class="line">vm.dirty_writeback_centisecs = 2000</span><br><span class="line">vm.dirty_expire_centisecs = 12000</span><br></pre></td></tr></table></figure>



<h3 id="资源限制：-etc-security-limits-conf"><a href="#资源限制：-etc-security-limits-conf" class="headerlink" title="资源限制：/etc/security/limits.conf"></a>资源限制：/etc/security/limits.conf</h3><p>需要重启操作系统才能生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 控制打开文件数限制</span></span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> *        表示对所有用户有效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> soft     表示当前系统生效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hard     表名系统中所能设定的最大值</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nofile   表示锁限制的资源是打开文件的最大数目</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 65535    限制的数量</span></span><br></pre></td></tr></table></figure>



<h3 id="磁盘调度策略：-sys-block-devname-queue-scheduler"><a href="#磁盘调度策略：-sys-block-devname-queue-scheduler" class="headerlink" title="磁盘调度策略：/sys/block/devname/queue/scheduler"></a>磁盘调度策略：/sys/block/devname/queue/scheduler</h3><p>Linux 内核的 4 大 IO 调度算法：</p>
<ul>
<li><strong>Noop IO scheduler（电梯式调度策略）</strong>：NOOP实现了一个FIFO队列，它像电梯的工作方法一样对I/O请求进行组织，当有一个新的请求到来时，它将请求合并到最近的请求之后，以此来保证请求同一介质。NOOP倾向于饿死读而利于写，因此NOOP对于<strong>闪存设备</strong>、<strong>RAM</strong>及<strong>嵌入式系统</strong>是最好的选择。</li>
<li><strong>Deadline IO scheduler（截止时间调度策略）</strong>：Deadline确保了在一个截止时间内服务请求，这个截止时间是可调整的，而默认读期限短于写期限。这样就防止了写操作因为不能被读取而饿死的现象，Deadline对<strong>数据库类应用</strong>是最好的选择。</li>
<li><strong>Anticipatory IO scheduler（预料I/O调度策略）</strong>：本质上与Deadline一样，但在最后一次读操作后，要等待6ms，才能继续进行对其它I/O请求进行调度。它会在每个6ms中插入新的I/O操作，而会将一些小写入流合并成一个大写入流，用写入延时换取最大的写入吞吐量。AS适合于<strong>写入较多的环境</strong>，比如文件服务器，AS对数据库环境表现很差。</li>
<li><strong>CFQ IO scheduler（Completely Fair Queuing, 完全公平排队）</strong>：它试图为竞争块设备使用权的所有进程分配一个请求队列和一个时间片，在调度器分配给进程的时间片内，进程可以将其读写请求发送给底层块设备，当进程的时间片消耗完，进程的请求队列将被挂起，等待调度。对于通用的服务器来说，CFQ是较好的选择。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看磁盘当前调度策略（方括号里面的是当前选定的调度策略）</span></span><br><span class="line">cat /sys/block/sda/queue/scheduler</span><br><span class="line">[mq-deadline] kyber bfq none</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改磁盘调度策略</span></span><br><span class="line">echo deadline &gt; /sys/block/sda/queue/scheduler</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">echo deadline | sudo tee /sys/block/sda/queue/scheduler</span><br></pre></td></tr></table></figure>



<h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>各操作系统推荐适用如下文件系统，性能最优：</p>
<ul>
<li>Windows：NTFS</li>
<li>Linux：XFS</li>
</ul>
<p>若Linux使用ext4文件系统，则关闭文件系统的操作时间记录可以提升读写性能，<code>/etc/fstab</code> 内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/dev/sda1    /     ext4   noatime,nodiratime,data=writeback 1 1</span><br></pre></td></tr></table></figure>



<h2 id="MySQL体系结构"><a href="#MySQL体系结构" class="headerlink" title="MySQL体系结构"></a>MySQL体系结构</h2><p><img src="/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png" alt="image-20211012113231107"></p>
<p>存储引擎是针对于表的，而不是针对于库的（一个库中的不同表可以使用不同的存储引擎，但不建议这样操作。）</p>
<h2 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a>MySQL存储引擎</h2><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><h3 id="Innodb"><a href="#Innodb" class="headerlink" title="Innodb"></a>Innodb</h3><h2 id="MySQL配置参数"><a href="#MySQL配置参数" class="headerlink" title="MySQL配置参数"></a>MySQL配置参数</h2><h3 id="MySQL获取配置信息途径"><a href="#MySQL获取配置信息途径" class="headerlink" title="MySQL获取配置信息途径"></a>MySQL获取配置信息途径</h3><ul>
<li><p>命令行参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysqld_safe --datadir=/data/sql_data</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看配置文件优先级</span></span><br><span class="line">mysqld --help --verbose | grep -A 1 &#x27;Default options&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf</span></span><br></pre></td></tr></table></figure>




</li>
</ul>
<h3 id="MySQL配置参数的作用域"><a href="#MySQL配置参数的作用域" class="headerlink" title="MySQL配置参数的作用域"></a>MySQL配置参数的作用域</h3><ul>
<li><p>全局参数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 动态设置全局参数</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> 参数名 = 参数值;</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="keyword">set</span> @@global.参数名 = 参数值;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看全局参数</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb%&#x27;</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>会话参数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 动态设置会话参数</span></span><br><span class="line"><span class="keyword">set</span> [<span class="keyword">session</span>] 参数名 = 参数值;</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="keyword">set</span> @@session.参数名 = 参数值;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="内存相关配置参数"><a href="#内存相关配置参数" class="headerlink" title="内存相关配置参数"></a>内存相关配置参数</h3><ul>
<li><p>确定可使用的内存上线</p>
</li>
<li><p>确定MySQL的每个连接使用的内存，占用内存大小为：buffer_size * 连接数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查询排序时，立即分配指定大小内存给线程</span></span><br><span class="line">sort_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接缓冲区</span></span><br><span class="line">join_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MyISAM全表扫描时，分配指定大小，需要为4K的倍数</span></span><br><span class="line">read_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 索引缓冲区</span></span><br><span class="line">read_rnd_buffer_size</span><br></pre></td></tr></table></figure>
</li>
<li><p>确定需要为操作系统保留多少内存</p>
</li>
<li><p>如何为缓存池分配内存，总内存 -（每个线程所需要的内存 * 连接数）- 系统保留内存</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">innodb_buffer_pool_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 主要用于MyISAM存储引擎</span></span><br><span class="line">key_buffer_size</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="IO相关配置参数"><a href="#IO相关配置参数" class="headerlink" title="IO相关配置参数"></a>IO相关配置参数</h3><h4 id="Innodb-I-O相关配置"><a href="#Innodb-I-O相关配置" class="headerlink" title="Innodb I/O相关配置"></a>Innodb I/O相关配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 单个事务日志大小</span></span><br><span class="line">innodb_log_file_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 事务日志文件个数</span></span><br><span class="line">innodb_log_files_in_group </span><br><span class="line"><span class="meta">#</span><span class="bash"> 事务日志总大小 = Innodb_log_files_in_group * Innodb_log_file_size</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一个日志文件写满后才写下一个，Innodb_log_files_in_group意义不大，事务繁忙时，Innodb_log_file_size建议调大（32M ~ 128M）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志缓冲区，一般不需要设置太大，基本1s就会刷新一次日志缓冲区，只需要保证可以缓冲1s的事务即可。建议32M ~ 128M即可</span></span><br><span class="line">innodb_log_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb刷新<span class="built_in">log</span>的频率</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：每隔1秒钟会将<span class="built_in">log</span> buffer中的数据写入到文件，同时通知文件系统进行文件同步的flush操作（该值会导致MySQL崩溃时至少丢失1s的事务）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：默认值，每次事务的结束都会触发Log Thread将<span class="built_in">log</span> buffer中的数据写入文件并通知文件系统同步文件（该值可以保证数据不丢失）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 2：建议值，每次事务提交的时候会把<span class="built_in">log</span> buffer刷到文件系统中去，但并不会立即刷写到磁盘（如果只是MySQL数据库挂掉了，由于文件系统没有问题，那么对应的事务数据并没有丢失。只有在数据库所在的主机操作系统损坏或者突然掉电的情况下，数据库的事务数据可能丢失1秒之类的事务数据）</span></span><br><span class="line">innodb_flush_log_at_trx_commit</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb刷新方式</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - fsync: InnoDB uses the fsync() system call to flush both the data and <span class="built_in">log</span> files. fsync is the default setting.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - O_DSYNC: InnoDB uses O_SYNC to open and flush the <span class="built_in">log</span> files, and fsync() to flush the data files. InnoDB does not use O_DSYNC directly because there have been problems with it on many varieties of Unix.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - littlesync: This option is used <span class="keyword">for</span> internal performance testing and is currently unsupported. Use at your own risk.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - nosync: This option is used <span class="keyword">for</span> internal performance testing and is currently unsupported. Use at your own risk.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - O_DIRECT: InnoDB uses O_DIRECT (or directio() on Solaris) to open the data files, and uses fsync() to flush both the data and <span class="built_in">log</span> files. This option is available on some GNU/Linux versions, FreeBSD, and Solaris.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - O_DIRECT_NO_FSYNC: InnoDB uses O_DIRECT during flushing I/O, but skips the fsync() system call after each write operation.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Prior to MySQL 5.7.25, this setting is not suitable <span class="keyword">for</span> file systems such as XFS and EXT4, <span class="built_in">which</span> require an fsync() system call to synchronize file system metadata changes. If you are not sure whether your file system requires an fsync() system call to synchronize file system metadata changes, use O_DIRECT instead.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> As of MySQL 5.7.25, fsync() is called after creating a new file, after increasing file size, and after closing a file, to ensure that file system metadata changes are synchronized. The fsync() system call is still skipped after each write operation.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Data loss is possible <span class="keyword">if</span> redo <span class="built_in">log</span> files and data files reside on different storage devices, and an unexpected <span class="built_in">exit</span> occurs before data file writes are flushed from a device cache that is not battery-backed. If you use or intend to use different storage devices <span class="keyword">for</span> redo <span class="built_in">log</span> files and data files, and your data files reside on a device with a cache that is not battery-backed, use O_DIRECT instead.</span></span><br><span class="line">innodb_flush_method</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb独立表空间，强烈建议使用该参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：关闭</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：开启</span></span><br><span class="line">innodb_file_per_table</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb双写缓存，避免文件系统写入错误是文件损坏，损耗约10%写性能，保证安全性</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：关闭</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：开启</span></span><br><span class="line">innodb_doublewrite</span><br></pre></td></tr></table></figure>



<h4 id="MyISAM-I-O相关配置"><a href="#MyISAM-I-O相关配置" class="headerlink" title="MyISAM I/O相关配置"></a>MyISAM I/O相关配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 控制缓冲刷新到磁盘的频率</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - OFF：每次写操作后刷新键缓冲区内的脏块到磁盘</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ON：只对在建表时指定了delay_key_write选项的表使用延迟刷新</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ALL：对所有MyISAM表都是用延迟键写入</span></span><br><span class="line">delay_key_write</span><br></pre></td></tr></table></figure>



<h3 id="锁相关配置参数"><a href="#锁相关配置参数" class="headerlink" title="锁相关配置参数"></a>锁相关配置参数</h3><h4 id="Innodb-锁相关配置"><a href="#Innodb-锁相关配置" class="headerlink" title="Innodb 锁相关配置"></a>Innodb 锁相关配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 自旋锁</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自旋锁的优点：自旋锁要上锁时，如果需要等待其他线程释放锁，那么：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - 在等待锁的过程中会先线程会先自旋一段时间：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - 自旋阶段，线程不会放弃 CPU</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - 自旋过后：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - 如果可以获取锁了，那么响应会比较快（自旋没发生上下文切换）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - 如果还需要等待锁，再用更高成本的方式进行锁等待</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CPU 使用率会随着自旋阶段变长而升高。</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自旋阶段的时间长度</span></span><br><span class="line">innodb_spin_wait_delay</span><br><span class="line"><span class="meta">#</span><span class="bash"> 自旋周期</span></span><br><span class="line">innodb_sync_spin_loops</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="安全相关配置参数"><a href="#安全相关配置参数" class="headerlink" title="安全相关配置参数"></a>安全相关配置参数</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 自动清理binlog的天数，建议覆盖两次全备的间隔</span></span><br><span class="line">expire_logs_days</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL可以接受的包大小，建议32M。主从复制结构中，主库与从库需保持一致</span></span><br><span class="line">max_allowed_packet</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用DNS查找。使用该参数后，授权需要使用ip或网段，不能使用域名</span></span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保sysdate()返回确定性日期</span></span><br><span class="line">sysdate_is_now</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止非super权限用户的写权限。建议主从复制结构中，从库使用</span></span><br><span class="line">read_only</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用slave自动恢复</span></span><br><span class="line">skip_slave_start</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL所使用的SQL模式（对SQL语法检验严谨度，不建议在已经运行的生产环境中修改），常用值如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - STRICT_TRANS_TABLES：在该模式下,如果一个值不能插入到一个事务表中,则中断当前的操作,对非事务表不做限制。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ONLY_FULL_GROUP_BY：对于GROUP BY聚合操作,如果在SELECT中的列,没有在GROUP BY中出现,那么这个SQL是不合法的,因为列不在GROUP BY从句中。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_AUTO_VALUE_ON_ZERO：该值影响自增长列的插入。默认设置下,插入0或NULL代表生成下一个自增长值。如果用户 希望插入的值为0,而该列又是自增长的,那么这个选项就有用了。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ZERO_IN_DATE：在严格模式下,不允许日期和月份为零。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ZERO_DATE：设置该值,mysql数据库不允许插入零日期,插入零日期会抛出错误而不是警告。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ERROR_FOR_DIVISION_BY_ZERO：在INSERT或UPDATE过程中,如果数据被零除,则产生错误而非警告。如 果未给出该模式,那么数据被零除时MySQL返回NULL。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_AUTO_CREATE_USER：禁止GRANT创建密码为空的用户。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ENGINE_SUBSTITUTION：如果需要的存储引擎被禁用或未编译,那么抛出错误。不设置此值时,用默认的存储引擎替代,并抛出一个异常。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - PIPES_AS_CONCAT：将<span class="string">&quot;||&quot;</span>视为字符串的连接操作符而非或运算符,这和Oracle数据库是一样的,也和字符串的拼接函数Concat相类似。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ANSI_QUOTES：启用ANSI_QUOTES后,不能用双引号来引用字符串,因为它被解释为识别符。</span></span><br><span class="line">sql_mode</span><br></pre></td></tr></table></figure>



<h3 id="其他常用配置参数"><a href="#其他常用配置参数" class="headerlink" title="其他常用配置参数"></a>其他常用配置参数</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> MySQL刷新binlog到磁盘的方式</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：性能最好，当事务提交之后，MySQL不做fsync之类的磁盘同步指令刷新binlog_cache中的信息到磁盘，而让Filesystem自行决定什么时候来做同步。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - n：当每进行n次事务提交之后，MySQL将进行一次fsync之类的磁盘同步指令来将binlog_cache中的数据强制写入磁盘。</span></span><br><span class="line">sync_binlog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存临时表大小，组合使用，两个参数值要一致，避免过大</span></span><br><span class="line">tmp_table_size</span><br><span class="line">max_heap_table_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大连接数。默认100，建议2000+</span></span><br><span class="line">max_connections</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><ul>
<li><a href="https://www.percona.com/doc/percona-server/5.7/index.html#percona-server-version-documentation"><em>Percona Server for MySQL</em> 5.7 - Documentation</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_method">MySQL官方文档：InnoDB Startup Options and System Variables</a></li>
</ul>
<h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><ul>
<li><a href="https://segmentfault.com/a/1190000015275132">MySQL瓶颈分析与优化</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1748024?from=article.detail.1083343">MySQL 最佳实践：分析和应对 MySQL 的 IO 问题</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1591491">实例解析MySQL性能瓶颈排查定位</a></li>
<li><a href="https://www.saotn.org/mysql-innodb-performance-improvement/">MySQL InnoDB performance improvement: InnoDB buffer pool instances – Updated!</a></li>
<li><a href="https://bbs.huaweicloud.com/blogs/detail/247505">【MySQL调优】MySQL性能优化实战</a></li>
<li><a href="https://blog.csdn.net/qq_29229567/article/details/106241831">MySQL：常用的MySQL优化工具</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/134669835">使用O_DIRECT_NO_FSYNC来提升MySQL性能</a></li>
<li><a href="https://www.php.cn/mysql-tutorials-363152.html">实例详解mysql中innodb_flush_method方法</a></li>
<li><a href="https://segmentfault.com/a/1190000021864855">第01问：MySQL 一次 insert 刷几次盘？</a></li>
<li><a href="https://segmentfault.com/a/1190000039345913">第32问：innodb_log_buffer_size 到底有什么作用？</a></li>
<li><a href="https://segmentfault.com/a/1190000040043433">第37问：自旋锁 旋着旋着人就糊涂了</a></li>
</ul>
<h3 id="InnoDB存储引擎"><a href="#InnoDB存储引擎" class="headerlink" title="InnoDB存储引擎"></a>InnoDB存储引擎</h3><ul>
<li><a href="https://blog.csdn.net/qq_27009517/article/details/108852433">《MySQL 性能优化》之 InnoDB 存储引擎</a></li>
<li><a href="https://www.cnblogs.com/wanbin/p/9530833.html">如何在MySQL中分配innodb_buffer_pool_size</a></li>
<li><a href="https://www.jianshu.com/p/0bc2d8f4bba1">innodb_flush_method</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1441303">MySQL参数：innodb_flush_log_at_trx_commit 和 sync_binlog</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1533798#:~:text=%E5%BD%93innodb_flush_log_at_trx_commit%E5%92%8Csync_binlog%E8%BF%99%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E9%83%BD%E8%AE%BE%E7%BD%AE%E4%B8%BA1%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E4%BB%AC%E7%A7%B0%E4%B9%8B%E4%B8%BA%22%E5%8F%8C1%E6%A8%A1%E5%BC%8F%22%E3%80%82.%20%22%E5%8F%8C1%E8%AE%BE%E7%BD%AE%22%E9%80%82%E5%90%88%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%80%A7%E8%A6%81%E6%B1%82%E9%9D%9E%E5%B8%B8%E9%AB%98%EF%BC%8C%E8%80%8C%E4%B8%94%E7%A3%81%E7%9B%98IO%E5%86%99%E8%83%BD%E5%8A%9B%E8%B6%B3%E5%A4%9F%E6%94%AF%E6%8C%81%E4%B8%9A%E5%8A%A1%EF%BC%8C%E6%AF%94%E5%A6%82%E8%AE%A2%E5%8D%95%2C%E4%BA%A4%E6%98%93%2C%E5%85%85%E5%80%BC%2C%E6%94%AF%E4%BB%98%E6%B6%88%E8%B4%B9%E7%B3%BB%E7%BB%9F%E3%80%82.%20%E5%9C%A8mysql%20%E6%9C%8D%E5%8A%A1%E5%B4%A9%E6%BA%83%E6%88%96%E8%80%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%BB%E6%9C%BA%E6%8E%89%E7%94%B5%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8Cbinary,log%20%E5%8F%AA%E6%9C%89%E5%8F%AF%E8%83%BD%E4%B8%A2%E5%A4%B1%E6%9C%80%E5%A4%9A%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%E6%88%96%E8%80%85%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%EF%BC%8C%E5%AE%89%E5%85%A8%E6%80%A7%E8%83%BD%E5%A4%A7%E5%A4%A7%E5%A2%9E%E5%8A%A0%EF%BC%8C%E4%BD%86%E6%98%AF%E6%88%91%E4%BB%AC%E8%AF%B4%E8%BF%87%EF%BC%8C%E5%AE%89%E5%85%A8%E6%80%A7%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD%E6%98%AF%E4%B8%80%E6%8A%8A%E5%8F%8C%E5%88%83%E5%89%91%EF%BC%8C%E5%8F%8C1%E6%A8%A1%E5%BC%8F%E4%BC%9A%E5%AF%BC%E8%87%B4%E9%A2%91%E7%B9%81%E7%9A%84io%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%AF%A5%E6%A8%A1%E5%BC%8F%E4%B9%9F%E6%98%AF%E6%9C%80%E6%85%A2%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E5%BD%B1%E5%93%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%A7%E8%83%BD%E3%80%82.%20%E5%8F%8C1%E6%A8%A1%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%BD%93%E7%A3%81%E7%9B%98IO%E6%97%A0%E6%B3%95%E6%BB%A1%E8%B6%B3%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%E6%97%B6%20%E6%AF%94%E5%A6%82%22%E5%8F%8C11%22%20%E6%B4%BB%E5%8A%A8%E7%9A%84%E5%8E%8B%E5%8A%9B%E3%80%82.">MySQL数据安全的”双1模式”简介</a></li>
<li><a href="https://segmentfault.com/a/1190000011687570">Mysql性能调优与测试</a></li>
<li><a href="https://www.cnblogs.com/wajika/p/6711022.html">Mysql线程池优化笔记</a></li>
<li><a href="https://blog.csdn.net/z69183787/article/details/52910079">MySQL线程池(THREAD POOL)的原理</a></li>
<li><a href="https://www.jianshu.com/p/210eab345423">线程池，这一篇或许就够了</a></li>
<li><a href="https://mytecdb.com/blogDetail.php?id=73#:~:text=MySQL%E7%BA%BF%E7%A8%8B%E6%B1%A0.%20%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AE%9E%E7%8E%B0%E5%9C%A8server%E7%AB%AF%EF%BC%8C%E9%80%9A%E8%BF%87%E5%88%9B%E5%BB%BA%E4%B8%80%E5%AE%9A%E6%95%B0%E9%87%8F%E7%9A%84%E7%BA%BF%E7%A8%8B%E6%9C%8D%E5%8A%A1DB%E8%AF%B7%E6%B1%82%EF%BC%8C%E7%9B%B8%E5%AF%B9%E4%BA%8Eone-conection-per-thread%E7%9A%84%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E6%9C%8D%E5%8A%A1%E4%B8%80%E4%B8%AA%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8D%95%E4%BD%8D%E6%98%AFSQL%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8D%B3%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E5%8F%AF%E4%BB%A5%E5%AF%B9%E5%BA%94%E5%A4%9A%E4%B8%AA%E6%B4%BB%E8%B7%83%E7%9A%84%E8%BF%9E%E6%8E%A5%E3%80%82.%20%E9%80%9A%E8%BF%87%E7%BA%BF%E7%A8%8B%E6%B1%A0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%B0%86server%E7%AB%AF%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8E%A7%E5%88%B6%E5%9C%A8%E4%B8%80%E5%AE%9A%E7%9A%84%E8%8C%83%E5%9B%B4%EF%BC%8C%E5%87%8F%E5%B0%91%E4%BA%86%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E7%9A%84%E7%AB%9E%E4%BA%89%E5%92%8C%E7%BA%BF%E7%A8%8B%E5%88%9B%E5%BB%BA%E3%80%81%E9%94%80%E6%AF%81%E4%BB%A5%E5%8F%8A%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%B6%88%E8%80%97%EF%BC%8C%E5%90%8C%E6%97%B6%E4%B9%9F%E9%81%BF%E5%85%8D%E5%87%BA%E7%8E%B0%E9%AB%98%E8%BF%9E%E6%8E%A5%E6%95%B0%E5%AF%BC%E8%87%B4%E7%9A%84%E9%AB%98%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E3%80%82.%20%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%98%AFMySQL%205.6,%E7%9A%84%E5%BC%80%E5%A7%8B%E6%8F%90%E4%BE%9B%E7%9A%84%E4%B8%80%E4%B8%AA%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD%EF%BC%8CMySQL%205.6%20%E4%B9%8B%E5%89%8D%EF%BC%8C%E5%A4%84%E7%90%86%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E6%98%AF%20one-thread-per-connection%EF%BC%8C%20%E5%AF%B9%E4%BA%8E%E6%AF%8F%E4%B8%80%E4%B8%AAclient%20%E8%BF%9E%E6%8E%A5%E9%83%BD%E4%BC%9A%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%8B%AC%E7%AB%8B%E7%9A%84%E7%BA%BF%E7%A8%8B%EF%BC%8C%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9D%9F%EF%BC%8C%E9%94%80%E6%AF%81%E7%BA%BF%E7%A8%8B%E3%80%82.">MySQL连接池、线程缓存、线程池的区别</a></li>
<li><a href="https://www.cnblogs.com/leohahah/p/8857124.html">MySQL事务隔离级别</a></li>
<li><a href="https://www.cnblogs.com/pebblecome/p/14754179.html">MySQL-InnoDB究竟如何巧妙实现，4种事务的隔离级别</a></li>
<li><a href="https://developer.aliyun.com/article/710525">MySQL的sql_mode模式说明及设置</a></li>
<li><a href="https://www.cnblogs.com/geaozhang/p/7241744.html">InnoDB关键特性之double write</a></li>
<li><a href="https://www.cnblogs.com/yueyun00/p/10898677.html">MySQL缓存机制</a></li>
<li><a href="https://www.cnblogs.com/chenpingzhao/p/5119161.html">【mysql】关于IO/内存方面的一些优化</a></li>
<li><a href="https://www.jianshu.com/p/fc74e946729b">一文搞定MySQL性能调优</a></li>
<li><a href="https://mytecdb.com/blogDetail.php?id=117#:~:text=MySQL%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90innodb_flush_neighbors.%20innodb_flush_neighbors,%E5%8F%82%E6%95%B0%E6%98%AFInnoDB%E7%94%A8%E6%9D%A5%E6%8E%A7%E5%88%B6buffer%20pool%E5%88%B7%E8%84%8F%E9%A1%B5%E6%97%B6%E6%98%AF%E5%90%A6%E6%8A%8A%E8%84%8F%E9%A1%B5%E9%82%BB%E8%BF%91%E7%9A%84%E5%85%B6%E4%BB%96%E8%84%8F%E9%A1%B5%E4%B8%80%E8%B5%B7%E5%88%B7%E5%88%B0%E7%A3%81%E7%9B%98%EF%BC%8C%E5%9C%A8%E4%BC%A0%E7%BB%9F%E7%9A%84%E6%9C%BA%E6%A2%B0%E7%A1%AC%E7%9B%98%E6%97%B6%E4%BB%A3%EF%BC%8C%E6%89%93%E5%BC%80%E8%BF%99%E4%B8%AA%E5%8F%82%E6%95%B0%E8%83%BD%E5%A4%9F%E5%87%8F%E5%B0%91%E7%A3%81%E7%9B%98%E5%AF%BB%E9%81%93%E7%9A%84%E5%BC%80%E9%94%80%EF%BC%8C%E6%98%BE%E8%91%97%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E3%80%82.">MySQL参数解析innodb_flush_neighbors</a></li>
<li><a href="https://www.cnblogs.com/leohahah/p/8862216.html">MySQL锁机制</a></li>
<li><a href="https://www.cnblogs.com/leohahah/p/8863422.html">MySQL各类SQL语句的加锁机制</a></li>
<li><a href="https://blog.csdn.net/weixin_43705457/article/details/104843282">AUTO-INC锁与innodb_autoinc_lock_mode</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1140006">MySQL性能调优 – 你必须了解的15个重要变量</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/138065093">innodb参数优化</a></li>
<li><a href="https://blog.csdn.net/zhj_fly/article/details/90510393#:~:text=innodb_sync_spin_loops%E6%98%AF%E5%9C%A8%E6%94%BE%E5%BC%83CPU%E6%97%B6%E9%97%B4%E7%89%87%E4%B9%8B%E5%89%8D%E8%BF%9B%E8%A1%8C%E5%A4%9A%E5%B0%91%E6%AC%A1%E7%AD%89%E5%BE%85%EF%BC%8Cinnodb_spin_wait_delay%E6%98%AF%E4%B8%80%E6%AC%A1%E7%AD%89%E5%BE%85%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%82,%E5%AE%9E%E9%AA%8C%EF%BC%9Ainnodb_spin_wait_delay%E9%BB%98%E8%AE%A4%E5%80%BC%E6%98%AF6%EF%BC%8C%E8%AE%BE%E7%BD%AE%E8%BF%87%E5%A4%A7%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%99%8D%E4%BD%8E%E6%80%A7%E8%83%BD%E3%80%82%20%EF%BC%881%EF%BC%89%E5%B0%86%E8%AF%A5%E5%80%BC%E8%AE%BE%E4%B8%BA180%E5%92%8C1%E5%AF%B9%E5%BA%94%E7%9A%84%E5%90%9E%E5%90%90%E9%87%8F%E5%88%86%E5%88%AB%E4%B8%BA%EF%BC%9A726tps%E5%92%8C1017tps%EF%BC%88%E5%89%8D%E6%8F%90%E6%98%AF%E5%85%B6%E4%BB%96%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE%E5%90%88%E7%90%86%EF%BC%8C%E5%8F%AA%E5%AF%B9%E6%AF%94%E8%BF%99%E4%B8%80%E4%B8%AA%EF%BC%89">MySQL调参</a></li>
</ul>
<h3 id="MySQL监控"><a href="#MySQL监控" class="headerlink" title="MySQL监控"></a>MySQL监控</h3><ul>
<li><a href="https://cloud.tencent.com/document/product/248/45147#.E5.BC.95.E6.93.8E.E7.9B.91.E6.8E.A7.EF.BC.88.E6.99.AE.E9.80.9A.EF.BC.89--innodb">云数据库 MySQL 监控指标</a></li>
<li><a href="https://www.cnblogs.com/zhengah/p/4797205.html">MySQL监控、性能分析——工具篇</a></li>
<li><a href="https://www.cnblogs.com/wuchangsoft/p/9764635.html">MySQL 的实时性能监控利器</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1424670">一条命令解读InnoDB存储引擎—show engine innodb status</a></li>
<li><a href="https://blog.csdn.net/shaochenshuo/article/details/109531445">如何读懂 MySQL rw-lock 锁的统计信息</a></li>
<li><a href="https://developer.aliyun.com/article/640177">初相识｜performance_schema全方位介绍（一）</a></li>
</ul>
<h3 id="Linux优化"><a href="#Linux优化" class="headerlink" title="Linux优化"></a>Linux优化</h3><ul>
<li><a href="https://www.cnblogs.com/zengjin93/p/5569556.html">如何提高服务器并发处理能力</a></li>
<li><a href="http://wsfdl.com/openstack/2018/01/02/libvirt_cpu_mode.html">关于 CPU mode 选取的一些经验</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1615744">Linux 内核的 4 大 IO 调度算法</a></li>
<li><a href="https://www.cnblogs.com/gmpy/p/12852449.html">如何选择IO调度器</a></li>
<li>[<a href="https://www.cnblogs.com/bamanzi/p/linux-disk-io-scheduler.html">Linux性能调优] 磁盘I/O队列调度策略</a></li>
<li><a href="https://www.cnblogs.com/qmfsun/p/6116883.html">linux磁盘读写性能优化</a></li>
<li><a href="https://www.cnblogs.com/wuhuiyuan/p/4648725.html">linux系统数据落盘之细节</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>性能优化</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack使用：镜像制作</title>
    <url>/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="CentOS镜像"><a href="#CentOS镜像" class="headerlink" title="CentOS镜像"></a>CentOS镜像</h2><h3 id="资源下载地址"><a href="#资源下载地址" class="headerlink" title="资源下载地址"></a>资源下载地址</h3><ul>
<li>系统镜像：<a href="https://www.centos.org/download/">https://www.centos.org/download/</a></li>
</ul>
<h3 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h3><h4 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 宿主机</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基础环境准备</span></span><br><span class="line">yum install -y qemu-kvm qemu-img virt-manager virt-install libvirt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kvm内核支持（宿主机为虚机时需要开启CPU嵌套虚拟化）</span></span><br><span class="line">lsmod | grep kvm</span><br></pre></td></tr></table></figure>



<h4 id="命令方式创建虚机"><a href="#命令方式创建虚机" class="headerlink" title="命令方式创建虚机"></a>命令方式创建虚机</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 基础准备</span></span><br><span class="line">mkdir -p /data/kvm/disk</span><br><span class="line">mkdir -p /data/kvm/image</span><br><span class="line"></span><br><span class="line">NAME=centos</span><br><span class="line">DISK=/data/kvm/disk/centos.qcow2</span><br><span class="line">CDROM=/data/kvm/image/CentOS-7-x86_64-Minimal-7.8.2003.iso</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建空镜像文件</span></span><br><span class="line">qemu-img create -f qcow2 /data/kvm/image/centos.qcow2 10G </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建虚机</span></span><br><span class="line">virt-install --virt-type kvm --name $NAME \</span><br><span class="line">  --ram 1024 --disk $DISK,format=qcow2 \</span><br><span class="line">  --network network=default --graphics vnc,listen=0.0.0.0 \</span><br><span class="line">  --noautoconsole --os-type=linux --os-variant=rhel7 --location=$CDROM </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看vnc端口</span></span><br><span class="line">virsh vncdisplay $NAME</span><br><span class="line"><span class="meta">#</span><span class="bash"> :0     0代表是5900，大于0的从5900之后递增。例如，显示：1，则代表5901</span></span><br></pre></td></tr></table></figure>



<h4 id="图形方式创建虚机"><a href="#图形方式创建虚机" class="headerlink" title="图形方式创建虚机"></a>图形方式创建虚机</h4><p>参考下文章节：windows镜像 - 图形方式创建虚机。需注意以下几点：</p>
<ul>
<li>CPU Model 选择 <code>Hypervisor Default</code></li>
<li>Disk、NIC 类型均选择 <code>VirtIO</code></li>
<li>Display 选择 <code>VNC</code></li>
<li>Video 选择 <code>Cirrus</code></li>
</ul>
<h4 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 虚机</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 配置192.168.122.0/24网段ip，即可通过宿主机的virbr0网桥，与宿主机通讯</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 外网通讯，需配置网关：192.168.122.1，DNS：114.114.114.114</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ACPID</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果虚机安装系统重启没有成功，可以在宿主机执行virsh reboot centos命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 再连接，安装acpi。acpid服务是用于可以让hypervisior可以重启或关闭虚拟机</span></span><br><span class="line">yum install -y acpid</span><br><span class="line">systemctl start acpid.service</span><br><span class="line">systemctl enable acpid.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> SSH</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改/etc/ssh/sshd_config如下参数后，重启sshd服务：</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line">PasswordAuthentication yes</span><br><span class="line">UseDNS no</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> qemu guest agent</span></span><br><span class="line">yum -y install qemu-guest-agent</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">systemctl status firewalld</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 优化Linux句柄数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/security/limits.conf 文件尾加</span></span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535 </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭zeroconf route</span></span><br><span class="line">echo &quot;NOZEROCONF=yes&quot; &gt;&gt; /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置控制台（可选）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果希望在仪表盘界面查看nova控制台的日志，需要做以下配置：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/default/grub，修改GRUB_CMDLINE_LINUX为以下内容</span></span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto console=tty0 console=ttyS0,115200n8&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新grub（若更新grub后执行）</span></span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清除缓存</span></span><br><span class="line">yum clean all &amp;&amp; rm -rf /var/cache/yum</span><br></pre></td></tr></table></figure>



<h4 id="配置Cloud-init"><a href="#配置Cloud-init" class="headerlink" title="配置Cloud-init"></a>配置Cloud-init</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装cloud-init相关工具</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - epel-release: yum源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - cloud-init: 云镜像初始化工具</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - cloud-utils-growpart: 支持虚拟机磁盘扩容</span></span><br><span class="line">yum install -y epel-release cloud-init cloud-utils-growpart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置cloud-init</span></span><br><span class="line">vi /etc/cloud/cloud.cfg</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 配置agent访问OpenStack数据源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在“/etc/cloud/cloud.cfg”最后一行添加如下内容，配置agent访问OpenStack数据源。</span></span><br><span class="line">datasource_list: [ OpenStack ]</span><br><span class="line">datasource:</span><br><span class="line">  OpenStack:</span><br><span class="line">    metadata_urls: [&#x27;http://169.254.169.254&#x27;]</span><br><span class="line">    max_wait: 120</span><br><span class="line">    timeout: 5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. （可选）在“/etc/cloud/cloud.cfg”中配置“apply_network_config”为“<span class="literal">false</span>”</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 对于使用Cloud-Init 18.3及以上版本的用户，需执行本操作。</span></span><br><span class="line">datasource_list: [ OpenStack ]</span><br><span class="line">datasource:</span><br><span class="line">  OpenStack:</span><br><span class="line">    metadata_urls: [&#x27;http://169.254.169.254&#x27;]</span><br><span class="line">    max_wait: 120</span><br><span class="line">    timeout: 5</span><br><span class="line">    apply_network_config: false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 设置开放root密码远程登录并开启root用户的ssh权限。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以CentOS 6.7系列操作系统为例，配置文件参数含义如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> “disable_root”字段为“1”表示为禁用，为“0”表示不禁用（部分OS的Cloud-Init配置使用“<span class="literal">true</span>”表示禁用，“<span class="literal">false</span>”表示不禁用）。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置“disable_root”值为“0”，“ssh_pwauth”为“1”，“lock_passwd”设置为“<span class="literal">false</span>”，“<span class="literal">false</span>”表示不锁住用户密码。</span></span><br><span class="line">users:</span><br><span class="line"> - name: root</span><br><span class="line">   lock_passwd: False</span><br><span class="line"></span><br><span class="line">disable_root: 0</span><br><span class="line">ssh_pwauth: 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 在配置文件“/etc/cloud/cloud.cfg”中禁用Cloud-Init接管网络。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当Cloud-Init版本等于或高于0.7.9版本时，在配置文件“/etc/cloud/cloud.cfg”中增加如下内容，禁用Cloud-Init接管网络。</span></span><br><span class="line">network:</span><br><span class="line">  config: disabled</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5. 防止启动云服务器时，系统长时间卡在“Waiting <span class="keyword">for</span> cloudResetPwdAgent”状态。</span></span><br><span class="line">manage_etc_hosts: localhost</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 6. 自动扩容vda2，并扩容至/目录</span></span><br><span class="line">growpart:</span><br><span class="line">  mode: auto</span><br><span class="line">  devices: [/dev/vda2]</span><br><span class="line">  ignore_growroot_disabled: false</span><br><span class="line">runcmd:</span><br><span class="line">  - [pvresize,/dev/vda2]</span><br><span class="line">  - [lvextend,-l,+100%FREE,/dev/mapper/centos-root]</span><br><span class="line">  - [xfs_growfs,/dev/mapper/centos-root]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 7. 检查Cloud-Init工具相关配置是否成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行以下命令，无错误发生，说明Cloud-Init配置成功。</span></span><br><span class="line">cloud-init init --local</span><br><span class="line"><span class="meta">#</span><span class="bash"> 正确安装的Cloud-Init会显示Cloud-Init的版本详细信息，并且无任何错误信息。</span></span><br></pre></td></tr></table></figure>



<h4 id="CentOS-官方镜像Cloud-init配置"><a href="#CentOS-官方镜像Cloud-init配置" class="headerlink" title="CentOS 官方镜像Cloud-init配置"></a>CentOS 官方镜像Cloud-init配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">users:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line"><span class="attr">disable_root:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">ssh_pwauth:</span>   <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mount_default_fields:</span> [<span class="string">~</span>, <span class="string">~</span>, <span class="string">&#x27;auto&#x27;</span>, <span class="string">&#x27;defaults,nofail,x-systemd.requires=cloud-init.service&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2&#x27;</span>]</span><br><span class="line"><span class="attr">resize_rootfs_tmp:</span> <span class="string">/dev</span></span><br><span class="line"><span class="attr">ssh_deletekeys:</span>   <span class="number">1</span></span><br><span class="line"><span class="attr">ssh_genkeytypes:</span>  <span class="string">~</span></span><br><span class="line"><span class="attr">syslog_fix_perms:</span> <span class="string">~</span></span><br><span class="line"><span class="attr">disable_vmware_customization:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cloud_init_modules:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">disk_setup</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">migrator</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">bootcmd</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">write-files</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">growpart</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">resizefs</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">set_hostname</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">update_hostname</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">update_etc_hosts</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">rsyslog</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">users-groups</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">ssh</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cloud_config_modules:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">mounts</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">locale</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">set-passwords</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">rh_subscription</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">yum-add-repo</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">package-update-upgrade-install</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">timezone</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">puppet</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">chef</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">salt-minion</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">mcollective</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">disable-ec2-metadata</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">runcmd</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cloud_final_modules:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">rightscale_userdata</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">scripts-per-once</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">scripts-per-boot</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">scripts-per-instance</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">scripts-user</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">ssh-authkey-fingerprints</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">keys-to-console</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">phone-home</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">final-message</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">power-state-change</span></span><br><span class="line"></span><br><span class="line"><span class="attr">system_info:</span></span><br><span class="line">  <span class="attr">default_user:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">centos</span></span><br><span class="line">    <span class="attr">lock_passwd:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">gecos:</span> <span class="string">Cloud</span> <span class="string">User</span></span><br><span class="line">    <span class="attr">groups:</span> [<span class="string">adm</span>, <span class="string">systemd-journal</span>]</span><br><span class="line">    <span class="attr">sudo:</span> [<span class="string">&quot;ALL=(ALL) NOPASSWD:ALL&quot;</span>]</span><br><span class="line">    <span class="attr">shell:</span> <span class="string">/bin/bash</span></span><br><span class="line">  <span class="attr">distro:</span> <span class="string">rhel</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="attr">cloud_dir:</span> <span class="string">/var/lib/cloud</span></span><br><span class="line">    <span class="attr">templates_dir:</span> <span class="string">/etc/cloud/templates</span></span><br><span class="line">  <span class="attr">ssh_svcname:</span> <span class="string">sshd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim:syntax=yaml</span></span><br></pre></td></tr></table></figure>



<h4 id="镜像清理"><a href="#镜像清理" class="headerlink" title="镜像清理"></a>镜像清理</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清理用户登录记录</span></span><br><span class="line">echo &gt; /var/log/wtmp</span><br><span class="line">echo &gt; /var/log/btmp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清理相应目录下的临时文件</span></span><br><span class="line">rm -rf /var/log/cloud-init*</span><br><span class="line">rm -rf /var/lib/cloud/*</span><br><span class="line">rm -rf /var/log/network-config.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行下面命令，清理残留配置信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - SUSE操作系统：查看“/etc/sysconfig/network/”文件夹下有哪些以“ifcfg”开头的文件，删除除了“ifcfg-lo及ifcfg.template”以外的以“ifcfg”开头的文件。</span></span><br><span class="line">查看文件命令：ll /etc/sysconfig/network/</span><br><span class="line">删除文件命令：rm -rf /etc/sysconfig/network/ifcfgxxx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> - RedHat/CentOS/Oracle/Euler操作系统：查看“/etc/sysconfig/network-scripts/”文件夹下有哪些以“ifcfg”开头的文件，删除除了“ifcfg-lo”以外的以“ifcfg”开头的文件。</span></span><br><span class="line">查看文件命令：ll /etc/sysconfig/network-scripts/</span><br><span class="line">删除文件命令：rm -rf /etc/sysconfig/network-scripts/ifcfgxxx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> - Ubuntu操作系统：</span></span><br><span class="line">rm -rf /etc/network/interfaces.d/50-cloud-init.cfg</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清除历史操作记录</span></span><br><span class="line">history -w;echo &gt; /root/.bash_history;history -c;history -c;history -c;</span><br></pre></td></tr></table></figure>



<h4 id="镜像压缩"><a href="#镜像压缩" class="headerlink" title="镜像压缩"></a>镜像压缩</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 宿主机</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line">qemu-img convert -c -O qcow2 mongodb_4.2.qcow2.bak mongodb_4.2_cloudimg.qcow2</span><br></pre></td></tr></table></figure>





<h2 id="Red-Hat镜像"><a href="#Red-Hat镜像" class="headerlink" title="Red Hat镜像"></a>Red Hat镜像</h2><h3 id="资源下载地址-1"><a href="#资源下载地址-1" class="headerlink" title="资源下载地址"></a>资源下载地址</h3><ul>
<li>系统镜像：<a href="https://pan.baidu.com/s/1TZ4Tesv1R6qkZ1CCQq9E9w">https://pan.baidu.com/s/1TZ4Tesv1R6qkZ1CCQq9E9w</a> ，提取码：6od3</li>
</ul>
<h3 id="制作镜像-1"><a href="#制作镜像-1" class="headerlink" title="制作镜像"></a>制作镜像</h3><h4 id="准备环境-1"><a href="#准备环境-1" class="headerlink" title="准备环境"></a>准备环境</h4><p>参考CentOS流程</p>
<h4 id="基础设置-1"><a href="#基础设置-1" class="headerlink" title="基础设置"></a>基础设置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 由于Red Hat官方源需要激活才可以使用，这里使用USTC的CentOS yum源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum repo内容从如下地址获取：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - base源：http://mirrors.ustc.edu.cn/<span class="built_in">help</span>/centos.html</span></span><br><span class="line">sed -i &#x27;s/$releasever/7/g&#x27; /etc/yum.repos.d/*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取CentOS RPM-GPG-KEY</span></span><br><span class="line">wget http://mirrors.ustc.edu.cn/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7</span><br><span class="line">rpm -import RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置主机名</span></span><br><span class="line">hostnamectl set-hostname rhel7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建默认登录用户</span></span><br><span class="line">useradd rhel</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ACPID</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果虚机安装系统重启没有成功，可以在宿主机执行virsh reboot centos命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 再连接，安装acpi。acpid服务是用于可以让hypervisior可以重启或关闭虚拟机</span></span><br><span class="line">yum install -y acpid</span><br><span class="line">systemctl start acpid.service</span><br><span class="line">systemctl enable acpid.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> SSH</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改/etc/ssh/sshd_config如下参数后，重启sshd服务：</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line">PasswordAuthentication yes</span><br><span class="line">UseDNS no</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> qemu guest agent</span></span><br><span class="line">yum -y install qemu-guest-agent</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许ttyS0登录系统（virsh console）</span></span><br><span class="line">echo &quot;ttyS0&quot; &gt;&gt; /etc/securetty</span><br><span class="line">grubby --update-kernel=ALL --args=&quot;console=ttyS0&quot;</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 优化Linux句柄数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/security/limits.conf 文件尾加</span></span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535 </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭zeroconf route</span></span><br><span class="line">echo &quot;NOZEROCONF=yes&quot; &gt;&gt; /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清除缓存</span></span><br><span class="line">yum clean all &amp;&amp; rm -rf /var/cache/yum</span><br></pre></td></tr></table></figure>



<h4 id="配置Cloud-init-1"><a href="#配置Cloud-init-1" class="headerlink" title="配置Cloud-init"></a>配置Cloud-init</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装cloud-init相关工具</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - epel-release: yum源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - cloud-init: 云镜像初始化工具</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - cloud-utils-growpart: 支持虚拟机磁盘扩容</span></span><br><span class="line">yum install -y epel-release cloud-init cloud-utils-growpart</span><br></pre></td></tr></table></figure>



<h4 id="镜像清理-1"><a href="#镜像清理-1" class="headerlink" title="镜像清理"></a>镜像清理</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清理用户登录记录</span></span><br><span class="line">echo &gt; /var/log/wtmp</span><br><span class="line">echo &gt; /var/log/btmp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清理相应目录下的临时文件</span></span><br><span class="line">rm -rf /var/log/cloud-init*</span><br><span class="line">rm -rf /var/lib/cloud/*</span><br><span class="line">rm -rf /var/log/network-config.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行下面命令，清理残留配置信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - SUSE操作系统：查看“/etc/sysconfig/network/”文件夹下有哪些以“ifcfg”开头的文件，删除除了“ifcfg-lo及ifcfg.template”以外的以“ifcfg”开头的文件。</span></span><br><span class="line">查看文件命令：ll /etc/sysconfig/network/</span><br><span class="line">删除文件命令：rm -rf /etc/sysconfig/network/ifcfgxxx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> - RedHat/CentOS/Oracle/Euler操作系统：查看“/etc/sysconfig/network-scripts/”文件夹下有哪些以“ifcfg”开头的文件，删除除了“ifcfg-lo”以外的以“ifcfg”开头的文件。</span></span><br><span class="line">查看文件命令：ll /etc/sysconfig/network-scripts/</span><br><span class="line">删除文件命令：rm -rf /etc/sysconfig/network-scripts/ifcfgxxx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> - Ubuntu操作系统：</span></span><br><span class="line">rm -rf /etc/network/interfaces.d/50-cloud-init.cfg</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清除历史操作记录</span></span><br><span class="line">history -w;echo &gt; /root/.bash_history;history -c;history -c;history -c;</span><br></pre></td></tr></table></figure>



<h4 id="镜像压缩-1"><a href="#镜像压缩-1" class="headerlink" title="镜像压缩"></a>镜像压缩</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 宿主机</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ----------------</span></span><br><span class="line">qemu-img convert -c -O qcow2 rhel7.9.qcow2 rhel-7-x86_64-GenericCloud-7.9.qcow2</span><br></pre></td></tr></table></figure>





<h2 id="Window镜像"><a href="#Window镜像" class="headerlink" title="Window镜像"></a>Window镜像</h2><h3 id="资源下载地址-2"><a href="#资源下载地址-2" class="headerlink" title="资源下载地址"></a>资源下载地址</h3><ul>
<li>系统镜像：<a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></li>
<li>virtio：<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/</a></li>
<li>cloudbase-init及其余工具包镜像：<ul>
<li>链接：<a href="https://pan.baidu.com/s/1vlChFy7JzJlx5UJSnGOg4A">https://pan.baidu.com/s/1vlChFy7JzJlx5UJSnGOg4A</a>  </li>
<li>提取码：tjcb</li>
</ul>
</li>
</ul>
<p>PS：新版本的virtio需要下载iso文件，内部驱动全面</p>
<h3 id="制作镜像-2"><a href="#制作镜像-2" class="headerlink" title="制作镜像"></a>制作镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 注意事项</span></span><br><span class="line">1. 创建虚机时，磁盘要尽可能的小，减小镜像的虚拟空间大小。</span><br></pre></td></tr></table></figure>



<h4 id="准备环境-2"><a href="#准备环境-2" class="headerlink" title="准备环境"></a>准备环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 基础环境准备</span></span><br><span class="line">yum install -y qemu-kvm qemu-img virt-manager virt-install libvirt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载所需文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 系统镜像：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - windows10 (cn_windows_10_business_editions_version_1903_updated_july_2019_x64_dvd_68b4eeaa.iso)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - windows server 2016 (cn_windows_server_2016_vl_x64_dvd_11636695.iso)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> virtio驱动：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - virtio-win-0.1.190.iso</span></span><br></pre></td></tr></table></figure>



<h4 id="命令方式创建虚机-1"><a href="#命令方式创建虚机-1" class="headerlink" title="命令方式创建虚机"></a>命令方式创建虚机</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建链接</span></span><br><span class="line">ln -sv /usr/libexec/qemu-kvm /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建磁盘</span></span><br><span class="line">qemu-img create -f qcow2 cn_windows_server_2016_vl_x64_cloud_11636695.qcow2 15G</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建虚机</span></span><br><span class="line">qemu-kvm -m 1024 -cdrom cn_windows_server_2016_vl_x64_dvd_11636695.iso -drive file=cn_windows_server_2016_vl_x64_dvd_11636695.qcow2,if=virtio,boot=on -fda virtio-win_amd64.vfd -boot d -nographic -vnc :3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> VNC连接虚机</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接方式：`&lt;server ip&gt;:3</span></span><br></pre></td></tr></table></figure>



<h4 id="图形方式创建虚机-1"><a href="#图形方式创建虚机-1" class="headerlink" title="图形方式创建虚机"></a>图形方式创建虚机</h4><ul>
<li><p>虚机规格：4c 8g 20G（磁盘要尽可能的小，以减小镜像的虚拟大小）</p>
</li>
<li><p>设备类型：VirtIO</p>
</li>
<li><p>Spice Server：VNC Server</p>
</li>
<li><p>Video：Cirrus</p>
</li>
<li><p>新增CDROM，挂载 <code>vfio.iso</code> 驱动</p>
</li>
<li><p>调整引导顺序，系统ISO的CDROM调整为第一</p>
</li>
<li><p>流程截图参考如下：</p>
</li>
</ul>
<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-1.png" alt="OpenStack使用：镜像制作" style="zoom: 67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-2.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-3.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-4.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-7.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-8.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-9.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-10.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-11.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/虚机创建-12.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">



<h4 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h4><p>需要注意以下两点：</p>
<ol>
<li>系统安装时，初始无法识别硬盘，需要加载安装存储驱动后，方可识别出存储盘。</li>
<li>系统安装完成后，部分设备驱动需要手动安装，如：网卡驱动。</li>
</ol>
<p>安装流程截图参考如下：</p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-1.png" alt="OpenStack使用：镜像制作"></p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-2.png" alt="OpenStack使用：镜像制作"></p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-3.png" alt="OpenStack使用：镜像制作"></p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-4.png" alt="OpenStack使用：镜像制作"></p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-5.png" alt="OpenStack使用：镜像制作"></p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-6.png" alt="OpenStack使用：镜像制作"></p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-7.png" alt="OpenStack使用：镜像制作"></p>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85-8.png" alt="OpenStack使用：镜像制作"></p>
<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows系统配置-1.png" alt="OpenStack使用：镜像制作" style="zoom: 67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows系统配置-2.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows系统配置-3.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows系统配置-4.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows系统配置-5.png" alt="OpenStack使用：镜像制作" style="zoom:67%;">



<h4 id="基础设置-2"><a href="#基础设置-2" class="headerlink" title="基础设置"></a>基础设置</h4><ul>
<li>关闭防火墙</li>
<li>开启远程桌面</li>
</ul>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE-6.png" alt="windows系统配置-6.png"></p>
<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/windows系统配置-7.png" alt="windows系统配置-7.png" style="zoom:50%;">



<h4 id="安装Cloudbase-init（1-1-2）"><a href="#安装Cloudbase-init（1-1-2）" class="headerlink" title="安装Cloudbase-init（1.1.2）"></a>安装Cloudbase-init（1.1.2）</h4><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/cloudbase-init-1.png" alt="cloudbase-init-1.png" style="zoom: 50%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/cloudbase-init-2.png" alt="cloudbase-init-2.png" style="zoom:50%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/cloudbase-init-3.png" alt="cloudbase-init-3.png" style="zoom:50%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/cloudbase-init-4.png" alt="cloudbase-init-4.png" style="zoom:50%;">

<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/cloudbase-init-5.png" alt="cloudbase-init-5.png" style="zoom: 50%;">



<h4 id="配置Cloudbase-init（1-1-2）"><a href="#配置Cloudbase-init（1-1-2）" class="headerlink" title="配置Cloudbase-init（1.1.2）"></a>配置Cloudbase-init（1.1.2）</h4><p> 修改 <code>C:\Program Files\Cloudbase Solutions\Cloudbase-Init\conf</code> 目录下的 <code>cloudbase-init.conf</code> 和 <code>cloudbase-init-unattend.conf</code> 配置文件</p>
<ol>
<li><p>在 <code>cloudbase-init.conf</code> 末尾添加如下字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">metadata_services&#x3D;cloudbaseinit.metadata.services.configdrive.ConfigDriveService,cloudbaseinit.metadata.services.httpservice.HttpService,cloudbaseinit.metadata.services.ec2service.EC2Service,cloudbaseinit.metadata.services.maasservice.MaaSHttpService</span><br><span class="line"></span><br><span class="line">plugins&#x3D;cloudbaseinit.plugins.common.mtu.MTUPlugin,cloudbaseinit.plugins.common.sethostname.SetHostNamePlugin,cloudbaseinit.plugins.windows.setuserpassword.SetUserPasswordPlugin</span><br><span class="line"></span><br><span class="line">allow_reboot&#x3D;false</span><br><span class="line">stop_service_on_exit&#x3D;false</span><br><span class="line">check_latest_version&#x3D;false</span><br></pre></td></tr></table></figure>
</li>
<li><p>在 <code>cloudbase-init.conf</code> 和 <code>cloudbase-init-unattend.conf</code> 中增加以下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 配置获取metadata的重试次数和间隔</span><br><span class="line">retry_count&#x3D;40</span><br><span class="line">retry_count_interval&#x3D;5</span><br><span class="line"></span><br><span class="line"># 不需要修改首次登录使用的密码时，可关闭此功能</span><br><span class="line">first_logon_behaviour&#x3D;no</span><br></pre></td></tr></table></figure>
</li>
<li><p>将 <code>cloudbase-init.conf</code> 和 <code>cloudbase-init-unattend.conf</code> 中plugins字段替换成以下配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cloudbaseinit.plugins.common.mtu.MTUPlugin, cloudbaseinit.plugins.windows.ntpclient.NTPClientPlugin, cloudbaseinit.plugins.common.sethostname.SetHostNamePlugin, cloudbaseinit.plugins.windows.createuser.CreateUserPlugin, cloudbaseinit.plugins.common.networkconfig.NetworkConfigPlugin, cloudbaseinit.plugins.windows.licensing.WindowsLicensingPlugin, cloudbaseinit.plugins.common.sshpublickeys.SetUserSSHPublicKeysPlugin, cloudbaseinit.plugins.windows.extendvolumes.ExtendVolumesPlugin, cloudbaseinit.plugins.common.userdata.UserDataPlugin, cloudbaseinit.plugins.common.setuserpassword.SetUserPasswordPlugin, cloudbaseinit.plugins.windows.winrmlistener.ConfigWinRMListenerPlugin, cloudbaseinit.plugins.windows.winrmcertificateauth.ConfigWinRMCertificateAuthPlugin, cloudbaseinit.plugins.common.localscripts.LocalScriptsPlugin</span><br><span class="line"></span><br><span class="line"># cloudbaseinit.plugins.common.setuserpassword.SetUserPasswordPlugin为密码注入插件</span><br><span class="line"># cloudbaseinit.plugins.windows.extendvolumes.ExtendVolumesPlugin为磁盘扩展插件</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改SAN策略为OnlineAll类型否则可能导致使用镜像创建云服务器时磁盘处于脱机状态。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查询服务器当前san策略：</span></span><br><span class="line">cmd命令行执行diskpart，执行san</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果SAN策略为OnlineAll，请执行<span class="built_in">exit</span>命令退出DiskPart</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行以下命令修改云服务器SAN策略为OnlineAll。</span></span><br><span class="line">san policy=onlineall</span><br></pre></td></tr></table></figure>




</li>
</ol>
<h4 id="安装Guest-tools"><a href="#安装Guest-tools" class="headerlink" title="安装Guest tools"></a>安装Guest tools</h4><ol>
<li>安装Virtio-win-guest-tools</li>
</ol>
<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/guest-tools-1.png" alt="guest-tools-1" style="zoom: 50%;">

<ol start="2">
<li>安装完成后查看进程QEMU Guest Agent服务已经启动</li>
</ol>
<img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/guest-tools-2.png" alt="guest-tools-2" style="zoom: 50%;">



<h4 id="执行sysprep"><a href="#执行sysprep" class="headerlink" title="执行sysprep"></a>执行sysprep</h4><ol>
<li><p>进入Cloudbase-Init工具安装路径。</p>
<p>以Cloudbase-Init工具安装在“C:\Program Files\Cloudbase Solutions\”目录下为例。请切换至C盘根目录下，执行以下命令，进入安装目录。</p>
<p><code>cd C:\Program Files\Cloudbase Solutions\Cloudbase-Init\conf</code></p>
</li>
<li><p>执行以下命令，对Windows系统进行封装。</p>
<p><code>C:\Windows\System32\sysprep\sysprep.exe /generalize /oobe /unattend:Unattend.xml</code></p>
<blockquote>
<p><strong>注意：</strong></p>
<ul>
<li>请务必在执行该命令时，包含“/unattend:Unattend.xml”，否则您当前云服务器的用户名密码等重要配置信息会被重置，后续使用该Windows私有镜像创建的云服务器启动后仍然需要手动执行操作系统设置。</li>
<li>执行完该命令后，云服务器会自动关机。请在关机后使用该云服务器创建镜像，可以保证后续使用该镜像创建的云服务器SID唯一。如果重新启动已经执行过Sysprep操作的Windows云服务器，则执行的Sysprep操作仅对当前云服务器生效，创建镜像前需要重新执行Sysprep操作。</li>
<li>对于Windows Server 2012以及Windows Server 2012 R2操作系统，当云服务器执行完Sysprep操作后，云服务器的Administrator帐号密码会被清除，请您登录云服务器后重新手动设置Administrator帐号的密码，此时在管理控制台界面中设置的云服务器密码将无效，请您妥善保管重新设置的密码。</li>
<li>使用的Windows操作系统需要采用域帐号登录时，请务必在创建私有镜像前执行Sysprep操作。执行Sysprep操作带来的影响请参考“<a href="https://support.huaweicloud.com/ims_faq/ims_faq_0024.html">Windows操作系统制作私有镜像为什么要执行Sysprep操作？</a>”。</li>
<li>Windows云服务器中的Cloudbase-Init帐户为Cloudbase-Init代理程序的内置帐户，用于云服务器启动的时候获取元数据并执行相关配置。如果用户修改、删除此帐户或者卸载Cloudbase-Init代理程序会导致由此云服务器创建的Windows私有镜像所生成新的云服务器初始化的自定义信息注入失败。因此，不建议修改或删除Cloudbase-Init帐户。</li>
</ul>
</blockquote>
</li>
</ol>
<p><img src="/2020/11/09/OpenStack%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C/sysprep-1.png" alt="sysprep-1.png"></p>
<h4 id="镜像压缩-2"><a href="#镜像压缩-2" class="headerlink" title="镜像压缩"></a>镜像压缩</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">qemu-img convert -c -O qcow2 winserver2016.qcow2 cn_windows_server_2016_vl_x64.qcow2</span><br></pre></td></tr></table></figure>



<h4 id="镜像上传"><a href="#镜像上传" class="headerlink" title="镜像上传"></a>镜像上传</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 镜像image元数据已经设置hw_qemu_guest_agent为yes，并且QEMU Guest Agent服务正在云主机中运行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 镜像image元数据设置了os_admin_user。例如，“Administrator”，如果未设置，则nova可能把一个windows guest的管理员误认为是root</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. libvirt版本不低于1.2.16</span></span><br><span class="line">openstack image create --disk-format qcow2 --public \</span><br><span class="line">  --property hw_qemu_guest_agent=yes \</span><br><span class="line">  --property os_admin_user=Administrator \</span><br><span class="line">  --file /root/cn_windows_server_2016_vl_x64.qcow2 windows2016</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://cloudinit.readthedocs.io/en/latest/topics/modules.html">cloud-init官方文档</a></li>
<li><a href="https://www.liangzl.com/get-article-detail-221356.html">制作openstack镜像（qcow2格式的win10系统）</a></li>
<li><a href="https://www.cnblogs.com/blog-lhong/p/11742495.html">制作OpenStack centos7镜像</a></li>
<li><a href="https://blog.csdn.net/cuigelasi/article/details/73291566">cloud-init制作centos7镜像</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27664869">cloud-init介绍及源码解读</a></li>
<li><a href="https://www.cnblogs.com/tcicy/p/7790956.html">OpenStack kvm win7镜像制作</a></li>
<li><a href="https://blog.csdn.net/qq_20154221/article/details/51586537">制作OpenStack镜像win7.qcow2（centos/ubuntu/win镜像分享）</a></li>
<li><a href="https://blog.csdn.net/wylfengyujiancheng/article/details/50468173">制作OpenStack Windows Server 2012镜像</a></li>
<li><a href="https://blog.csdn.net/qq_37242520/article/details/106421730">云服务器cloud-init初始化工具的使用与配置</a></li>
<li><a href="https://www.cnblogs.com/blog-lhong/p/11858396.html">cloud-init配置文件 系统分区 lvm自动扩容</a></li>
<li><a href="https://cloudbase.it/cloudbase-init/">cloudbase-init官网</a></li>
<li><a href="https://cloudbase-init.readthedocs.io/en/latest/">cloudbase-init官方文档</a></li>
<li><a href="https://www.xiexianbin.cn/openstack/2017-02-25-cloudbase-init/index.html">cloudbase-init 安装使用与配置</a></li>
<li><a href="https://www.cnblogs.com/gushiren/p/9561536.html">使用cloudbase-init初始化windows虚拟机</a></li>
<li><a href="https://cloud.tencent.com/document/product/213/19670">腾讯云：Cloud-Init 和 Cloudbase-Init 问题</a></li>
<li><a href="https://support.huaweicloud.com/usermanual-ims/ims_01_0403.html">华为云：执行Sysprep</a></li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>镜像制作</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：Curl接口调试</title>
    <url>/2020/12/14/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACurl%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><blockquote>
<h3 id="keystone"><a href="#keystone" class="headerlink" title="keystone"></a>keystone</h3><p>OpenStack 的 Keystone V3 中引入了 Domain 的概念</p>
<h3 id="Domain，project，user，role，token-的概念和关系"><a href="#Domain，project，user，role，token-的概念和关系" class="headerlink" title="Domain，project，user，role，token 的概念和关系"></a>Domain，project，user，role，token 的概念和关系</h3><p>简单来说，</p>
<ul>
<li>Domain - 表示 project 和 user 的集合，在公有云或者私有云中常常表示一个客户</li>
<li>Group - 一个domain 中的部分用户的集合</li>
<li>Project - IT基础设施资源的集合，比如虚机，卷，镜像等</li>
<li>Role - 角色，表示一个 user 对一个 project resource 的权限</li>
<li>Token - 一个 user 对于某个目标（project 或者 domain）的一个有限时间段内的身份令牌</li>
</ul>
<p>它们之间的关系用一个不完整的图来表示：</p>
<p><img src="/2020/12/14/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACurl%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95/%E8%B5%84%E6%BA%90%E5%85%B3%E7%B3%BB.jpg" alt="资源关系"></p>
<p>说明：</p>
<ul>
<li>Domain 可以认为是 project，user，group 的 namespace。 一个 domain 内，这些元素的名称不可以重复，但是在两个不同的domain内，它们的名称可以重复。因此，在确定这些元素时，需要同时使用它们的名称和它们的 domain 的 id 或者 name。</li>
<li>Group 是一个 domain 部分 user 的集合，其目的是为了方便分配 role。给一个 group 分配 role，结果会给 group 内的所有 users 分配这个 role。</li>
<li>Role 是全局（global）的，因此在一个 keystone 管辖范围内其名称必须唯一。role 的名称没有意义，其意义在于 policy.json 文件根据 role 的名称所指定的允许进行的操作。</li>
<li>简单地，role 可以只有 admin 和 member 两个，前者表示管理员，后者表示普通用户。但是，结合 domain 和 project 的限定，admin 可以分为 cloud admin，domain admin 和 project admin。</li>
<li>policy.json 文件中定义了 role 对某种类型的资源所能进行的操作，比如允许 cloud admin 创建 domain，允许所有用户创建卷等</li>
<li>project 是资源的集合，其中有一类特殊的project 是 admin project。通过指定 admin_project_domain_name 和 admin_project_name 来确定一个 admin project，然后该project 中的 admin 用户即是 cloud admin。</li>
<li>Token 具有 scope 的概念，分为 unscoped token，domain-scoped token 和 project-scoped token。下文有说明。</li>
</ul>
<h3 id="token"><a href="#token" class="headerlink" title="token"></a>token</h3><p>token即令牌，身份的凭证。在整个openstack项目中服务与服务之间的通信都需要token来进行身份认证，我们来举个例子：</p>
<p><img src="/2020/12/14/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ACurl%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95/%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B.jpg" alt="请求流程"></p>
<p>如上图所示，一个用户需要创建一台虚拟机，用户首先要登入之后先拿到一个project_scope token 这个token包含了用户具有的角色以及服务列表，用户拿着这个令牌去请求nova服务，nova首先会去keystone认证该token是否有效，之后会向glance发送获取镜像的请求，glance接收请求后也会向之前的步骤一样去keystone认证token有效性，最终返回镜像给nova，nova再用镜像去给用户创建虚拟机。<br> 另外需要说明的是token中包含用户所拥有的角色，nova和其他服务还会根据token中的role来判断用户是否有操作权限。</p>
<h3 id="token类型"><a href="#token类型" class="headerlink" title="token类型"></a>token类型</h3><h4 id="unscope-token"><a href="#unscope-token" class="headerlink" title="unscope token"></a>unscope token</h4><p>示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;token&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;issued_at&quot;</span>: <span class="string">&quot;2016-11-30T03:50:49.277102Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;audit_ids&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;AbSBE-XmTc-gacd4cxrZAQ&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;methods&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;password&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;expires_at&quot;</span>: <span class="string">&quot;2016-12-01T03:50:49.277079Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;user&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Default&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fb7cdca584894c7ca3faa7388ee3a98f&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上所示为unscope token其中只包含了用户基本信息，以及创建／过期时间等基本信息。</p>
<h4 id="scope-token"><a href="#scope-token" class="headerlink" title="scope token"></a>scope token</h4><p>在keystone中scope token主要有以下几种类型：</p>
<ul>
<li><p>project-scoped token:该类型token表示用户对具体项目的访问权限，token信息主要包括用户可访问的服务目录、拥有的权限、以及项目信息。</p>
</li>
<li><p>domain-scoped token：该类型token表示用户在域范围具有的权限，例如如果用户对域内具有管理员权限，则该用户就能管理域内的所有项目以及用户。跟project-scoped token不同的是project-scoped token包含了可访问项目信息，而domain-scoped token则包含了具有操作权限的域信息。</p>
</li>
<li><p>trust-scoped token:当truster授予trustee一定的权限后，trustee可以使用该类型token来操作truster资源，该类型token信息包括truster的项目／域信息以及一系列权限，服务目录。</p>
<p> 示例：</p>
</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;token&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;methods&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;password&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;roles&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;eaee0b95f3dc4e2ca6476a41c2596de5&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;expires_at&quot;</span>: <span class="string">&quot;2016-12-01T03:15:43.057915Z&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;project&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Default&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;catalog&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9696&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;74f1c9d76070422cb6839a9090b2801e&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9696&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b7f77180541142d48c70a6bf63547ee2&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9696&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fa44e5f5251a4cec8fe1044144d83a77&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;network&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;40c01df9e89a4d33bd97c140c0397c79&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;neutron&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8004/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1986cb45bda74e779df52caf5445b61b&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8004/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;c8626b60ef2a40a1ab30f97ac05e5052&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8004/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;effb9bba0ec34345b1f16f6616d41024&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;orchestration&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4faf0d0323a1433b934008e2f371257f&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;heat&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3f6e61cceaea422fb884865fc8b93a15&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4ed6326d65a94401b5e1280134fd2d48&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;96e02eb9ebe345919ddac114e735c9af&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;volumev2&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6b04d7f69edb4878910e5577e7203d99&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;cinderv2&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v3/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;05c90aa6d91a4dd0a3b86b5ae7a3ec9f&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v3/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;26d499a887874945b4296a153c5ffa36&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v3/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6083327dec414ff7aee2578dc07be32a&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;volumev3&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;7ab5a6aa19d349e3b6f51d019708640b&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;cinderv3&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:5000/v3&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;104f35e918ef4bc6b585680a1068759f&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:5000/v3&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1ae18bb03417491789758cb909f4e5a7&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:35357/v3&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;81b5b166c3e44f569934032c030157f6&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;identity&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;94390d15efa54fb2b56f9c60eca92364&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;keystone&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8000/v1&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;59ce20e207ee442e8d34cc791a5074c3&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8000/v1&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;c02bc940384a49cabaf7e14be1862f66&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8000/v1&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;cdaa6cedb47b4b26a3ffecfb208b8740&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cloudformation&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;9952ffb22c6b4091be0e8d7104a9dc47&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;heat-cfn&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;12ff0fbbfd4041dfa5baa2f398bc1743&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;19b6c07105b049eaa6001a3236591a0a&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8776/v1/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;f968d4484e7648c888a1ee69e58f46f7&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;volume&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;aa9c81d5176f46238772fbd48d465a6e&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;cinder&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8774/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;284c6e27ad36425abdb25ae4175dd3ea&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8774/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;914f3f40ce8448df8817373779492abe&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:8774/v2/ed0596a674d84591940d6e3be10661a8&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b002db37826d47008149b5dd26ced405&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;compute&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b606deae3b5042a3866fcca5abe203e9&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;nova&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;endpoints&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9292&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;internal&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;01e9dae6fd7246c0bc101abb112fcdb8&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9292&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;36013e038ffb473c9a377fffd63a86db&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">&quot;region_id&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://10.0.84.52:9292&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;RegionOne&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;interface&quot;</span>: <span class="string">&quot;public&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;e6f97873b7734743ba6eed52b789955b&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;image&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;e2d274d71113415399f3e24e187d165d&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;glance&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;user&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Default&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fb7cdca584894c7ca3faa7388ee3a98f&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;audit_ids&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;XgeY0-0cTbuvSuu58WlHLA&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;issued_at&quot;</span>: <span class="string">&quot;2016-11-30T03:15:43.057953Z&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>作者：爱吃土豆的程序猿<br>链接：<a href="https://www.jianshu.com/p/a8b6504fc3c6">https://www.jianshu.com/p/a8b6504fc3c6</a></p>
</blockquote>
<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><h3 id="1-查看endpoint"><a href="#1-查看endpoint" class="headerlink" title="1. 查看endpoint"></a>1. 查看endpoint</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> openstack endpoint list</span></span><br><span class="line"></span><br><span class="line">+----------------------------------+-----------+--------------+----------------+---------+-----------+---------------------------------------------+</span><br><span class="line">| ID                               | Region    | Service Name | Service Type   | Enabled | Interface | URL                                         |</span><br><span class="line">+----------------------------------+-----------+--------------+----------------+---------+-----------+---------------------------------------------+</span><br><span class="line">| 0293f08fe3374b65a80bf0bf7c12a6ab | RegionOne | placement    | placement      | True    | admin     | http://111.111.111.80:8780                  |</span><br><span class="line">| 0c43ec8a11414c56ae8aed723bd232e8 | RegionOne | glance       | image          | True    | public    | http://111.111.111.80:9292                  |</span><br><span class="line">| 1f58f929a59c4726a535e31cd634fddd | RegionOne | glance       | image          | True    | internal  | http://111.111.111.80:9292                  |</span><br><span class="line">| 2cdcbb0779624bf58a74e6912a9411fd | RegionOne | neutron      | network        | True    | admin     | http://111.111.111.80:9696                  |</span><br><span class="line">| 4c39935eaaab4af59a3cbd352e137e4b | RegionOne | neutron      | network        | True    | public    | http://111.111.111.80:9696                  |</span><br><span class="line">| 5bb8f8a16c764aa997a21a005a2608f6 | RegionOne | nova_legacy  | compute_legacy | True    | public    | http://111.111.111.80:8774/v2/%(tenant_id)s |</span><br><span class="line">| 64300c58965f41e3a1f6991c6215e06d | RegionOne | nova         | compute        | True    | public    | http://111.111.111.80:8774/v2.1             |</span><br><span class="line">| 6b3510cfbdfd4b08910d87020acd29d1 | RegionOne | cinderv3     | volumev3       | True    | admin     | http://111.111.111.80:8776/v3/%(tenant_id)s |</span><br><span class="line">| 81be77dbe60a4353952b3635b855a85c | RegionOne | nova         | compute        | True    | admin     | http://111.111.111.80:8774/v2.1             |</span><br><span class="line">| 87ae064fd3cc4234a42a55188fa237e0 | RegionOne | cinderv3     | volumev3       | True    | internal  | http://111.111.111.80:8776/v3/%(tenant_id)s |</span><br><span class="line">| 90bb8a42cf4d48b099c9aa21cb8e3cbd | RegionOne | keystone     | identity       | True    | internal  | http://111.111.111.80:5000                  |</span><br><span class="line">| 92a7a61523c7411abe9da4e2f4c1adeb | RegionOne | cinderv2     | volumev2       | True    | admin     | http://111.111.111.80:8776/v2/%(tenant_id)s |</span><br><span class="line">| 9576bf398d19446b9f7c392f4386a137 | RegionOne | nova_legacy  | compute_legacy | True    | internal  | http://111.111.111.80:8774/v2/%(tenant_id)s |</span><br><span class="line">| 967b8c2e6f7546dfaa194d38972e3e97 | RegionOne | glance       | image          | True    | admin     | http://111.111.111.80:9292                  |</span><br><span class="line">| 99aced6c046e41f49e29968ba0e7bb5d | RegionOne | keystone     | identity       | True    | public    | http://111.111.111.80:5000                  |</span><br><span class="line">| 9acbd8d95c334b6782d9e7ac41c2aafe | RegionOne | cinderv2     | volumev2       | True    | public    | http://111.111.111.80:8776/v2/%(tenant_id)s |</span><br><span class="line">| b66ba28ee6104e16aa6adf19f856d6d8 | RegionOne | cinderv2     | volumev2       | True    | internal  | http://111.111.111.80:8776/v2/%(tenant_id)s |</span><br><span class="line">| b9384f9957144960a7cdb25d11c3e5ec | RegionOne | placement    | placement      | True    | public    | http://111.111.111.80:8780                  |</span><br><span class="line">| bcac2a4bb14f40bcbf01356f8ed4f580 | RegionOne | nova         | compute        | True    | internal  | http://111.111.111.80:8774/v2.1             |</span><br><span class="line">| c8fd37d7ca7f484fb0318f5b8ebf1498 | RegionOne | keystone     | identity       | True    | admin     | http://111.111.111.80:35357                 |</span><br><span class="line">| c999b3341cfb4118ba9cd7b064d9d494 | RegionOne | nova_legacy  | compute_legacy | True    | admin     | http://111.111.111.80:8774/v2/%(tenant_id)s |</span><br><span class="line">| d9efed636a104a98a52b48984c63e8aa | RegionOne | placement    | placement      | True    | internal  | http://111.111.111.80:8780                  |</span><br><span class="line">| e927b87c681b488cb0607bc47cb7c8f7 | RegionOne | cinderv3     | volumev3       | True    | public    | http://111.111.111.80:8776/v3/%(tenant_id)s |</span><br><span class="line">| ee6cce1279b7455ebbb086c6576df1eb | RegionOne | neutron      | network        | True    | internal  | http://111.111.111.80:9696                  |</span><br><span class="line">+----------------------------------+-----------+--------------+----------------+---------+-----------+---------------------------------------------+</span><br></pre></td></tr></table></figure>



<h3 id="2-获取token"><a href="#2-获取token" class="headerlink" title="2. 获取token"></a>2. 获取token</h3><p><strong>Curl方式</strong></p>
<p>创建<code>token-request.json</code>文件，作为HTTP消息的内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;auth&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;identity&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;methods&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;password&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;password&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;user&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;default&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;scope&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;project&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;domain&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;default&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按照具体情况修改上面的json文件，向keystone请求token。<code>-si</code>是返回消息头。token信息位于消息头的<code>X-Subject-Token</code>字段</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># ipv4请求方式</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> curl -si -d @token-request.json -H <span class="string">&quot;Content-type: application/json&quot;</span> http://111.111.111.80:35357/v3/auth/tokens</span></span><br><span class="line"></span><br><span class="line">HTTP/1.1 201 CREATED</span><br><span class="line">Date: Mon, 14 Dec 2020 14:14:34 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Subject-Token: gAAAAABf13NKA1JVOP1pF6OYmtzgaiKXz17svZrXzsEX5_0klzwe9XPkHbxCn39Ri3y_2oglGHEAeWaKH1aycPENWJvPLGA63jk83fMBYwFFTpjvILcbjlKdDdG5hZwLGqdWR9VKYaEp07uIeGDJwQVFbf9tzt9x-uWytJeYyPJlORENLY6_6HQ</span><br><span class="line">Vary: X-Auth-Token</span><br><span class="line">x-openstack-request-id: req-15d5d205-6d39-4163-bc6d-7cb79d17696f</span><br><span class="line">Content-Length: 5472</span><br><span class="line">Content-Type: application/json</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># ipv6请求方式</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> curl -si -d @token-request.json -g -6 -H <span class="string">&quot;Content-type: application/json&quot;</span> http://[2001::10]:35357/v3/auth/tokens</span></span><br><span class="line"></span><br><span class="line">HTTP/1.1 201 CREATED</span><br><span class="line">Date: Tue, 29 Dec 2020 14:41:32 GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Subject-Token: gAAAAABf60AcwbQXdxSlYOfQrOgQ3mwvz88Yw-DKsGjAHKcY99hmJZ0sm3bBoixOc7QNtZOPxCVjSWRBcovly0Bo7WRrw3Z4DgL2qB-GC5FQoURngeIlI4DUcVqEJq_EF2bixQ6V6r2EJVweMEKVkJvWiAFKpjDKRd6TMMSTZ5qq-yBy0PePkUc</span><br><span class="line">Vary: X-Auth-Token</span><br><span class="line">x-openstack-request-id: req-f876b0e8-a3ba-4e22-b2c1-35fe4a5f9ed5</span><br><span class="line">Content-Length: 7216</span><br><span class="line">Content-Type: application/json</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>从上面可以看到<code>X-Subject-Token</code>，将其存放在USER_TOKEN的环境变量中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export USER_TOKEN=gAAAAABf13NKA1JVOP1pF6OYmtzgaiKXz17svZrXzsEX5_0klzwe9XPkHbxCn39Ri3y_2oglGHEAeWaKH1aycPENWJvPLGA63jk83fMBYwFFTpjvILcbjlKdDdG5hZwLGqdWR9VKYaEp07uIeGDJwQVFbf9tzt9x-uWytJeYyPJlORENLY6_6HQ</span><br></pre></td></tr></table></figure>



<p><strong>OpenStack CLI方式</strong></p>
<p>通过OpenStack CLI，获取token issue</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: ~ # openstack token issue</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Field      | Value                                                                                                                                                                                   |</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| expires    | 2021-02-09T09:25:46+0000                                                                                                                                                                |</span><br><span class="line">| id         | gAAAAABgIQOadJ2W2Ado2IOaLipGG9dSveGEB1Nsm-PjpLia3OtswKRDMyxGs1sJjtlvkycDy31gPB6u2voamNb68wJFNSi37fuoby9X2TwdeKbvxuKOE9_a4HRRdesg6vhD-myvp8cGeZQIsZWyal0I0CF9Q5FcH42CB5O0047lgaNk4pBEJkM |</span><br><span class="line">| project_id | a7663ef36a9244138efff3e374e09640                                                                                                                                                        |</span><br><span class="line">| user_id    | 8cb2659803334f88a7f6de2fe86b52dc                                                                                                                                                        |</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>将上述输出中的 <code>id</code> 对应的值，保存至环境变量USER_TOKEN中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export USER_TOKEN=gAAAAABgIQOadJ2W2Ado2IOaLipGG9dSveGEB1Nsm-PjpLia3OtswKRDMyxGs1sJjtlvkycDy31gPB6u2voamNb68wJFNSi37fuoby9X2TwdeKbvxuKOE9_a4HRRdesg6vhD-myvp8cGeZQIsZWyal0I0CF9Q5FcH42CB5O0047lgaNk4pBEJkM</span><br></pre></td></tr></table></figure>



<h3 id="3-访问OpenStack-API接口"><a href="#3-访问OpenStack-API接口" class="headerlink" title="3. 访问OpenStack API接口"></a>3. 访问OpenStack API接口</h3><p>OpenStack API地址使用<code>openstack endpoint list</code>中的对应地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">HOST=111.111.111.80</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> List images</span></span><br><span class="line">curl -H &quot;X-Auth-Token:$USER_TOKEN&quot; -H &quot;Content-type: application/json&quot; http://$HOST:9292/v2/images | python -m json.tool</span><br><span class="line"></span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  1633  100  1633    0     0   3019      0 --:--:-- --:--:-- --:--:--  3018</span><br><span class="line">&#123;</span><br><span class="line">    &quot;first&quot;: &quot;/v2/images&quot;,</span><br><span class="line">    &quot;images&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;checksum&quot;: &quot;7734eb3945297adc90ddc6cebe8bb082&quot;,</span><br><span class="line">            &quot;container_format&quot;: &quot;bare&quot;,</span><br><span class="line">            &quot;created_at&quot;: &quot;2020-12-14T14:17:36Z&quot;,</span><br><span class="line">            &quot;disk_format&quot;: &quot;qcow2&quot;,</span><br><span class="line">            &quot;file&quot;: &quot;/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12/file&quot;,</span><br><span class="line">            &quot;id&quot;: &quot;9defe6f1-397d-4d58-a91f-d247fcde5b12&quot;,</span><br><span class="line">            &quot;min_disk&quot;: 0,</span><br><span class="line">            &quot;min_ram&quot;: 0,</span><br><span class="line">            &quot;name&quot;: &quot;demo&quot;,</span><br><span class="line">            &quot;os_hash_algo&quot;: &quot;sha512&quot;,</span><br><span class="line">            &quot;os_hash_value&quot;: &quot;3958def70c03a9734c89de42466f54c7c172e9493d5649ead0b4fee8ba8c4604742f59724a5f74f321be1afcaf85a321d2f2e492539800cff51f1f9684d70c1e&quot;,</span><br><span class="line">            &quot;os_hidden&quot;: false,</span><br><span class="line">            &quot;owner&quot;: &quot;42c2cc9bb3854f0fb63a52973bf4acd8&quot;,</span><br><span class="line">            &quot;protected&quot;: false,</span><br><span class="line">            &quot;schema&quot;: &quot;/v2/schemas/image&quot;,</span><br><span class="line">            &quot;self&quot;: &quot;/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12&quot;,</span><br><span class="line">            &quot;size&quot;: 16344576,</span><br><span class="line">            &quot;status&quot;: &quot;active&quot;,</span><br><span class="line">            &quot;tags&quot;: [],</span><br><span class="line">            &quot;updated_at&quot;: &quot;2020-12-14T14:17:36Z&quot;,</span><br><span class="line">            &quot;virtual_size&quot;: null,</span><br><span class="line">            &quot;visibility&quot;: &quot;shared&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;schema&quot;: &quot;/v2/schemas/images&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Deactivate image</span></span><br><span class="line">curl -H &quot;X-Auth-Token:$USER_TOKEN&quot; -H &quot;Content-type: application/json&quot; -X POST http://$HOST:9292/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12/actions/deactivate | python -m json.tool</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Reactivate image</span></span><br><span class="line">curl -H &quot;X-Auth-Token:$USER_TOKEN&quot; -H &quot;Content-type: application/json&quot; -X POST http://$HOST:9292/v2/images/9defe6f1-397d-4d58-a91f-d247fcde5b12/actions/reactivate | python -m json.tool</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Upload image (complete)</span></span><br><span class="line">curl -i -X PUT -H &quot;Content-Type: application/octet-stream&quot; \</span><br><span class="line">  -H &quot;Content-Length: 2147483648&quot; \</span><br><span class="line">  -H &quot;X-Auth-Token: $USER_TOKEN&quot; \</span><br><span class="line">  --data-binary @testimg-2G.raw \</span><br><span class="line">  http://$HOST:9292/v2/images/af80ddf9-0077-4b64-a309-8ca10775e0be/file</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Upload image (breakpoint image)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Content-Length: &lt;截取后镜像大小&gt; </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --data-binary @&lt;截取后镜像文件路径&gt;</span></span><br><span class="line">curl -i -X PUT -H &quot;Content-Type: application/octet-stream&quot; \</span><br><span class="line">  -H &quot;Content-Length: 241238016&quot; \</span><br><span class="line">  -H &quot;X-Auth-Token: $USER_TOKEN&quot; \</span><br><span class="line">  --data-binary @break_point.qcow2 \</span><br><span class="line">  http://$HOST:9292/v2/images/792384b7-851a-4014-b566-b31387087dfc/file</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://www.jianshu.com/p/a8b6504fc3c6">通过curl访问openstack各服务</a></p>
</li>
<li><p><a href="https://docs.openstack.org/train/api/index.html">OpenStack Train API Reference Documentation</a></p>
</li>
<li><p><a href="https://docs.openstack.org/api-ref/image/v2/?expanded=">OpenStack API Documentation：Image Service API v2 (CURRENT)</a></p>
</li>
<li><p><a href="https://docs.openstack.org/api-ref/compute/?expanded=#delete-server">OpenStack API Documentation：Compute API</a></p>
</li>
<li><p><a href="https://docs.openstack.org/api-ref/block-storage/v3/index.html?expanded=#volume-type-access-types-action-types-os-volume-type-access">OpenStack API Documentation：Block Storage API V3 (CURRENT)</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Curl</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack部署：HTTPS</title>
    <url>/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/</url>
    <content><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p><strong>需求：</strong>需要为openstack所有服务更新为https方式访问</p>
<p><strong>方案：</strong>使用HAProxy进行负载均衡和https证书卸载，通过HAProxy frontend进行https证书验证，验证通过后，转发至backend的后端http server。openstack各服务之间，通过https进行访问，需要配置各个服务的CA证书，同时更新keystone的endpoint</p>
<p><img src="/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/%E8%AF%81%E4%B9%A6%E5%8D%B8%E8%BD%BD.png" alt="证书卸载"></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>系统：CentOS Linux release 7.7.1908 (Core)</li>
<li>OpenStack版本：Train</li>
<li>kolla-ansible版本：9.2.0</li>
<li>Docker版本：docker-ce-18.09.6-3.el7.x86_64</li>
<li>OpenStack部署方式：kolla-ansible部署（OpenStack服务运行在Docker上）</li>
<li>OpenStack部署规模：control节点1台，compute节点3台</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="TLS证书"><a href="#TLS证书" class="headerlink" title="TLS证书"></a>TLS证书</h3><p><strong>生成证书</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用kolla生成证书</span></span><br><span class="line">kolla-ansible certificates</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> openssl-kolla.cnf</span></span><br><span class="line">[req]</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">req_extensions = v3_req</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line">countryName = US</span><br><span class="line">stateOrProvinceName = NC</span><br><span class="line">localityName = RTP</span><br><span class="line">organizationalUnitName = kolla</span><br><span class="line">commonName = 111.111.111.80</span><br><span class="line"></span><br><span class="line">[v3_req]</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">IP.1 = 111.111.111.80</span><br></pre></td></tr></table></figure>



<p><strong>分发证书</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># haproxy</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy.pem &#x2F;etc&#x2F;kolla&#x2F;haproxy&#x2F;</span><br><span class="line"></span><br><span class="line"># glance</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;glance-api&#x2F;</span><br><span class="line"></span><br><span class="line"># cinder</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-api&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-backup&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-scheduler&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;cinder-volume&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;cinder-backup&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;cinder-backup&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;cinder-volume&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;cinder-volume&#x2F;</span><br><span class="line"></span><br><span class="line"># neutron</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-server&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-openvswitch-agent&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-metadata-agent&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-l3-agent&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;neutron-dhcp-agent&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;neutron-openvswitch-agent&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;neutron-openvswitch-agent&#x2F;</span><br><span class="line"></span><br><span class="line"># placement</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;placement-api&#x2F;</span><br><span class="line"></span><br><span class="line"># nova</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-api&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-api-bootstrap&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-cell-bootstrap&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-compute&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-conductor&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-novncproxy&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;nova-scheduler&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node02:&#x2F;etc&#x2F;kolla&#x2F;nova-compute&#x2F;</span><br><span class="line">scp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt node03:&#x2F;etc&#x2F;kolla&#x2F;nova-compute&#x2F;</span><br><span class="line"></span><br><span class="line"># horizon</span><br><span class="line">cp &#x2F;etc&#x2F;kolla&#x2F;certificates&#x2F;haproxy-ca.crt &#x2F;etc&#x2F;kolla&#x2F;horizon&#x2F;</span><br></pre></td></tr></table></figure>



<p><strong>admin-openrc.sh</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Clear any old environment that may conflict.</span></span><br><span class="line">for key in $( set | awk &#x27;&#123;FS=&quot;=&quot;&#125;  /^OS_/ &#123;print $1&#125;&#x27; ); do unset $key ; done</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_TENANT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=https://111.111.111.80:35357/v3</span><br><span class="line">export OS_CACERT=/etc/kolla/certificates/haproxy-ca.crt</span><br><span class="line">export OS_INTERFACE=internal</span><br><span class="line">export OS_ENDPOINT_TYPE=internalURL</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_REGION_NAME=RegionOne</span><br><span class="line">export OS_AUTH_PLUGIN=password</span><br></pre></td></tr></table></figure>



<h3 id="Keystone配置证书"><a href="#Keystone配置证书" class="headerlink" title="Keystone配置证书"></a>Keystone配置证书</h3><ol>
<li>使用http协议，先创建 <code>https endpoint</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne identity public https://111.111.111.80:5000</span><br><span class="line">openstack endpoint create --region RegionOne identity internal https://111.111.111.80:5000</span><br><span class="line">openstack endpoint create --region RegionOne identity admin https://111.111.111.80:35357</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>删除http endpoint</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果环境变量OS_INTERFACE使用的是internal，则删除掉internal http的endpoint之后，删除其他endpoint会报错，属于正常现象。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 原因：https尚未在haproxy上配置，请求https端口会报错</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决：需要执行第3步，更新haproxy。配置https证书验证后，可正常执行其余操作</span></span><br><span class="line">root@node01: kolla # openstack endpoint delete 9200b3fcad1e42e8a8d8277e8c7ba71c</span><br><span class="line">Failed to contact the endpoint at https://111.111.111.80:5000 for discovery. Fallback to using that endpoint as the base url.</span><br><span class="line">Failed to contact the endpoint at https://111.111.111.80:5000 for discovery. Fallback to using that endpoint as the base url.</span><br><span class="line">Failed to contact the endpoint at https://111.111.111.80:5000 for discovery. Fallback to using that endpoint as the base url.</span><br><span class="line">Failed to delete endpoint with ID &#x27;9200b3fcad1e42e8a8d8277e8c7ba71c&#x27;: SSL exception connecting to https://111.111.111.80:5000/endpoints?: HTTPSConnectionPool(host=&#x27;111.111.111.80&#x27;, port=5000): Max retries exceeded with url: /endpoints (Caused by SSLError(SSLError(1, u&#x27;[SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:618)&#x27;),))</span><br><span class="line">1 of 1 endpoints failed to delete.</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>更新haproxy中 <code>keystone.cfg</code> 配置，重启haproxy。此时keystone的https端口正常响应</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend keystone_internal_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:5000 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend keystone_internal_back</span><br><span class="line"></span><br><span class="line">backend keystone_internal_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:5000 check inter 2000 rise 2 fall 5</span><br><span class="line"></span><br><span class="line">frontend keystone_admin_front</span><br><span class="line">    mode http</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:35357 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend keystone_admin_back</span><br><span class="line"></span><br><span class="line">backend keystone_admin_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:35357 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>继续删除其余未删除的keystone http endpoint</li>
<li>更新其他组件endpoint协议，切换为https</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">openstack endpoint list | sed &#x27;1,3d&#x27; | sed &#x27;$d&#x27; &gt; /tmp/endpoint</span><br><span class="line"></span><br><span class="line">while read -r line</span><br><span class="line">do</span><br><span class="line">    echo $line</span><br><span class="line">    id=`echo $line | awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">    region=`echo $line | awk &#x27;&#123;print $4&#125;&#x27;`</span><br><span class="line">    service_name=`echo $line | awk &#x27;&#123;print $6&#125;&#x27;`</span><br><span class="line">    service_type=`echo $line | awk &#x27;&#123;print $8&#125;&#x27;`</span><br><span class="line">    interface=`echo $line | awk &#x27;&#123;print $12&#125;&#x27;`</span><br><span class="line">    url=`echo $line | awk &#x27;&#123;print $14&#125;&#x27;`</span><br><span class="line">    </span><br><span class="line">    if [ $(echo $url | awk -F : &#x27;&#123;print $1&#125;&#x27;) == &#x27;http&#x27; ]; then</span><br><span class="line">        openstack endpoint delete $id</span><br><span class="line">        openstack endpoint create --region $region \</span><br><span class="line">            $service_type $interface \</span><br><span class="line">            $(echo $url | sed &#x27;s/http/https/g&#x27;)</span><br><span class="line">    fi</span><br><span class="line">done &lt; /tmp/endpoint</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack endpoint list</span><br></pre></td></tr></table></figure>



<h3 id="Glance配置证书"><a href="#Glance配置证书" class="headerlink" title="Glance配置证书"></a>Glance配置证书</h3><ol>
<li>更新haproxy中 <code>glance-api.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend glance_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    timeout client 6h</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:9292 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend glance_api_back</span><br><span class="line"></span><br><span class="line">backend glance_api_back</span><br><span class="line">    mode http</span><br><span class="line">    timeout server 6h</span><br><span class="line">    server node01 111.111.111.81:9292 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新glance服务配置文件：<code>glance-api.conf</code>，重启glance服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = https://111.111.111.80:5000</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openstack image list</span><br></pre></td></tr></table></figure>



<h3 id="Cinder配置证书"><a href="#Cinder配置证书" class="headerlink" title="Cinder配置证书"></a>Cinder配置证书</h3><ol>
<li>更新haproxy中 <code>cinder-api.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend cinder_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8776 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend cinder_api_back</span><br><span class="line"></span><br><span class="line">backend cinder_api_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8776 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新服务配置文件：<code>cinder.conf</code> 。同步所有节点配置文件，重启cinder相关服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">glance_api_servers = https://111.111.111.80:9292</span><br><span class="line">glance_api_insecure = true</span><br><span class="line">glance_ca_certificates_file = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line"></span><br><span class="line">[nova]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = https://111.111.111.80:5000</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: kolla # openstack volume service list</span><br><span class="line">+------------------+--------------+------+---------+-------+----------------------------+</span><br><span class="line">| Binary           | Host         | Zone | Status  | State | Updated At                 |</span><br><span class="line">+------------------+--------------+------+---------+-------+----------------------------+</span><br><span class="line">| cinder-scheduler | node01       | nova | enabled | up    | 2021-01-18T06:13:08.000000 |</span><br><span class="line">| cinder-volume    | node01@lvm-1 | nova | enabled | up    | 2021-01-18T06:13:09.000000 |</span><br><span class="line">| cinder-volume    | node03@lvm-1 | nova | enabled | up    | 2021-01-18T06:13:11.000000 |</span><br><span class="line">| cinder-volume    | node02@lvm-1 | nova | enabled | up    | 2021-01-18T06:13:11.000000 |</span><br><span class="line">| cinder-backup    | node01       | nova | enabled | up    | 2021-01-18T06:13:17.000000 |</span><br><span class="line">| cinder-backup    | node02       | nova | enabled | up    | 2021-01-18T06:13:10.000000 |</span><br><span class="line">| cinder-backup    | node03       | nova | enabled | up    | 2021-01-18T06:13:10.000000 |</span><br><span class="line">+------------------+--------------+------+---------+-------+----------------------------+</span><br></pre></td></tr></table></figure>



<h3 id="Neutron配置证书"><a href="#Neutron配置证书" class="headerlink" title="Neutron配置证书"></a>Neutron配置证书</h3><ol>
<li>更新haproxy中 <code>neutron-server.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend neutron_server_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option http-tunnel</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:9696 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend neutron_server_back</span><br><span class="line"></span><br><span class="line">backend neutron_server_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:9696 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新neutron服务配置文件：<code>neutron.conf</code> 。同步所有节点配置文件，重启neutron相关服务</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[nova]</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri &#x3D; https:&#x2F;&#x2F;111.111.111.80:5000</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br><span class="line"></span><br><span class="line">[placement]</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: kolla # openstack network agent list</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class="line">| ID                                   | Agent Type         | Host   | Availability Zone | Alive | State | Binary                    |</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br><span class="line">| 07a53564-2518-4550-b222-e1d740e51772 | Open vSwitch agent | node01 | None              | :-)   | UP    | neutron-openvswitch-agent |</span><br><span class="line">| 07c00fbe-9da4-4747-9a60-5af739733eb3 | Open vSwitch agent | node03 | None              | :-)   | UP    | neutron-openvswitch-agent |</span><br><span class="line">| 0fd1203e-1fdc-4261-bf87-0a76b5883f5b | Metadata agent     | node01 | None              | :-)   | UP    | neutron-metadata-agent    |</span><br><span class="line">| 333408d8-3a49-4ae1-8251-e52f2a09da78 | Open vSwitch agent | node02 | None              | :-)   | UP    | neutron-openvswitch-agent |</span><br><span class="line">| 48c2a3d0-5818-4df2-8054-41befae51b44 | L3 agent           | node01 | nova              | :-)   | UP    | neutron-l3-agent          |</span><br><span class="line">| 4df37b6c-2a77-4f1f-8dad-a15e758955e9 | DHCP agent         | node01 | nova              | :-)   | UP    | neutron-dhcp-agent        |</span><br><span class="line">+--------------------------------------+--------------------+--------+-------------------+-------+-------+---------------------------+</span><br></pre></td></tr></table></figure>



<h3 id="Placement配置证书"><a href="#Placement配置证书" class="headerlink" title="Placement配置证书"></a>Placement配置证书</h3><ol>
<li>更新haproxy中 <code>placement-api.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend placement_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8780 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend placement_api_back</span><br><span class="line"></span><br><span class="line">backend placement_api_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8780 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新placement服务配置文件：<code>placement.conf</code> 。同步所有节点配置文件，重启placement相关服务</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri &#x3D; https:&#x2F;&#x2F;111.111.111.80:5000</span><br><span class="line">auth_url &#x3D; https:&#x2F;&#x2F;111.111.111.80:35357</span><br><span class="line">cafile &#x3D; &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy-ca.crt</span><br><span class="line">insecure &#x3D; true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置nova后，查看nova_compute日志，是否有如下报错：</span></span><br><span class="line">2021-01-18 02:28:39.196 7 WARNING keystoneauth.discover [req-a08df9fe-e10d-4836-b2cd-3fc922461ea3 - - - - -] Failed to contact the endpoint at https://111.111.111.80:8780 for discovery. Fallback to using that endpoint as the base url.: SSLError: SSL exception connecting to https://111.111.111.80:8780: HTTPSConnectionPool(host=&#x27;111.111.111.80&#x27;, port=8780): Max retries exceeded with url: / (Caused by SSLError(SSLError(&quot;bad handshake: Error([(&#x27;SSL routines&#x27;, &#x27;ssl3_get_record&#x27;, &#x27;wrong version number&#x27;)],)&quot;,),))</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看placement日志，有如下信息，200表示请求正常响应：</span></span><br><span class="line">111.111.111.82 - - [18/Jan/2021:02:30:59 -0500] &quot;GET / HTTP/1.1&quot; 200 136 2191 &quot;-&quot; &quot;nova-compute keystoneauth1/3.17.3 python-requests/2.22.0 CPython/2.7.5&quot;</span><br><span class="line">111.111.111.80 - - [18/Jan/2021:02:31:06 -0500] &quot;GET / HTTP/1.1&quot; 200 136 2366 &quot;-&quot; &quot;nova-compute keystoneauth1/3.17.3 python-requests/2.22.0 CPython/2.7.5&quot;</span><br><span class="line">111.111.111.83 - - [18/Jan/2021:02:32:01 -0500] &quot;GET / HTTP/1.1&quot; 200 136 4198 &quot;-&quot; &quot;nova-compute keystoneauth1/3.17.3 python-requests/2.22.0 CPython/2.7.5&quot;</span><br></pre></td></tr></table></figure>



<h3 id="Nova配置证书"><a href="#Nova配置证书" class="headerlink" title="Nova配置证书"></a>Nova配置证书</h3><ol>
<li>更新haproxy中 <code>nova-api.cfg</code>, <code>nova-novncproxy.cfg</code> 配置，重启haproxy</li>
</ol>
<p><strong>nova-api.cfg</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend nova_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8774 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend nova_api_back</span><br><span class="line"></span><br><span class="line">backend nova_api_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8774 check inter 2000 rise 2 fall 5</span><br><span class="line"></span><br><span class="line">frontend nova_metadata_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:8775 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend nova_metadata_back</span><br><span class="line"></span><br><span class="line">backend nova_metadata_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.81:8775 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<p><strong>nova-novncproxy.cfg</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend nova_novncproxy_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:6080 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend nova_novncproxy_back</span><br><span class="line"></span><br><span class="line">backend nova_novncproxy_back</span><br><span class="line">    mode http</span><br><span class="line">    timeout tunnel 1h</span><br><span class="line">    server node01 111.111.111.81:6080 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更新nova服务配置文件：<code>nova.conf</code> 。同步所有节点配置文件，重启nova相关服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[glance]</span><br><span class="line">api_servers = https://111.111.111.80:9292</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[cinder]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[neutron]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri = https://111.111.111.80:5000</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br><span class="line"></span><br><span class="line">[placement]</span><br><span class="line">auth_url = https://111.111.111.80:35357</span><br><span class="line">cafile = /var/lib/kolla/config_files/haproxy-ca.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@node01: kolla # openstack compute service list</span><br><span class="line">+----+----------------+--------+----------+---------+-------+----------------------------+</span><br><span class="line">| ID | Binary         | Host   | Zone     | Status  | State | Updated At                 |</span><br><span class="line">+----+----------------+--------+----------+---------+-------+----------------------------+</span><br><span class="line">| 10 | nova-scheduler | node01 | internal | enabled | up    | 2021-01-18T17:37:46.000000 |</span><br><span class="line">|  1 | nova-conductor | node01 | internal | enabled | up    | 2021-01-18T17:37:44.000000 |</span><br><span class="line">|  6 | nova-compute   | node01 | nova     | enabled | up    | 2021-01-18T17:37:52.000000 |</span><br><span class="line">|  7 | nova-compute   | node02 | nova     | enabled | up    | 2021-01-18T17:37:37.000000 |</span><br><span class="line">|  8 | nova-compute   | node03 | nova     | enabled | up    | 2021-01-18T17:37:51.000000 |</span><br><span class="line">+----+----------------+--------+----------+---------+-------+----------------------------+</span><br><span class="line">root@node01: kolla # openstack server create --image cirros --flavor m1.tiny --key-name mykey --network demo-net --boot-from-volume 1 demo</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>常见问题</li>
</ol>
<blockquote>
<p><strong>问题1：</strong>HostMappingNotFound: Host ‘node01’ is not mapped to any cell</p>
<p><strong>解决：</strong>nova_api pod中执行如下命令，重新发现node01<br>nova-manage cell_v2 discover_hosts –verbos</p>
</blockquote>
<h3 id="Horizon配置证书"><a href="#Horizon配置证书" class="headerlink" title="Horizon配置证书"></a>Horizon配置证书</h3><ol>
<li>更新haproxy中 <code>nova-api.cfg</code>, <code>nova-novncproxy.cfg</code> 配置，重启haproxy</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">frontend horizon_redirect_front</span><br><span class="line">    mode http</span><br><span class="line">    bind 111.111.111.80:80</span><br><span class="line">    redirect scheme https code 301 if !&#123; ssl_fc &#125;</span><br><span class="line"></span><br><span class="line">frontend horizon_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.80:443 ssl crt &#x2F;var&#x2F;lib&#x2F;kolla&#x2F;config_files&#x2F;haproxy.pem</span><br><span class="line">    default_backend horizon_back</span><br><span class="line"></span><br><span class="line">backend horizon_back</span><br><span class="line">    mode http</span><br><span class="line">    balance source</span><br><span class="line">    server node01 111.111.111.81:80 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更改horizon服务的配置文件：<code>local_settings</code>， 重启horizon、memcached服务</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Set SSL proxy settings:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Pass this header from the proxy after terminating the SSL,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and don<span class="string">&#x27;t forget to strip it from the client&#x27;</span>s request.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://docs.djangoproject.com/en/dev/ref/settings/<span class="comment">#secure-proxy-ssl-header</span></span></span><br><span class="line">SECURE_PROXY_SSL_HEADER = (&#x27;HTTP_X_FORWARDED_PROTO&#x27;, &#x27;https&#x27;)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> If Horizon is being served through SSL, <span class="keyword">then</span> uncomment the following two</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> settings to better secure the cookies from security exploits</span></span><br><span class="line">CSRF_COOKIE_SECURE = True</span><br><span class="line">SESSION_COOKIE_SECURE = True</span><br><span class="line"></span><br><span class="line">OPENSTACK_KEYSTONE_URL = &quot;https://111.111.111.80:5000/v3&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Disable SSL certificate checks <span class="keyword">in</span> the OpenStack clients (useful <span class="keyword">for</span> self-signed certificates).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自签名证书，需要设置为True，不验证SSL</span></span><br><span class="line">OPENSTACK_SSL_NO_VERIFY = True</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> When <span class="built_in">unset</span> or <span class="built_in">set</span> to None the default CA certificate on the system is used <span class="keyword">for</span> SSL verification.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> When <span class="built_in">set</span> with the path to a custom CA certificate file, this overrides use of the default system CA certificate. This custom certificate is used to verify all connections to openstack services when making API calls.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自签名证书，不需要设置此项</span></span><br><span class="line">OPENSTACK_SSL_CACERT = &#x27;/var/lib/kolla/config_files/haproxy-ca.crt&#x27;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>验证</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 访问vip:80端口，自动跳转至https 443端口</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> horizon可正常登录，界面功能正常</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>常见问题</li>
</ol>
<blockquote>
<p><strong>问题1</strong>：horizon登录后，界面显示验证错误，后端haproxy出现如下报错：<br>{“Payload”:”Jan 19 11:01:56 haproxy[33]: 111.111.111.80:60552 [19/Jan/2021:11:01:56.143] <strong>keystone_internal_front/1: SSL handshake failure</strong>“,”log_level”:”info”,”Hostname”:”node01”,”programname”:”haproxy”}</p>
<p>期望结果：{“Payload”:”Jan 19 03:06:58 haproxy[32]: 111.111.111.80:53822 [19/Jan/2021:03:06:58.236] keystone_internal_front~ <strong>keystone_internal_back/node01</strong> 3/0/0/10/13 300 538 – —- 64/1/0/1/0 0/0 &quot;GET / HTTP/1.1&quot;“,”log_level”:”info”,”Hostname”:”node01”,”programname”:”haproxy”}</p>
<p><strong>原因：</strong>horizon请求后端接口时，使用的证书验证存在异常，未通过keystone_internal_front的SSL验证，无法转到keystone后端server服务</p>
<p><strong>解决：</strong>自签名证书，SSL验证存在异常。需要Disable SSL certificate checks in the OpenStack clients。设置 <code>local_settings</code> 配置中的 <code>OPENSTACK_SSL_NO_VERIFY = True</code></p>
<p><strong>问题2：</strong>界面显示：无法与keystone服务终端建立连接。</p>
<p><strong>解决：</strong>检查 <code>local_settings</code> 配置中的 <code>OPENSTACK_KEYSTONE_URL</code> 是否切换为https</p>
</blockquote>
<h3 id="参考脚本"><a href="#参考脚本" class="headerlink" title="参考脚本"></a>参考脚本</h3><h4 id="单节点更新配置文件"><a href="#单节点更新配置文件" class="headerlink" title="单节点更新配置文件"></a>单节点更新配置文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">module=&#x27;cinder&#x27;</span><br><span class="line">module_config=&#x27;cinder-api/cinder.conf&#x27;</span><br><span class="line">config_root_dir=&#x27;/etc/kolla&#x27;</span><br><span class="line"></span><br><span class="line">cd $config_root_dir</span><br><span class="line">dir_lists=`ls | grep $module`</span><br><span class="line"></span><br><span class="line">for dir in $dir_lists</span><br><span class="line">do</span><br><span class="line">	if [ $dir != $(echo $module_config | awk -F &#x27;/&#x27; &#x27;&#123;print $1&#125;&#x27;) ]; then</span><br><span class="line">		\cp $module_config $dir</span><br><span class="line">	fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>



<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><p><a href="https://docs.openstack.org/horizon/latest/configuration/settings.html#openstack-ssl-cacert">OpenStack Configuration Guide: horizon 19.0.1.dev25 - Settings Reference</a></p>
</li>
<li><p><a href="https://docs.openstack.org/security-guide/secure-communication.html">OpenStack Documentation: Secure communication</a></p>
</li>
<li><p><a href="https://docs.openstack.org/kolla-ansible/train/admin/advanced-configuration.html#tls-configuration">OpenStack Documentation: Kolla-ansible 9.2.1.dev132 - Advanced Configuration</a></p>
</li>
<li><p><a href="https://docs.openstack.org/kolla-ansible/latest/admin/tls.html">OpenStack Documentation: Kolla-ansible 11.1.0 dev101 - TLS</a></p>
</li>
<li><p><a href="https://docs.djangoproject.com/en/3.1/">Django Documentation</a></p>
</li>
<li><p><a href="https://blog.csdn.net/zhongbeida_xue/article/details/101017148">配置OpenStack各服务组件使用SSL通信（HTTPS）</a></p>
</li>
<li><p><a href="https://blog.csdn.net/liu_baoqing/article/details/77412135">kolla部署的openstack配置https</a></p>
</li>
<li><p><a href="https://gist.github.com/blomquisg/103e1c898a3b6085986e">Setting up HAProxy for OpenStack SSL</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/paul8339/p/8042776.html">haproxy代理https配置方法</a></p>
</li>
<li><p><a href>HAProxy Configuration Manual</a></p>
</li>
<li><p><a href="http://www.ttlsa.com/linux/haproxy-study-tutorial/">HAProxy用法详解</a></p>
</li>
<li><p><a href="https://support.ptc.com/help/thingworx/platform/r9/zh_CN/index.html#page/ThingWorx%2FHelp%2FThingWorxHighAvailability%2FHAProxyExample.html%23">HAProxy 示例</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/reblue520/p/6841237.html">haproxy配置基于ssl证书的https负载均衡</a></p>
</li>
<li><p><a href="https://www.linuxidc.com/Linux/2016-04/130692.htm">在HAProxy中使用SSL证书进行连接</a></p>
</li>
<li><p><a href="https://segmentfault.com/a/1190000009002353">SSL/TLS及证书概述</a></p>
</li>
<li><p><a href="https://blog.csdn.net/bbwangj/article/details/82503675">使用 openssl 生成证书（含openssl详解）</a></p>
</li>
<li><p><a href="https://blog.csdn.net/zuoyigehaizei/article/details/93486460">https安全认证流程简介</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：Trove Cluster Controller</title>
    <url>/2022/01/25/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ATrove-Cluster-Controller/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>对程序员来说，最好的文档就是源码。Trove 官方对于<strong>Clueter Controller</strong>能力的描述文档不多，给的参考例子只涉及到MongoDB集群，参考<a href="https://docs.openstack.org/trove/wallaby/user/set-up-clustering.html">Set up database clustering</a>。为了深入了解Trove的集群能力，本文档对<code>Trove Cluster Controller</code>的能力进行深入剖析，从API入手，解析如何构建整个后端数据库集群生命周期管理架构。摸清Trove现有能力的同时，梳理代码设计思路，为后续研发做准备。</p>
<h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><ul>
<li>OpenStack Train版本（16 October, 2019）</li>
<li>Trove 12.1.0</li>
</ul>
<p><strong>备注：</strong></p>
<p>在深入剖析Trove源码后，发现Trove在14.0.0后，调整了虚机内数据库服务的部署方式，从原先的直接RPM部署调整为Docker部署，优点就是横向扩展很容易，缺点是为了打通Trove虚机与Docker仓库的网络，导致Trove服务网络结构会比较复杂。<strong>Trove更新为docker后，留了一个深坑，就是原先已支持的数据库，现在很多都不支持了，Guest Agent正在重构。目前最新版本支持情况：MySQL 5.7.X, MariaDB 10.4.X. PostgreSQL 12.4 is partially supported</strong>。目前已经两个大版本过去了，依然没有新的数据库类型支持，考虑到研发代价，决定使用弃用Docker形式的新版本，使用稳定的老版本。</p>
<p><img src="/2022/01/25/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ATrove-Cluster-Controller/trove-releasenote-14.0.0.png" alt="trove-releasenote-14.0.0"></p>
<p><img src="/2022/01/25/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ATrove-Cluster-Controller/trove-administrator-guide-16.0.0.png" alt="trove-administrator-guide-16.0.0"></p>
<h2 id="源生能力"><a href="#源生能力" class="headerlink" title="源生能力"></a>源生能力</h2><h3 id="Clueter-相关接口"><a href="#Clueter-相关接口" class="headerlink" title="Clueter 相关接口"></a>Clueter 相关接口</h3><table>
<thead>
<tr>
<th>接口</th>
<th>接口路由</th>
<th>请求方式</th>
</tr>
</thead>
<tbody><tr>
<td>index cluster</td>
<td><code>/&#123;tenant_id&#125;/clusters</code></td>
<td>GET</td>
</tr>
<tr>
<td>show cluster</td>
<td><code>/&#123;tenant_id&#125;/clusters/&#123;id&#125;</code></td>
<td>GET</td>
</tr>
<tr>
<td>create cluster</td>
<td><code>/&#123;tenant_id&#125;/clusters</code></td>
<td>POST</td>
</tr>
<tr>
<td>cluster action</td>
<td><code>/&#123;tenant_id&#125;/clusters/&#123;id&#125;</code></td>
<td>POST</td>
</tr>
<tr>
<td>show instance in cluster</td>
<td><code>/&#123;tenant_id&#125;/clusters/&#123;cluster_id&#125;/instances/</code></td>
<td>GET</td>
</tr>
<tr>
<td>delete cluster</td>
<td><code>/&#123;tenant_id&#125;/clusters/&#123;id&#125;</code></td>
<td>DELETE</td>
</tr>
</tbody></table>
<h3 id="Clueter-支持的集群类型"><a href="#Clueter-支持的集群类型" class="headerlink" title="Clueter 支持的集群类型"></a>Clueter 支持的集群类型</h3><table>
<thead>
<tr>
<th>数据库</th>
<th>集群类型</th>
<th>入口函数（strategy）</th>
</tr>
</thead>
<tbody><tr>
<td><em>Percona XtraDB</em></td>
<td>Galera</td>
<td><code>trove.common.strategies.cluster.experimental.galera_common</code></td>
</tr>
<tr>
<td><em>MariaDB</em></td>
<td>Galera</td>
<td><code>trove.common.strategies.cluster.experimental.galera_common</code></td>
</tr>
<tr>
<td><em>Redis</em></td>
<td>Redis Cluster</td>
<td><code>trove.common.strategies.cluster.experimental.redis</code></td>
</tr>
<tr>
<td><em>MongoDB</em></td>
<td>MongoDB Cluster</td>
<td><code>trove.common.strategies.cluster.experimental.mongodb</code></td>
</tr>
<tr>
<td><em>Cassandra</em></td>
<td>Cassandra Cluster</td>
<td><code>trove.common.strategies.cluster.experimental.cassandra</code></td>
</tr>
<tr>
<td><em>Vertica</em></td>
<td>Vertica Cluster</td>
<td><code>trove.common.strategies.cluster.experimental.vertica</code></td>
</tr>
</tbody></table>
<h2 id="代码走读"><a href="#代码走读" class="headerlink" title="代码走读"></a>代码走读</h2><p>OpenStack源码分析，需要从组件包管理<code>setup.cfg</code>中的<code>entry_points</code>入手，根据<code>entry_points</code>中<code>trove-api</code>的配置，确定入口为<code>trove.cmd.api:main</code>。<code>setup.cfg</code>源码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">[entry_points]</span><br><span class="line">console_scripts &#x3D; </span><br><span class="line">	trove-api &#x3D; trove.cmd.api:main</span><br><span class="line">	trove-taskmanager &#x3D; trove.cmd.taskmanager:main</span><br><span class="line">	trove-mgmt-taskmanager &#x3D; trove.cmd.taskmanager:mgmt_main</span><br><span class="line">	trove-conductor &#x3D; trove.cmd.conductor:main</span><br><span class="line">	trove-manage &#x3D; trove.cmd.manage:main</span><br><span class="line">	trove-guestagent &#x3D; trove.cmd.guest:main</span><br><span class="line">	trove-fake-mode &#x3D; trove.cmd.fakemode:main</span><br><span class="line">	trove-status &#x3D; trove.cmd.status:main</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>trove-api调用wsgi模块，启动api服务。源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.cmd.api</span></span><br><span class="line"><span class="keyword">from</span> oslo_concurrency <span class="keyword">import</span> processutils</span><br><span class="line"><span class="keyword">from</span> trove.cmd.common <span class="keyword">import</span> with_initialize</span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@with_initialize</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">CONF</span>):</span></span><br><span class="line">    <span class="keyword">from</span> trove.common <span class="keyword">import</span> cfg</span><br><span class="line">    <span class="keyword">from</span> trove.common <span class="keyword">import</span> notification</span><br><span class="line">    <span class="keyword">from</span> trove.common <span class="keyword">import</span> wsgi</span><br><span class="line">    <span class="keyword">from</span> trove.instance <span class="keyword">import</span> models <span class="keyword">as</span> inst_models</span><br><span class="line"></span><br><span class="line">    notification.DBaaSAPINotification.register_notify_callback(</span><br><span class="line">        inst_models.persist_instance_fault)</span><br><span class="line">    cfg.set_api_config_defaults()</span><br><span class="line">    profile.setup_profiler(<span class="string">&#x27;api&#x27;</span>, CONF.host)</span><br><span class="line">    conf_file = CONF.find_file(CONF.api_paste_config)</span><br><span class="line">    workers = CONF.trove_api_workers <span class="keyword">or</span> processutils.get_worker_count()</span><br><span class="line">    launcher = wsgi.launch(<span class="string">&#x27;trove&#x27;</span>, CONF.bind_port, conf_file,</span><br><span class="line">                           host=CONF.bind_host, workers=workers)</span><br><span class="line">    launcher.wait()</span><br></pre></td></tr></table></figure>

<p>确定trove api接口能力，需要先从wsgi模块关于Router的定义，其中<code>wsgi.Router</code>主要负责对请求进行匹配，未匹配到返回<code>404 HTTPNotFound</code>。<code>base_wsgi.Router</code>为<code>wsgi.Router</code>的父类，定义了Router的使用方式。相关源码见下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.common.wsgi</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router</span>(<span class="params">base_wsgi.Router</span>):</span></span><br><span class="line">    <span class="comment"># Original router did not allow for serialization of the 404 error.</span></span><br><span class="line">    <span class="comment"># To fix this the _dispatch was modified to use Fault() objects.</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @webob.dec.wsgify</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_dispatch</span>(<span class="params">req</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Called by self._router after matching the incoming request to a route</span></span><br><span class="line"><span class="string">        and putting the information into req.environ.  Either returns 404</span></span><br><span class="line"><span class="string">        or the routed WSGI app&#x27;s response.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        match = req.environ[<span class="string">&#x27;wsgiorg.routing_args&#x27;</span>][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">            <span class="keyword">return</span> Fault(webob.exc.HTTPNotFound())</span><br><span class="line">        app = match[<span class="string">&#x27;controller&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># trove.common.base_wsgi</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router</span>(<span class="params">object</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    WSGI middleware that maps incoming requests to WSGI apps.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, mapper</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Create a router for the given routes.Mapper.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Each route in `mapper` must specify a &#x27;controller&#x27;, which is a</span></span><br><span class="line"><span class="string">        WSGI app to call.  You&#x27;ll probably want to specify an &#x27;action&#x27; as</span></span><br><span class="line"><span class="string">        well and have your controller be a wsgi.Controller, who will route</span></span><br><span class="line"><span class="string">        the request to the action method.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Examples:</span></span><br><span class="line"><span class="string">          mapper = routes.Mapper()</span></span><br><span class="line"><span class="string">          sc = ServerController()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          # Explicit mapping of one route to a controller+action</span></span><br><span class="line"><span class="string">          mapper.connect(None, &quot;/svrlist&quot;, controller=sc, action=&quot;list&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          # Actions are all implicitly defined</span></span><br><span class="line"><span class="string">          mapper.resource(&quot;server&quot;, &quot;servers&quot;, controller=sc)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          # Pointing to an arbitrary WSGI app.  You can specify the</span></span><br><span class="line"><span class="string">          # &#123;path_info:.*&#125; parameter so the target app can be handed just that</span></span><br><span class="line"><span class="string">          # section of the URL.</span></span><br><span class="line"><span class="string">          mapper.connect(None, &quot;/v1.0/&#123;path_info:.*&#125;&quot;, controller=BlogApp())</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.map = mapper</span><br><span class="line">        self._router = routes.middleware.RoutesMiddleware(self._dispatch,</span><br><span class="line">                                                          self.map)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @webob.dec.wsgify</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, req</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Route the incoming request to a controller based on self.map.</span></span><br><span class="line"><span class="string">        If no match, return a 404.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._router</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @webob.dec.wsgify</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_dispatch</span>(<span class="params">req</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Called by self._router after matching the incoming request to a route</span></span><br><span class="line"><span class="string">        and putting the information into req.environ.  Either returns 404</span></span><br><span class="line"><span class="string">        or the routed WSGI app&#x27;s response.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        match = req.environ[<span class="string">&#x27;wsgiorg.routing_args&#x27;</span>][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">            <span class="keyword">return</span> webob.exc.HTTPNotFound()</span><br><span class="line">        app = match[<span class="string">&#x27;controller&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> app</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>trove api的详细router定义是在<code>trove.common.api:API</code>中，定义了trove api所有接口路由。根据Trove API Rrouter定义的接口，cluster支持增删改查能力，Cluster Controller的路由代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.common.api</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_cluster_router</span>(<span class="params">self, mapper</span>):</span></span><br><span class="line">        cluster_resource = ClusterController().create_resource()</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;index&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;GET&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;show&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;GET&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;create&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;POST&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;action&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;POST&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;cluster_id&#125;/instances/&quot;</span></span><br><span class="line">                       <span class="string">&quot;&#123;instance_id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;show_instance&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;GET&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;delete&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;DELETE&#x27;</span>]&#125;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>我们从创建流程入手，进行更深一步的分析。路由中定义的后端响应类为<code>trove.cluster.service:ClusterController</code>,每个路由对应一个具体的方法，关于创建的源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.cluster.service</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">from</span> trove.cluster <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClusterController</span>(<span class="params">wsgi.Controller</span>):</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, req, body, tenant_id</span>):</span></span><br><span class="line">        LOG.debug((<span class="string">&quot;Creating a Cluster for Tenant &#x27;%(tenant_id)s&#x27;\n&quot;</span></span><br><span class="line">                   <span class="string">&quot;req : &#x27;%(req)s&#x27;\n\nbody : &#x27;%(body)s&#x27;\n\n&quot;</span>),</span><br><span class="line">                  &#123;<span class="string">&quot;tenant_id&quot;</span>: tenant_id, <span class="string">&quot;req&quot;</span>: req, <span class="string">&quot;body&quot;</span>: body&#125;)</span><br><span class="line"></span><br><span class="line">        context = req.environ[wsgi.CONTEXT_KEY]</span><br><span class="line">        policy.authorize_on_tenant(context, <span class="string">&#x27;cluster:create&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        name = body[<span class="string">&#x27;cluster&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">        datastore_args = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;datastore&#x27;</span>, &#123;&#125;)</span><br><span class="line">        datastore, datastore_version = (</span><br><span class="line">            datastore_models.get_datastore_version(**datastore_args))</span><br><span class="line"></span><br><span class="line">        extended_properties = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;extended_properties&#x27;</span>, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            clusters_enabled = (CONF.get(datastore_version.manager)</span><br><span class="line">                                .get(<span class="string">&#x27;cluster_support&#x27;</span>))</span><br><span class="line">        <span class="keyword">except</span> NoSuchOptError:</span><br><span class="line">            clusters_enabled = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> clusters_enabled:</span><br><span class="line">            <span class="keyword">raise</span> exception.ClusterDatastoreNotSupported(</span><br><span class="line">                datastore=datastore.name,</span><br><span class="line">                datastore_version=datastore_version.name)</span><br><span class="line"></span><br><span class="line">        nodes = body[<span class="string">&#x27;cluster&#x27;</span>][<span class="string">&#x27;instances&#x27;</span>]</span><br><span class="line">        instances = []</span><br><span class="line">        <span class="keyword">for</span> node <span class="keyword">in</span> nodes:</span><br><span class="line">            flavor_id = utils.get_id_from_href(node[<span class="string">&#x27;flavorRef&#x27;</span>])</span><br><span class="line">            volume_size = volume_type = nics = availability_zone = <span class="literal">None</span></span><br><span class="line">            modules = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;volume&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                volume_size = int(node[<span class="string">&#x27;volume&#x27;</span>][<span class="string">&#x27;size&#x27;</span>])</span><br><span class="line">                volume_type = node[<span class="string">&#x27;volume&#x27;</span>].get(<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;nics&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                nics = node[<span class="string">&#x27;nics&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;availability_zone&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                availability_zone = node[<span class="string">&#x27;availability_zone&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;modules&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                modules = node[<span class="string">&#x27;modules&#x27;</span>]</span><br><span class="line"></span><br><span class="line">            instances.append(&#123;<span class="string">&quot;flavor_id&quot;</span>: flavor_id,</span><br><span class="line">                              <span class="string">&quot;volume_size&quot;</span>: volume_size,</span><br><span class="line">                              <span class="string">&quot;volume_type&quot;</span>: volume_type,</span><br><span class="line">                              <span class="string">&quot;nics&quot;</span>: nics,</span><br><span class="line">                              <span class="string">&quot;availability_zone&quot;</span>: availability_zone,</span><br><span class="line">                              <span class="string">&#x27;region_name&#x27;</span>: node.get(<span class="string">&#x27;region_name&#x27;</span>),</span><br><span class="line">                              <span class="string">&quot;modules&quot;</span>: modules&#125;)</span><br><span class="line"></span><br><span class="line">        locality = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;locality&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> locality:</span><br><span class="line">            locality_domain = [<span class="string">&#x27;affinity&#x27;</span>, <span class="string">&#x27;anti-affinity&#x27;</span>]</span><br><span class="line">            locality_domain_msg = (<span class="string">&quot;Invalid locality &#x27;%s&#x27;. &quot;</span></span><br><span class="line">                                   <span class="string">&quot;Must be one of [&#x27;%s&#x27;]&quot;</span> %</span><br><span class="line">                                   (locality,</span><br><span class="line">                                    <span class="string">&quot;&#x27;, &#x27;&quot;</span>.join(locality_domain)))</span><br><span class="line">            <span class="keyword">if</span> locality <span class="keyword">not</span> <span class="keyword">in</span> locality_domain:</span><br><span class="line">                <span class="keyword">raise</span> exception.BadRequest(message=locality_domain_msg)</span><br><span class="line"></span><br><span class="line">        configuration = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;configuration&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        context.notification = notification.DBaaSClusterCreate(context,</span><br><span class="line">                                                               request=req)</span><br><span class="line">        <span class="keyword">with</span> StartNotification(context, name=name, datastore=datastore.name,</span><br><span class="line">                               datastore_version=datastore_version.name):</span><br><span class="line">            cluster = models.Cluster.create(context, name, datastore,</span><br><span class="line">                                            datastore_version, instances,</span><br><span class="line">                                            extended_properties,</span><br><span class="line">                                            locality, configuration)</span><br><span class="line">        cluster.locality = locality</span><br><span class="line">        view = views.load_view(cluster, req=req, load_servers=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> wsgi.Result(view.data(), <span class="number">200</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>分析ClusterController中create的流程，create做了以下三件事：</p>
<ol>
<li>根据配置文件中，指定数据库类型的cluster_support配置，检查该数据库是否支持集群模式。</li>
<li>拼装集群内instance配置参数。</li>
<li>调用trove.cluster.models.Cluster.create()，创建数据库集群。</li>
</ol>
<p>创建实际是在<code>trove.cluster.models:Cluster.create</code>执行的，进一步分析<strong>trove.cluster.models</strong>中的创建流程，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.cluster.models</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">cls, context, name, datastore, datastore_version,</span></span></span><br><span class="line"><span class="function"><span class="params">               instances, extended_properties, locality, configuration</span>):</span></span><br><span class="line">        locality = srv_grp.ServerGroup.build_scheduler_hint(</span><br><span class="line">            context, locality, name)</span><br><span class="line">        api_strategy = strategy.load_api_strategy(datastore_version.manager)</span><br><span class="line">        <span class="keyword">return</span> api_strategy.cluster_class.create(context, name, datastore,</span><br><span class="line">                                                 datastore_version, instances,</span><br><span class="line">                                                 extended_properties,</span><br><span class="line">                                                 locality, configuration)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p><code>trove.cluster.models:Cluster.create</code>做了三件事，依次分别是：</p>
<ol>
<li>调用novaclient，为cluster创建server group，便于统一管理。</li>
<li>根据数据库版本，加载指定的api strategy。</li>
<li>调用api strategy中对应的create方法。</li>
</ol>
<p>研究strategy究竟做了哪些事情，这里看下<code>load_api_strategy</code>代码，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategise.cluster.strategy</span></span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_api_strategy</span>(<span class="params">manager</span>):</span></span><br><span class="line">    clazz = CONF.get(manager).get(<span class="string">&#x27;api_strategy&#x27;</span>)</span><br><span class="line">    LOG.debug(<span class="string">&quot;Loading class %s&quot;</span>, clazz)</span><br><span class="line">    api_strategy = import_class(clazz)</span><br><span class="line">    <span class="keyword">return</span> api_strategy()</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>strategy根据配置文件中，不同数据库配置的<code>api_strategy</code>参数，找到指定的管理代码，从而实现不同的数据库类型统一的管理。这里以<code>galera_common</code>为例，进行后续分析，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategies.cluster.experimental.galera_common.api</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">cls, context, name, datastore, datastore_version,</span></span></span><br><span class="line"><span class="function"><span class="params">               instances, extended_properties, locality, configuration</span>):</span></span><br><span class="line">        LOG.debug(<span class="string">&quot;Initiating Galera cluster creation.&quot;</span>)</span><br><span class="line">        ds_conf = CONF.get(datastore_version.manager)</span><br><span class="line">        <span class="comment"># Check number of instances is at least min_cluster_member_count</span></span><br><span class="line">        <span class="keyword">if</span> len(instances) &lt; ds_conf.min_cluster_member_count:</span><br><span class="line">            <span class="keyword">raise</span> exception.ClusterNumInstancesNotLargeEnough(</span><br><span class="line">                num_instances=ds_conf.min_cluster_member_count)</span><br><span class="line">        cls._validate_cluster_instances(context, instances, datastore,</span><br><span class="line">                                        datastore_version)</span><br><span class="line">        <span class="comment"># Updating Cluster Task</span></span><br><span class="line">        db_info = cluster_models.DBCluster.create(</span><br><span class="line">            name=name, tenant_id=context.project_id,</span><br><span class="line">            datastore_version_id=datastore_version.id,</span><br><span class="line">            task_status=ClusterTasks.BUILDING_INITIAL,</span><br><span class="line">            configuration_id=configuration)</span><br><span class="line"></span><br><span class="line">        cls._create_instances(context, db_info, datastore, datastore_version,</span><br><span class="line">                              instances, extended_properties, locality,</span><br><span class="line">                              configuration)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Calling taskmanager to further proceed for cluster-configuration</span></span><br><span class="line">        task_api.load(context, datastore_version.manager).create_cluster(</span><br><span class="line">            db_info.id)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls(context, db_info, datastore, datastore_version)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_create_instances</span>(<span class="params">context, db_info, datastore, datastore_version,</span></span></span><br><span class="line"><span class="function"><span class="params">                          instances, extended_properties, locality,</span></span></span><br><span class="line"><span class="function"><span class="params">                          configuration_id</span>):</span></span><br><span class="line">        member_config = &#123;<span class="string">&quot;id&quot;</span>: db_info.id,</span><br><span class="line">                         <span class="string">&quot;instance_type&quot;</span>: <span class="string">&quot;member&quot;</span>&#125;</span><br><span class="line">        name_index = int(time.time())</span><br><span class="line">        <span class="keyword">for</span> instance <span class="keyword">in</span> instances:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> instance.get(<span class="string">&quot;name&quot;</span>):</span><br><span class="line">                instance[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&quot;%s-member-%s&quot;</span> % (db_info.name,</span><br><span class="line">                                                     str(name_index))</span><br><span class="line">                name_index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [Instance.create(context,</span><br><span class="line">                                instance[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">                                instance[<span class="string">&#x27;flavor_id&#x27;</span>],</span><br><span class="line">                                datastore_version.image_id,</span><br><span class="line">                                [], [],</span><br><span class="line">                                datastore, datastore_version,</span><br><span class="line">                                instance.get(<span class="string">&#x27;volume_size&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                <span class="literal">None</span>,</span><br><span class="line">                                availability_zone=instance.get(</span><br><span class="line">                                    <span class="string">&#x27;availability_zone&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                nics=instance.get(<span class="string">&#x27;nics&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                configuration_id=configuration_id,</span><br><span class="line">                                cluster_config=member_config,</span><br><span class="line">                                volume_type=instance.get(</span><br><span class="line">                                    <span class="string">&#x27;volume_type&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                modules=instance.get(<span class="string">&#x27;modules&#x27;</span>),</span><br><span class="line">                                locality=locality,</span><br><span class="line">                                region_name=instance.get(<span class="string">&#x27;region_name&#x27;</span>)</span><br><span class="line">                                )</span><br><span class="line">                <span class="keyword">for</span> instance <span class="keyword">in</span> instances]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_validate_cluster_instances</span>(<span class="params">context, instances, datastore,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    datastore_version</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Validate the flavor and volume&quot;&quot;&quot;</span></span><br><span class="line">        ds_conf = CONF.get(datastore_version.manager)</span><br><span class="line">        num_instances = len(instances)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Checking volumes and get delta for quota check</span></span><br><span class="line">        cluster_models.validate_instance_flavors(</span><br><span class="line">            context, instances, ds_conf.volume_support, ds_conf.device_path)</span><br><span class="line"></span><br><span class="line">        req_volume_size = cluster_models.get_required_volume_size(</span><br><span class="line">            instances, ds_conf.volume_support)</span><br><span class="line"></span><br><span class="line">        cluster_models.assert_homogeneous_cluster(instances)</span><br><span class="line"></span><br><span class="line">        deltas = &#123;<span class="string">&#x27;instances&#x27;</span>: num_instances, <span class="string">&#x27;volumes&#x27;</span>: req_volume_size&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># quota check</span></span><br><span class="line">        check_quotas(context.project_id, deltas)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Checking networks are same for the cluster</span></span><br><span class="line">        cluster_models.validate_instance_nics(context, instances)    </span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>galera_common.api中，做了如下几个步骤：</p>
<ol>
<li>检查集群内的实例数量是否满足配置中要求的集群最小实例数。</li>
<li>检查集群实例配置。</li>
<li>更新cluster状态信息。</li>
<li>创建集群内各实例。</li>
<li>调用<code>galera_common.taskmanager.create_cluster</code>进行进一步的集群配置。</li>
</ol>
<p>galera_common.taskmanager.create_cluster源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategies.cluster.experimental.galera_common.taskmanager</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_cluster</span>(<span class="params">self, context, cluster_id</span>):</span></span><br><span class="line">        LOG.debug(<span class="string">&quot;Begin create_cluster for id: %s.&quot;</span>, cluster_id)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_create_cluster</span>():</span></span><br><span class="line">            <span class="comment"># Fetch instances by cluster_id against instances table.</span></span><br><span class="line">            db_instances = DBInstance.find_all(cluster_id=cluster_id).all()</span><br><span class="line">            instance_ids = [db_instance.id <span class="keyword">for</span> db_instance <span class="keyword">in</span> db_instances]</span><br><span class="line"></span><br><span class="line">            LOG.debug(<span class="string">&quot;Waiting for instances to get to cluster-ready status.&quot;</span>)</span><br><span class="line">            <span class="comment"># Wait for cluster members to get to cluster-ready status.</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self._all_instances_ready(instance_ids, cluster_id):</span><br><span class="line">                <span class="keyword">raise</span> TroveError(_(<span class="string">&quot;Instances in cluster did not report &quot;</span></span><br><span class="line">                                   <span class="string">&quot;ACTIVE&quot;</span>))</span><br><span class="line"></span><br><span class="line">            LOG.debug(<span class="string">&quot;All members ready, proceeding for cluster setup.&quot;</span>)</span><br><span class="line">            instances = [Instance.load(context, instance_id) <span class="keyword">for</span> instance_id</span><br><span class="line">                         <span class="keyword">in</span> instance_ids]</span><br><span class="line"></span><br><span class="line">            cluster_ips = [self.get_ip(instance) <span class="keyword">for</span> instance <span class="keyword">in</span> instances]</span><br><span class="line">            instance_guests = []</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Create replication user and password for synchronizing the</span></span><br><span class="line">            <span class="comment"># galera cluster</span></span><br><span class="line">            replication_user = &#123;</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: self.CLUSTER_REPLICATION_USER,</span><br><span class="line">                <span class="string">&quot;password&quot;</span>: utils.generate_random_password(),</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Galera cluster name must be unique and be shorter than a full</span></span><br><span class="line">            <span class="comment"># uuid string so we remove the hyphens and chop it off. It was</span></span><br><span class="line">            <span class="comment"># recommended to be 16 chars or less.</span></span><br><span class="line">            <span class="comment"># (this is not currently documented on Galera docs)</span></span><br><span class="line">            cluster_name = utils.generate_uuid().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>)[:<span class="number">16</span>]</span><br><span class="line"></span><br><span class="line">            LOG.debug(<span class="string">&quot;Configuring cluster configuration.&quot;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># Set the admin password for all the instances because the</span></span><br><span class="line">                <span class="comment"># password in the my.cnf will be wrong after the joiner</span></span><br><span class="line">                <span class="comment"># instances syncs with the donor instance.</span></span><br><span class="line">                admin_password = str(utils.generate_random_password())</span><br><span class="line"></span><br><span class="line">                bootstrap = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">for</span> instance <span class="keyword">in</span> instances:</span><br><span class="line">                    guest = self.get_guest(instance)</span><br><span class="line">                    instance_guests.append(guest)</span><br><span class="line">                    guest.reset_admin_password(admin_password)</span><br><span class="line">                    <span class="comment"># render the conf.d/cluster.cnf configuration</span></span><br><span class="line">                    cluster_configuration = self._render_cluster_config(</span><br><span class="line">                        context,</span><br><span class="line">                        instance,</span><br><span class="line">                        <span class="string">&quot;,&quot;</span>.join(cluster_ips),</span><br><span class="line">                        cluster_name,</span><br><span class="line">                        replication_user)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># push the cluster config and bootstrap the first instance</span></span><br><span class="line">                    guest.install_cluster(replication_user,</span><br><span class="line">                                          cluster_configuration,</span><br><span class="line">                                          bootstrap)</span><br><span class="line">                    bootstrap = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">                LOG.debug(<span class="string">&quot;Finalizing cluster configuration.&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> guest <span class="keyword">in</span> instance_guests:</span><br><span class="line">                    guest.cluster_complete()</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                LOG.exception(<span class="string">&quot;Error creating cluster.&quot;</span>)</span><br><span class="line">                self.update_statuses_on_failure(cluster_id)</span><br><span class="line"></span><br><span class="line">        timeout = Timeout(CONF.cluster_usage_timeout)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            _create_cluster()</span><br><span class="line">            self.reset_task()</span><br><span class="line">        <span class="keyword">except</span> Timeout <span class="keyword">as</span> t:</span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">is</span> <span class="keyword">not</span> timeout:</span><br><span class="line">                <span class="keyword">raise</span>  <span class="comment"># not my timeout</span></span><br><span class="line">            LOG.exception(<span class="string">&quot;Timeout for building cluster.&quot;</span>)</span><br><span class="line">            self.update_statuses_on_failure(cluster_id)</span><br><span class="line">        <span class="keyword">except</span> TroveError:</span><br><span class="line">            LOG.exception(<span class="string">&quot;Error creating cluster %s.&quot;</span>, cluster_id)</span><br><span class="line">            self.update_statuses_on_failure(cluster_id)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            timeout.cancel()</span><br><span class="line"></span><br><span class="line">        LOG.debug(<span class="string">&quot;End create_cluster for id: %s.&quot;</span>, cluster_id)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>taskmanager依次做了以下几件事情：</p>
<ol>
<li>根据cluster id，定位到集群内所有的instance。</li>
<li>检测所有instance状态是否为ACTIVE。</li>
<li>生成集群配置信息。</li>
<li>依次调用各个instance内的guest agent，更新集群配置信息，并启动第一个节点。</li>
<li>更新集群状态。</li>
</ol>
<p>到这里，所有流程就走完了。为了更深一步了解trove，这里我们继续深入实例，研究instance内guest agent操作，具体干了哪些事情，首先从guest agent启动代码入手，看guest agent如何响应rpc调用，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.cmd.guest</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> oslo_config <span class="keyword">import</span> cfg <span class="keyword">as</span> openstack_cfg</span><br><span class="line"><span class="keyword">from</span> oslo_log <span class="keyword">import</span> log <span class="keyword">as</span> logging</span><br><span class="line"><span class="keyword">from</span> oslo_service <span class="keyword">import</span> service <span class="keyword">as</span> openstack_service</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> cfg</span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> debug_utils</span><br><span class="line"><span class="keyword">from</span> trove.common.i18n <span class="keyword">import</span> _</span><br><span class="line"><span class="keyword">from</span> trove.guestagent <span class="keyword">import</span> api <span class="keyword">as</span> guest_api</span><br><span class="line"></span><br><span class="line">CONF = cfg.CONF</span><br><span class="line"><span class="comment"># The guest_id opt definition must match the one in common/cfg.py</span></span><br><span class="line">CONF.register_opts([openstack_cfg.StrOpt(<span class="string">&#x27;guest_id&#x27;</span>, default=<span class="literal">None</span>,</span><br><span class="line">                                         help=<span class="string">&quot;ID of the Guest Instance.&quot;</span>),</span><br><span class="line">                    openstack_cfg.StrOpt(<span class="string">&#x27;instance_rpc_encr_key&#x27;</span>,</span><br><span class="line">                                         help=(<span class="string">&#x27;Key (OpenSSL aes_cbc) for &#x27;</span></span><br><span class="line">                                               <span class="string">&#x27;instance RPC encryption.&#x27;</span>))])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    cfg.parse_args(sys.argv)</span><br><span class="line">    logging.setup(CONF, <span class="literal">None</span>)</span><br><span class="line">    debug_utils.setup()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> trove.guestagent <span class="keyword">import</span> dbaas</span><br><span class="line">    manager = dbaas.datastore_registry().get(CONF.datastore_manager)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> manager:</span><br><span class="line">        msg = (_(<span class="string">&quot;Manager class not registered for datastore manager %s&quot;</span>) %</span><br><span class="line">               CONF.datastore_manager)</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(msg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> CONF.guest_id:</span><br><span class="line">        msg = (_(<span class="string">&quot;The guest_id parameter is not set. guest_info.conf &quot;</span></span><br><span class="line">               <span class="string">&quot;was not injected into the guest or not read by guestagent&quot;</span>))</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(msg)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BUG(1650518): Cleanup in the Pike release</span></span><br><span class="line">    <span class="comment"># make it fatal if CONF.instance_rpc_encr_key is None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># rpc module must be loaded after decision about thread monkeypatching</span></span><br><span class="line">    <span class="comment"># because if thread module is not monkeypatched we can&#x27;t use eventlet</span></span><br><span class="line">    <span class="comment"># executor from oslo_messaging library.</span></span><br><span class="line">    <span class="keyword">from</span> trove <span class="keyword">import</span> rpc</span><br><span class="line">    rpc.init(CONF)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> trove.common.rpc <span class="keyword">import</span> service <span class="keyword">as</span> rpc_service</span><br><span class="line">    server = rpc_service.RpcService(</span><br><span class="line">        key=CONF.instance_rpc_encr_key,</span><br><span class="line">        topic=<span class="string">&quot;guestagent.%s&quot;</span> % CONF.guest_id,</span><br><span class="line">        manager=manager, host=CONF.guest_id,</span><br><span class="line">        rpc_api_version=guest_api.API.API_LATEST_VERSION)</span><br><span class="line"></span><br><span class="line">    launcher = openstack_service.launch(CONF, server, restart_method=<span class="string">&#x27;mutate&#x27;</span>)</span><br><span class="line">    launcher.wait()</span><br></pre></td></tr></table></figure>

<p>guest agent启动流程中，做了如下几件事：</p>
<ol>
<li><p>从<code>trove.guestagent.dbaas</code>中到manager入口函数，找到符合的datastore_manager。</p>
</li>
<li><p>将datastore_manager注册进rpcservice内，远程调用时接收到指定的rpc操作后，即可触发manager对应的方法。</p>
</li>
</ol>
<p>这里我们看下<code>trove.guestagent.dbaas</code>注册了哪些入口，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.guestagent.dbaas</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Handles all processes within the Guest VM, considering it as a Platform</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The :py:class:`GuestManager` class is a :py:class:`nova.manager.Manager` that</span></span><br><span class="line"><span class="string">handles RPC calls relating to Platform specific operations.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**Related Flags**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> oslo_log <span class="keyword">import</span> log <span class="keyword">as</span> logging</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> cfg</span><br><span class="line"><span class="keyword">from</span> trove.common.i18n <span class="keyword">import</span> _</span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> utils</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LOG = logging.getLogger(__name__)</span><br><span class="line">defaults = &#123;</span><br><span class="line">    <span class="string">&#x27;mysql&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.mysql.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;percona&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.percona.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;pxc&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.pxc.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;redis&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.redis.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cassandra&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.cassandra.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;couchbase&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.couchbase.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mongodb&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.mongodb.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;postgresql&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.postgresql.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;couchdb&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.couchdb.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;vertica&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.vertica.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;db2&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.db2.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mariadb&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.mariadb.manager.Manager&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datastore_registry</span>():</span></span><br><span class="line">    <span class="keyword">return</span> dict(chain(defaults.items(),</span><br><span class="line">                get_custom_managers().items()))</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>dbaas内我们可以到所有数据库的入口函数，即可根据rpc的消息类型，找到对应的入口，对应的影响函数了。回到taskmanager发消息的流程，taskmanager调用guest内的install_cluster方法，我们看下install_cluster的方法，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategies.cluster.experimental.galera_common.guestagent</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GaleraCommonGuestAgentAPI</span>(<span class="params">guest_api.API</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Cluster Specific Datastore Guest API</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    **** VERSION CONTROLLED API ****</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The methods in this class are subject to version control as</span></span><br><span class="line"><span class="string">    coordinated by guestagent/api.py.  Whenever a change is made to</span></span><br><span class="line"><span class="string">    any API method in this class, add a version number and comment</span></span><br><span class="line"><span class="string">    to the top of guestagent/api.py and use the version number as</span></span><br><span class="line"><span class="string">    appropriate in this file</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">install_cluster</span>(<span class="params">self, replication_user, cluster_configuration,</span></span></span><br><span class="line"><span class="function"><span class="params">                        bootstrap</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Install the cluster.&quot;&quot;&quot;</span></span><br><span class="line">        LOG.debug(<span class="string">&quot;Installing Galera cluster.&quot;</span>)</span><br><span class="line">        version = guest_api.API.API_BASE_VERSION</span><br><span class="line"></span><br><span class="line">        self._call(<span class="string">&quot;install_cluster&quot;</span>, CONF.cluster_usage_timeout,</span><br><span class="line">                   version=version,</span><br><span class="line">                   replication_user=replication_user,</span><br><span class="line">                   cluster_configuration=cluster_configuration,</span><br><span class="line">                   bootstrap=bootstrap)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>向guest发送了一个同步调用的rpc请求（<code>_call</code>为同步调用，<code>_cast</code>为异步调用），触发<code>install_cluster</code>方法，这里我们从manager入手，看下install_cluster具体干了哪些事情，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.guestagent.datastore.galera_common.manager</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">install_cluster</span>(<span class="params">self, context, replication_user, cluster_configuration,</span></span></span><br><span class="line"><span class="function"><span class="params">                        bootstrap</span>):</span></span><br><span class="line">        app = self.mysql_app(self.mysql_app_status.get())</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            app.install_cluster(</span><br><span class="line">                replication_user, cluster_configuration, bootstrap)</span><br><span class="line">            LOG.debug(<span class="string">&quot;install_cluster call has finished.&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            LOG.exception(<span class="string">&#x27;Cluster installation failed.&#x27;</span>)</span><br><span class="line">            app.status.set_status(</span><br><span class="line">                rd_instance.ServiceStatuses.FAILED)</span><br><span class="line">            <span class="keyword">raise</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>这里，实际上就调用了service内对应的install_cluster方法，做了些异常判断，进入service内，看下具体干了那些事，源码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># trove.guestagent.datastore.galera_common.service</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GaleraApp</span>(<span class="params">service.BaseMySqlApp</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, status, local_sql_client, keep_alive_connection_cls</span>):</span></span><br><span class="line">        super(GaleraApp, self).__init__(status, local_sql_client,</span><br><span class="line">                                        keep_alive_connection_cls)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">install_cluster</span>(<span class="params">self, replication_user, cluster_configuration,</span></span></span><br><span class="line"><span class="function"><span class="params">                        bootstrap=False</span>):</span></span><br><span class="line">        LOG.info(<span class="string">&quot;Installing cluster configuration.&quot;</span>)</span><br><span class="line">        self._grant_cluster_replication_privilege(replication_user)</span><br><span class="line">        self.stop_db()</span><br><span class="line">        self.write_cluster_configuration_overrides(cluster_configuration)</span><br><span class="line">        self.wipe_ib_logfiles()</span><br><span class="line">        LOG.debug(<span class="string">&quot;bootstrap the instance? : %s&quot;</span>, bootstrap)</span><br><span class="line">        <span class="comment"># Have to wait to sync up the joiner instances with the donor instance.</span></span><br><span class="line">        <span class="keyword">if</span> bootstrap:</span><br><span class="line">            self._bootstrap_cluster(timeout=CONF.restore_usage_timeout)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.start_mysql(timeout=CONF.restore_usage_timeout)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_grant_cluster_replication_privilege</span>(<span class="params">self, replication_user</span>):</span></span><br><span class="line">        LOG.info(<span class="string">&quot;Granting Replication Slave privilege.&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> self.local_sql_client(self.get_engine()) <span class="keyword">as</span> client:</span><br><span class="line">            perms = [<span class="string">&#x27;REPLICATION CLIENT&#x27;</span>, <span class="string">&#x27;RELOAD&#x27;</span>, <span class="string">&#x27;LOCK TABLES&#x27;</span>]</span><br><span class="line">            g = sql_query.Grant(permissions=perms,</span><br><span class="line">                                user=replication_user[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">                                clear=replication_user[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line">            t = text(str(g))</span><br><span class="line">            client.execute(t)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write_cluster_configuration_overrides</span>(<span class="params">self, cluster_configuration</span>):</span></span><br><span class="line">        self.configuration_manager.apply_system_override(</span><br><span class="line">            cluster_configuration, <span class="string">&#x27;cluster&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_bootstrap_cluster</span>(<span class="params">self, timeout=<span class="number">120</span></span>):</span></span><br><span class="line">        LOG.info(<span class="string">&quot;Bootstraping cluster.&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            utils.execute_with_timeout(</span><br><span class="line">                self.mysql_service[<span class="string">&#x27;cmd_bootstrap_galera_cluster&#x27;</span>],</span><br><span class="line">                shell=<span class="literal">True</span>, timeout=timeout)</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            LOG.exception(<span class="string">&quot;Error bootstrapping cluster.&quot;</span>)</span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(_(<span class="string">&quot;Service is not discovered.&quot;</span>))</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>这里就是各实例内的具体操作流程了，流程如下：</p>
<ol>
<li>对集群内各实例赋权。</li>
<li>停止数据库服务。</li>
<li>更新MySQL配置文件。</li>
<li>删除ib_logfiles。</li>
<li>首节点为启动集群方式启动，其余节点直接启动mysql即可。</li>
</ol>
<p>到这里，MySQL集群创建流程即全部解析完成。</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://docs.openstack.org/api-ref/database/">OpenStack Documentation: Database API</a></li>
<li><a href="https://docs.openstack.org/trove/wallaby/install/index.html">OpenStack Documentation: Database Service</a></li>
<li><a href="https://docs.openstack.org/releasenotes/trove/train.html#relnotes-12-0-0-stable-train">OpenStack Documentation: Trove Release Notes</a></li>
<li><a href="https://opendev.org/openstack/trove">OpenDev: OpenStack Trove</a></li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>Trove</tag>
      </tags>
  </entry>
  <entry>
    <title>存储测试：性能基准测试</title>
    <url>/2021/10/19/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="主流测试软件介绍"><a href="#主流测试软件介绍" class="headerlink" title="主流测试软件介绍"></a>主流测试软件介绍</h2><p>目前业内主流存储I/O测试软件有以下几款：</p>
<ul>
<li><strong>FIO：</strong>是一个开源压力测试工具，由Linux内核存储团队研发，主要用来测试硬盘io性能。这个工具的可定制性非常强，可以根据测试者的想法进行各种混合io测试，它支持13种不同类型io引擎（libaio、sync、mmap、posixaio、network等等）。它可以测试块设备或文件，可以通过多线程或进程模拟各种io操作，可以测试统计iops、带宽和时延等性能。我们主要使用fio工具进行存储性能测试。源码：<a href="https://github.com/axboe/fio">Github FIO</a></li>
<li><strong>vdbench：</strong>是一个 I/O 工作负载生成器，由Oracle研发，用于验证数据完整性和度量直接附加和网络连接的存储的性能。它是一个免费的工具，容易使用，而且常常用于测试和基准测试。主要使用vdbench测试磁盘和文件系统的读写性能。</li>
<li><strong>IOmeter：</strong>由Intel开发的一款免费软件，主要用于Windows和Linux平台上对磁盘子系统和网络IO做性能测试。Windows用的相对较多，Linux主要使用FIO和vdbench。</li>
</ul>
<blockquote>
<p><strong>注意：</strong></p>
<ol>
<li>存储性能测试时，埋数据使用vdbench比FIO效果好，推荐使用vdbench预埋数据。</li>
<li>fio测试会对系统的硬盘进行读写，会存在破坏客户数据的风险，因此在生产环境上要谨慎使用，不建议对生产环境的硬盘进行裸盘读写测试。</li>
</ol>
</blockquote>
<h2 id="主要测试指标"><a href="#主要测试指标" class="headerlink" title="主要测试指标"></a>主要测试指标</h2><p>主要观测指标为 <code>IOPS</code> 、<code>BW（带宽）</code>、<code>Latency（时延）</code>，其中：</p>
<ul>
<li>4K小块场景主要参考指标为IOPS，小块容易测出IOPS瓶颈。</li>
<li>1M大块场景主要参考指标为BW，大块容易测出带宽瓶颈。</li>
</ul>
<h2 id="主要测试场景"><a href="#主要测试场景" class="headerlink" title="主要测试场景"></a>主要测试场景</h2><p>主要测试在顺序和随机读写方式下，4K和1M块大小读写性能。各场景变参如下：</p>
<ul>
<li>读写方式：顺序读写、随机读写</li>
<li>读写比例：纯读、纯写、7:3混合读写（70%读，30%写）</li>
<li>块大小：4K、1M</li>
</ul>
<h2 id="FIO"><a href="#FIO" class="headerlink" title="FIO"></a>FIO</h2><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y fio</span><br></pre></td></tr></table></figure>



<h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>可以使用 <code>fio -help</code> 查看每个参数，具体的参数左右可以在官网查看how to文档，如下为几个常见的参数描述</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">filename=/dev/emcpowerb　支持文件系统或者裸设备，-filename=/dev/sda2或-filename=/dev/sdb</span><br><span class="line">direct=1                 测试过程绕过机器自带的buffer，使测试结果更真实</span><br><span class="line">rw=randwread             测试随机读的I/O</span><br><span class="line">rw=randwrite             测试随机写的I/O</span><br><span class="line">rw=randrw                测试随机混合写和读的I/O</span><br><span class="line">rw=read                  测试顺序读的I/O</span><br><span class="line">rw=write                 测试顺序写的I/O</span><br><span class="line">rw=rw                    测试顺序混合写和读的I/O</span><br><span class="line">bs=4k                    单次io的块文件大小为4k</span><br><span class="line">bsrange=512-2048         同上，提定数据块的大小范围</span><br><span class="line">size=5g                  本次的测试文件大小为5g，以每次4k的io进行测试</span><br><span class="line">numjobs=30               本次的测试线程为30</span><br><span class="line">runtime=1000             测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止</span><br><span class="line">ioengine=psync           io引擎使用pync方式，如果要使用libaio引擎，需要yum install libaio-devel包</span><br><span class="line">rwmixwrite=30            在混合读写的模式下，写占30%</span><br><span class="line">group_reporting          关于显示结果的，汇总每个进程的信息</span><br><span class="line">此外</span><br><span class="line">lockmem=1g               只使用1g内存进行测试</span><br><span class="line">zero_buffers             用0初始化系统buffer</span><br><span class="line">nrfiles=8                每个进程生成文件的数量</span><br></pre></td></tr></table></figure>



<h3 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 块设备</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，100%读，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randread -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=rand_100read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，100%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=rand_100write_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%顺序，100%读，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=read -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=sqe_100read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%顺序，100%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=write -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=sqe_100write_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，70%读，30%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 文件系统</span></span></span><br><span class="line">fio -filename=/var/lib/mysql/storage_test -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=20G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k_file</span><br></pre></td></tr></table></figure>



<h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mysql-5 ~]# fio -filename=/var/lib/mysql/storage_test -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=20G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k_file</span><br><span class="line">randrw_70read_4k: (g=0): rw=randrw, bs=(R) 8192B-8192B, (W) 8192B-8192B, (T) 8192B-8192B, ioengine=libaio, iodepth=1</span><br><span class="line">...</span><br><span class="line">fio-3.7</span><br><span class="line">Starting 50 threads</span><br><span class="line">randrw_70read_4k: Laying out IO file (1 file / 20480MiB)</span><br><span class="line">Jobs: 50 (f=50): [m(50)][100.0%][r=34.0MiB/s,w=14.6MiB/s][r=4479,w=1870 IOPS][eta 00m:00s]</span><br><span class="line">randrw_70read_4k: (groupid=0, jobs=50): err= 0: pid=20734: Tue Oct 19 08:23:18 2021</span><br><span class="line">   read: IOPS=1220, BW=9766KiB/s (10.0MB/s)(1717MiB/180059msec)</span><br><span class="line">    slat (usec): min=4, max=541, avg=12.04, stdev= 6.41</span><br><span class="line">    clat (usec): min=285, max=373689, avg=12109.21, stdev=37790.30</span><br><span class="line">     lat (usec): min=295, max=373699, avg=12122.49, stdev=37790.40</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[   537],  5.00th=[   693], 10.00th=[   783], 20.00th=[   898],</span><br><span class="line">     | 30.00th=[   996], 40.00th=[  1090], 50.00th=[  1172], 60.00th=[  1287],</span><br><span class="line">     | 70.00th=[  1450], 80.00th=[  1713], 90.00th=[  2933], 95.00th=[121111],</span><br><span class="line">     | 99.00th=[125305], 99.50th=[242222], 99.90th=[246416], 99.95th=[246416],</span><br><span class="line">     | 99.99th=[371196]</span><br><span class="line">   bw (  KiB/s): min=   15, max= 1152, per=2.01%, avg=196.73, stdev=169.43, samples=17870</span><br><span class="line">   iops        : min=    1, max=  144, avg=24.54, stdev=21.18, samples=17870</span><br><span class="line">  write: IOPS=524, BW=4193KiB/s (4293kB/s)(737MiB/180059msec)</span><br><span class="line">    slat (usec): min=4, max=411, avg=12.92, stdev= 7.01</span><br><span class="line">    clat (usec): min=937, max=375705, avg=67132.23, stdev=69781.33</span><br><span class="line">     lat (usec): min=948, max=375726, avg=67146.41, stdev=69781.43</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[  1516],  5.00th=[  1795], 10.00th=[  1975], 20.00th=[  2278],</span><br><span class="line">     | 30.00th=[  2573], 40.00th=[  3064], 50.00th=[ 77071], 60.00th=[115868],</span><br><span class="line">     | 70.00th=[121111], 80.00th=[123208], 90.00th=[125305], 95.00th=[127402],</span><br><span class="line">     | 99.00th=[248513], 99.50th=[250610], 99.90th=[362808], 99.95th=[371196],</span><br><span class="line">     | 99.99th=[375391]</span><br><span class="line">   bw (  KiB/s): min=   15, max=  528, per=2.01%, avg=84.17, stdev=71.04, samples=17918</span><br><span class="line">   iops        : min=    1, max=   66, avg=10.47, stdev= 8.88, samples=17918</span><br><span class="line">  lat (usec)   : 500=0.37%, 750=5.30%, 1000=15.88%</span><br><span class="line">  lat (msec)   : 2=41.46%, 4=14.49%, 10=1.38%, 20=0.23%, 50=0.01%</span><br><span class="line">  lat (msec)   : 100=0.77%, 250=19.94%, 500=0.18%</span><br><span class="line">  cpu          : usr=0.03%, sys=0.09%, ctx=317534, majf=0, minf=56</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued rwts: total=219800,94367,0,0 short=0,0,0,0 dropped=0,0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: bw=9766KiB/s (10.0MB/s), 9766KiB/s-9766KiB/s (10.0MB/s-10.0MB/s), io=1717MiB (1801MB), run=180059-180059msec</span><br><span class="line">  WRITE: bw=4193KiB/s (4293kB/s), 4193KiB/s-4193KiB/s (4293kB/s-4293kB/s), io=737MiB (773MB), run=180059-180059msec</span><br><span class="line"></span><br><span class="line">Disk stats (read/write):</span><br><span class="line">  vda: ios=219811/94366, merge=0/5, ticks=2658031/6335969, in_queue=6946443, util=77.28%</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>测试结果参数解析：</strong></p>
<p>io：执行了多少M的IO<br>bw：平均IO带宽<br>iops：IOPS<br>slat：提交延迟<br>clat：完成延迟<br>lat：响应时间<br>bw：带宽<br>cpu：利用率<br>IO depths：io队列<br>IO submit：单个IO提交要提交的IO数<br>IO complete：Like the above submit number, but for completions instead.<br>IO issued：The number of read/write requests issued, and how many of them were short.<br>IO latency：IO完延迟的分布</p>
</blockquote>
<h2 id="vdbench"><a href="#vdbench" class="headerlink" title="vdbench"></a>vdbench</h2><blockquote>
<p><strong>注意：</strong></p>
<ol>
<li>联机测试时，主节点要与其余节点做免密登录认证</li>
<li>在联机测试时，客户端的系统时间需保持一致，否则会出现时钟同步告警（this can lead to heartbeat issues）</li>
<li>客户端的防火墙要关闭(或者设置开放程序指定端口<code>5570</code>、<code>5560</code>访问)</li>
<li>关闭系统日志服务<code>rsyslog</code>，避免运行时出现其他日志文件打印信息<br>参数文件添加<code>messagescan=no</code>可以过滤掉多余的系统日志</li>
</ol>
</blockquote>
<h3 id="安装流程-1"><a href="#安装流程-1" class="headerlink" title="安装流程"></a>安装流程</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装Java</span></span><br><span class="line">yum install -y java-1.8.0-openjdk</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载vdbench资源包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 途径1：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   链接：https://pan.baidu.com/s/1e9MHXtk6WauxMt1bTKNNrg </span></span><br><span class="line"><span class="meta">#</span><span class="bash">   提取码：shwv</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 途径2：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Oracle官网（需Oracle账户）：https://www.oracle.com/downloads/server-storage/vdbench-downloads.html</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压vdbench</span></span><br><span class="line">mkdir vdbench &amp;&amp; mv vdbench50407.zip vdbench &amp;&amp; cd vdbench &amp;&amp; unzip vdbench50407.zip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试vdbench</span></span><br><span class="line">./vdbench -t</span><br></pre></td></tr></table></figure>



<h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><ul>
<li><strong>预埋数据</strong></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 预埋数据量通常为卷容量的1.2倍</span></span><br><span class="line">sd=sd1,lun=/dev/vdb,openflag=o_direct,threads=8</span><br><span class="line">wd=wd1,sd=sd1,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,maxdata=120GB,elapse=604800,interval=2</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>4M顺序写</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小4M、IO块大小1M、顺序写</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test01,depth=2,width=100,files=100,size=4M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=sequential,fileselect=sequential,operation=write,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>4M顺序读</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小4M、IO块大小1M、顺序读</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test02,depth=2,width=100,files=100,size=4M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=sequential,fileselect=sequential,operation=read,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>8M混合读写</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小8M、IO块大小1M、混合读写（读写比为6:4）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test03,depth=2,width=100,files=100,size=8M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=random,fileselect=random,rdpct=60,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure>



<h3 id="参数说明-1"><a href="#参数说明-1" class="headerlink" title="参数说明"></a>参数说明</h3><blockquote>
<p>vdbench可用于文件系统及块设备基准性能测试，以下主要介绍文件系统及块存储的常用测试参数<br>vdbench所有测试参数都定义到一个参数文件内，在运行时按照顺序被读取执行相应操作，在参数文件定义时需要执行顺序进行定义</p>
</blockquote>
<h4 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h4><p> <strong>文件系统参数文件定义顺序为：HD、FSD、FWD、RD</strong></p>
<ol>
<li><strong>HD（Host Define）</strong></li>
</ol>
<blockquote>
<p>非必选项，单机运行时不需要配置HD参数，一般只有在多主机联机测试时才需要配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>hd=</strong> 标识主机定义的名称，多主机运行时，可以使用hd1、hd2、hd3…区分</li>
<li><strong>system=</strong> 主机IP地址或主机名</li>
<li><strong>vdbench=</strong> vdbench执行文件存放路径，当多主机存放路径不同时，可在hd定义时单独指定</li>
<li><strong>user=</strong> slave和master通信使用用户</li>
<li><strong>shell=</strong> 可选值为<code>rsh</code>、<code>ssh</code>或<code>vdbench</code>，默认值为<code>rsh</code>，多主机联机测试时，mater和slave主机间通信方式<br>当参数值为<code>rsh</code>时，需要配置master和slave主机rsh互信，考虑到rsh使用明文传输，安全级别不够，通常情况下不建议使用这种通信方式<br>当参数值为<code>ssh</code>时，需要配置master和slave主机ssh互信，通常Linux主机联机时使用此通信方式<br>当参数值为<code>vdbench</code>，需要在所有slave主机运行<code>vdbench rsh</code>启用vdbench本身的rsh守护进程，通常Window主机联机时使用此通信方式</li>
</ul>
<ol start="2">
<li><strong>FSD（File System Define）</strong></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fsd=default,depth=2,width=3,files=2,size=128k</span><br><span class="line">fsd=fsd1,anchor=/mnt/client1</span><br><span class="line">fsd=fsd2,anchor=/mnt/client2</span><br><span class="line">fsd=fsd3,anchor=/mnt/client3</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>fsd=</strong> 标识文件系统定义的名称，多文件系统时（<code>fsd1</code>、<code>fsd2</code>、<code>fsd3</code>…），可以指定<code>default</code>（将相同的参数作为所有fsd的默认值）</li>
<li><strong>anchor=</strong> 文件写入根目录</li>
<li><strong>depth=</strong> 创建目录层级数（即目录深度）</li>
<li><strong>width=</strong> 每层文件夹的子文件夹数</li>
<li><strong>files=</strong> 测试文件个数（vdbench测试过程中会生成多层级目录结构，实际只有最后一层目录会生成测试文件）</li>
<li><strong>size=</strong> 每个测试文件大小</li>
<li>**distribution= ** 可选值为<code>bottom</code>或<code>all</code>，默认为<code>bottom</code><br>–当参数值为<code>bottom</code>时，程序只在最后一层目录写入测试文件<br>–当参数值为<code>all</code>时，程序在每一层目录都写入测试文件</li>
<li><strong>shared=</strong> 可选值为<code>yes</code>或<code>no</code>，默认值为<code>no</code>，一般只有在多主机联机测试时指定<br>vdbench不允许不同的slave之间共享同一个目录结构下的所有文件，因为这样会带来很大的开销，但是它们允许共享同一个目录结构。加入设置了shared=yes，那么不同的slave可以平分一个目录下所有的文件来进行访问，相当于每个slave有各自等分的访问区域，因此不能测试多个客户的对同一个文件的读写<br>–当多主机联机测试时，写入的根目录<code>anchor</code>为同一个路径时，需要指定参数值为<code>yes</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node1</span><br><span class="line">hd=hd2,system=node2</span><br><span class="line">hd=hd3,system=node3</span><br><span class="line">fsd=fsd1,anchor=/client/,depth=2,width=100,files=100,size=4k,shared=yes</span><br></pre></td></tr></table></figure>

<p> 计算公式如下：<br> 最后一层生成文件夹个数=<code>width</code>^<code>depth</code><br> 测试文件个数=（<code>width</code>^<code>depth</code>）*<code>files</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fsd=fsd1,anchor=/dir1,depth=2,width=3,files=2,size=128k</span><br><span class="line">以上述参数为例，生成目录结构及测试文件如下：</span><br><span class="line">最后一层文件夹数=3^2=9 最后一层文件数=9*2=18</span><br><span class="line">/dir1/</span><br><span class="line">├── no_dismount.txt</span><br><span class="line">├── vdb.1_1.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">├── vdb.1_2.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">├── vdb.1_3.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">└── vdb_control.file</span><br><span class="line"></span><br><span class="line">12 directories, 20 files</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><strong>FWD（FileSystem Workload Defile）</strong></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fwd=default,operation=read,xfersize=4k,fileio=sequential,fileselect=random,threads=2</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd3,host=hd3</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>fwd=</strong> 标识文件系统工作负载定义的名称，多文件系统工作负载定义时，可以使用fwd1、fwd2、fwd3…区分</li>
<li><strong>fsd=</strong> 标识此工作负载使用文件存储定义的名称</li>
<li><strong>host=</strong> 标识此工作负载使用主机</li>
<li><strong>operation=</strong> 可选值为<code>read</code>或<code>write</code>,文件操作方式</li>
<li><strong>rdpct=</strong> 可选值为<code>0</code>~<code>100</code>，读操作占比百分比，一般混合读写时需要指定，当值为60时，则混合读写比为6：4</li>
<li><strong>fileio=</strong> <code>可选值为random</code>或<code>sequential</code>，标识文件 I/O 将执行的方式</li>
<li><strong>fileselect=</strong> <code>random</code>或<code>sequential</code>，标识选择文件或目录的方式</li>
<li><strong>xfersizes=</strong> 数据传输（读取和写入操作）处理的数据大小(即单次IO大小)</li>
<li><strong>threads=</strong> 此工作负载的并发线程数量</li>
</ul>
<ol start="4">
<li><strong>RD（Run Define）</strong></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rd=rd1,fwd=(fwd1-fwd3),fwdrate=max,format=restart,elapsed=604800,interval=10</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>rd=</strong> 标识文件系统运行定义的名称。</li>
<li><strong>fwd=</strong> 标识文件系统工作负载定义的名称。</li>
<li><strong>fwdrate=</strong> 每秒执行的文件系统操作数量。设置为max，表示不做任何限制，按照最大强度自适应</li>
<li><strong>format=</strong> 可选值为<code>yes</code>、<code>no</code>或<code>restart</code>，标识预处理目录和文件结构的方式<br>–yes表示删除目录和文件结构再重新创建<br>–no表示不删除目录和文件结构<br>–restart表示只创建未生成的目录或文件，并且增大未达到实际大小的文件</li>
<li><strong>elapsed=</strong> 默认值为<code>30</code>，测试运行持续时间（单位为秒）</li>
<li><strong>interval=</strong> 结果输出打印时间间隔（单位为秒）</li>
</ul>
<h4 id="块设备"><a href="#块设备" class="headerlink" title="块设备"></a>块设备</h4><p> <strong>块设备参数文件定义顺序为：HD、SD、WD、RD</strong></p>
<ol>
<li><strong>HD（Host Define）</strong></li>
</ol>
<blockquote>
<p>非必选项，单机运行时不需要配置HD参数，一般只有在多主机联机测试时才需要配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>hd=</strong> 标识主机定义的名称，多主机运行时，可以使用hd1、hd2、hd3…区分</li>
<li><strong>system=</strong> 主机IP地址或主机名</li>
<li><strong>vdbench=</strong> vdbench执行文件存放路径，当多主机存放路径不同时，可在hd定义时单独指定</li>
<li><strong>user=</strong> slave和master通信使用用户</li>
<li><strong>shell=</strong> 可选值为<code>rsh</code>、<code>ssh</code>或<code>vdbench</code>，默认值为<code>rsh</code>，多主机联机测试时，mater和slave主机间通信方式<br>当参数值为<code>rsh</code>时，需要配置master和slave主机rsh互信，考虑到rsh使用明文传输，安全级别不够，通常情况下不建议使用这种通信方式<br>当参数值为<code>ssh</code>时，需要配置master和slave主机ssh互信，通常Linux主机联机时使用此通信方式<br>当参数值为<code>vdbench</code>，需要在所有slave主机运行<code>vdbench rsh</code>启用vdbench本身的rsh守护进程，通常Window主机联机时使用此通信方式</li>
</ul>
<ol start="2">
<li><strong>SD（Storage Define）</strong></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflags=o_direct,threads=6</span><br><span class="line">sd=sd3,hd=hd2,lun=/dev/sdb,openflags=o_direct,threads=6</span><br><span class="line">sd=sd6,hd=hd3,lun=/dev/sdb,openflags=o_direct,threads=6</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>sd=</strong> 标识存储定义的名称</li>
<li><strong>hd=</strong> 标识主机定义的名称</li>
<li><strong>lun=</strong> 写入块设备，如：/dev/sdb, /dev/sdc…</li>
<li><strong>openflags=</strong> 通过设置为<code>o_direct</code>，以无缓冲缓存的方式进行读写操作</li>
<li><strong>threads=</strong> 对SD的最大并发I/O请求数量</li>
</ul>
<ol start="3">
<li><strong>WD（Workload Define）</strong></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wd=wd1,sd=sd*,seekpct=100,rdpct=100,xfersize=8k,skew=40</span><br><span class="line">wd=wd2,sd=sd*,seekpct=100,rdpct=0,xfersize=8k,skew=10</span><br><span class="line">wd=wd3,sd=sd*,seekpct=100,rdpct=100,xfersize=1024k,skew=40</span><br><span class="line">wd=wd4,sd=sd*,seekpct=100,rdpct=0,xfersize=1024k,skew=10</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>wd=</strong> 标识工作负载定义的名称</li>
<li><strong>sd=</strong> 标识存储定义的名称</li>
<li><strong>seekpct=</strong> 可选值为<code>0</code>或<code>100</code>(也可使用<code>sequential</code>或<code>random</code>表示)，默认值为<code>100</code>，随机寻道的百分比，设置为<code>0</code>时表示顺序，设置为<code>100</code>时表示随机。</li>
<li><strong>rdpct=</strong> 读取请求占请求总数的百分比，设置为0时表示写，设置为100时表示读</li>
<li><strong>xfersize=</strong> 要传输的数据大小。默认设置为4k</li>
<li><strong>skew=</strong> 非必选项，一般在多个工作负载时需要指定，表示该工作负载占总工作量百分比（skew总和为100）</li>
</ul>
<ol start="4">
<li><strong>RD（Run Define）</strong></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rd=rd1,wd=wd*,iorate=max,maxdata=400GB,warmup=30,elapse=604800,interval=5</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>rd=</strong> 标识运行定义的名称</li>
<li><strong>wd=</strong> 标识工作负载定义的名称</li>
<li><strong>iorate=</strong> 常用可选值为<code>100</code>、<code>max</code>，此工作负载的固定I/O速率<br>–当参数值为<code>100</code>时，以每秒100个I/Os的速度运行工作负载，当参数值设置为一个低于最大速率的值时，可以达到限制读写速度的效果<br>–当参数值为<code>max</code>时，以最大的I/O速率运行工作负载，一般测试读写最大性能时，该参数值均为<code>max</code></li>
<li><strong>warmup=</strong> 预热时间（单位为秒），默认情况下vdbench会将第一个时间间隔输出数据排除在外,程序在预热时间内的测试不纳入最终测试结果中（即预热结束后，才开始正式测试）<br>–当<code>interval</code>为5、<code>elapsed</code>为600时，测试性能为<code>2</code><del><code>elapsed/interval</code>（avg_2-120）时间间隔内的平均性能<br>–当<code>interval</code>为5、<code>warmup</code>为60、<code>elapsed</code>为600时，测试性能为<code>1+（warmup/interval）</code></del><code>（warmup+elapsed）/interval</code>(avg_13-132)时间间隔内的平均性能</li>
<li><strong>maxdata=</strong> 读写数据大小，通常情况下，当运行<code>elapsed</code>时间后测试结束；当同时指定<code>elapsed</code>和<code>maxdata</code>参数值时，以最快运行完的参数为准（即<code>maxdata</code>测试时间小于<code>elapsed</code>时，程序写完<code>elapsed</code>数据量后结束）<br>–当参数值为<code>100</code>以下时，表示读写数据量为总存储定义大小的倍数（如maxdata=2，2个存储定义（每个存储定义数据量为100G），则实际读写数据大小为400G）<br>–当参数值为<code>100</code>以上时，表示数据量为实际读写数据量（可以使用单位M、G、T等）</li>
<li><strong>elapsed=</strong> 默认值为<code>30</code>，测试运行持续时间（单位为秒）</li>
<li><strong>interval=</strong> 报告时间间隔（单位为秒）</li>
</ul>
<h3 id="运行使用"><a href="#运行使用" class="headerlink" title="运行使用"></a>运行使用</h3><h4 id="单机运行"><a href="#单机运行" class="headerlink" title="单机运行"></a>单机运行</h4><ul>
<li><strong>Linux</strong><br>示例如下，单节点针对裸盘测试，1M顺序写，测试时间600s，预热时间60s，报告时间间隔2s</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@node241 vdbench50406]# cat Single-RawDisk.html </span><br><span class="line">sd=sd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd1,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,warmup=60,elapsed=600,interval=2</span><br><span class="line">[root@node241 vdbench50406]# </span><br><span class="line">[root@node241 vdbench50406]# ./vdbench -f Single-RawDisk.html</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>Window</strong><br>示例如下，单节点针对文件系统测试，1M顺序写，目录深度为2，每层目录数为3，每个目录文件数为10，每个文件大小为200M，测试时间为600s，报告时间时间2s</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">E:\vdbench50406&gt;more &quot;Single FileSystem.txt&quot;</span><br><span class="line">fsd=fsd1,anchor=E:\Sigle-FileSystem,depth=2,width=3,files=10,size=200M</span><br><span class="line">fwd=fwd1,fsd=fsd1,operation=write,xfersize=1M,fileio=sequential,fileselect=rando</span><br><span class="line">m,threads=2</span><br><span class="line">rd=rd1,fwd=fwd1,fwdrate=max,format=yes,elapsed=600,interval=5</span><br><span class="line">E:\vdbench50406&gt;</span><br><span class="line">E:\vdbench50406&gt;vdbench -f &quot;Single FileSystem.txt&quot;</span><br></pre></td></tr></table></figure>

<h4 id="联机运行"><a href="#联机运行" class="headerlink" title="联机运行"></a>联机运行</h4><ul>
<li><strong>Linux</strong><ol>
<li>配置多主机ssh互信</li>
<li>master主机运行测试参数文件即可<br>示例如下，三节点针对裸盘联机测试，1M顺序写，测试数据量为400G，预热时间30s，报告间隔5s</li>
</ol>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@node241 vdbench50406]# cat Multi-RawDisk</span><br><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd2,hd=hd2,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd3,hd=hd3,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd*,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,maxdata=100M,elapsed=64800,warmup=30,interval=5</span><br><span class="line">[root@node241 vdbench50406]# </span><br><span class="line">[root@node241 vdbench50406]# ./vdbench -f Multi-RawDisk</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>Window</strong></p>
<ol>
<li><p>所有slave主机运行vdbench本身rsh守护进程</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">E:\vdbench50406&gt;vdbench rsh</span><br></pre></td></tr></table></figure>
</li>
<li><p>master主机运行测试参数文件即可</p>
<p>示例如下，三节点针对文件系统联机测试，1M顺序写，目录深度为2，每层目录数为3，每个目录文件数为10000，每个文件大小为200M，测试时间为600s，报告间隔1s</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">E:\vdbench50406&gt;more &quot;Multi FileSystem.txt&quot;</span><br><span class="line">hd=default,vdbench=E:\vdbench50406,user=Micah,shell=vdbench</span><br><span class="line">hd=hd1,system=66.66.66.250</span><br><span class="line">hd=hd2,system=66.66.66.252</span><br><span class="line">fsd=fsd1,anchor=Z:\Sigle-FileSystem-01,depth=2,width=3,files=10000,size=200M</span><br><span class="line">fsd=fsd2,anchor=Z:\Sigle-FileSystem-02,depth=2,width=3,files=10000,size=200M</span><br><span class="line">fwd=default,operation=write,xfersize=1M,fileio=sequential,fileselect=random,threads=16</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=yes,elapsed=600,interval=1</span><br><span class="line">E:\vdbench50406&gt;</span><br><span class="line">E:\vdbench50406&gt;vdbench -f &quot;Multi FileSystem.txt&quot;</span><br></pre></td></tr></table></figure>



</li>
</ol>
</li>
</ul>
<h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><blockquote>
<p>当vdbench运行完负载测试后，会在安装目录下生成<code>output</code>文件夹，里边包含测试结果文件</p>
</blockquote>
<h4 id="输出文件"><a href="#输出文件" class="headerlink" title="输出文件"></a>输出文件</h4><ul>
<li><p>errorlog.html</p>
<p>当运行测试启用数据校验时，它可能会包含一些错误信息，如：</p>
<ul>
<li>无效的密钥读取</li>
<li>无效的 lba 读取（一个扇区的逻辑字节地址）</li>
<li>无效的 SD 或 FSD 名称读取</li>
<li>数据损坏</li>
<li>坏扇区</li>
</ul>
</li>
<li><p><strong>flatfile.html</strong><br>vdbench 生成的一种逐列的 ASCII 格式的信息，可以使用<code>parseflat</code>参数解析结果</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">  ./vdbench parseflat -i &lt;flatfile.html&gt; -o output.csv [-c col1 col2 ..] [-a] [-f col1 value1 col2 value2..]</span><br><span class="line">    -i input flatfile, e.g. output/flatfile.html</span><br><span class="line">    -o output CSV file name (default stdout)</span><br><span class="line">    -c which column to write to CSV. Columns are written in the order specified</span><br><span class="line">    -f filters: &#x27;if (colX == valueX) ... ...&#x27; (Alphabetic compare)</span><br><span class="line">    -a include only the &#x27;avg&#x27; data. Default: include only non-avg data.</span><br><span class="line">    -i是表示待分析的文件，这里写vdbench输出目录里的flatfile.html这个文件，写其它文件不能正常解析；</span><br><span class="line">    -o是解析后的输出文件，可以手动指定存放目录。文件格式为CSV，此文件的列由-c参数指定，列的顺序为-c参数的顺序</span><br><span class="line">    -a是表示csv文件中只记录测试过程中的avg值</span><br><span class="line"></span><br><span class="line">  示例如下：</span><br><span class="line">  .\vdbench.bat parseflat -i D:\vdbench50406\output\flatfile.html -c run rate MB/sec seekpct rdpct bytes/io threads resp -o d:\output.csv -a</span><br><span class="line">vdbench parseflat arguments:</span><br><span class="line">Argument 0: -i</span><br><span class="line">Argument 1: D:\vdbench50406\output\flatfile.html</span><br><span class="line">Argument 2: -c</span><br><span class="line">Argument 3: run</span><br><span class="line">Argument 4: rate</span><br><span class="line">Argument 5: MB/sec</span><br><span class="line">Argument 6: seekpct</span><br><span class="line">Argument 7: rdpct</span><br><span class="line">Argument 8: bytes/io</span><br><span class="line">Argument 9: threads</span><br><span class="line">Argument 10: resp</span><br><span class="line">Argument 11: -o</span><br><span class="line">Argument 12: D:\output.csv</span><br><span class="line">Argument 13: -a</span><br><span class="line">14:12:49.265 ParseFlat completed successfully.</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>histogram.html</strong><br>一种包含报告柱状图的响应时间、文本格式的文件</li>
<li><strong>logfile.html</strong><br>包含 Java 代码写入控制台窗口的每行信息的副本。logfile.html 主要用于调试用途</li>
<li><strong>parmfile.html</strong><br>包含测试运行配置参数信息</li>
<li><strong>summary.html</strong><br>记录全部数据信息，显示每个报告间隔内总体性能情况及工作负载情况，以及除第一个间隔外的所有间隔的加权平均值</li>
<li><strong>totals.html</strong><br>记录全部数据计算之后的平均值，一般测试结果从该文件取值，除第一个间隔外所有间隔的加权平均值</li>
</ul>
<h4 id="结果分析-1"><a href="#结果分析-1" class="headerlink" title="结果分析"></a>结果分析</h4><h5 id="文件系统-1"><a href="#文件系统-1" class="headerlink" title="文件系统"></a>文件系统</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">测试参数如下：</span></span><br><span class="line">hd=default,vdbench=E:\vdbench50406,user=Micah,shell=vdbench</span><br><span class="line">hd=hd1,system=66.66.66.250</span><br><span class="line">hd=hd2,system=66.66.66.252</span><br><span class="line">fsd=fsd1,anchor=Z:\Sigle-FileSystem-01,depth=2,width=3,files=10,size=4M</span><br><span class="line">fsd=fsd2,anchor=Z:\Sigle-FileSystem-02,depth=2,width=3,files=10,size=4M</span><br><span class="line">fwd=default,operation=write,xfersize=1M,fileio=sequential,fileselect=random,threads=2</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=yes,elapsed=600,interval=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试结果如下：</span></span><br><span class="line">18:47:03.001 Starting RD=format_for_rd1</span><br><span class="line"></span><br><span class="line">六月 04, 2020 .Interval. .ReqstdOps... ...cpu%...  read ....read..... ....write.... ..mb/sec... mb/sec .xfer.. ...mkdir.... ...rmdir.... ...create... ....open.... ...close.... ...delete...</span><br><span class="line">                          rate   resp total  sys   pct   rate   resp   rate   resp  read write  total    size  rate   resp  rate   resp  rate   resp  rate   resp  rate   resp  rate   resp</span><br><span class="line">18:48:40.218   avg_2-20   57.6  6.244  13.4 2.99   0.0    0.0  0.000   57.6  6.244  0.00  7.20   7.20  131072   0.2 104.49   0.2 41.526   1.8 7527.0   1.8 192.01   1.8 7134.3   1.8 21.984</span><br><span class="line"></span><br><span class="line">18:48:42.000 Starting RD=rd1; elapsed=600; fwdrate=max. For loops: None</span><br><span class="line"></span><br><span class="line">18:58:42.205  avg_2-120    6.2  1.063  13.0 2.80   0.0    0.0  0.000    6.2  1.063  0.00  6.24   6.24 1048576   0.0  0.000   0.0  0.000   0.0  0.000   1.6 47.864   1.6 2401.1   0.0  0.000</span><br></pre></td></tr></table></figure>

<p> <code>totals.html</code>一般包括两个部分，第一部分为文件存储目录结构及数据填充的平均性能值，第二部分为执行测试过程中除第一个时间间隔外所有时间间隔平均性能值，主要看第二部分的内容</p>
<ul>
<li><strong>Interval</strong><br>报告间隔序号，测试结果一般为除第一个时间间隔外所有时间间隔加权平均值<br>如elapsed=600,interval=5，则性能结果为第2个间隔到第120个间隔的平均值（avg_2-120）</li>
<li><strong>ReqstdOps</strong><ul>
<li><strong>rate</strong><br>每秒读写I/O个数（<strong>读写IOPS</strong>），可以通过<code>rd</code>运行定义参数<code>fwdrate</code>控制<br>当<code>fwdrate</code>为<code>max</code>时，以最大I/O速率运行工作负载<br>当<code>fwdrate</code>为低于最大I/0速率的一个数值时，可以限制读写速度，以固定I/O速率运行工作负载</li>
<li><strong>resp</strong><br>读写请求响应时间（<strong>读写时延</strong>），单位为<code>ms</code></li>
</ul>
</li>
<li><strong>cpu%</strong><ul>
<li><strong>tatol</strong><br>总的cpu占用率</li>
<li><strong>sys</strong><br>系统cpu占用率</li>
</ul>
</li>
<li><strong>read pct</strong><br>读取请求占总请求数百分比占比，当为0时表示写，当为100时表示读</li>
<li><strong>read</strong><ul>
<li><strong>rate</strong><br>每秒读I/O个数（<strong>读IOPS</strong>）</li>
<li><strong>resp</strong><br>读请求响应时间（<strong>读时延</strong>），单位为<code>ms</code></li>
</ul>
</li>
<li><strong>write</strong><ul>
<li><strong>rate</strong><br>每秒写I/O个数（<strong>写IOPS</strong>）</li>
<li><strong>resp</strong><br>写请求响应时间（<strong>写时延</strong>），单位为<code>ms</code></li>
</ul>
</li>
<li><strong>mb/sec</strong><ul>
<li><strong>read</strong><br>每秒读取速度</li>
<li><strong>write</strong><br>每秒写入速度</li>
<li><strong>total</strong><br>每秒读写速度总和</li>
</ul>
</li>
<li><strong>xfersize</strong><br>每个读写I/O传输数据量（即单个读写I/O大小），单位为字节<code>B</code></li>
</ul>
<h5 id="块设备-1"><a href="#块设备-1" class="headerlink" title="块设备"></a>块设备</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">测试参数如下：</span></span><br><span class="line">messagescan=no</span><br><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd2,hd=hd2,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd3,hd=hd3,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd*,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,elapsed=600,warmup=30,interval=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试结果如下：</span></span><br><span class="line">&lt;a name=&quot;_1143839598&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;b&gt;19:02:15.001 Starting RD=rd1; I/O rate: Uncontrolled MAX; elapsed=600 warmup=30; For loops: None&lt;/b&gt;&lt;/i&gt;</span><br><span class="line"></span><br><span class="line">Jun 04, 2020  interval        i/o   MB/sec   bytes   read     resp     read    write     resp     resp queue  cpu%  cpu%</span><br><span class="line">                             rate  1024**2     i/o    pct     time     resp     resp      max   stddev depth sys+u   sys</span><br><span class="line">19:12:46.068 avg_7-126      82.74    82.74 1048576   0.00  289.158    0.000  289.158 2092.803  155.103  23.9  16.3  14.2</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>interval</strong><br>报告间隔序号，测试结果一般为除第一个时间时间外所有时间间隔加权平均值，如有设置预热时间，则这部分测试数据也需要排除在外<br>如elapsed=600,warmup=30，interval=5，则性能测试结果为第7个间隔到第126个间隔的平均值（avg_7-126）</li>
<li><strong>i/o rate</strong><br>每秒读写I/O个数（<strong>读写IOPS</strong>），可以通过<code>rd</code>运行定义参数<code>iorate</code>控制<br>当<code>iorate</code>为<code>max</code>时，以最大I/O速率运行工作负载<br>当<code>iorate</code>为低于最大I/0速率的一个数值时，可以限制读写速度，以固定I/O速率运行工作负载</li>
<li><strong>MB/sec</strong><br>每秒读写速度（<strong>读写带宽</strong>）<br>注：按官方手册说明，</li>
<li><strong>bytes i/0</strong><br>每个读写I/O传输数据量（即单个读写I/O大小），单位为字节<code>B</code>，可以通过<code>wd</code>工作负载定义参数<code>xfersize</code>控制</li>
<li><strong>read pct</strong><br>读取请求占请求总数的百分比，可以通过<code>wd</code>工作负载定义参数<code>rdpct</code>控制<br>当<code>rdpct</code>为<code>0</code>时，表示测试模型为写<br>当<code>rdpct</code>为<code>100</code>时，表示测试模型为读</li>
<li><strong>resp time</strong><br>请求响应时间（<strong>读写时延</strong>），单位为毫秒<code>ms</code></li>
<li><strong>read resp</strong><br>读取请求响应时间，单位为毫秒<code>ms</code></li>
<li><strong>write resp</strong><br>写入请求响应时间，单位为毫秒<code>ms</code></li>
<li><strong>resp max</strong><br>最大请求响应时间，单位为毫秒<code>ms</code></li>
<li><strong>resp stddev</strong><br>请求响应时间标准偏差，单位为毫秒<code>ms</code></li>
<li><strong>queue depth</strong><br>读写I/0队列深度</li>
<li><strong>cpu% sys+u</strong><br>内核态空间及用户态空间CPU占用率</li>
<li><strong>cpu% sys</strong><br>内核态空间CPU占用率 2020年05月29日 16:00:16 Clear</li>
</ul>
<h3 id="测试说明"><a href="#测试说明" class="headerlink" title="测试说明"></a>测试说明</h3><ol>
<li>线程数（thread）一般设置为客户端CPU线程数总大小 <code>grep &#39;processor&#39; /proc/cpuinfo | sort -u | wc -l</code></li>
<li>测试总数据量需要为客户端内存大小两倍</li>
<li>测试读模型时需要清理客户端缓存信息 <code>sync；echo 3 &gt; /proc/sys/vm/drop</code></li>
</ol>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://www.cnblogs.com/raykuan/p/6914748.html">IO测试工具之fio详解</a></li>
<li><a href="https://bbs.huaweicloud.com/forum/thread-90290-1-1.html">FIO测试工具使用指导</a></li>
<li><a href="https://blog.51cto.com/liyuh/747746">IOmeter - IO性能测试工具</a></li>
<li><a href="https://www.cnblogs.com/luxf0/p/13321077.html">vdbench配置说明</a></li>
<li><a href="https://blog.csdn.net/u012114090/article/details/81626430">vdbench的使用教程——裸盘测试和文件系统测试</a></li>
<li><a href="https://blog.csdn.net/YINHAOXU1/article/details/106343147">简单记录FIO和Vdbench的测试脚本</a></li>
</ul>
]]></content>
      <categories>
        <category>存储</category>
      </categories>
      <tags>
        <tag>性能基准测试</tag>
        <tag>存储</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack研发：neutronclient</title>
    <url>/2021/09/28/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9Aneutronclient/</url>
    <content><![CDATA[<h2 id="研发环境"><a href="#研发环境" class="headerlink" title="研发环境"></a>研发环境</h2><ul>
<li>python：3.6.8</li>
<li>python-neutronclient   7.1.0</li>
</ul>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><strong>neutronclient调用方法</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> identity</span><br><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> session</span><br><span class="line"><span class="keyword">from</span> neutronclient.v2_0 <span class="keyword">import</span> client</span><br><span class="line"></span><br><span class="line">username=<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">password=<span class="string">&#x27;Inspur@123&#x27;</span></span><br><span class="line">project_name=<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">project_domain_id=<span class="string">&#x27;default&#x27;</span></span><br><span class="line">user_domain_id=<span class="string">&#x27;default&#x27;</span></span><br><span class="line">auth_url=<span class="string">&#x27;http://111.111.9.190:35357/v3&#x27;</span></span><br><span class="line"></span><br><span class="line">auth = identity.Password(auth_url=auth_url,</span><br><span class="line">                         username=username,</span><br><span class="line">                         password=password,</span><br><span class="line">                         project_name=project_name,</span><br><span class="line">                         project_domain_id=project_domain_id,</span><br><span class="line">                         user_domain_id=user_domain_id)</span><br><span class="line">sess = session.Session(auth=auth)</span><br><span class="line">neutron = client.Client(session=sess)</span><br></pre></td></tr></table></figure>



<p><strong>neutronclient支持的方法</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 代码取自neutronclient &gt; v2_0 &gt; client.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span>(<span class="params">ClientBase</span>):</span></span><br><span class="line"></span><br><span class="line">    networks_path = <span class="string">&quot;/networks&quot;</span></span><br><span class="line">    network_path = <span class="string">&quot;/networks/%s&quot;</span></span><br><span class="line">    ports_path = <span class="string">&quot;/ports&quot;</span></span><br><span class="line">    port_path = <span class="string">&quot;/ports/%s&quot;</span></span><br><span class="line">    port_bindings_path = <span class="string">&quot;/ports/%s/bindings&quot;</span></span><br><span class="line">    port_binding_path = <span class="string">&quot;/ports/%s/bindings/%s&quot;</span></span><br><span class="line">    port_binding_path_activate = <span class="string">&quot;/ports/%s/bindings/%s/activate&quot;</span></span><br><span class="line">    subnets_path = <span class="string">&quot;/subnets&quot;</span></span><br><span class="line">    subnet_path = <span class="string">&quot;/subnets/%s&quot;</span></span><br><span class="line">    onboard_network_subnets_path = <span class="string">&quot;/subnetpools/%s/onboard_network_subnets&quot;</span></span><br><span class="line">    subnetpools_path = <span class="string">&quot;/subnetpools&quot;</span></span><br><span class="line">    subnetpool_path = <span class="string">&quot;/subnetpools/%s&quot;</span></span><br><span class="line">    address_scopes_path = <span class="string">&quot;/address-scopes&quot;</span></span><br><span class="line">    address_scope_path = <span class="string">&quot;/address-scopes/%s&quot;</span></span><br><span class="line">    quotas_path = <span class="string">&quot;/quotas&quot;</span></span><br><span class="line">    quota_path = <span class="string">&quot;/quotas/%s&quot;</span></span><br><span class="line">    quota_default_path = <span class="string">&quot;/quotas/%s/default&quot;</span></span><br><span class="line">    quota_details_path = <span class="string">&quot;/quotas/%s/details.json&quot;</span></span><br><span class="line">    extensions_path = <span class="string">&quot;/extensions&quot;</span></span><br><span class="line">    extension_path = <span class="string">&quot;/extensions/%s&quot;</span></span><br><span class="line">    routers_path = <span class="string">&quot;/routers&quot;</span></span><br><span class="line">    router_path = <span class="string">&quot;/routers/%s&quot;</span></span><br><span class="line">    floatingips_path = <span class="string">&quot;/floatingips&quot;</span></span><br><span class="line">    floatingip_path = <span class="string">&quot;/floatingips/%s&quot;</span></span><br><span class="line">    security_groups_path = <span class="string">&quot;/security-groups&quot;</span></span><br><span class="line">    security_group_path = <span class="string">&quot;/security-groups/%s&quot;</span></span><br><span class="line">    security_group_rules_path = <span class="string">&quot;/security-group-rules&quot;</span></span><br><span class="line">    security_group_rule_path = <span class="string">&quot;/security-group-rules/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    sfc_flow_classifiers_path = <span class="string">&quot;/sfc/flow_classifiers&quot;</span></span><br><span class="line">    sfc_flow_classifier_path = <span class="string">&quot;/sfc/flow_classifiers/%s&quot;</span></span><br><span class="line">    sfc_port_pairs_path = <span class="string">&quot;/sfc/port_pairs&quot;</span></span><br><span class="line">    sfc_port_pair_path = <span class="string">&quot;/sfc/port_pairs/%s&quot;</span></span><br><span class="line">    sfc_port_pair_groups_path = <span class="string">&quot;/sfc/port_pair_groups&quot;</span></span><br><span class="line">    sfc_port_pair_group_path = <span class="string">&quot;/sfc/port_pair_groups/%s&quot;</span></span><br><span class="line">    sfc_port_chains_path = <span class="string">&quot;/sfc/port_chains&quot;</span></span><br><span class="line">    sfc_port_chain_path = <span class="string">&quot;/sfc/port_chains/%s&quot;</span></span><br><span class="line">    sfc_service_graphs_path = <span class="string">&quot;/sfc/service_graphs&quot;</span></span><br><span class="line">    sfc_service_graph_path = <span class="string">&quot;/sfc/service_graphs/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    endpoint_groups_path = <span class="string">&quot;/vpn/endpoint-groups&quot;</span></span><br><span class="line">    endpoint_group_path = <span class="string">&quot;/vpn/endpoint-groups/%s&quot;</span></span><br><span class="line">    vpnservices_path = <span class="string">&quot;/vpn/vpnservices&quot;</span></span><br><span class="line">    vpnservice_path = <span class="string">&quot;/vpn/vpnservices/%s&quot;</span></span><br><span class="line">    ipsecpolicies_path = <span class="string">&quot;/vpn/ipsecpolicies&quot;</span></span><br><span class="line">    ipsecpolicy_path = <span class="string">&quot;/vpn/ipsecpolicies/%s&quot;</span></span><br><span class="line">    ikepolicies_path = <span class="string">&quot;/vpn/ikepolicies&quot;</span></span><br><span class="line">    ikepolicy_path = <span class="string">&quot;/vpn/ikepolicies/%s&quot;</span></span><br><span class="line">    ipsec_site_connections_path = <span class="string">&quot;/vpn/ipsec-site-connections&quot;</span></span><br><span class="line">    ipsec_site_connection_path = <span class="string">&quot;/vpn/ipsec-site-connections/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    lbaas_loadbalancers_path = <span class="string">&quot;/lbaas/loadbalancers&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path = <span class="string">&quot;/lbaas/loadbalancers/%s&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path_stats = <span class="string">&quot;/lbaas/loadbalancers/%s/stats&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path_status = <span class="string">&quot;/lbaas/loadbalancers/%s/statuses&quot;</span></span><br><span class="line">    lbaas_listeners_path = <span class="string">&quot;/lbaas/listeners&quot;</span></span><br><span class="line">    lbaas_listener_path = <span class="string">&quot;/lbaas/listeners/%s&quot;</span></span><br><span class="line">    lbaas_l7policies_path = <span class="string">&quot;/lbaas/l7policies&quot;</span></span><br><span class="line">    lbaas_l7policy_path = lbaas_l7policies_path + <span class="string">&quot;/%s&quot;</span></span><br><span class="line">    lbaas_l7rules_path = lbaas_l7policy_path + <span class="string">&quot;/rules&quot;</span></span><br><span class="line">    lbaas_l7rule_path = lbaas_l7rules_path + <span class="string">&quot;/%s&quot;</span></span><br><span class="line">    lbaas_pools_path = <span class="string">&quot;/lbaas/pools&quot;</span></span><br><span class="line">    lbaas_pool_path = <span class="string">&quot;/lbaas/pools/%s&quot;</span></span><br><span class="line">    lbaas_healthmonitors_path = <span class="string">&quot;/lbaas/healthmonitors&quot;</span></span><br><span class="line">    lbaas_healthmonitor_path = <span class="string">&quot;/lbaas/healthmonitors/%s&quot;</span></span><br><span class="line">    lbaas_members_path = lbaas_pool_path + <span class="string">&quot;/members&quot;</span></span><br><span class="line">    lbaas_member_path = lbaas_pool_path + <span class="string">&quot;/members/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    vips_path = <span class="string">&quot;/lb/vips&quot;</span></span><br><span class="line">    vip_path = <span class="string">&quot;/lb/vips/%s&quot;</span></span><br><span class="line">    pools_path = <span class="string">&quot;/lb/pools&quot;</span></span><br><span class="line">    pool_path = <span class="string">&quot;/lb/pools/%s&quot;</span></span><br><span class="line">    pool_path_stats = <span class="string">&quot;/lb/pools/%s/stats&quot;</span></span><br><span class="line">    members_path = <span class="string">&quot;/lb/members&quot;</span></span><br><span class="line">    member_path = <span class="string">&quot;/lb/members/%s&quot;</span></span><br><span class="line">    health_monitors_path = <span class="string">&quot;/lb/health_monitors&quot;</span></span><br><span class="line">    health_monitor_path = <span class="string">&quot;/lb/health_monitors/%s&quot;</span></span><br><span class="line">    associate_pool_health_monitors_path = <span class="string">&quot;/lb/pools/%s/health_monitors&quot;</span></span><br><span class="line">    disassociate_pool_health_monitors_path = (</span><br><span class="line">        <span class="string">&quot;/lb/pools/%(pool)s/health_monitors/%(health_monitor)s&quot;</span>)</span><br><span class="line">    qos_queues_path = <span class="string">&quot;/qos-queues&quot;</span></span><br><span class="line">    qos_queue_path = <span class="string">&quot;/qos-queues/%s&quot;</span></span><br><span class="line">    agents_path = <span class="string">&quot;/agents&quot;</span></span><br><span class="line">    agent_path = <span class="string">&quot;/agents/%s&quot;</span></span><br><span class="line">    network_gateways_path = <span class="string">&quot;/network-gateways&quot;</span></span><br><span class="line">    network_gateway_path = <span class="string">&quot;/network-gateways/%s&quot;</span></span><br><span class="line">    gateway_devices_path = <span class="string">&quot;/gateway-devices&quot;</span></span><br><span class="line">    gateway_device_path = <span class="string">&quot;/gateway-devices/%s&quot;</span></span><br><span class="line">    service_providers_path = <span class="string">&quot;/service-providers&quot;</span></span><br><span class="line">    metering_labels_path = <span class="string">&quot;/metering/metering-labels&quot;</span></span><br><span class="line">    metering_label_path = <span class="string">&quot;/metering/metering-labels/%s&quot;</span></span><br><span class="line">    metering_label_rules_path = <span class="string">&quot;/metering/metering-label-rules&quot;</span></span><br><span class="line">    metering_label_rule_path = <span class="string">&quot;/metering/metering-label-rules/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    DHCP_NETS = <span class="string">&#x27;/dhcp-networks&#x27;</span></span><br><span class="line">    DHCP_AGENTS = <span class="string">&#x27;/dhcp-agents&#x27;</span></span><br><span class="line">    L3_ROUTERS = <span class="string">&#x27;/l3-routers&#x27;</span></span><br><span class="line">    L3_AGENTS = <span class="string">&#x27;/l3-agents&#x27;</span></span><br><span class="line">    LOADBALANCER_POOLS = <span class="string">&#x27;/loadbalancer-pools&#x27;</span></span><br><span class="line">    LOADBALANCER_AGENT = <span class="string">&#x27;/loadbalancer-agent&#x27;</span></span><br><span class="line">    AGENT_LOADBALANCERS = <span class="string">&#x27;/agent-loadbalancers&#x27;</span></span><br><span class="line">    LOADBALANCER_HOSTING_AGENT = <span class="string">&#x27;/loadbalancer-hosting-agent&#x27;</span></span><br><span class="line">    firewall_rules_path = <span class="string">&quot;/fw/firewall_rules&quot;</span></span><br><span class="line">    firewall_rule_path = <span class="string">&quot;/fw/firewall_rules/%s&quot;</span></span><br><span class="line">    firewall_policies_path = <span class="string">&quot;/fw/firewall_policies&quot;</span></span><br><span class="line">    firewall_policy_path = <span class="string">&quot;/fw/firewall_policies/%s&quot;</span></span><br><span class="line">    firewall_policy_insert_path = <span class="string">&quot;/fw/firewall_policies/%s/insert_rule&quot;</span></span><br><span class="line">    firewall_policy_remove_path = <span class="string">&quot;/fw/firewall_policies/%s/remove_rule&quot;</span></span><br><span class="line">    firewalls_path = <span class="string">&quot;/fw/firewalls&quot;</span></span><br><span class="line">    firewall_path = <span class="string">&quot;/fw/firewalls/%s&quot;</span></span><br><span class="line">    fwaas_firewall_groups_path = <span class="string">&quot;/fwaas/firewall_groups&quot;</span></span><br><span class="line">    fwaas_firewall_group_path = <span class="string">&quot;/fwaas/firewall_groups/%s&quot;</span></span><br><span class="line">    fwaas_firewall_rules_path = <span class="string">&quot;/fwaas/firewall_rules&quot;</span></span><br><span class="line">    fwaas_firewall_rule_path = <span class="string">&quot;/fwaas/firewall_rules/%s&quot;</span></span><br><span class="line">    fwaas_firewall_policies_path = <span class="string">&quot;/fwaas/firewall_policies&quot;</span></span><br><span class="line">    fwaas_firewall_policy_path = <span class="string">&quot;/fwaas/firewall_policies/%s&quot;</span></span><br><span class="line">    fwaas_firewall_policy_insert_path = \</span><br><span class="line">        <span class="string">&quot;/fwaas/firewall_policies/%s/insert_rule&quot;</span></span><br><span class="line">    fwaas_firewall_policy_remove_path = \</span><br><span class="line">        <span class="string">&quot;/fwaas/firewall_policies/%s/remove_rule&quot;</span></span><br><span class="line">    rbac_policies_path = <span class="string">&quot;/rbac-policies&quot;</span></span><br><span class="line">    rbac_policy_path = <span class="string">&quot;/rbac-policies/%s&quot;</span></span><br><span class="line">    qos_policies_path = <span class="string">&quot;/qos/policies&quot;</span></span><br><span class="line">    qos_policy_path = <span class="string">&quot;/qos/policies/%s&quot;</span></span><br><span class="line">    qos_bandwidth_limit_rules_path = <span class="string">&quot;/qos/policies/%s/bandwidth_limit_rules&quot;</span></span><br><span class="line">    qos_bandwidth_limit_rule_path = <span class="string">&quot;/qos/policies/%s/bandwidth_limit_rules/%s&quot;</span></span><br><span class="line">    qos_dscp_marking_rules_path = <span class="string">&quot;/qos/policies/%s/dscp_marking_rules&quot;</span></span><br><span class="line">    qos_dscp_marking_rule_path = <span class="string">&quot;/qos/policies/%s/dscp_marking_rules/%s&quot;</span></span><br><span class="line">    qos_minimum_bandwidth_rules_path = \</span><br><span class="line">        <span class="string">&quot;/qos/policies/%s/minimum_bandwidth_rules&quot;</span></span><br><span class="line">    qos_minimum_bandwidth_rule_path = \</span><br><span class="line">        <span class="string">&quot;/qos/policies/%s/minimum_bandwidth_rules/%s&quot;</span></span><br><span class="line">    qos_rule_types_path = <span class="string">&quot;/qos/rule-types&quot;</span></span><br><span class="line">    qos_rule_type_path = <span class="string">&quot;/qos/rule-types/%s&quot;</span></span><br><span class="line">    flavors_path = <span class="string">&quot;/flavors&quot;</span></span><br><span class="line">    flavor_path = <span class="string">&quot;/flavors/%s&quot;</span></span><br><span class="line">    service_profiles_path = <span class="string">&quot;/service_profiles&quot;</span></span><br><span class="line">    service_profile_path = <span class="string">&quot;/service_profiles/%s&quot;</span></span><br><span class="line">    flavor_profile_bindings_path = flavor_path + service_profiles_path</span><br><span class="line">    flavor_profile_binding_path = flavor_path + service_profile_path</span><br><span class="line">    availability_zones_path = <span class="string">&quot;/availability_zones&quot;</span></span><br><span class="line">    auto_allocated_topology_path = <span class="string">&quot;/auto-allocated-topology/%s&quot;</span></span><br><span class="line">    BGP_DRINSTANCES = <span class="string">&quot;/bgp-drinstances&quot;</span></span><br><span class="line">    BGP_DRINSTANCE = <span class="string">&quot;/bgp-drinstance/%s&quot;</span></span><br><span class="line">    BGP_DRAGENTS = <span class="string">&quot;/bgp-dragents&quot;</span></span><br><span class="line">    BGP_DRAGENT = <span class="string">&quot;/bgp-dragents/%s&quot;</span></span><br><span class="line">    bgp_speakers_path = <span class="string">&quot;/bgp-speakers&quot;</span></span><br><span class="line">    bgp_speaker_path = <span class="string">&quot;/bgp-speakers/%s&quot;</span></span><br><span class="line">    bgp_peers_path = <span class="string">&quot;/bgp-peers&quot;</span></span><br><span class="line">    bgp_peer_path = <span class="string">&quot;/bgp-peers/%s&quot;</span></span><br><span class="line">    network_ip_availabilities_path = <span class="string">&#x27;/network-ip-availabilities&#x27;</span></span><br><span class="line">    network_ip_availability_path = <span class="string">&#x27;/network-ip-availabilities/%s&#x27;</span></span><br><span class="line">    tags_path = <span class="string">&quot;/%s/%s/tags&quot;</span></span><br><span class="line">    tag_path = <span class="string">&quot;/%s/%s/tags/%s&quot;</span></span><br><span class="line">    trunks_path = <span class="string">&quot;/trunks&quot;</span></span><br><span class="line">    trunk_path = <span class="string">&quot;/trunks/%s&quot;</span></span><br><span class="line">    subports_path = <span class="string">&quot;/trunks/%s/get_subports&quot;</span></span><br><span class="line">    subports_add_path = <span class="string">&quot;/trunks/%s/add_subports&quot;</span></span><br><span class="line">    subports_remove_path = <span class="string">&quot;/trunks/%s/remove_subports&quot;</span></span><br><span class="line">    bgpvpns_path = <span class="string">&quot;/bgpvpn/bgpvpns&quot;</span></span><br><span class="line">    bgpvpn_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s&quot;</span></span><br><span class="line">    bgpvpn_network_associations_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/network_associations&quot;</span></span><br><span class="line">    bgpvpn_network_association_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/network_associations/%s&quot;</span></span><br><span class="line">    bgpvpn_router_associations_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/router_associations&quot;</span></span><br><span class="line">    bgpvpn_router_association_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/router_associations/%s&quot;</span></span><br><span class="line">    bgpvpn_port_associations_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/port_associations&quot;</span></span><br><span class="line">    bgpvpn_port_association_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/port_associations/%s&quot;</span></span><br><span class="line">    network_logs_path = <span class="string">&quot;/log/logs&quot;</span></span><br><span class="line">    network_log_path = <span class="string">&quot;/log/logs/%s&quot;</span></span><br><span class="line">    network_loggables_path = <span class="string">&quot;/log/loggable-resources&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># API has no way to report plurals, so we have to hard code them</span></span><br><span class="line">    EXTED_PLURALS = &#123;<span class="string">&#x27;routers&#x27;</span>: <span class="string">&#x27;router&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;floatingips&#x27;</span>: <span class="string">&#x27;floatingip&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_types&#x27;</span>: <span class="string">&#x27;service_type&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_definitions&#x27;</span>: <span class="string">&#x27;service_definition&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;security_groups&#x27;</span>: <span class="string">&#x27;security_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;security_group_rules&#x27;</span>: <span class="string">&#x27;security_group_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ipsecpolicies&#x27;</span>: <span class="string">&#x27;ipsecpolicy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ikepolicies&#x27;</span>: <span class="string">&#x27;ikepolicy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ipsec_site_connections&#x27;</span>: <span class="string">&#x27;ipsec_site_connection&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;vpnservices&#x27;</span>: <span class="string">&#x27;vpnservice&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;endpoint_groups&#x27;</span>: <span class="string">&#x27;endpoint_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;vips&#x27;</span>: <span class="string">&#x27;vip&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;pools&#x27;</span>: <span class="string">&#x27;pool&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;members&#x27;</span>: <span class="string">&#x27;member&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;health_monitors&#x27;</span>: <span class="string">&#x27;health_monitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;quotas&#x27;</span>: <span class="string">&#x27;quota&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_providers&#x27;</span>: <span class="string">&#x27;service_provider&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewall_rules&#x27;</span>: <span class="string">&#x27;firewall_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewall_policies&#x27;</span>: <span class="string">&#x27;firewall_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewalls&#x27;</span>: <span class="string">&#x27;firewall&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_rules&#x27;</span>: <span class="string">&#x27;fwaas_firewall_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_policies&#x27;</span>: <span class="string">&#x27;fwaas_firewall_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_groups&#x27;</span>: <span class="string">&#x27;fwaas_firewall_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;metering_labels&#x27;</span>: <span class="string">&#x27;metering_label&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;metering_label_rules&#x27;</span>: <span class="string">&#x27;metering_label_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;loadbalancers&#x27;</span>: <span class="string">&#x27;loadbalancer&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;listeners&#x27;</span>: <span class="string">&#x27;listener&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;l7rules&#x27;</span>: <span class="string">&#x27;l7rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;l7policies&#x27;</span>: <span class="string">&#x27;l7policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_l7policies&#x27;</span>: <span class="string">&#x27;lbaas_l7policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_pools&#x27;</span>: <span class="string">&#x27;lbaas_pool&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_healthmonitors&#x27;</span>: <span class="string">&#x27;lbaas_healthmonitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_members&#x27;</span>: <span class="string">&#x27;lbaas_member&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;healthmonitors&#x27;</span>: <span class="string">&#x27;healthmonitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rbac_policies&#x27;</span>: <span class="string">&#x27;rbac_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;address_scopes&#x27;</span>: <span class="string">&#x27;address_scope&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;qos_policies&#x27;</span>: <span class="string">&#x27;qos_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;policies&#x27;</span>: <span class="string">&#x27;policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bandwidth_limit_rules&#x27;</span>: <span class="string">&#x27;bandwidth_limit_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;minimum_bandwidth_rules&#x27;</span>: <span class="string">&#x27;minimum_bandwidth_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rules&#x27;</span>: <span class="string">&#x27;rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;dscp_marking_rules&#x27;</span>: <span class="string">&#x27;dscp_marking_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rule_types&#x27;</span>: <span class="string">&#x27;rule_type&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;flavors&#x27;</span>: <span class="string">&#x27;flavor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgp_speakers&#x27;</span>: <span class="string">&#x27;bgp_speaker&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgp_peers&#x27;</span>: <span class="string">&#x27;bgp_peer&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;network_ip_availabilities&#x27;</span>: <span class="string">&#x27;network_ip_availability&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;trunks&#x27;</span>: <span class="string">&#x27;trunk&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgpvpns&#x27;</span>: <span class="string">&#x27;bgpvpn&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;network_associations&#x27;</span>: <span class="string">&#x27;network_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;router_associations&#x27;</span>: <span class="string">&#x27;router_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_associations&#x27;</span>: <span class="string">&#x27;port_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;flow_classifiers&#x27;</span>: <span class="string">&#x27;flow_classifier&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_pairs&#x27;</span>: <span class="string">&#x27;port_pair&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_pair_groups&#x27;</span>: <span class="string">&#x27;port_pair_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_chains&#x27;</span>: <span class="string">&#x27;port_chain&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_graphs&#x27;</span>: <span class="string">&#x27;service_graph&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;logs&#x27;</span>: <span class="string">&#x27;log&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;loggable_resources&#x27;</span>: <span class="string">&#x27;loggable_resource&#x27;</span>,</span><br><span class="line">                     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ext</span>(<span class="params">self, collection, path, retrieve_all, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for list.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(collection, path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ext</span>(<span class="params">self, path, id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for show.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(path % id, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ext</span>(<span class="params">self, path, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for create.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ext</span>(<span class="params">self, path, id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for update.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(path % id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ext</span>(<span class="params">self, path, id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for delete.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(path % id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_quotas_tenant</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch project info for following quota operation.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_path % <span class="string">&#x27;tenant&#x27;</span>, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_quotas</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch all projects&#x27; quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quotas_path, params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_path % (project_id), params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota_details</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s quota details.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_details_path % (project_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota_default</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s default quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_default_path % (project_id), params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_quota</span>(<span class="params">self, project_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a project&#x27;s quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.quota_path % (project_id), body=body)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_quota</span>(<span class="params">self, project_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified project&#x27;s quota values.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.quota_path % (project_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_extensions</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all extensions on server side.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.extensions_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_extension</span>(<span class="params">self, ext_alias, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain extension.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.extension_path % ext_alias, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ports</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all ports for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ports&#x27;</span>, self.ports_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_port</span>(<span class="params">self, port, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.port_path % (port), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_port</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ports_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_port</span>(<span class="params">self, port, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.port_path % (port), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_port</span>(<span class="params">self, port</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.port_path % (port))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_port_binding</span>(<span class="params">self, port_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.port_bindings_path % port_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_port_binding</span>(<span class="params">self, port_id, host_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.port_binding_path % (port_id, host_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_port_binding</span>(<span class="params">self, port_id, host_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.port_binding_path % (port_id, host_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_port_bindings</span>(<span class="params">self, port_id, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all bindings for a certain port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_bindings&#x27;</span>, self.port_bindings_path % port_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">activate_port_binding</span>(<span class="params">self, port_id, host_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Activates a port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.port_binding_path_activate % (port_id, host_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_networks</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all networks for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;networks&#x27;</span>, self.networks_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_path % (network), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.networks_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network</span>(<span class="params">self, network, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.network_path % (network), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network</span>(<span class="params">self, network</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_path % (network))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_subnets</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all subnets for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;subnets&#x27;</span>, self.subnets_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_subnet</span>(<span class="params">self, subnet, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subnet_path % (subnet), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_subnet</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.subnets_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_subnet</span>(<span class="params">self, subnet, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.subnet_path % (subnet), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_subnet</span>(<span class="params">self, subnet</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.subnet_path % (subnet))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_subnetpools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all subnetpools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;subnetpools&#x27;</span>, self.subnetpools_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_subnetpool</span>(<span class="params">self, subnetpool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subnetpool_path % (subnetpool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_subnetpool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.subnetpools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_subnetpool</span>(<span class="params">self, subnetpool, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.subnetpool_path % (subnetpool),</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_subnetpool</span>(<span class="params">self, subnetpool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.subnetpool_path % (subnetpool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_routers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all routers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;routers&#x27;</span>, self.routers_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_router</span>(<span class="params">self, router, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.router_path % (router), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_router</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.routers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_router</span>(<span class="params">self, router, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.router_path % (router), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_router</span>(<span class="params">self, router</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.router_path % (router))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_address_scopes</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all address scopes for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;address_scopes&#x27;</span>, self.address_scopes_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_address_scope</span>(<span class="params">self, address_scope, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.address_scope_path % (address_scope),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_address_scope</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.address_scopes_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_address_scope</span>(<span class="params">self, address_scope, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.address_scope_path % (address_scope), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_address_scope</span>(<span class="params">self, address_scope</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.address_scope_path % (address_scope))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_interface_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds an internal network interface to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/add_router_interface&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_interface_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes an internal network interface from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) +</span><br><span class="line">                        <span class="string">&quot;/remove_router_interface&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_extra_routes_to_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds extra routes to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/add_extraroutes&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_extra_routes_from_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes extra routes from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/remove_extraroutes&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_gateway_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds an external network gateway to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router),</span><br><span class="line">                        body=&#123;<span class="string">&#x27;router&#x27;</span>: &#123;<span class="string">&#x27;external_gateway_info&#x27;</span>: body&#125;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_gateway_router</span>(<span class="params">self, router</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes an external network gateway from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router),</span><br><span class="line">                        body=&#123;<span class="string">&#x27;router&#x27;</span>: &#123;<span class="string">&#x27;external_gateway_info&#x27;</span>: &#123;&#125;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_floatingips</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all floatingips for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;floatingips&#x27;</span>, self.floatingips_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_floatingip</span>(<span class="params">self, floatingip, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.floatingip_path % (floatingip), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_floatingip</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.floatingips_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_floatingip</span>(<span class="params">self, floatingip, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.floatingip_path % (floatingip),</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_floatingip</span>(<span class="params">self, floatingip</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.floatingip_path % (floatingip))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_security_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.security_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_security_group</span>(<span class="params">self, security_group, body=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                              revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.security_group_path %</span><br><span class="line">                                     security_group, body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_security_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all security groups for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;security_groups&#x27;</span>, self.security_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_security_group</span>(<span class="params">self, security_group, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.security_group_path % (security_group),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_security_group</span>(<span class="params">self, security_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.security_group_path % (security_group))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_security_group_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.security_group_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_security_group_rule</span>(<span class="params">self, security_group_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.security_group_rule_path %</span><br><span class="line">                           (security_group_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_security_group_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all security group rules for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;security_group_rules&#x27;</span>,</span><br><span class="line">                         self.security_group_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_security_group_rule</span>(<span class="params">self, security_group_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.security_group_rule_path % (security_group_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_endpoint_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all VPN endpoint groups for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;endpoint_groups&#x27;</span>, self.endpoint_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_endpoint_group</span>(<span class="params">self, endpointgroup, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a specific VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.endpoint_group_path % endpointgroup,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_endpoint_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.endpoint_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_endpoint_group</span>(<span class="params">self, endpoint_group, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.endpoint_group_path % endpoint_group, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_endpoint_group</span>(<span class="params">self, endpoint_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.endpoint_group_path % endpoint_group)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_vpnservices</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured VPN services for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;vpnservices&#x27;</span>, self.vpnservices_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_vpnservice</span>(<span class="params">self, vpnservice, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.vpnservice_path % (vpnservice), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_vpnservice</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.vpnservices_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_vpnservice</span>(<span class="params">self, vpnservice, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.vpnservice_path % (vpnservice), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_vpnservice</span>(<span class="params">self, vpnservice</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.vpnservice_path % (vpnservice))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ipsec_site_connections</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches all configured IPsecSiteConnections for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ipsec_site_connections&#x27;</span>,</span><br><span class="line">                         self.ipsec_site_connections_path,</span><br><span class="line">                         retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.ipsec_site_connection_path % (ipsecsite_conn), params=_params</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ipsec_site_connection</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ipsec_site_connections_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.ipsec_site_connection_path % (ipsecsite_conn), body=body</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ipsec_site_connection_path % (ipsecsite_conn))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ikepolicies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured IKEPolicies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ikepolicies&#x27;</span>, self.ikepolicies_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ikepolicy</span>(<span class="params">self, ikepolicy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.ikepolicy_path % (ikepolicy), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ikepolicy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ikepolicies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ikepolicy</span>(<span class="params">self, ikepolicy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.ikepolicy_path % (ikepolicy), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ikepolicy</span>(<span class="params">self, ikepolicy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ikepolicy_path % (ikepolicy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ipsecpolicies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured IPsecPolicies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ipsecpolicies&#x27;</span>,</span><br><span class="line">                         self.ipsecpolicies_path,</span><br><span class="line">                         retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ipsecpolicy</span>(<span class="params">self, ipsecpolicy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.ipsecpolicy_path % (ipsecpolicy), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ipsecpolicy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ipsecpolicies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ipsecpolicy</span>(<span class="params">self, ipsecpolicy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.ipsecpolicy_path % (ipsecpolicy), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ipsecpolicy</span>(<span class="params">self, ipsecpolicy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ipsecpolicy_path % (ipsecpolicy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_loadbalancers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all loadbalancers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loadbalancers&#x27;</span>, self.lbaas_loadbalancers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path % (lbaas_loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_loadbalancer</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_loadbalancers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_loadbalancer_path % (lbaas_loadbalancer),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_loadbalancer_path %</span><br><span class="line">                           (lbaas_loadbalancer))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_loadbalancer_stats</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves stats for a certain load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path_stats % (loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_loadbalancer_status</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves status for a certain load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path_status % (loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_listeners</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_listeners for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;listeners&#x27;</span>, self.lbaas_listeners_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_listener</span>(<span class="params">self, lbaas_listener, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_listener_path % (lbaas_listener),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_listener</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_listeners_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_listener</span>(<span class="params">self, lbaas_listener, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_listener_path % (lbaas_listener),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_listener</span>(<span class="params">self, lbaas_listener</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_listener_path % (lbaas_listener))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_l7policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all L7 policies for a listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;l7policies&#x27;</span>, self.lbaas_l7policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_l7policy</span>(<span class="params">self, l7policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain listener&#x27;s L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_l7policy_path % l7policy,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_l7policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates L7 policy for a certain listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_l7policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_l7policy</span>(<span class="params">self, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_l7policy_path % l7policy,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_l7policy</span>(<span class="params">self, l7policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_l7policy_path % l7policy)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_l7rules</span>(<span class="params">self, l7policy, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all rules for L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rules&#x27;</span>, self.lbaas_l7rules_path % l7policy,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain L7 policy&#x27;s rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_l7rule_path % (l7policy, l7rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_l7rule</span>(<span class="params">self, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates rule for a certain L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_l7rules_path % l7policy, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates L7 rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_l7rule_path % (l7policy, l7rule),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified L7 rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_l7rule_path % (l7policy, l7rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_pools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_pools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;pools&#x27;</span>, self.lbaas_pools_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_pool</span>(<span class="params">self, lbaas_pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_pool_path % (lbaas_pool),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_pool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_pools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_pool</span>(<span class="params">self, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_pool_path % (lbaas_pool),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_pool</span>(<span class="params">self, lbaas_pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_pool_path % (lbaas_pool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_healthmonitors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_healthmonitors for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;healthmonitors&#x27;</span>, self.lbaas_healthmonitors_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_healthmonitor_path % (lbaas_healthmonitor),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_healthmonitor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_healthmonitors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_healthmonitor_path % (lbaas_healthmonitor),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_healthmonitor_path %</span><br><span class="line">                           (lbaas_healthmonitor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_loadbalancers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_loadbalancers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loadbalancers&#x27;</span>, self.lbaas_loadbalancers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_members</span>(<span class="params">self, lbaas_pool, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_members for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;members&#x27;</span>, self.lbaas_members_path % lbaas_pool,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_member_path % (lbaas_pool, lbaas_member),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_member</span>(<span class="params">self, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_members_path % lbaas_pool, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_member_path % (lbaas_pool, lbaas_member),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_member_path % (lbaas_pool, lbaas_member))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_vips</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer vips for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;vips&#x27;</span>, self.vips_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_vip</span>(<span class="params">self, vip, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.vip_path % (vip), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_vip</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.vips_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_vip</span>(<span class="params">self, vip, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.vip_path % (vip), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_vip</span>(<span class="params">self, vip</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.vip_path % (vip))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_pools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer pools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;pools&#x27;</span>, self.pools_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_pool</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.pool_path % (pool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_pool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.pools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_pool</span>(<span class="params">self, pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.pool_path % (pool), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_pool</span>(<span class="params">self, pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.pool_path % (pool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_pool_stats</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves stats for a certain load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.pool_path_stats % (pool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_members</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer members for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;members&#x27;</span>, self.members_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_member</span>(<span class="params">self, member, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.member_path % (member), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_member</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.members_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_member</span>(<span class="params">self, member, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.member_path % (member), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_member</span>(<span class="params">self, member</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.member_path % (member))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_health_monitors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer health monitors for a project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;health_monitors&#x27;</span>, self.health_monitors_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_health_monitor</span>(<span class="params">self, health_monitor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.health_monitor_path % (health_monitor),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_health_monitor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.health_monitors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_health_monitor</span>(<span class="params">self, health_monitor, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.health_monitor_path % (health_monitor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_health_monitor</span>(<span class="params">self, health_monitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.health_monitor_path % (health_monitor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">associate_health_monitor</span>(<span class="params">self, pool, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Associate  specified load balancer health monitor and pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.associate_pool_health_monitors_path % (pool),</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disassociate_health_monitor</span>(<span class="params">self, pool, health_monitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disassociate specified load balancer health monitor and pool.&quot;&quot;&quot;</span></span><br><span class="line">        path = (self.disassociate_pool_health_monitors_path %</span><br><span class="line">                &#123;<span class="string">&#x27;pool&#x27;</span>: pool, <span class="string">&#x27;health_monitor&#x27;</span>: health_monitor&#125;)</span><br><span class="line">        <span class="keyword">return</span> self.delete(path)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_qos_queue</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_queues_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_queues</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all queues for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_queues_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_qos_queue</span>(<span class="params">self, queue, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_queue_path % (queue),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_qos_queue</span>(<span class="params">self, queue</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_queue_path % (queue))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_agents</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches agents.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.agents_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_agent</span>(<span class="params">self, agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.agent_path % (agent), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_agent</span>(<span class="params">self, agent, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.agent_path % (agent), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_agent</span>(<span class="params">self, agent</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.agent_path % (agent))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_gateways</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieve network gateways.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_gateways_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_gateway</span>(<span class="params">self, gateway_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_gateway_path % gateway_id, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network_gateway</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.network_gateways_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.network_gateway_path % gateway_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network_gateway</span>(<span class="params">self, gateway_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_gateway_path % gateway_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Connect a network gateway to the specified network.&quot;&quot;&quot;</span></span><br><span class="line">        base_uri = self.network_gateway_path % gateway_id</span><br><span class="line">        <span class="keyword">return</span> self.put(<span class="string">&quot;%s/connect_network&quot;</span> % base_uri, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disconnect_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disconnect a network from the specified gateway.&quot;&quot;&quot;</span></span><br><span class="line">        base_uri = self.network_gateway_path % gateway_id</span><br><span class="line">        <span class="keyword">return</span> self.put(<span class="string">&quot;%s/disconnect_network&quot;</span> % base_uri, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_gateway_devices</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieve gateway devices.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.gateway_devices_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_gateway_device</span>(<span class="params">self, gateway_device_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.gateway_device_path % gateway_device_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_gateway_device</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.gateway_devices_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_gateway_device</span>(<span class="params">self, gateway_device_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a new gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.gateway_device_path % gateway_device_id,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_gateway_device</span>(<span class="params">self, gateway_device_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.gateway_device_path % gateway_device_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dhcp_agent_hosting_networks</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of dhcp agents hosting a network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.network_path + self.DHCP_AGENTS) % network,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_networks_on_dhcp_agent</span>(<span class="params">self, dhcp_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of networks hosted on a DHCP agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.DHCP_NETS) % dhcp_agent,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_network_to_dhcp_agent</span>(<span class="params">self, dhcp_agent, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a network to dhcp agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.DHCP_NETS) % dhcp_agent,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_network_from_dhcp_agent</span>(<span class="params">self, dhcp_agent, network_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a network from dhcp agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.DHCP_NETS + <span class="string">&quot;/%s&quot;</span>) % (</span><br><span class="line">            dhcp_agent, network_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_l3_agent_hosting_routers</span>(<span class="params">self, router, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of L3 agents hosting a router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.router_path + self.L3_AGENTS) % router,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_routers_on_l3_agent</span>(<span class="params">self, l3_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of routers hosted on an L3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.L3_ROUTERS) % l3_agent,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_router_to_l3_agent</span>(<span class="params">self, l3_agent, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a router to L3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.L3_ROUTERS) % l3_agent,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dragents_hosting_bgp_speaker</span>(<span class="params">self, bgp_speaker, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of Dynamic Routing agents hosting a BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.bgp_speaker_path + self.BGP_DRAGENTS)</span><br><span class="line">                        % bgp_speaker, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_bgp_speaker_to_dragent</span>(<span class="params">self, bgp_dragent, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a BGP speaker to Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.BGP_DRINSTANCES)</span><br><span class="line">                         % bgp_dragent, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_bgp_speaker_from_dragent</span>(<span class="params">self, bgp_dragent, bgpspeaker_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a BGP speaker from Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.BGP_DRINSTANCES + <span class="string">&quot;/%s&quot;</span>)</span><br><span class="line">                           % (bgp_dragent, bgpspeaker_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_speaker_on_dragent</span>(<span class="params">self, bgp_dragent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of BGP speakers hosted by Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.BGP_DRINSTANCES)</span><br><span class="line">                        % bgp_dragent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewall_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall rules for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_rules&#x27;</span>, self.firewall_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall_rule</span>(<span class="params">self, firewall_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_rule_path % (firewall_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewall_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall_rule</span>(<span class="params">self, firewall_rule, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_rule_path % (firewall_rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall_rule</span>(<span class="params">self, firewall_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_rule_path % (firewall_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewall_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_policies&#x27;</span>, self.firewall_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall_policy</span>(<span class="params">self, firewall_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_policy_path % (firewall_policy),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewall_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall_policy</span>(<span class="params">self, firewall_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_policy_path % (firewall_policy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">firewall_policy_insert_rule</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Inserts specified rule into firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_insert_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">firewall_policy_remove_rule</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified rule from firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_remove_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewalls</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewalls for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewalls&#x27;</span>, self.firewalls_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall</span>(<span class="params">self, firewall, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_path % (firewall), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewalls_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall</span>(<span class="params">self, firewall, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_path % (firewall), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall</span>(<span class="params">self, firewall</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_path % (firewall))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall groups for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_groups&#x27;</span>, self.fwaas_firewall_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_group</span>(<span class="params">self, fwg, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_group_path % (fwg), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_group</span>(<span class="params">self, fwg, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_group_path % (fwg), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_group</span>(<span class="params">self, fwg</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_group_path % (fwg))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall rules for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_rules&#x27;</span>, self.fwaas_firewall_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_rule_path % (firewall_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_rule_path % (firewall_rule),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_rule_path % (firewall_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall policies for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_policies&#x27;</span>,</span><br><span class="line">                         self.fwaas_firewall_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_policy_path % (firewall_policy),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_policy_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_policy_path % (firewall_policy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert_rule_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Inserts specified rule into firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.fwaas_firewall_policy_insert_path %</span><br><span class="line">                        (firewall_policy)), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_rule_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified rule from firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.fwaas_firewall_policy_remove_path %</span><br><span class="line">                        (firewall_policy)), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_router_from_l3_agent</span>(<span class="params">self, l3_agent, router_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a router from l3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.L3_ROUTERS + <span class="string">&quot;/%s&quot;</span>) % (</span><br><span class="line">            l3_agent, router_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_lbaas_agent_hosting_pool</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a loadbalancer agent hosting a pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.pool_path + self.LOADBALANCER_AGENT) % pool,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_pools_on_lbaas_agent</span>(<span class="params">self, lbaas_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of pools hosted by the loadbalancer agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.LOADBALANCER_POOLS) %</span><br><span class="line">                        lbaas_agent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_lbaas_agent_hosting_loadbalancer</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a loadbalancer agent hosting a loadbalancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.lbaas_loadbalancer_path +</span><br><span class="line">                         self.LOADBALANCER_HOSTING_AGENT) % loadbalancer,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_loadbalancers_on_lbaas_agent</span>(<span class="params">self, lbaas_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of loadbalancers hosted by the loadbalancer agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.AGENT_LOADBALANCERS) %</span><br><span class="line">                        lbaas_agent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_service_providers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches service providers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_providers&#x27;</span>, self.service_providers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_metering_label</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.metering_labels_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_metering_label</span>(<span class="params">self, label</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.metering_label_path % (label))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_metering_labels</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all metering labels for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;metering_labels&#x27;</span>, self.metering_labels_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_metering_label</span>(<span class="params">self, metering_label, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.metering_label_path %</span><br><span class="line">                        (metering_label), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_metering_label_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.metering_label_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_metering_label_rule</span>(<span class="params">self, rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.metering_label_rule_path % (rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_metering_label_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all metering label rules for a label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;metering_label_rules&#x27;</span>,</span><br><span class="line">                         self.metering_label_rules_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_metering_label_rule</span>(<span class="params">self, metering_label_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.metering_label_rule_path %</span><br><span class="line">                        (metering_label_rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_rbac_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.rbac_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_rbac_policy</span>(<span class="params">self, rbac_policy_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.rbac_policy_path % rbac_policy_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_rbac_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all RBAC policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rbac_policies&#x27;</span>, self.rbac_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_rbac_policy</span>(<span class="params">self, rbac_policy_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.rbac_policy_path % rbac_policy_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_rbac_policy</span>(<span class="params">self, rbac_policy_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.rbac_policy_path % rbac_policy_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all qos policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;policies&#x27;</span>, self.qos_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_qos_policy</span>(<span class="params">self, qos_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_policy_path % qos_policy,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_qos_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_qos_policy</span>(<span class="params">self, qos_policy, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.qos_policy_path % qos_policy,</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_qos_policy</span>(<span class="params">self, qos_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_policy_path % qos_policy)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_rule_types</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;List available qos rule types.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rule_types&#x27;</span>, self.qos_rule_types_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bandwidth_limit_rules</span>(<span class="params">self, policy_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                   retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all bandwidth limit rules for the given policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bandwidth_limit_rules&#x27;</span>,</span><br><span class="line">                         self.qos_bandwidth_limit_rules_path % policy_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bandwidth_limit_rule</span>(<span class="params">self, rule, policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                        (policy, rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bandwidth_limit_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_bandwidth_limit_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bandwidth_limit_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bandwidth_limit_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dscp_marking_rules</span>(<span class="params">self, policy_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all DSCP marking rules for the given policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;dscp_marking_rules&#x27;</span>,</span><br><span class="line">                         self.qos_dscp_marking_rules_path % policy_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_dscp_marking_rule</span>(<span class="params">self, rule, policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Shows information of a certain DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_dscp_marking_rule_path %</span><br><span class="line">                        (policy, rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_dscp_marking_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_dscp_marking_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_dscp_marking_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_dscp_marking_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_dscp_marking_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_dscp_marking_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_minimum_bandwidth_rules</span>(<span class="params">self, policy_id, retrieve_all=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all minimum bandwidth rules for the given policy.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;minimum_bandwidth_rules&#x27;</span>,</span><br><span class="line">                         self.qos_minimum_bandwidth_rules_path %</span><br><span class="line">                         policy_id, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_minimum_bandwidth_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_minimum_bandwidth_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_flavor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.flavors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_flavor</span>(<span class="params">self, flavor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.flavor_path % (flavor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_flavors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Neutron service flavors for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;flavors&#x27;</span>, self.flavors_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_flavor</span>(<span class="params">self, flavor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.flavor_path % (flavor), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_flavor</span>(<span class="params">self, flavor, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.flavor_path % (flavor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">associate_flavor</span>(<span class="params">self, flavor, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Associate a Neutron service flavor with a profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.flavor_profile_bindings_path %</span><br><span class="line">                         (flavor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disassociate_flavor</span>(<span class="params">self, flavor, flavor_profile</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disassociate a Neutron service flavor with a profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.flavor_profile_binding_path %</span><br><span class="line">                           (flavor, flavor_profile))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_service_profile</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.service_profiles_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_service_profile</span>(<span class="params">self, flavor_profile</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.service_profile_path % (flavor_profile))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_service_profiles</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Neutron service flavor profiles.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_profiles&#x27;</span>, self.service_profiles_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_service_profile</span>(<span class="params">self, flavor_profile, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.service_profile_path % (flavor_profile),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_service_profile</span>(<span class="params">self, service_profile, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Neutron service profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.service_profile_path % (service_profile),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_availability_zones</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all availability zones.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;availability_zones&#x27;</span>, self.availability_zones_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_auto_allocated_topology</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information about a project&#x27;s auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.auto_allocated_topology_path % project_id,</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_auto_allocated_topology</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a project&#x27;s auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.auto_allocated_topology_path % project_id,</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_auto_allocated_topology_requirements</span>(<span class="params">self, project_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Validate requirements for getting an auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get_auto_allocated_topology(project_id, fields=[<span class="string">&#x27;dry-run&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_speakers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP speakers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bgp_speakers&#x27;</span>, self.bgp_speakers_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgp_speaker</span>(<span class="params">self, bgp_speaker_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_speaker_path % (bgp_speaker_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgp_speaker</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgp_speakers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgp_speaker</span>(<span class="params">self, bgp_speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgp_speaker_path % bgp_speaker_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgp_speaker</span>(<span class="params">self, speaker_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgp_speaker_path % (speaker_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_peer_to_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a peer to BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/add_bgp_peer&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_peer_from_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a peer from BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/remove_bgp_peer&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_network_to_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a network to BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/add_gateway_network&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_network_from_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a network from BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/remove_gateway_network&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_route_advertised_from_bgp_speaker</span>(<span class="params">self, speaker_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all routes advertised by BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/get_advertised_routes&quot;</span>, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_peers</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP peers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_peers_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgp_peer</span>(<span class="params">self, peer_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_peer_path % peer_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgp_peer</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgp_peers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgp_peer</span>(<span class="params">self, bgp_peer_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgp_peer_path % bgp_peer_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgp_peer</span>(<span class="params">self, peer_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgp_peer_path % peer_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_ip_availabilities</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches IP availability information for all networks&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;network_ip_availabilities&#x27;</span>,</span><br><span class="line">                         self.network_ip_availabilities_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_ip_availability</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches IP availability information for a specified network&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_ip_availability_path % (network),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_tag</span>(<span class="params">self, resource_type, resource_id, tag, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Add a tag on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.tag_path % (resource_type, resource_id, tag))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replace_tag</span>(<span class="params">self, resource_type, resource_id, body, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Replace tags on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.tags_path % (resource_type, resource_id), body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_tag</span>(<span class="params">self, resource_type, resource_id, tag, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a tag on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.tag_path % (resource_type, resource_id, tag))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_tag_all</span>(<span class="params">self, resource_type, resource_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove all tags on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.tags_path % (resource_type, resource_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_trunk</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.trunks_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_trunk</span>(<span class="params">self, trunk, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.trunk_path % trunk, body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_trunk</span>(<span class="params">self, trunk</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.trunk_path % (trunk))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_trunks</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all trunk ports.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;trunks&#x27;</span>, self.trunks_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_trunk</span>(<span class="params">self, trunk, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information for a certain trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.trunk_path % (trunk), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_add_subports</span>(<span class="params">self, trunk, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Add specified subports to the trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.subports_add_path % (trunk), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_remove_subports</span>(<span class="params">self, trunk, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified subports from the trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.subports_remove_path % (trunk), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_get_subports</span>(<span class="params">self, trunk, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all subports attached to given trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subports_path % (trunk), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpns</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP VPNs for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bgpvpns&#x27;</span>, self.bgpvpns_path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn</span>(<span class="params">self, bgpvpn, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgpvpn_path % bgpvpn, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpns_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgpvpn_path % bgpvpn, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn</span>(<span class="params">self, bgpvpn</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgpvpn_path % bgpvpn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_network_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of network associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;network_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_network_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_network_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_router_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of router associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;router_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_router_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_router_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_port_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of port associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_port_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_port_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_pair</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_pairs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_pair</span>(<span class="params">self, port_pair, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_pair_path % port_pair, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_pair</span>(<span class="params">self, port_pair</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_pair_path % (port_pair))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_pairs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Pairs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_pairs&#x27;</span>, self.sfc_port_pairs_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_pair</span>(<span class="params">self, port_pair, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_pair_path % (port_pair), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_pair_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_pair_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_pair_group</span>(<span class="params">self, port_pair_group, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_pair_group_path % port_pair_group,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_pair_group</span>(<span class="params">self, port_pair_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_pair_group_path % (port_pair_group))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_pair_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Pair Groups.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_pair_groups&#x27;</span>, self.sfc_port_pair_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_pair_group</span>(<span class="params">self, port_pair_group, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_pair_group_path % (port_pair_group),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_chain</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_chains_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_chain</span>(<span class="params">self, port_chain, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_chain_path % port_chain, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_chain</span>(<span class="params">self, port_chain</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_chain_path % (port_chain))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_chains</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Chains.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_chains&#x27;</span>, self.sfc_port_chains_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_chain</span>(<span class="params">self, port_chain, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_chain_path % (port_chain),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_flow_classifier</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_flow_classifiers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_flow_classifier</span>(<span class="params">self, flow_classifier, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_flow_classifier_path % flow_classifier,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_flow_classifier</span>(<span class="params">self, flow_classifier</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_flow_classifier_path % (flow_classifier))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_flow_classifiers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Flow Classifiers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;flow_classifiers&#x27;</span>, self.sfc_flow_classifiers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_flow_classifier</span>(<span class="params">self, flow_classifier, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_flow_classifier_path % (flow_classifier),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_service_graph</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create the specified Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_service_graphs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_service_graph</span>(<span class="params">self, service_graph, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_service_graph_path % service_graph,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_service_graph</span>(<span class="params">self, service_graph</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_service_graph_path % service_graph)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_service_graphs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Service Graphs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_graphs&#x27;</span>, self.sfc_service_graphs_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_service_graph</span>(<span class="params">self, service_graph, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_service_graph_path % service_graph,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network_log</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.network_logs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network_log</span>(<span class="params">self, net_log</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_log_path % net_log)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_logs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all network logs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(</span><br><span class="line">            <span class="string">&#x27;logs&#x27;</span>, self.network_logs_path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_log</span>(<span class="params">self, net_log, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information for a certain network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_log_path % net_log, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network_log</span>(<span class="params">self, net_log, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.network_log_path % net_log, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_loggable_resources</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of supported resource types for network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loggable_resources&#x27;</span>, self.network_loggables_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onboard_network_subnets</span>(<span class="params">self, subnetpool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Onboard the specified network&#x27;s subnets into a subnet pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.onboard_network_subnets_path % (subnetpool),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Initialize a new client for the Neutron v2.0 API.&quot;&quot;&quot;</span></span><br><span class="line">        super(Client, self).__init__(**kwargs)</span><br><span class="line">        self._register_extensions(self.version)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_resource</span>(<span class="params">self, path, **kwargs</span>):</span></span><br><span class="line">        revision_number = kwargs.pop(<span class="string">&#x27;revision_number&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> revision_number:</span><br><span class="line">            headers = kwargs.setdefault(<span class="string">&#x27;headers&#x27;</span>, &#123;&#125;)</span><br><span class="line">            headers[<span class="string">&#x27;If-Match&#x27;</span>] = <span class="string">&#x27;revision_number=%s&#x27;</span> % revision_number</span><br><span class="line">        <span class="keyword">return</span> self.put(path, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_show</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.show_ext(path, obj, **_params)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.show_ext(path % parent_id, obj, **_params)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;show_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_list</span>(<span class="params">self, resource_plural, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">retrieve_all=True, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.list_ext(resource_plural, path,</span><br><span class="line">                                 retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">parent_id, retrieve_all=True, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.list_ext(resource_plural, path % parent_id,</span><br><span class="line">                                 retrieve_all, **_params)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;list_%s&quot;</span> % resource_plural, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_create</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.create_ext(path, body)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">parent_id, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.create_ext(path % parent_id, body)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;create_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_delete</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.delete_ext(path, obj)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.delete_ext(path % parent_id, obj)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;delete_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_update</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.update_ext(path, obj, body)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.update_ext(path % parent_id, obj, body)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;update_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_extend_client_with_module</span>(<span class="params">self, module, version</span>):</span></span><br><span class="line">        classes = inspect.getmembers(module, inspect.isclass)</span><br><span class="line">        <span class="keyword">for</span> cls_name, cls <span class="keyword">in</span> classes:</span><br><span class="line">            <span class="keyword">if</span> hasattr(cls, <span class="string">&#x27;versions&#x27;</span>):</span><br><span class="line">                <span class="keyword">if</span> version <span class="keyword">not</span> <span class="keyword">in</span> cls.versions:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            parent_resource = getattr(cls, <span class="string">&#x27;parent_resource&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> issubclass(cls, client_extension.ClientExtensionList):</span><br><span class="line">                self.extend_list(cls.resource_plural, cls.object_path,</span><br><span class="line">                                 parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionCreate):</span><br><span class="line">                self.extend_create(cls.resource, cls.object_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionUpdate):</span><br><span class="line">                self.extend_update(cls.resource, cls.resource_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionDelete):</span><br><span class="line">                self.extend_delete(cls.resource, cls.resource_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionShow):</span><br><span class="line">                self.extend_show(cls.resource, cls.resource_path,</span><br><span class="line">                                 parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.NeutronClientExtension):</span><br><span class="line">                setattr(self, <span class="string">&quot;%s_path&quot;</span> % cls.resource_plural,</span><br><span class="line">                        cls.object_path)</span><br><span class="line">                setattr(self, <span class="string">&quot;%s_path&quot;</span> % cls.resource, cls.resource_path)</span><br><span class="line">                self.EXTED_PLURALS.update(&#123;cls.resource_plural: cls.resource&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_register_extensions</span>(<span class="params">self, version</span>):</span></span><br><span class="line">        <span class="keyword">for</span> name, module <span class="keyword">in</span> itertools.chain(</span><br><span class="line">                client_extension._discover_via_entry_points()):</span><br><span class="line">            self._extend_client_with_module(module, version)</span><br></pre></td></tr></table></figure>





<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://docs.openstack.org/python-neutronclient/latest/reference/index.html">OpenStack API Documentation：neutronclient Python API</a></li>
</ul>
]]></content>
      <categories>
        <category>OpenStack</category>
      </categories>
      <tags>
        <tag>OpenStack</tag>
        <tag>CLI</tag>
      </tags>
  </entry>
</search>
