<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>任翌博的个人博客</title>
  
  <subtitle>Welcome to my blog...</subtitle>
  <link href="https://renyb2.github.io/atom.xml" rel="self"/>
  
  <link href="https://renyb2.github.io/"/>
  <updated>2022-04-25T03:03:10.779Z</updated>
  <id>https://renyb2.github.io/</id>
  
  <author>
    <name>任翌博</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>消息队列：RabbitMQ</title>
    <link href="https://renyb2.github.io/2022/04/24/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9ARabbitMQ/"/>
    <id>https://renyb2.github.io/2022/04/24/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9ARabbitMQ/</id>
    <published>2022-04-24T09:55:54.000Z</published>
    <updated>2022-04-25T03:03:10.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h2><p>参考<a href="https://www.rabbitmq.com/tutorials/tutorial-one-python.html">官方代码示例</a></p><h3 id="Producer示例"><a href="#Producer示例" class="headerlink" title="Producer示例"></a>Producer示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">username = <span class="string">&#x27;glance-rabbitmq-user&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;glancepFAlXGtyZc7lTi0*&#x27;</span></span><br><span class="line">host = <span class="string">&#x27;osh-openstack-rabbitmq-rabbitmq-0.rabbitmq.openstack.svc.cluster.local&#x27;</span></span><br><span class="line">port = <span class="number">5672</span></span><br><span class="line">vhost = <span class="string">&#x27;glance&#x27;</span></span><br><span class="line">exchange = <span class="string">&#x27;demo&#x27;</span></span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(username, password)</span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(</span><br><span class="line">        host=host, port=port, virtual_host=vhost, credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line">channel.exchange_declare(exchange=exchange, durable=<span class="literal">True</span>, exchange_type=<span class="string">&#x27;fanout&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    msg=json.dumps(&#123;<span class="string">&#x27;OrderId&#x27;</span>:<span class="string">&quot;1000%s&quot;</span>%i&#125;)</span><br><span class="line">    channel.basic_publish(exchange=exchange, routing_key=<span class="string">&#x27;&#x27;</span>, body=msg,</span><br><span class="line">                          properties=pika.BasicProperties(delivery_mode=<span class="number">2</span>))</span><br><span class="line">    print(msg)</span><br><span class="line"></span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure><h3 id="Consumer示例"><a href="#Consumer示例" class="headerlink" title="Consumer示例"></a>Consumer示例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pika</span><br><span class="line"></span><br><span class="line">username = <span class="string">&#x27;glance-rabbitmq-user&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;glancepFAlXGtyZc7lTi0*&#x27;</span></span><br><span class="line">host = <span class="string">&#x27;osh-openstack-rabbitmq-rabbitmq-0.rabbitmq.openstack.svc.cluster.local&#x27;</span></span><br><span class="line">port = <span class="number">5672</span></span><br><span class="line">vhost = <span class="string">&#x27;glance&#x27;</span></span><br><span class="line">exchange = <span class="string">&#x27;demo&#x27;</span></span><br><span class="line"></span><br><span class="line">credentials = pika.PlainCredentials(username, password)</span><br><span class="line">connection = pika.BlockingConnection(</span><br><span class="line">    pika.ConnectionParameters(</span><br><span class="line">        host=host, port=port, virtual_host=vhost, credentials=credentials))</span><br><span class="line">channel = connection.channel()</span><br><span class="line">result = channel.queue_declare(<span class="string">&#x27;&#x27;</span>, exclusive=<span class="literal">True</span>)</span><br><span class="line">channel.exchange_declare(exchange=exchange, durable=<span class="literal">True</span>, exchange_type=<span class="string">&#x27;fanout&#x27;</span>)</span><br><span class="line">channel.queue_bind(exchange=exchange, queue=result.method.queue)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span>(<span class="params">ch, method, properties, body</span>):</span></span><br><span class="line">    ch.basic_ack(delivery_tag=method.delivery_tag)</span><br><span class="line">    print(body.decode())</span><br><span class="line"></span><br><span class="line">channel.basic_consume(result.method.queue, callback, auto_ack=<span class="literal">False</span>)</span><br><span class="line">channel.start_consuming()</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.rabbitmq.com/tutorials/tutorial-one-python.html">RabbitMQ官方代码示例</a></li><li><a href="https://www.cnblogs.com/guyuyun/p/14970592.html">Python三方库：Pika（RabbitMQ基础使用）</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hello-world&quot;&gt;&lt;a href=&quot;#Hello-world&quot; class=&quot;headerlink&quot; title=&quot;Hello world&quot;&gt;&lt;/a&gt;Hello world&lt;/h2&gt;&lt;p&gt;参考&lt;a href=&quot;https://www.rabbitmq.co</summary>
      
    
    
    
    <category term="消息队列" scheme="https://renyb2.github.io/categories/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
    
    <category term="RabbitMQ" scheme="https://renyb2.github.io/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>消息队列：ActiveMQ</title>
    <link href="https://renyb2.github.io/2022/04/24/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AActiveMQ/"/>
    <id>https://renyb2.github.io/2022/04/24/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%9AActiveMQ/</id>
    <published>2022-04-24T06:27:40.000Z</published>
    <updated>2022-04-24T09:34:24.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache ActiveMQ is an open-source message broker written in Java. It supports several cross-language clients and protocols.</p><p>The Apache ActiveMQ message broker is a fast, reliable, scalable, and totally integrated open source messaging platform for handling lots of messages (ingest) or lots of consumers (dispatch). It uses memory as the storage format; it can be configured to store data persistently on a disk if necessary. The initial startup time can be slow due to the fact that ActiveMQ will load all historical information into memory. However, after the first startup period, which could take up to several minutes depending on how much history you have stored in your queues and other configuration settings, performance starts to scale well up until a point when we consider other factors such as system resources.</p><p>Based on its origins as an experience of just moving from an in-house messaging solution to a commercial product, ActiveMQ can be considered as one of those products that have been constantly developed and improved, offering extremely high quality and solid stability.</p><p>ActiveMQ provides both a simple embedded broker and a fully deployed, highly available enterprise solution. Its most important features and strengths are high availability and failover (a setup with one broker can survive up to 99.999% of message loss), support for many ways of connecting clients (including web consoles, command-line tools, and libraries, JMS client libraries, etc.), clustering across physical boundaries, load balancing through multiple internal queues per topic, flexible configuration such as persistent or non-persistent messages according to the need, the persistence of data by file or database, security implementation based on JAAS authentication model which also supports LDAP implementation.</p><p>ActiveMQ is truly the preferred messaging solution for Java developers, infrastructure architects, and system integrators. It can be used in both small deployments (in which case you will probably use the embedded broker) or big enterprise solutions (which require clustering and failover).</p><p>Depending on your needs, ActiveMQ can be easily scaled out to real high availability scenarios with full load balancing across all brokers, including dynamic addition of new nodes when existing ones go down; stateful failover with automatic re-sync and potential data loss (which is always possible), fully supported by ActiveMQ itself: just another two nodes that need to be configured into a cluster for high availability.</p><p>Apache ActiveMQ is cross-platform and runs in a Java Virtual Machine (JVM). You could use ActiveMQ on either Linux, Windows, or OS X.</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Ubuntu系统"><a href="#Ubuntu系统" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h3><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><ul><li><strong>规格：</strong>4C8G，100G数据盘</li><li><strong>系统：</strong>20.04.3 LTS (GNU/Linux 5.4.0-107-generic x86_64)</li><li><strong>PostgreSQL版本：</strong>PostgreSQL 9.5.25</li></ul><blockquote><p><strong>Pre-Installation Requirements</strong></p><p><strong>Hardware:</strong></p><ul><li>60 MB of free disk space for the ActiveMQ binary distribution.</li><li>200 MB of free disk space for the ActiveMQ source or developer’s distributions.</li></ul><p><strong>Operating Systems:</strong></p><ul><li>Windows: Windows XP SP2, Windows 2000.</li><li>Unix: Ubuntu Linux, Powerdog Linux, MacOS, AIX, HP-UX, Solaris, or any Unix platform that supports Java.</li></ul><p><strong>Environment:</strong></p><ul><li>Java Developer Kit (JDK) 1.7.x or greater for deployment and 1.7.x (Java 7) for compiling/building.</li><li>The JAVA_HOME environment variable must be set to the directory where the JDK is installed, e.g., <code>c:\Program Files\jdk.1.7.0_xx_xx</code>.</li><li>Maven 3.0 or greater (required when installing source or developer’s releases).</li><li><a href="http://cvs.apache.org/repository/geronimo-spec/jars/">JARs</a> that will be used must be added to the classpath.</li></ul></blockquote><h4 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础依赖包</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install openjdk-8-jdk</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载资源包</span></span><br><span class="line">sudo wget http://www.apache.org/dist/activemq/5.16.4/apache-activemq-5.16.4-bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压资源包</span></span><br><span class="line">sudo tar zxvf apache-activemq-*gz -C /opt/ </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建服务用户</span></span><br><span class="line">sudo addgroup --quiet --system activemq</span><br><span class="line">sudo adduser --quiet --system --ingroup activemq --no-create-home --disabled-password activemq</span><br><span class="line">sudo chown -R activemq:activemq /opt/apache-activemq*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建systemctl服务</span></span><br><span class="line">ACTIVEMQ_DIR=$(cd /opt/apache-activemq* &amp;&amp; pwd)</span><br><span class="line">cat &gt; /usr/lib/systemd/system/activemq.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Apache ActiveMQ</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">User=activemq</span><br><span class="line">Group=activemq</span><br><span class="line">ExecStart=$&#123;ACTIVEMQ_DIR&#125;/bin/activemq start</span><br><span class="line">ExecStop=$&#123;ACTIVEMQ_DIR&#125;/bin/activemq stop</span><br><span class="line">ExecRestart=$&#123;ACTIVEMQ_DIR&#125;/bin/activemq stop : $&#123;ACTIVEMQ_DIR&#125;/bin/activemq start</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务</span></span><br><span class="line">sudo systemctl start activemq</span><br><span class="line">sudo systemctl status activemq</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://activemq.apache.org/components/classic/documentation">官方文档：ActiveMQ 5 Documentation</a></li><li><a href="https://activemq.apache.org/version-5-getting-started">官方文档：Version 5 Getting Started</a></li><li><a href="https://vitux.com/how-to-install-apache-activemq-on-ubuntu/">How to Install Apache ActiveMQ on Ubuntu 20.04</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Apache ActiveMQ is an open-source message broker written in Java. It s</summary>
      
    
    
    
    <category term="消息队列" scheme="https://renyb2.github.io/categories/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
    
    <category term="ActiveMQ" scheme="https://renyb2.github.io/tags/ActiveMQ/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL部署：安装文档</title>
    <link href="https://renyb2.github.io/2022/04/24/PostgreSQL%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/"/>
    <id>https://renyb2.github.io/2022/04/24/PostgreSQL%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</id>
    <published>2022-04-24T03:19:42.000Z</published>
    <updated>2022-04-24T07:50:07.303Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PostgreSQL 是一个免费的对象-关系数据库服务器(ORDBMS)，在灵活的BSD许可证下发行。</p><p>PostgreSQL 开发者把它念作 <strong>post-gress-Q-L</strong>。</p><p>PostgreSQL 的 Slogan 是 “世界上最先进的开源关系型数据库”。</p><p>最新中文文档可参考：<a href="https://github.com/postgres-cn/pgdoc-cn/releases">官方手册</a></p><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ul><li><strong>函数</strong>：通过函数，可以在数据库服务器端执行指令程序。</li><li><strong>索引</strong>：用户可以自定义索引方法，或使用内置的 B 树，哈希表与 GiST 索引。</li><li><strong>触发器</strong>：触发器是由SQL语句查询所触发的事件。如：一个INSERT语句可能触发一个检查数据完整性的触发器。触发器通常由INSERT或UPDATE语句触发。 多版本并发控制：PostgreSQL使用多版本并发控制（MVCC，Multiversion concurrency control）系统进行并发控制，该系统向每个用户提供了一个数据库的”快照”，用户在事务内所作的每个修改，对于其他的用户都不可见，直到该事务成功提交。</li><li><strong>规则</strong>：规则（RULE）允许一个查询能被重写，通常用来实现对视图（VIEW）的操作，如插入（INSERT）、更新（UPDATE）、删除（DELETE）。</li><li><strong>数据类型</strong>：包括文本、任意精度的数值数组、JSON 数据、枚举类型、XML 数据等。</li><li><strong>全文检索</strong>：通过 Tsearch2 或 OpenFTS，8.3版本中内嵌 Tsearch2。</li><li><strong>NoSQL</strong>：JSON，JSONB，XML，HStore 原生支持，至 NoSQL 数据库的外部数据包装器。</li><li><strong>数据仓库</strong>：能平滑迁移至同属 PostgreSQL 生态的 GreenPlum，DeepGreen，HAWK 等，使用 FDW 进行 ETL。</li></ul><h2 id="Ubuntu系统"><a href="#Ubuntu系统" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ul><li><strong>规格：</strong>4C8G，100G数据盘</li><li><strong>系统：</strong>Ubuntu 16.04.7 LTS</li><li><strong>PostgreSQL版本：</strong>PostgreSQL 9.5.25</li></ul><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><p>Ubuntu 可以使用 apt-get 安装 PostgreSQL：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install postgresql postgresql-client</span></span><br></pre></td></tr></table></figure><p>安装完毕后，系统会创建一个数据库超级用户 postgres，密码为空。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo -i -u postgres</span></span><br></pre></td></tr></table></figure><p>这时使用以下命令进入 postgres，输出以下信息，说明安装成功：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~$ psql</span><br><span class="line">psql (9.5.17)</span><br><span class="line">Type &quot;<span class="keyword">help</span><span class="string">&quot; for help.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">postgres=# </span></span><br></pre></td></tr></table></figure><p>输入以下命令退出 PostgreSQL 提示符：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br></pre></td></tr></table></figure><p>PostgreSQL 安装完成后默认是已经启动的，但是也可以通过下面的方式来手动启动服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/postgresql start    <span class="comment"># 开启</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/postgresql stop     <span class="comment"># 关闭</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo /etc/init.d/postgresql restart  <span class="comment"># 重启</span></span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.postgresql.org/">PostgreSQL官网</a></li><li><a href="https://github.com/postgres-cn/pgdoc-cn/releases">PostgreSQL 官方：中文手册</a></li><li><a href="https://www.runoob.com/postgresql/postgresql-tutorial.html">菜鸟教程：PostgreSQL 教程</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;PostgreSQL 是一个免费的对象-关系数据库服务器(ORDBMS)，在灵活的BSD许可证下发行。&lt;/p&gt;
&lt;p&gt;PostgreSQL </summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="PostgreSQL" scheme="https://renyb2.github.io/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>研发工具：Jupyter</title>
    <link href="https://renyb2.github.io/2022/04/14/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AJupyter/"/>
    <id>https://renyb2.github.io/2022/04/14/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AJupyter/</id>
    <published>2022-04-14T05:43:41.000Z</published>
    <updated>2022-04-24T03:24:12.741Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Free software, open standards, and web services for interactive computing across all programming languages</p><blockquote><h3 id="JupyterLab-A-Next-Generation-Notebook-Interface"><a href="#JupyterLab-A-Next-Generation-Notebook-Interface" class="headerlink" title="JupyterLab: A Next-Generation Notebook Interface"></a>JupyterLab: A Next-Generation Notebook Interface</h3><p>JupyterLab is the latest web-based interactive development environment for notebooks, code, and data. Its flexible interface allows users to configure and arrange workflows in data science, scientific computing, computational journalism, and machine learning. A modular design invites extensions to expand and enrich functionality.</p><h3 id="Jupyter-Notebook-The-Classic-Notebook-Interface"><a href="#Jupyter-Notebook-The-Classic-Notebook-Interface" class="headerlink" title="Jupyter Notebook: The Classic Notebook Interface"></a>Jupyter Notebook: The Classic Notebook Interface</h3><p>The Jupyter Notebook is the original web application for creating and sharing computational documents. It offers a simple, streamlined, document-centric experience.</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础包</span></span><br><span class="line">yum install -y gcc python3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据目录</span></span><br><span class="line">mkdir /usr/local/jupyter</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Jupyter</span></span><br><span class="line">pip3 install --upgrade pip</span><br><span class="line">pip3 install jupyter jupyterlab</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行Jupyter Lab</span></span><br><span class="line">jupyter lab --ip 0.0.0.0 --allow-root --notebook-dir=/usr/local/jupyter</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行Jupyter Notebook</span></span><br><span class="line">jupyter notebook --ip 0.0.0.0 --allow-root --notebook-dir=/usr/local/jupyter</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看访问信息</span></span><br><span class="line">jupyter lab list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置systemctl</span></span><br><span class="line">cat &gt; /usr/lib/systemd/system/jupyter.service &lt;&lt; EOF </span><br><span class="line">[Unit]</span><br><span class="line">Description=Jupyter Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">KillMode=mixed</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/local/bin/jupyter lab --ip 0.0.0.0 --allow-root --notebook-dir=/usr/local/jupyter</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>Web访问地址：<code>http://&lt;ip&gt;:8888/?token=&lt;token&gt;</code>,点击<code>Python</code>即可开始编写。测试代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"></span><br><span class="line">th = np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span>(<span class="params">sty</span>):</span></span><br><span class="line">    mpl.style.use(sty)</span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">    ax.set_title(<span class="string">&#x27;style: &#123;!r&#125;&#x27;</span>.format(sty), color=<span class="string">&#x27;C0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    ax.plot(th, np.cos(th), <span class="string">&#x27;C1&#x27;</span>, label=<span class="string">&#x27;C1&#x27;</span>)</span><br><span class="line">    ax.plot(th, np.sin(th), <span class="string">&#x27;C2&#x27;</span>, label=<span class="string">&#x27;C2&#x27;</span>)</span><br><span class="line">    ax.legend()</span><br><span class="line"></span><br><span class="line">demo(<span class="string">&#x27;seaborn&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/2022/04/14/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7%EF%BC%9AJupyter/%E6%BC%94%E7%A4%BA1.png" alt="演示1"></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://jupyter.org/">Jupyter官网</a></li><li><a href="https://zhuanlan.zhihu.com/p/33105153">Jupyter Notebook介绍、安装及使用教程</a></li><li><a href="https://zhuanlan.zhihu.com/p/87403131">JupyterLab，极其强大的下一代notebook！</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Free software, open standards, and web services for interactive comput</summary>
      
    
    
    
    <category term="研发工具" scheme="https://renyb2.github.io/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="研发工具" scheme="https://renyb2.github.io/tags/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Jupyter" scheme="https://renyb2.github.io/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack研发：Nova与Cyborg交互流程研究</title>
    <link href="https://renyb2.github.io/2022/04/13/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ANova%E4%B8%8ECyborg%E4%BA%A4%E4%BA%92%E6%B5%81%E7%A8%8B%E7%A0%94%E7%A9%B6/"/>
    <id>https://renyb2.github.io/2022/04/13/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ANova%E4%B8%8ECyborg%E4%BA%A4%E4%BA%92%E6%B5%81%E7%A8%8B%E7%A0%94%E7%A9%B6/</id>
    <published>2022-04-13T05:45:59.000Z</published>
    <updated>2022-04-27T09:35:08.871Z</updated>
    
    <content type="html"><![CDATA[<p>本文只研究含有加速资源的虚机在生命周期管理的流程，即深挖<code>Nova</code>与<code>Cyborg</code>组件之间的交互流程，对<code>Nova</code>与其余组件的交互并不做详细展开，有兴趣可以对代码中具体函数进行深入分析。</p><h2 id="组件版本"><a href="#组件版本" class="headerlink" title="组件版本"></a>组件版本</h2><ul><li>Nova：22.4.0（Victoria）</li><li>Cyborg： 5.0.1（Victoria）</li><li>Placement：4.0.0（Victoria）</li></ul><h2 id="社区支持情况"><a href="#社区支持情况" class="headerlink" title="社区支持情况"></a>社区支持情况</h2><blockquote><p>Nova supports only specific operations for instances with accelerators. The lists of supported and unsupported operations are as below:</p><ul><li>Supported operations.<ul><li>Creation and deletion.</li><li>Reboots (soft and hard).</li><li>Pause and unpause.</li><li>Stop and start.</li><li>Take a snapshot.</li><li>Backup.</li><li>Rescue and unrescue.</li><li>Rebuild.</li><li>Evacuate.</li><li>Shelve and unshelve.</li></ul></li><li>Unsupported operations<ul><li>Resize.</li><li>Suspend and resume.</li><li>Cold migration.</li><li>Live migration.</li></ul></li></ul><p>Changed in version 22.0.0(Victoria): Added support for rebuild and evacuate operations.</p><p>Changed in version 23.0.0(Wallaby): Added support for shelve and unshelve operations.</p></blockquote><h2 id="加速资源虚机创建"><a href="#加速资源虚机创建" class="headerlink" title="加速资源虚机创建"></a>加速资源虚机创建</h2><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p><img src="/2022/04/13/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ANova%E4%B8%8ECyborg%E4%BA%A4%E4%BA%92%E6%B5%81%E7%A8%8B%E7%A0%94%E7%A9%B6/%E5%8A%A0%E9%80%9F%E8%B5%84%E6%BA%90%E8%99%9A%E6%9C%BA%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B.drawio.png" alt="加速资源虚机创建流程.drawio"></p><h3 id="各模块作用"><a href="#各模块作用" class="headerlink" title="各模块作用"></a>各模块作用</h3><ul><li><strong>Nova API：</strong>响应创建虚机请求，调用conductor进行创建虚机处理。</li><li><strong>Nova Conductor：</strong>先调用Nova Scheduler选择计算节点，其次向Cyborg发起请求，绑定该节点instance uuid与resource provider，最后调用Nova Computer在指定计算节点创建虚机。</li><li><strong>Cyborg API：</strong>响应Nova Conductor请求，调用Cyborg Conductor创建并绑定ARQ。</li><li><strong>Cyborg Conductor：</strong>负责创建并绑定ARQ，数据库层面操作。（Cyborg agent仅处理FPGA烧录及资源发现操作。）</li><li><strong>Nova Computer：</strong>寻找可用的加速资源设备，若没有现成的则创建一个，生成xml并孵化虚机。</li></ul><h3 id="代码调用关系"><a href="#代码调用关系" class="headerlink" title="代码调用关系"></a>代码调用关系</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 1. nova.api.openstack.coumpute.servers</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, req, body</span>):</span></span><br><span class="line">    -&gt; (instances, resv_id) = self.compute_api.create(context, *</span><br><span class="line"><span class="comment"># 2. nova.compute.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, context, instance_type, *</span></span></span><br><span class="line"><span class="function"><span class="params">    -&gt; self._create_instance(<span class="params"> *</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params">def _create_instance(<span class="params">self, context, instance_type, *</span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params">    -&gt; self.compute_task_api.schedule_and_build_instances(<span class="params"> *</span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova api -&gt; nova conductor</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 3. nova.conductor.manager</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params">def schedule_and_build_instances(<span class="params">self, context, build_requests, *</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; host_lists = self._schedule_instances(<span class="params">context, request_specs[<span class="number">0</span>], *</span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; accel_uuids = self._create_and_bind_arq_for_instance(<span class="params"> *</span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.compute_rpcapi.build_and_run_instance(<span class="params"> *</span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova conductor -&gt; nova scheduler</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 4. nova.scheduler.manager</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def select_destinations(<span class="params">self, ctxt, request_spec=None, *</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova conductor -&gt; cyborg api</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 5. nova.conductor.manager</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_and_bind_arq_for_instance(<span class="params">self, context, instance, host, *</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return self._create_and_bind_arqs(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_and_bind_arqs(<span class="params">self, context, instance_uuid, extra_specs, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; arqs = cyclient.create_arqs_and_match_resource_providers(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; cyclient.bind_arqs(<span class="params">bindings=bindings</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 6. nova.accelerator.cyborg</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def create_arqs_and_match_resource_providers(<span class="params">self, dp_name, rg_rp_map</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; arqs = self._create_arqs(<span class="params">dp_name</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_arqs(<span class="params">self, dp_name</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; resp, err_msg = self._call_cyborg(<span class="params">self._client.post, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def bind_arqs(<span class="params">self, bindings</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; resp, err_msg = self._call_cyborg(<span class="params">self._client.patch, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## Part 1: _create_arqs()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 7. cyborg.api.controllers.v2.arqs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">@authorize_wsgi.authorize_wsgi(<span class="params"><span class="string">&quot;cyborg:arq&quot;</span>, <span class="string">&quot;create&quot;</span>, False</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def post(<span class="params">self, req</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">       obj_extarq = objects.ExtARQ(<span class="params">context, **extarq_fields</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; new_extarq = pecan.request.conductor_api.arq_create(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 8. cyborg.conductor.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def arq_create(<span class="params">self, context, obj_extarq, devprof_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; obj_extarq.create(<span class="params">context, devprof_id</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 9. cyborg.objects.ext_arq</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def create(<span class="params">self, context, device_profile_id=None</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; db_extarq = self.dbapi.extarq_create(<span class="params">context, values</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 10. cyborg.db.sqlalchemy.api</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def extarq_create(<span class="params">self, context, values</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## Part 2: bind_arqs()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 11. cyborg.api.controllers.v2.arqs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">@authorize_wsgi.authorize_wsgi(<span class="params"><span class="string">&quot;cyborg:arq&quot;</span>, <span class="string">&quot;update&quot;</span>, False</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def patch(<span class="params">self, patch_list</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; objects.ExtARQ.apply_patch(<span class="params">context, patch_list, valid_fields</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 12. cyborg.objects.extarq.ext_arq_job</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def apply_patch(<span class="params">cls, context, patch_list, valid_fields</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; job = extarq.start_bind_job(<span class="params">context, valid_fields</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def start_bind_job(<span class="params">self, context, valid_fields</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return self._bind_job(<span class="params">context, dep</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _bind_job(<span class="params">self, context, deployable</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.bind(<span class="params">context, deployable</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 13. cyborg.objects.ext_arq</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def bind(<span class="params">self, context, deployable</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self._allocate_attach_handle(<span class="params">context, deployable</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.update_check_state(<span class="params">context, constants.ARQ_BOUND</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _allocate_attach_handle(<span class="params">self, context, deployable</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; ah = AttachHandle.allocate(<span class="params">context, deployable.id</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 14. cyborg.objects.attach_handle</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def allocate(<span class="params">cls, context, deployable_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; db_ah = cls.dbapi.attach_handle_allocate(<span class="params">context, deployable_id</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 15. cyborg.db.sqlalchemy.api</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def attach_handle_allocate(<span class="params">self, context, deployable_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; ah = self._do_allocate_attach_handle(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _do_allocate_attach_handle(<span class="params">self, context, deployable_id</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">## nova conductor -&gt; nova compute</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment">##############################</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 16. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def build_and_run_instance(<span class="params">self, context, instance, image, request_spec, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; result = self._do_build_and_run_instance(<span class="params">*args, **kwargs</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 17. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _do_build_and_run_instance(<span class="params">self, context, instance, image, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self._build_and_run_instance(<span class="params">context, instance, image, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 18. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _build_and_run_instance(<span class="params">self, context, instance, image, injected_files, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; with self._build_resources(<span class="params">context, instance, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self.driver.spawn(<span class="params">context, instance, image_meta, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 19. nova.compute.manager</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _build_resources(<span class="params">self, context, instance, requested_networks, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; arqs = self._get_bound_arq_resources(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _get_bound_arq_resources(<span class="params">self, context, instance, arq_uuids</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return arqs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="comment"># 20. nova.virt.libvirt.driver</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def spawn(<span class="params">self, context, instance, image_meta, injected_files,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; mdevs = self._allocate_mdevs(<span class="params">allocations</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; self._create_guest_with_network(<span class="params"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _allocate_mdevs(<span class="params">self, allocations</span>):</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; mdevs_available = self._get_existing_mdevs_not_assigned(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; chosen_mdev = self._create_new_mediated_device(<span class="params">parent_device</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; return chosen_mdevs</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_guest_with_network(<span class="params">self, context, xml, instance, network_info, *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; guest = self._create_guest(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">def _create_guest(<span class="params"> *</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params"><span class="params">    -&gt; guest = libvirt_guest.Guest.create(<span class="params">xml, self._host</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure><h2 id="加速资源虚机删除"><a href="#加速资源虚机删除" class="headerlink" title="加速资源虚机删除"></a>加速资源虚机删除</h2><h3 id="各模块作用-1"><a href="#各模块作用-1" class="headerlink" title="各模块作用"></a>各模块作用</h3><ul><li><strong>Nova API：</strong>响应删除虚机请求，根据虚机不同状态做出相应的处理：<ul><li>虚机正常：先释放各类资源，然后调用其宿主机节点的nova compute组件进行删除操作。</li></ul></li><li><strong>Cyborg API：</strong>响应Nova API请求，调用Cyborg Conductor解绑并删除ARQ。</li><li><strong>Cyborg Conductor：</strong>负责解绑并删除ARQ，数据库层面操作。</li><li><strong>Nova Computer：</strong>寻找可用的加速资源设备，若没有现成的则创建一个，生成xml并孵化虚机。</li></ul><h3 id="代码调用关系-1"><a href="#代码调用关系-1" class="headerlink" title="代码调用关系"></a>代码调用关系</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 1. nova.api.openstack.coumpute.servers</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, req, id</span>):</span></span><br><span class="line">    -&gt; self._delete(req.environ[&#x27;nova.context&#x27;], req, id)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete</span>(<span class="params">self, context, req, instance_uuid</span>):</span></span><br><span class="line">    -&gt; self.compute_api.delete(context, instance)</span><br><span class="line"><span class="comment"># 2. nova.compute.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; self._delete_instance(context, instance)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete_instance</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; self._delete(context, instance, &#x27;delete&#x27;, self._do_delete, *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete</span>(<span class="params">self, context, instance, delete_type, cb, **instance_attrs</span>):</span></span><br><span class="line">    -&gt; self._local_delete(cctxt, instance, bdms, delete_type, cb)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_local_delete</span>(<span class="params">self, context, instance, bdms, delete_type, cb</span>):</span></span><br><span class="line">    -&gt; compute_utils.delete_arqs_if_needed(context, instance)</span><br><span class="line">    -&gt; cb(context, instance, bdms, local=True)</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api -&gt; cyborg api</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 3. nova.compute.utils</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_arqs_if_needed</span>(<span class="params">context, instance</span>):</span></span><br><span class="line">    -&gt; cyclient.delete_arqs_for_instance(instance.uuid)</span><br><span class="line"><span class="comment"># 4. nova.accelerator.cyborg</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_arqs_for_instance</span>(<span class="params">self, instance_uuid</span>):</span></span><br><span class="line">    -&gt; resp, err_msg = self._call_cyborg(self._client.delete, *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. cyborg.api.controllers.v2.arqs</span></span><br><span class="line"><span class="meta">@authorize_wsgi.authorize_wsgi(&quot;cyborg:arq&quot;, &quot;delete&quot;, False)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, arqs=None, instance=None</span>):</span></span><br><span class="line">    -&gt; pecan.request.conductor_api.arq_delete_by_instance_uuid( *</span><br><span class="line"><span class="comment"># 6. cyborg.conductor.manager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">arq_delete_by_instance_uuid</span>(<span class="params">self, context, instance</span>):</span></span><br><span class="line">    -&gt; ExtARQ.delete_by_instance(context, instance)</span><br><span class="line"><span class="comment"># 7. cyborg.objects.ext_arq</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_by_instance</span>(<span class="params">cls, context, instance_uuid</span>):</span></span><br><span class="line">    -&gt; obj_extarq.unbind(context)</span><br><span class="line">    -&gt; obj_extarq.destroy(context)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Part 1: obj_extarq.unbind(context)</span></span><br><span class="line"><span class="comment"># 8. cyborg.objects.ext_arq</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unbind</span>(<span class="params">self, context</span>):</span></span><br><span class="line">    -&gt; attach_handle.deallocate(context)</span><br><span class="line"><span class="comment"># 9. cyborg.objects.attach_handle</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deallocate</span>(<span class="params">self, context</span>):</span></span><br><span class="line">    -&gt; self.dbapi.attach_handle_update(context, self.uuid, values)</span><br><span class="line"><span class="comment"># 10. cyborg.db.sqlalchemy.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">attach_handle_update</span>(<span class="params">self, context, uuid, values</span>):</span></span><br><span class="line">    -&gt; return self._do_update_attach_handle(context, uuid, values)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_do_update_attach_handle</span>(<span class="params">self, context, uuid, values</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Part 2: obj_extarq.destroy(context)</span></span><br><span class="line"><span class="comment"># 11. cyborg.objects.ext_arq</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">destroy</span>(<span class="params">self, context</span>):</span></span><br><span class="line">    -&gt; self.dbapi.extarq_delete(context, self.arq.uuid)</span><br><span class="line"><span class="comment"># 12. cyborg.db.sqlalchemy.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extarq_delete</span>(<span class="params">self, context, uuid</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment">## nova api -&gt; nova compute</span></span><br><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># 13. nova.compute.api</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_do_delete</span>(<span class="params">self, context, instance, bdms, local=False</span>):</span></span><br><span class="line">    -&gt; self.compute_rpcapi.terminate_instance(context, instance, bdms)</span><br><span class="line"><span class="comment"># 14. nova.compute.manager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">terminate_instance</span>(<span class="params">self, context, instance, bdms</span>):</span></span><br><span class="line">    -&gt; do_terminate_instance(instance, bdms)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_terminate_instance</span>(<span class="params">instance, bdms</span>):</span></span><br><span class="line">    -&gt; self._delete_instance(context, instance, bdms)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_delete_instance</span>(<span class="params">self, context, instance, bdms</span>):</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://docs.openstack.org/api-guide/compute/accelerator-support.html">Using accelerators with Cyborg</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文只研究含有加速资源的虚机在生命周期管理的流程，即深挖&lt;code&gt;Nova&lt;/code&gt;与&lt;code&gt;Cyborg&lt;/code&gt;组件之间的交互流程，对&lt;code&gt;Nova&lt;/code&gt;与其余组件的交互并不做详细展开，有兴趣可以对代码中具体函数进行深入分析。&lt;/p&gt;
&lt;h2</summary>
      
    
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/categories/OpenStack/"/>
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/tags/OpenStack/"/>
    
    <category term="Nova" scheme="https://renyb2.github.io/tags/Nova/"/>
    
    <category term="Cyborg" scheme="https://renyb2.github.io/tags/Cyborg/"/>
    
  </entry>
  
  <entry>
    <title>NVIDIA使用：vGPU</title>
    <link href="https://renyb2.github.io/2022/03/30/NVIDIA%E4%BD%BF%E7%94%A8%EF%BC%9AvGPU/"/>
    <id>https://renyb2.github.io/2022/03/30/NVIDIA%E4%BD%BF%E7%94%A8%EF%BC%9AvGPU/</id>
    <published>2022-03-30T06:37:07.000Z</published>
    <updated>2022-03-31T09:41:31.252Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vGPU选择"><a href="#vGPU选择" class="headerlink" title="vGPU选择"></a>vGPU选择</h2><p>NVIDIA 虚拟 GPU 软件产品包括 GRID 虚拟 PC (GRID vPC)、GRID 虚拟应用程序 (GRID vApp)，以及 Quadro 虚拟数据中心工作站 (Quadro vDWS)。</p><ul><li>vGPU推荐对比：<a href="https://link.zhihu.com/?target=https://www.nvidia.cn/data-center/graphics-cards-for-virtualization/">https://www.nvidia.cn/data-center/graphics-cards-for-virtualization/</a></li><li>vGPU支持型号：<a href="https://link.zhihu.com/?target=https://docs.nvidia.com/grid/gpus-supported-by-vgpu.html">https://docs.nvidia.com/grid/gpus-supported-by-vgpu.html</a></li><li>vGPU支持服务器：<a href="https://www.nvidia.com/en-us/data-center/resources/vgpu-certified-servers/">https://www.nvidia.com/en-us/data-center/resources/vgpu-certified-servers/</a></li></ul><p><img src="/2022/03/30/NVIDIA%E4%BD%BF%E7%94%A8%EF%BC%9AvGPU/vGPU%E6%94%AF%E6%8C%81%E6%83%85%E5%86%B5.png" alt="vGPU支持情况"></p><h2 id="vGPU驱动安装"><a href="#vGPU驱动安装" class="headerlink" title="vGPU驱动安装"></a>vGPU驱动安装</h2><blockquote><p>vGPU驱动说明：</p><p>A physical GPU that is passed through to a VM is bound to the vfio-pci kernel module. A physical GPU that is bound to the vfio-pci kernel module can be used only for pass-through. To enable the GPU to be used for vGPU, the GPU must be unbound from vfio-pci kernel module and bound to the nvidia kernel module.</p></blockquote><h3 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h3><ul><li>系统：CentOS Linux release 7.8.2003 (Core)</li><li>内核：3.10.0-1127.el7.x86_64</li></ul><h3 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看GPU信息</span></span><br><span class="line">[root@k205 ~]# lspci -nnn -D | grep NVIDIA</span><br><span class="line">0000:86:00.0 3D controller [0302]: NVIDIA Corporation TU104GL [Tesla T4] [10de:1eb8] (rev a1)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基础依赖包</span></span><br><span class="line">[root@k205 ~]# yum install -y gcc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装NVIDIA驱动</span></span><br><span class="line">[root@k205 ~]# ./NVIDIA-Linux-x86_64-460.32.04-vgpu-kvm.run</span><br></pre></td></tr></table></figure><h3 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h3><p><strong>问题1：</strong>安装报<code>X library path &#39;/usr/lib64&#39; ... were not queryable from the system</code>，问题截图如下：</p><p><img src="/2022/03/30/NVIDIA%E4%BD%BF%E7%94%A8%EF%BC%9AvGPU/%E9%97%AE%E9%A2%981.png" alt="X library not queryable"></p><p><strong>解决办法：</strong>关闭<code>vnc server</code></p><h2 id="vGPU使用"><a href="#vGPU使用" class="headerlink" title="vGPU使用"></a>vGPU使用</h2><h3 id="宿主机使用"><a href="#宿主机使用" class="headerlink" title="宿主机使用"></a>宿主机使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看GPU PCI信息</span></span><br><span class="line">[root@k205 ~]# lspci -nnn -D | grep NVIDIA</span><br><span class="line">0000:86:00.0 3D controller [0302]: NVIDIA Corporation TU104GL [Tesla T4] [10de:1eb8] (rev a1)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看GPU PCI详情</span></span><br><span class="line">[root@k205 ~]# lspci -d 10de: -k</span><br><span class="line">86:00.0 3D controller: NVIDIA Corporation TU104GL [Tesla T4] (rev a1)</span><br><span class="line">        Subsystem: NVIDIA Corporation Device 12a2</span><br><span class="line">        Kernel driver in use: nvidia</span><br><span class="line">        Kernel modules: nouveau, nvidia_vgpu_vfio, nvidia</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看支持的vGPU类型</span></span><br><span class="line">[root@k205 mdev_supported_types]# cd /sys/class/mdev_bus/0000:86:00.0/mdev_supported_types &amp;&amp; ls</span><br><span class="line">nvidia-222  nvidia-224  nvidia-226  nvidia-228  nvidia-230  nvidia-232  nvidia-234  nvidia-319  nvidia-321</span><br><span class="line">nvidia-223  nvidia-225  nvidia-227  nvidia-229  nvidia-231  nvidia-233  nvidia-252  nvidia-320</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看指定类型vGPU信息</span></span><br><span class="line">[root@k205 mdev_supported_types]# cat nvidia-222/name</span><br><span class="line">GRID T4-1B</span><br><span class="line">[root@k205 mdev_supported_types]# cat nvidia-222/available_instances</span><br><span class="line">16</span><br><span class="line">[root@k205 mdev_supported_types]# cat nvidia-222/description</span><br><span class="line">num_heads=4, frl_config=45, framebuffer=1024M, max_resolution=5120x2880, max_instance=16</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> num_heads: The maximum number of virtual display heads that the vGPU <span class="built_in">type</span> supports</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> frl_config: The frame rate limiter (FRL) configuration <span class="keyword">in</span> frames per second</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> framebuffer: The frame buffer size <span class="keyword">in</span> Mbytes</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> max_resolution: The maximum resolution per display head</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> max_instance: The maximum number of vGPU instances per physical GPU</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建vGPU</span></span><br><span class="line">[root@k205 mdev_supported_types]# uuidgen</span><br><span class="line">8da209ce-7865-48f0-9b04-fd6ef55dca63</span><br><span class="line">[root@k205 mdev_supported_types]# echo 8da209ce-7865-48f0-9b04-fd6ef55dca63 &gt; nvidia-222/create</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看现有vGPU设备</span></span><br><span class="line">[root@k205 mdev_supported_types]# ls /sys/bus/mdev/devices/</span><br><span class="line">8da209ce-7865-48f0-9b04-fd6ef55dca63</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除指定vGPU设备</span></span><br><span class="line">[root@k205 mdev_supported_types]# echo 1 &gt; nvidia-222/devices/8da209ce-7865-48f0-9b04-fd6ef55dca63/remove</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 脚本</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有vGPU类型信息</span></span><br><span class="line">vGPU_DIR=&#x27;/sys/class/mdev_bus/0000:86:00.0/mdev_supported_types&#x27;</span><br><span class="line">for type in $(ls $vGPU_DIR)</span><br><span class="line">do</span><br><span class="line">echo &quot;-----&quot;</span><br><span class="line">echo &quot;$type&quot;</span><br><span class="line">echo &quot;name: $(cat $vGPU_DIR/$type/name)&quot;</span><br><span class="line">echo &quot;description: $(cat $vGPU_DIR/$type/description)&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="虚机使用"><a href="#虚机使用" class="headerlink" title="虚机使用"></a>虚机使用</h3><p>创建虚机增加如下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-device vfio-pci,sysfsdev=/sys/bus/mdev/devices/8da209ce-7865-48f0-9b04-fd6ef55dca63 -uuid xxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><p>虚机xml内相关配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hostdev</span> <span class="attr">mode</span>=<span class="string">&#x27;subsystem&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;mdev&#x27;</span> <span class="attr">managed</span>=<span class="string">&#x27;no&#x27;</span> <span class="attr">model</span>=<span class="string">&#x27;vfio-pci&#x27;</span> <span class="attr">display</span>=<span class="string">&#x27;off&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">address</span> <span class="attr">uuid</span>=<span class="string">&#x27;8da209ce-7865-48f0-9b04-fd6ef55dca63&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&#x27;hostdev0&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">&#x27;pci&#x27;</span> <span class="attr">domain</span>=<span class="string">&#x27;0x0000&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;0x00&#x27;</span> <span class="attr">slot</span>=<span class="string">&#x27;0x07&#x27;</span> <span class="attr">function</span>=<span class="string">&#x27;0x0&#x27;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hostdev</span>&gt;</span></span><br></pre></td></tr></table></figure><p>后面就是虚拟机内部安装对应的驱动程序了，一般名称为：<em>xxxx_grid_win10_server2016_server2019_64bit_international.exe</em></p><h2 id="vGPU授权"><a href="#vGPU授权" class="headerlink" title="vGPU授权"></a>vGPU授权</h2><p>NVIDIA的vGPU在虚拟机内部使用是需要购买license的，具体的部署方式是需要搭建一台授权服务器，虚拟机内部安装显卡驱动后需要配置授权服务器的地址和端口，前提是虚拟机和授权服务器网络是通的，虚拟机每次开机后都要连接到授权服务器进行授权。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://docs.nvidia.com/grid/9.0/grid-vgpu-user-guide/index.html#abstract">NVIDIA官方文档：Virtual GPU Software User Guide</a></li><li><a href="https://zhuanlan.zhihu.com/p/424967206">英伟达显卡虚拟化vGPU实践指南</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vGPU选择&quot;&gt;&lt;a href=&quot;#vGPU选择&quot; class=&quot;headerlink&quot; title=&quot;vGPU选择&quot;&gt;&lt;/a&gt;vGPU选择&lt;/h2&gt;&lt;p&gt;NVIDIA 虚拟 GPU 软件产品包括 GRID 虚拟 PC (GRID vPC)、GRID 虚拟应用程序</summary>
      
    
    
    
    <category term="Accelerator" scheme="https://renyb2.github.io/categories/Accelerator/"/>
    
    
    <category term="NVIDIA" scheme="https://renyb2.github.io/tags/NVIDIA/"/>
    
    <category term="Accelerator" scheme="https://renyb2.github.io/tags/Accelerator/"/>
    
  </entry>
  
  <entry>
    <title>Python</title>
    <link href="https://renyb2.github.io/2022/03/08/Python/"/>
    <id>https://renyb2.github.io/2022/03/08/Python/</id>
    <published>2022-03-08T03:34:36.000Z</published>
    <updated>2022-03-10T06:58:15.387Z</updated>
    
    <content type="html"><![CDATA[<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>在需要调试的代码位置，加入如下代码，即可进入PDB交互式源代码调试模式。详细用法参考官方文档：<a href="https://docs.python.org/zh-cn/3/library/pdb.html">pdb — Python 的调试器</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pdb;pdb.set_trace()</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left"><strong>命令</strong></th><th><strong>解释</strong></th></tr></thead><tbody><tr><td align="left">break 或 b 设置断点</td><td>设置断点</td></tr><tr><td align="left">continue 或 c</td><td>继续执行程序</td></tr><tr><td align="left">list 或 l</td><td>查看当前行的代码段</td></tr><tr><td align="left">step 或 s</td><td>进入函数</td></tr><tr><td align="left">return 或 r</td><td>执行代码直到从当前函数返回</td></tr><tr><td align="left">exit 或 q</td><td>中止并退出</td></tr><tr><td align="left">next 或 n</td><td>执行下一行</td></tr><tr><td align="left">pp</td><td>打印变量的值</td></tr><tr><td align="left">help</td><td>帮助</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;调试&quot;&gt;&lt;a href=&quot;#调试&quot; class=&quot;headerlink&quot; title=&quot;调试&quot;&gt;&lt;/a&gt;调试&lt;/h2&gt;&lt;p&gt;在需要调试的代码位置，加入如下代码，即可进入PDB交互式源代码调试模式。详细用法参考官方文档：&lt;a href=&quot;https://docs.p</summary>
      
    
    
    
    <category term="开发语言" scheme="https://renyb2.github.io/categories/%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="Python" scheme="https://renyb2.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux运维：CPU load average过高</title>
    <link href="https://renyb2.github.io/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/"/>
    <id>https://renyb2.github.io/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/</id>
    <published>2022-03-03T10:07:20.000Z</published>
    <updated>2022-03-22T09:08:17.270Z</updated>
    
    <content type="html"><![CDATA[<h2 id="load-average基础"><a href="#load-average基础" class="headerlink" title="load average基础"></a>load average基础</h2><p>top命令中load average显示的是最近1分钟、5分钟和15分钟的系统平均负载。</p><p>系统平均负载被定义为在<strong>特定时间间隔内</strong>运行队列中(<strong>在CPU上运行或者等待运行多少进程</strong>)的平均进程数。如果一个进程满足以下条件则其就会位于运行队列中：</p><ul><li>它没有在等待I/O操作的结果</li><li>它没有主动进入等待状态(也就是没有调用’wait’)</li><li>没有被停止(例如：等待终止)</li></ul><p>在Linux中，进程分为三种状态，一种是阻塞的进程blocked process，一种是可运行的进程runnable process，另外就是正在运行的进程running process。</p><p>进程可运行状态时，它处在一个运行队列run queue中，与其他可运行进程争夺CPU时间。 <strong>系统的load是指正在运行和准备好运行的进程的总数。</strong>比如现在系统有2个正在运行的进程，3个可运行进程，那么系统的load就是5。load average就是一定时间内的load数量。</p><p>一般来说只要每个CPU的当前活动进程数不大于3那么系统的性能就是良好的，如果每个CPU的任务数大于5，那么就表示这台机器的性能有严重问题。</p><p><strong>CPU使用率高并不总是意味着CPU工作繁忙，它有可能是正在等待其他子系统。</strong>在进行性能分析时，将所有子系统当做一个整体来看是非常重要的，因为在子系统中可能会出现瀑布效应。衡量CPU 系统负载的指标是load,load 就是对计算机系统能够承担的多少负载的度量,简单的说是进程队列的长度。简单的例子比如食堂有五个窗口，当有小于五个学生来打饭，五个窗口都能及时处理，但是当学生个数超过5个，必然会出现等待的学生。请求大于当前的处理能力，会出现等待，引起load升高。<br>Load Average 就是一段时间(1min,5min,15min)内平均Load。<strong>平均负载的最佳值是1</strong>，这意味着每个进程都可以在一个完整的CPU 周期内完成。</p><h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>经反馈发现，虚机环境CentOS系统的CPU负载超过正常水平，并持续升高，经过一晚的时间，负载提升至1000+的水平。</p><p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/CPU%E8%B4%9F%E8%BD%BD%E8%BF%87%E9%AB%98.png" alt="CPU负载过高"></p><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul><li>12c32G vCenter 虚机 * 3台</li><li>部署Kubernetes + OpenStack</li></ul><h2 id="问题定位"><a href="#问题定位" class="headerlink" title="问题定位"></a>问题定位</h2><ol><li>通过top查看各CPU使用率，发现CPU各核使用率并不高，说明CPU性能并不是导致拥塞的瓶颈。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看CPU各核使用率</span></span><br><span class="line">top后按1</span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/CPU%E4%BD%BF%E7%94%A8%E7%8E%87.png" alt="CPU使用率"></p><ol start="2"><li>计算通常不会存在瓶颈，一般性能瓶颈出在IO处。接下来需要确认是否由于IO问题，导致拥塞，引起负载升高。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> IO监控命令</span></span><br><span class="line">[root@k104 ~]# iostat</span><br><span class="line">[root@k104 ~]# dstat</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 简单磁盘写测速</span></span><br><span class="line">[root@k104 ~]# dd if=/dev/zero of=test.img bs=1M count=1024</span><br><span class="line">1024+0 records in</span><br><span class="line">1024+0 records out</span><br><span class="line">1073741824 bytes (1.1 GB) copied, 0.603499 s, 1.8 GB/s</span><br></pre></td></tr></table></figure><ol start="3"><li>检测发现IO不存在瓶颈，推测可能程序有问题，未正常退出导致cpu load average异常升高。这里先寻找哪个进程有问题，命令如下：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看所有线程</span></span><br><span class="line">[root@k104 ~]# ps -eLl</span><br></pre></td></tr></table></figure><ol start="4"><li>检查发现cephcsi线程数过多，且都处于S（休眠）状态，统计数量与load average一致，故load average升高由cephcsi线程未正常退出导致。</li></ol><p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/%E4%BC%91%E7%9C%A0%E7%BA%BF%E7%A8%8B%E8%BF%87%E5%A4%9A.png" alt="休眠线程过多"></p><ol start="5"><li>追踪定位cephcsi线程未正常退出原因，该线程为rook-ceph创建，提供cephfs服务，检查ceph状态。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph状态概况</span></span><br><span class="line">[root@k104 ~]# ceph -s</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph健康详情</span></span><br><span class="line">[root@k104 ~]# ceph health detail</span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/ceph%E5%BC%82%E5%B8%B8.png" alt="ceph异常"></p><p><img src="/2022/03/03/Linux%E8%BF%90%E7%BB%B4%EF%BC%9ACPU-load-average%E8%BF%87%E9%AB%98/ceph%E5%81%A5%E5%BA%B7%E5%BC%82%E5%B8%B8.png" alt="ceph健康异常"></p><ol start="6"><li>发现cephfs异常，根据报错信息<code>1 mds daemon damaged</code>从网上寻找到如下解决办法：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mds repaired 0</span><br></pre></td></tr></table></figure><blockquote><p><strong>Ceph部分组件用途</strong></p><ul><li><strong>MDS：</strong>Ceph元数据服务器，跟踪文件层次结构并存储只供CephFS使用的元数据。Ceph块设备和RADOS网关不需要元数据。MDS不直接给client提供数据服务。</li><li><strong>CephFS：</strong>提供了一个任意大小且兼容POSlX的分布式文件系统。CephFS 依赖Ceph MDS 来跟踪文件层次结构，即元数据。</li><li><strong>CSI CephFS plugin：</strong>用来提供CephFS存储卷和挂载存储卷。</li></ul></blockquote><ol start="7"><li>cephfs问题修复后，重启相关pod，cpu load average问题未出现。</li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://blog.csdn.net/xiaoqiaoq0/article/details/106932338">CPU负载均衡之loadavg计算</a></li><li><a href="https://blog.csdn.net/xingjing1226/article/details/81977129">线程的5种状态详解</a></li><li><a href="https://www.cnblogs.com/lddbupt/p/5779655.html">cpu load过高问题排查</a></li><li><a href="https://blog.csdn.net/canot/article/details/78079085">CPU load过高产生的原因及排查</a></li><li><a href="https://www.cnblogs.com/weifeng1463/p/9007369.html">cpu使用率低负载高，原因分析</a></li><li><a href="https://juejin.cn/post/6844904173843005447">记一次CPU使用率低负载高的排查过程</a></li><li><a href="https://blog.csdn.net/whatday/article/details/108933578">linux 查看线程数的方法</a></li><li><a href="https://blog.csdn.net/mayue_web/article/details/106942440">查看Linux的所有线程</a></li><li><a href="https://www.cnblogs.com/xrq730/p/11041741.html">对cpu与load的理解及线上问题处理思路解读</a></li><li><a href="https://www.jianshu.com/p/94d130b457ce">Linux CPU负载过高问题排查</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;load-average基础&quot;&gt;&lt;a href=&quot;#load-average基础&quot; class=&quot;headerlink&quot; title=&quot;load average基础&quot;&gt;&lt;/a&gt;load average基础&lt;/h2&gt;&lt;p&gt;top命令中load average显示的是</summary>
      
    
    
    
    <category term="Linux" scheme="https://renyb2.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://renyb2.github.io/tags/Linux/"/>
    
    <category term="CPU" scheme="https://renyb2.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack研发：Trove Cluster Controller</title>
    <link href="https://renyb2.github.io/2022/01/25/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ATrove-Cluster-Controller/"/>
    <id>https://renyb2.github.io/2022/01/25/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ATrove-Cluster-Controller/</id>
    <published>2022-01-25T09:45:32.000Z</published>
    <updated>2022-04-13T06:01:22.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>对程序员来说，最好的文档就是源码。Trove 官方对于<strong>Clueter Controller</strong>能力的描述文档不多，给的参考例子只涉及到MongoDB集群，参考<a href="https://docs.openstack.org/trove/wallaby/user/set-up-clustering.html">Set up database clustering</a>。为了深入了解Trove的集群能力，本文档对<code>Trove Cluster Controller</code>的能力进行深入剖析，从API入手，解析如何构建整个后端数据库集群生命周期管理架构。摸清Trove现有能力的同时，梳理代码设计思路，为后续研发做准备。</p><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><ul><li>OpenStack Train版本（16 October, 2019）</li><li>Trove 12.1.0</li></ul><p><strong>备注：</strong></p><p>在深入剖析Trove源码后，发现Trove在14.0.0后，调整了虚机内数据库服务的部署方式，从原先的直接RPM部署调整为Docker部署，优点就是横向扩展很容易，缺点是为了打通Trove虚机与Docker仓库的网络，导致Trove服务网络结构会比较复杂。<strong>Trove更新为docker后，留了一个深坑，就是原先已支持的数据库，现在很多都不支持了，Guest Agent正在重构。目前最新版本支持情况：MySQL 5.7.X, MariaDB 10.4.X. PostgreSQL 12.4 is partially supported</strong>。目前已经两个大版本过去了，依然没有新的数据库类型支持，考虑到研发代价，决定使用弃用Docker形式的新版本，使用稳定的老版本。</p><p><img src="/2022/01/25/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ATrove-Cluster-Controller/trove-releasenote-14.0.0.png" alt="trove-releasenote-14.0.0"></p><p><img src="/2022/01/25/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9ATrove-Cluster-Controller/trove-administrator-guide-16.0.0.png" alt="trove-administrator-guide-16.0.0"></p><h2 id="源生能力"><a href="#源生能力" class="headerlink" title="源生能力"></a>源生能力</h2><h3 id="Clueter-相关接口"><a href="#Clueter-相关接口" class="headerlink" title="Clueter 相关接口"></a>Clueter 相关接口</h3><table><thead><tr><th>接口</th><th>接口路由</th><th>请求方式</th></tr></thead><tbody><tr><td>index cluster</td><td><code>/&#123;tenant_id&#125;/clusters</code></td><td>GET</td></tr><tr><td>show cluster</td><td><code>/&#123;tenant_id&#125;/clusters/&#123;id&#125;</code></td><td>GET</td></tr><tr><td>create cluster</td><td><code>/&#123;tenant_id&#125;/clusters</code></td><td>POST</td></tr><tr><td>cluster action</td><td><code>/&#123;tenant_id&#125;/clusters/&#123;id&#125;</code></td><td>POST</td></tr><tr><td>show instance in cluster</td><td><code>/&#123;tenant_id&#125;/clusters/&#123;cluster_id&#125;/instances/</code></td><td>GET</td></tr><tr><td>delete cluster</td><td><code>/&#123;tenant_id&#125;/clusters/&#123;id&#125;</code></td><td>DELETE</td></tr></tbody></table><h3 id="Clueter-支持的集群类型"><a href="#Clueter-支持的集群类型" class="headerlink" title="Clueter 支持的集群类型"></a>Clueter 支持的集群类型</h3><table><thead><tr><th>数据库</th><th>集群类型</th><th>入口函数（strategy）</th></tr></thead><tbody><tr><td><em>Percona XtraDB</em></td><td>Galera</td><td><code>trove.common.strategies.cluster.experimental.galera_common</code></td></tr><tr><td><em>MariaDB</em></td><td>Galera</td><td><code>trove.common.strategies.cluster.experimental.galera_common</code></td></tr><tr><td><em>Redis</em></td><td>Redis Cluster</td><td><code>trove.common.strategies.cluster.experimental.redis</code></td></tr><tr><td><em>MongoDB</em></td><td>MongoDB Cluster</td><td><code>trove.common.strategies.cluster.experimental.mongodb</code></td></tr><tr><td><em>Cassandra</em></td><td>Cassandra Cluster</td><td><code>trove.common.strategies.cluster.experimental.cassandra</code></td></tr><tr><td><em>Vertica</em></td><td>Vertica Cluster</td><td><code>trove.common.strategies.cluster.experimental.vertica</code></td></tr></tbody></table><h2 id="代码走读"><a href="#代码走读" class="headerlink" title="代码走读"></a>代码走读</h2><p>OpenStack源码分析，需要从组件包管理<code>setup.cfg</code>中的<code>entry_points</code>入手，根据<code>entry_points</code>中<code>trove-api</code>的配置，确定入口为<code>trove.cmd.api:main</code>。<code>setup.cfg</code>源码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">[entry_points]</span><br><span class="line">console_scripts &#x3D; </span><br><span class="line">trove-api &#x3D; trove.cmd.api:main</span><br><span class="line">trove-taskmanager &#x3D; trove.cmd.taskmanager:main</span><br><span class="line">trove-mgmt-taskmanager &#x3D; trove.cmd.taskmanager:mgmt_main</span><br><span class="line">trove-conductor &#x3D; trove.cmd.conductor:main</span><br><span class="line">trove-manage &#x3D; trove.cmd.manage:main</span><br><span class="line">trove-guestagent &#x3D; trove.cmd.guest:main</span><br><span class="line">trove-fake-mode &#x3D; trove.cmd.fakemode:main</span><br><span class="line">trove-status &#x3D; trove.cmd.status:main</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>trove-api调用wsgi模块，启动api服务。源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.cmd.api</span></span><br><span class="line"><span class="keyword">from</span> oslo_concurrency <span class="keyword">import</span> processutils</span><br><span class="line"><span class="keyword">from</span> trove.cmd.common <span class="keyword">import</span> with_initialize</span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@with_initialize</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">CONF</span>):</span></span><br><span class="line">    <span class="keyword">from</span> trove.common <span class="keyword">import</span> cfg</span><br><span class="line">    <span class="keyword">from</span> trove.common <span class="keyword">import</span> notification</span><br><span class="line">    <span class="keyword">from</span> trove.common <span class="keyword">import</span> wsgi</span><br><span class="line">    <span class="keyword">from</span> trove.instance <span class="keyword">import</span> models <span class="keyword">as</span> inst_models</span><br><span class="line"></span><br><span class="line">    notification.DBaaSAPINotification.register_notify_callback(</span><br><span class="line">        inst_models.persist_instance_fault)</span><br><span class="line">    cfg.set_api_config_defaults()</span><br><span class="line">    profile.setup_profiler(<span class="string">&#x27;api&#x27;</span>, CONF.host)</span><br><span class="line">    conf_file = CONF.find_file(CONF.api_paste_config)</span><br><span class="line">    workers = CONF.trove_api_workers <span class="keyword">or</span> processutils.get_worker_count()</span><br><span class="line">    launcher = wsgi.launch(<span class="string">&#x27;trove&#x27;</span>, CONF.bind_port, conf_file,</span><br><span class="line">                           host=CONF.bind_host, workers=workers)</span><br><span class="line">    launcher.wait()</span><br></pre></td></tr></table></figure><p>确定trove api接口能力，需要先从wsgi模块关于Router的定义，其中<code>wsgi.Router</code>主要负责对请求进行匹配，未匹配到返回<code>404 HTTPNotFound</code>。<code>base_wsgi.Router</code>为<code>wsgi.Router</code>的父类，定义了Router的使用方式。相关源码见下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.common.wsgi</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router</span>(<span class="params">base_wsgi.Router</span>):</span></span><br><span class="line">    <span class="comment"># Original router did not allow for serialization of the 404 error.</span></span><br><span class="line">    <span class="comment"># To fix this the _dispatch was modified to use Fault() objects.</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @webob.dec.wsgify</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_dispatch</span>(<span class="params">req</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Called by self._router after matching the incoming request to a route</span></span><br><span class="line"><span class="string">        and putting the information into req.environ.  Either returns 404</span></span><br><span class="line"><span class="string">        or the routed WSGI app&#x27;s response.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        match = req.environ[<span class="string">&#x27;wsgiorg.routing_args&#x27;</span>][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">            <span class="keyword">return</span> Fault(webob.exc.HTTPNotFound())</span><br><span class="line">        app = match[<span class="string">&#x27;controller&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> app</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># trove.common.base_wsgi</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router</span>(<span class="params">object</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    WSGI middleware that maps incoming requests to WSGI apps.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, mapper</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Create a router for the given routes.Mapper.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Each route in `mapper` must specify a &#x27;controller&#x27;, which is a</span></span><br><span class="line"><span class="string">        WSGI app to call.  You&#x27;ll probably want to specify an &#x27;action&#x27; as</span></span><br><span class="line"><span class="string">        well and have your controller be a wsgi.Controller, who will route</span></span><br><span class="line"><span class="string">        the request to the action method.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Examples:</span></span><br><span class="line"><span class="string">          mapper = routes.Mapper()</span></span><br><span class="line"><span class="string">          sc = ServerController()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          # Explicit mapping of one route to a controller+action</span></span><br><span class="line"><span class="string">          mapper.connect(None, &quot;/svrlist&quot;, controller=sc, action=&quot;list&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          # Actions are all implicitly defined</span></span><br><span class="line"><span class="string">          mapper.resource(&quot;server&quot;, &quot;servers&quot;, controller=sc)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">          # Pointing to an arbitrary WSGI app.  You can specify the</span></span><br><span class="line"><span class="string">          # &#123;path_info:.*&#125; parameter so the target app can be handed just that</span></span><br><span class="line"><span class="string">          # section of the URL.</span></span><br><span class="line"><span class="string">          mapper.connect(None, &quot;/v1.0/&#123;path_info:.*&#125;&quot;, controller=BlogApp())</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.map = mapper</span><br><span class="line">        self._router = routes.middleware.RoutesMiddleware(self._dispatch,</span><br><span class="line">                                                          self.map)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @webob.dec.wsgify</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, req</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Route the incoming request to a controller based on self.map.</span></span><br><span class="line"><span class="string">        If no match, return a 404.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._router</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line"><span class="meta">    @webob.dec.wsgify</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_dispatch</span>(<span class="params">req</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Called by self._router after matching the incoming request to a route</span></span><br><span class="line"><span class="string">        and putting the information into req.environ.  Either returns 404</span></span><br><span class="line"><span class="string">        or the routed WSGI app&#x27;s response.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        match = req.environ[<span class="string">&#x27;wsgiorg.routing_args&#x27;</span>][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">            <span class="keyword">return</span> webob.exc.HTTPNotFound()</span><br><span class="line">        app = match[<span class="string">&#x27;controller&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> app</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>trove api的详细router定义是在<code>trove.common.api:API</code>中，定义了trove api所有接口路由。根据Trove API Rrouter定义的接口，cluster支持增删改查能力，Cluster Controller的路由代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.common.api</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_cluster_router</span>(<span class="params">self, mapper</span>):</span></span><br><span class="line">        cluster_resource = ClusterController().create_resource()</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;index&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;GET&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;show&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;GET&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;create&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;POST&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;action&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;POST&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;cluster_id&#125;/instances/&quot;</span></span><br><span class="line">                       <span class="string">&quot;&#123;instance_id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;show_instance&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;GET&#x27;</span>]&#125;)</span><br><span class="line">        mapper.connect(<span class="string">&quot;/&#123;tenant_id&#125;/clusters/&#123;id&#125;&quot;</span>,</span><br><span class="line">                       controller=cluster_resource,</span><br><span class="line">                       action=<span class="string">&quot;delete&quot;</span>,</span><br><span class="line">                       conditions=&#123;<span class="string">&#x27;method&#x27;</span>: [<span class="string">&#x27;DELETE&#x27;</span>]&#125;)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>我们从创建流程入手，进行更深一步的分析。路由中定义的后端响应类为<code>trove.cluster.service:ClusterController</code>,每个路由对应一个具体的方法，关于创建的源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.cluster.service</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">from</span> trove.cluster <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClusterController</span>(<span class="params">wsgi.Controller</span>):</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, req, body, tenant_id</span>):</span></span><br><span class="line">        LOG.debug((<span class="string">&quot;Creating a Cluster for Tenant &#x27;%(tenant_id)s&#x27;\n&quot;</span></span><br><span class="line">                   <span class="string">&quot;req : &#x27;%(req)s&#x27;\n\nbody : &#x27;%(body)s&#x27;\n\n&quot;</span>),</span><br><span class="line">                  &#123;<span class="string">&quot;tenant_id&quot;</span>: tenant_id, <span class="string">&quot;req&quot;</span>: req, <span class="string">&quot;body&quot;</span>: body&#125;)</span><br><span class="line"></span><br><span class="line">        context = req.environ[wsgi.CONTEXT_KEY]</span><br><span class="line">        policy.authorize_on_tenant(context, <span class="string">&#x27;cluster:create&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        name = body[<span class="string">&#x27;cluster&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">        datastore_args = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;datastore&#x27;</span>, &#123;&#125;)</span><br><span class="line">        datastore, datastore_version = (</span><br><span class="line">            datastore_models.get_datastore_version(**datastore_args))</span><br><span class="line"></span><br><span class="line">        extended_properties = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;extended_properties&#x27;</span>, &#123;&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            clusters_enabled = (CONF.get(datastore_version.manager)</span><br><span class="line">                                .get(<span class="string">&#x27;cluster_support&#x27;</span>))</span><br><span class="line">        <span class="keyword">except</span> NoSuchOptError:</span><br><span class="line">            clusters_enabled = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> clusters_enabled:</span><br><span class="line">            <span class="keyword">raise</span> exception.ClusterDatastoreNotSupported(</span><br><span class="line">                datastore=datastore.name,</span><br><span class="line">                datastore_version=datastore_version.name)</span><br><span class="line"></span><br><span class="line">        nodes = body[<span class="string">&#x27;cluster&#x27;</span>][<span class="string">&#x27;instances&#x27;</span>]</span><br><span class="line">        instances = []</span><br><span class="line">        <span class="keyword">for</span> node <span class="keyword">in</span> nodes:</span><br><span class="line">            flavor_id = utils.get_id_from_href(node[<span class="string">&#x27;flavorRef&#x27;</span>])</span><br><span class="line">            volume_size = volume_type = nics = availability_zone = <span class="literal">None</span></span><br><span class="line">            modules = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;volume&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                volume_size = int(node[<span class="string">&#x27;volume&#x27;</span>][<span class="string">&#x27;size&#x27;</span>])</span><br><span class="line">                volume_type = node[<span class="string">&#x27;volume&#x27;</span>].get(<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;nics&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                nics = node[<span class="string">&#x27;nics&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;availability_zone&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                availability_zone = node[<span class="string">&#x27;availability_zone&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;modules&#x27;</span> <span class="keyword">in</span> node:</span><br><span class="line">                modules = node[<span class="string">&#x27;modules&#x27;</span>]</span><br><span class="line"></span><br><span class="line">            instances.append(&#123;<span class="string">&quot;flavor_id&quot;</span>: flavor_id,</span><br><span class="line">                              <span class="string">&quot;volume_size&quot;</span>: volume_size,</span><br><span class="line">                              <span class="string">&quot;volume_type&quot;</span>: volume_type,</span><br><span class="line">                              <span class="string">&quot;nics&quot;</span>: nics,</span><br><span class="line">                              <span class="string">&quot;availability_zone&quot;</span>: availability_zone,</span><br><span class="line">                              <span class="string">&#x27;region_name&#x27;</span>: node.get(<span class="string">&#x27;region_name&#x27;</span>),</span><br><span class="line">                              <span class="string">&quot;modules&quot;</span>: modules&#125;)</span><br><span class="line"></span><br><span class="line">        locality = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;locality&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> locality:</span><br><span class="line">            locality_domain = [<span class="string">&#x27;affinity&#x27;</span>, <span class="string">&#x27;anti-affinity&#x27;</span>]</span><br><span class="line">            locality_domain_msg = (<span class="string">&quot;Invalid locality &#x27;%s&#x27;. &quot;</span></span><br><span class="line">                                   <span class="string">&quot;Must be one of [&#x27;%s&#x27;]&quot;</span> %</span><br><span class="line">                                   (locality,</span><br><span class="line">                                    <span class="string">&quot;&#x27;, &#x27;&quot;</span>.join(locality_domain)))</span><br><span class="line">            <span class="keyword">if</span> locality <span class="keyword">not</span> <span class="keyword">in</span> locality_domain:</span><br><span class="line">                <span class="keyword">raise</span> exception.BadRequest(message=locality_domain_msg)</span><br><span class="line"></span><br><span class="line">        configuration = body[<span class="string">&#x27;cluster&#x27;</span>].get(<span class="string">&#x27;configuration&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        context.notification = notification.DBaaSClusterCreate(context,</span><br><span class="line">                                                               request=req)</span><br><span class="line">        <span class="keyword">with</span> StartNotification(context, name=name, datastore=datastore.name,</span><br><span class="line">                               datastore_version=datastore_version.name):</span><br><span class="line">            cluster = models.Cluster.create(context, name, datastore,</span><br><span class="line">                                            datastore_version, instances,</span><br><span class="line">                                            extended_properties,</span><br><span class="line">                                            locality, configuration)</span><br><span class="line">        cluster.locality = locality</span><br><span class="line">        view = views.load_view(cluster, req=req, load_servers=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> wsgi.Result(view.data(), <span class="number">200</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>分析ClusterController中create的流程，create做了以下三件事：</p><ol><li>根据配置文件中，指定数据库类型的cluster_support配置，检查该数据库是否支持集群模式。</li><li>拼装集群内instance配置参数。</li><li>调用trove.cluster.models.Cluster.create()，创建数据库集群。</li></ol><p>创建实际是在<code>trove.cluster.models:Cluster.create</code>执行的，进一步分析<strong>trove.cluster.models</strong>中的创建流程，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.cluster.models</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">cls, context, name, datastore, datastore_version,</span></span></span><br><span class="line"><span class="function"><span class="params">               instances, extended_properties, locality, configuration</span>):</span></span><br><span class="line">        locality = srv_grp.ServerGroup.build_scheduler_hint(</span><br><span class="line">            context, locality, name)</span><br><span class="line">        api_strategy = strategy.load_api_strategy(datastore_version.manager)</span><br><span class="line">        <span class="keyword">return</span> api_strategy.cluster_class.create(context, name, datastore,</span><br><span class="line">                                                 datastore_version, instances,</span><br><span class="line">                                                 extended_properties,</span><br><span class="line">                                                 locality, configuration)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><code>trove.cluster.models:Cluster.create</code>做了三件事，依次分别是：</p><ol><li>调用novaclient，为cluster创建server group，便于统一管理。</li><li>根据数据库版本，加载指定的api strategy。</li><li>调用api strategy中对应的create方法。</li></ol><p>研究strategy究竟做了哪些事情，这里看下<code>load_api_strategy</code>代码，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategise.cluster.strategy</span></span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_api_strategy</span>(<span class="params">manager</span>):</span></span><br><span class="line">    clazz = CONF.get(manager).get(<span class="string">&#x27;api_strategy&#x27;</span>)</span><br><span class="line">    LOG.debug(<span class="string">&quot;Loading class %s&quot;</span>, clazz)</span><br><span class="line">    api_strategy = import_class(clazz)</span><br><span class="line">    <span class="keyword">return</span> api_strategy()</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>strategy根据配置文件中，不同数据库配置的<code>api_strategy</code>参数，找到指定的管理代码，从而实现不同的数据库类型统一的管理。这里以<code>galera_common</code>为例，进行后续分析，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategies.cluster.experimental.galera_common.api</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">cls, context, name, datastore, datastore_version,</span></span></span><br><span class="line"><span class="function"><span class="params">               instances, extended_properties, locality, configuration</span>):</span></span><br><span class="line">        LOG.debug(<span class="string">&quot;Initiating Galera cluster creation.&quot;</span>)</span><br><span class="line">        ds_conf = CONF.get(datastore_version.manager)</span><br><span class="line">        <span class="comment"># Check number of instances is at least min_cluster_member_count</span></span><br><span class="line">        <span class="keyword">if</span> len(instances) &lt; ds_conf.min_cluster_member_count:</span><br><span class="line">            <span class="keyword">raise</span> exception.ClusterNumInstancesNotLargeEnough(</span><br><span class="line">                num_instances=ds_conf.min_cluster_member_count)</span><br><span class="line">        cls._validate_cluster_instances(context, instances, datastore,</span><br><span class="line">                                        datastore_version)</span><br><span class="line">        <span class="comment"># Updating Cluster Task</span></span><br><span class="line">        db_info = cluster_models.DBCluster.create(</span><br><span class="line">            name=name, tenant_id=context.project_id,</span><br><span class="line">            datastore_version_id=datastore_version.id,</span><br><span class="line">            task_status=ClusterTasks.BUILDING_INITIAL,</span><br><span class="line">            configuration_id=configuration)</span><br><span class="line"></span><br><span class="line">        cls._create_instances(context, db_info, datastore, datastore_version,</span><br><span class="line">                              instances, extended_properties, locality,</span><br><span class="line">                              configuration)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Calling taskmanager to further proceed for cluster-configuration</span></span><br><span class="line">        task_api.load(context, datastore_version.manager).create_cluster(</span><br><span class="line">            db_info.id)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cls(context, db_info, datastore, datastore_version)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_create_instances</span>(<span class="params">context, db_info, datastore, datastore_version,</span></span></span><br><span class="line"><span class="function"><span class="params">                          instances, extended_properties, locality,</span></span></span><br><span class="line"><span class="function"><span class="params">                          configuration_id</span>):</span></span><br><span class="line">        member_config = &#123;<span class="string">&quot;id&quot;</span>: db_info.id,</span><br><span class="line">                         <span class="string">&quot;instance_type&quot;</span>: <span class="string">&quot;member&quot;</span>&#125;</span><br><span class="line">        name_index = int(time.time())</span><br><span class="line">        <span class="keyword">for</span> instance <span class="keyword">in</span> instances:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> instance.get(<span class="string">&quot;name&quot;</span>):</span><br><span class="line">                instance[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&quot;%s-member-%s&quot;</span> % (db_info.name,</span><br><span class="line">                                                     str(name_index))</span><br><span class="line">                name_index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [Instance.create(context,</span><br><span class="line">                                instance[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">                                instance[<span class="string">&#x27;flavor_id&#x27;</span>],</span><br><span class="line">                                datastore_version.image_id,</span><br><span class="line">                                [], [],</span><br><span class="line">                                datastore, datastore_version,</span><br><span class="line">                                instance.get(<span class="string">&#x27;volume_size&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                <span class="literal">None</span>,</span><br><span class="line">                                availability_zone=instance.get(</span><br><span class="line">                                    <span class="string">&#x27;availability_zone&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                nics=instance.get(<span class="string">&#x27;nics&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                configuration_id=configuration_id,</span><br><span class="line">                                cluster_config=member_config,</span><br><span class="line">                                volume_type=instance.get(</span><br><span class="line">                                    <span class="string">&#x27;volume_type&#x27;</span>, <span class="literal">None</span>),</span><br><span class="line">                                modules=instance.get(<span class="string">&#x27;modules&#x27;</span>),</span><br><span class="line">                                locality=locality,</span><br><span class="line">                                region_name=instance.get(<span class="string">&#x27;region_name&#x27;</span>)</span><br><span class="line">                                )</span><br><span class="line">                <span class="keyword">for</span> instance <span class="keyword">in</span> instances]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_validate_cluster_instances</span>(<span class="params">context, instances, datastore,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    datastore_version</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Validate the flavor and volume&quot;&quot;&quot;</span></span><br><span class="line">        ds_conf = CONF.get(datastore_version.manager)</span><br><span class="line">        num_instances = len(instances)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Checking volumes and get delta for quota check</span></span><br><span class="line">        cluster_models.validate_instance_flavors(</span><br><span class="line">            context, instances, ds_conf.volume_support, ds_conf.device_path)</span><br><span class="line"></span><br><span class="line">        req_volume_size = cluster_models.get_required_volume_size(</span><br><span class="line">            instances, ds_conf.volume_support)</span><br><span class="line"></span><br><span class="line">        cluster_models.assert_homogeneous_cluster(instances)</span><br><span class="line"></span><br><span class="line">        deltas = &#123;<span class="string">&#x27;instances&#x27;</span>: num_instances, <span class="string">&#x27;volumes&#x27;</span>: req_volume_size&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># quota check</span></span><br><span class="line">        check_quotas(context.project_id, deltas)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Checking networks are same for the cluster</span></span><br><span class="line">        cluster_models.validate_instance_nics(context, instances)    </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>galera_common.api中，做了如下几个步骤：</p><ol><li>检查集群内的实例数量是否满足配置中要求的集群最小实例数。</li><li>检查集群实例配置。</li><li>更新cluster状态信息。</li><li>创建集群内各实例。</li><li>调用<code>galera_common.taskmanager.create_cluster</code>进行进一步的集群配置。</li></ol><p>galera_common.taskmanager.create_cluster源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategies.cluster.experimental.galera_common.taskmanager</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_cluster</span>(<span class="params">self, context, cluster_id</span>):</span></span><br><span class="line">        LOG.debug(<span class="string">&quot;Begin create_cluster for id: %s.&quot;</span>, cluster_id)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_create_cluster</span>():</span></span><br><span class="line">            <span class="comment"># Fetch instances by cluster_id against instances table.</span></span><br><span class="line">            db_instances = DBInstance.find_all(cluster_id=cluster_id).all()</span><br><span class="line">            instance_ids = [db_instance.id <span class="keyword">for</span> db_instance <span class="keyword">in</span> db_instances]</span><br><span class="line"></span><br><span class="line">            LOG.debug(<span class="string">&quot;Waiting for instances to get to cluster-ready status.&quot;</span>)</span><br><span class="line">            <span class="comment"># Wait for cluster members to get to cluster-ready status.</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self._all_instances_ready(instance_ids, cluster_id):</span><br><span class="line">                <span class="keyword">raise</span> TroveError(_(<span class="string">&quot;Instances in cluster did not report &quot;</span></span><br><span class="line">                                   <span class="string">&quot;ACTIVE&quot;</span>))</span><br><span class="line"></span><br><span class="line">            LOG.debug(<span class="string">&quot;All members ready, proceeding for cluster setup.&quot;</span>)</span><br><span class="line">            instances = [Instance.load(context, instance_id) <span class="keyword">for</span> instance_id</span><br><span class="line">                         <span class="keyword">in</span> instance_ids]</span><br><span class="line"></span><br><span class="line">            cluster_ips = [self.get_ip(instance) <span class="keyword">for</span> instance <span class="keyword">in</span> instances]</span><br><span class="line">            instance_guests = []</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Create replication user and password for synchronizing the</span></span><br><span class="line">            <span class="comment"># galera cluster</span></span><br><span class="line">            replication_user = &#123;</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: self.CLUSTER_REPLICATION_USER,</span><br><span class="line">                <span class="string">&quot;password&quot;</span>: utils.generate_random_password(),</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Galera cluster name must be unique and be shorter than a full</span></span><br><span class="line">            <span class="comment"># uuid string so we remove the hyphens and chop it off. It was</span></span><br><span class="line">            <span class="comment"># recommended to be 16 chars or less.</span></span><br><span class="line">            <span class="comment"># (this is not currently documented on Galera docs)</span></span><br><span class="line">            cluster_name = utils.generate_uuid().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>)[:<span class="number">16</span>]</span><br><span class="line"></span><br><span class="line">            LOG.debug(<span class="string">&quot;Configuring cluster configuration.&quot;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># Set the admin password for all the instances because the</span></span><br><span class="line">                <span class="comment"># password in the my.cnf will be wrong after the joiner</span></span><br><span class="line">                <span class="comment"># instances syncs with the donor instance.</span></span><br><span class="line">                admin_password = str(utils.generate_random_password())</span><br><span class="line"></span><br><span class="line">                bootstrap = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">for</span> instance <span class="keyword">in</span> instances:</span><br><span class="line">                    guest = self.get_guest(instance)</span><br><span class="line">                    instance_guests.append(guest)</span><br><span class="line">                    guest.reset_admin_password(admin_password)</span><br><span class="line">                    <span class="comment"># render the conf.d/cluster.cnf configuration</span></span><br><span class="line">                    cluster_configuration = self._render_cluster_config(</span><br><span class="line">                        context,</span><br><span class="line">                        instance,</span><br><span class="line">                        <span class="string">&quot;,&quot;</span>.join(cluster_ips),</span><br><span class="line">                        cluster_name,</span><br><span class="line">                        replication_user)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># push the cluster config and bootstrap the first instance</span></span><br><span class="line">                    guest.install_cluster(replication_user,</span><br><span class="line">                                          cluster_configuration,</span><br><span class="line">                                          bootstrap)</span><br><span class="line">                    bootstrap = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">                LOG.debug(<span class="string">&quot;Finalizing cluster configuration.&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> guest <span class="keyword">in</span> instance_guests:</span><br><span class="line">                    guest.cluster_complete()</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                LOG.exception(<span class="string">&quot;Error creating cluster.&quot;</span>)</span><br><span class="line">                self.update_statuses_on_failure(cluster_id)</span><br><span class="line"></span><br><span class="line">        timeout = Timeout(CONF.cluster_usage_timeout)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            _create_cluster()</span><br><span class="line">            self.reset_task()</span><br><span class="line">        <span class="keyword">except</span> Timeout <span class="keyword">as</span> t:</span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">is</span> <span class="keyword">not</span> timeout:</span><br><span class="line">                <span class="keyword">raise</span>  <span class="comment"># not my timeout</span></span><br><span class="line">            LOG.exception(<span class="string">&quot;Timeout for building cluster.&quot;</span>)</span><br><span class="line">            self.update_statuses_on_failure(cluster_id)</span><br><span class="line">        <span class="keyword">except</span> TroveError:</span><br><span class="line">            LOG.exception(<span class="string">&quot;Error creating cluster %s.&quot;</span>, cluster_id)</span><br><span class="line">            self.update_statuses_on_failure(cluster_id)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            timeout.cancel()</span><br><span class="line"></span><br><span class="line">        LOG.debug(<span class="string">&quot;End create_cluster for id: %s.&quot;</span>, cluster_id)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>taskmanager依次做了以下几件事情：</p><ol><li>根据cluster id，定位到集群内所有的instance。</li><li>检测所有instance状态是否为ACTIVE。</li><li>生成集群配置信息。</li><li>依次调用各个instance内的guest agent，更新集群配置信息，并启动第一个节点。</li><li>更新集群状态。</li></ol><p>到这里，所有流程就走完了。为了更深一步了解trove，这里我们继续深入实例，研究instance内guest agent操作，具体干了哪些事情，首先从guest agent启动代码入手，看guest agent如何响应rpc调用，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.cmd.guest</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> oslo_config <span class="keyword">import</span> cfg <span class="keyword">as</span> openstack_cfg</span><br><span class="line"><span class="keyword">from</span> oslo_log <span class="keyword">import</span> log <span class="keyword">as</span> logging</span><br><span class="line"><span class="keyword">from</span> oslo_service <span class="keyword">import</span> service <span class="keyword">as</span> openstack_service</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> cfg</span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> debug_utils</span><br><span class="line"><span class="keyword">from</span> trove.common.i18n <span class="keyword">import</span> _</span><br><span class="line"><span class="keyword">from</span> trove.guestagent <span class="keyword">import</span> api <span class="keyword">as</span> guest_api</span><br><span class="line"></span><br><span class="line">CONF = cfg.CONF</span><br><span class="line"><span class="comment"># The guest_id opt definition must match the one in common/cfg.py</span></span><br><span class="line">CONF.register_opts([openstack_cfg.StrOpt(<span class="string">&#x27;guest_id&#x27;</span>, default=<span class="literal">None</span>,</span><br><span class="line">                                         help=<span class="string">&quot;ID of the Guest Instance.&quot;</span>),</span><br><span class="line">                    openstack_cfg.StrOpt(<span class="string">&#x27;instance_rpc_encr_key&#x27;</span>,</span><br><span class="line">                                         help=(<span class="string">&#x27;Key (OpenSSL aes_cbc) for &#x27;</span></span><br><span class="line">                                               <span class="string">&#x27;instance RPC encryption.&#x27;</span>))])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    cfg.parse_args(sys.argv)</span><br><span class="line">    logging.setup(CONF, <span class="literal">None</span>)</span><br><span class="line">    debug_utils.setup()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> trove.guestagent <span class="keyword">import</span> dbaas</span><br><span class="line">    manager = dbaas.datastore_registry().get(CONF.datastore_manager)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> manager:</span><br><span class="line">        msg = (_(<span class="string">&quot;Manager class not registered for datastore manager %s&quot;</span>) %</span><br><span class="line">               CONF.datastore_manager)</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(msg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> CONF.guest_id:</span><br><span class="line">        msg = (_(<span class="string">&quot;The guest_id parameter is not set. guest_info.conf &quot;</span></span><br><span class="line">               <span class="string">&quot;was not injected into the guest or not read by guestagent&quot;</span>))</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(msg)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BUG(1650518): Cleanup in the Pike release</span></span><br><span class="line">    <span class="comment"># make it fatal if CONF.instance_rpc_encr_key is None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># rpc module must be loaded after decision about thread monkeypatching</span></span><br><span class="line">    <span class="comment"># because if thread module is not monkeypatched we can&#x27;t use eventlet</span></span><br><span class="line">    <span class="comment"># executor from oslo_messaging library.</span></span><br><span class="line">    <span class="keyword">from</span> trove <span class="keyword">import</span> rpc</span><br><span class="line">    rpc.init(CONF)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> trove.common.rpc <span class="keyword">import</span> service <span class="keyword">as</span> rpc_service</span><br><span class="line">    server = rpc_service.RpcService(</span><br><span class="line">        key=CONF.instance_rpc_encr_key,</span><br><span class="line">        topic=<span class="string">&quot;guestagent.%s&quot;</span> % CONF.guest_id,</span><br><span class="line">        manager=manager, host=CONF.guest_id,</span><br><span class="line">        rpc_api_version=guest_api.API.API_LATEST_VERSION)</span><br><span class="line"></span><br><span class="line">    launcher = openstack_service.launch(CONF, server, restart_method=<span class="string">&#x27;mutate&#x27;</span>)</span><br><span class="line">    launcher.wait()</span><br></pre></td></tr></table></figure><p>guest agent启动流程中，做了如下几件事：</p><ol><li><p>从<code>trove.guestagent.dbaas</code>中到manager入口函数，找到符合的datastore_manager。</p></li><li><p>将datastore_manager注册进rpcservice内，远程调用时接收到指定的rpc操作后，即可触发manager对应的方法。</p></li></ol><p>这里我们看下<code>trove.guestagent.dbaas</code>注册了哪些入口，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.guestagent.dbaas</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Handles all processes within the Guest VM, considering it as a Platform</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The :py:class:`GuestManager` class is a :py:class:`nova.manager.Manager` that</span></span><br><span class="line"><span class="string">handles RPC calls relating to Platform specific operations.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**Related Flags**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> oslo_log <span class="keyword">import</span> log <span class="keyword">as</span> logging</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> cfg</span><br><span class="line"><span class="keyword">from</span> trove.common.i18n <span class="keyword">import</span> _</span><br><span class="line"><span class="keyword">from</span> trove.common <span class="keyword">import</span> utils</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LOG = logging.getLogger(__name__)</span><br><span class="line">defaults = &#123;</span><br><span class="line">    <span class="string">&#x27;mysql&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.mysql.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;percona&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.percona.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;pxc&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.pxc.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;redis&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.redis.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cassandra&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.cassandra.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;couchbase&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.couchbase.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mongodb&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.mongodb.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;postgresql&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.postgresql.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;couchdb&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.couchdb.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;vertica&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.vertica.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;db2&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.db2.manager.Manager&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mariadb&#x27;</span>:</span><br><span class="line">    <span class="string">&#x27;trove.guestagent.datastore.experimental.mariadb.manager.Manager&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datastore_registry</span>():</span></span><br><span class="line">    <span class="keyword">return</span> dict(chain(defaults.items(),</span><br><span class="line">                get_custom_managers().items()))</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>dbaas内我们可以到所有数据库的入口函数，即可根据rpc的消息类型，找到对应的入口，对应的影响函数了。回到taskmanager发消息的流程，taskmanager调用guest内的install_cluster方法，我们看下install_cluster的方法，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.common.strategies.cluster.experimental.galera_common.guestagent</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GaleraCommonGuestAgentAPI</span>(<span class="params">guest_api.API</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Cluster Specific Datastore Guest API</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    **** VERSION CONTROLLED API ****</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The methods in this class are subject to version control as</span></span><br><span class="line"><span class="string">    coordinated by guestagent/api.py.  Whenever a change is made to</span></span><br><span class="line"><span class="string">    any API method in this class, add a version number and comment</span></span><br><span class="line"><span class="string">    to the top of guestagent/api.py and use the version number as</span></span><br><span class="line"><span class="string">    appropriate in this file</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">install_cluster</span>(<span class="params">self, replication_user, cluster_configuration,</span></span></span><br><span class="line"><span class="function"><span class="params">                        bootstrap</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Install the cluster.&quot;&quot;&quot;</span></span><br><span class="line">        LOG.debug(<span class="string">&quot;Installing Galera cluster.&quot;</span>)</span><br><span class="line">        version = guest_api.API.API_BASE_VERSION</span><br><span class="line"></span><br><span class="line">        self._call(<span class="string">&quot;install_cluster&quot;</span>, CONF.cluster_usage_timeout,</span><br><span class="line">                   version=version,</span><br><span class="line">                   replication_user=replication_user,</span><br><span class="line">                   cluster_configuration=cluster_configuration,</span><br><span class="line">                   bootstrap=bootstrap)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>向guest发送了一个同步调用的rpc请求（<code>_call</code>为同步调用，<code>_cast</code>为异步调用），触发<code>install_cluster</code>方法，这里我们从manager入手，看下install_cluster具体干了哪些事情，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.guestagent.datastore.galera_common.manager</span></span><br><span class="line">...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">install_cluster</span>(<span class="params">self, context, replication_user, cluster_configuration,</span></span></span><br><span class="line"><span class="function"><span class="params">                        bootstrap</span>):</span></span><br><span class="line">        app = self.mysql_app(self.mysql_app_status.get())</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            app.install_cluster(</span><br><span class="line">                replication_user, cluster_configuration, bootstrap)</span><br><span class="line">            LOG.debug(<span class="string">&quot;install_cluster call has finished.&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            LOG.exception(<span class="string">&#x27;Cluster installation failed.&#x27;</span>)</span><br><span class="line">            app.status.set_status(</span><br><span class="line">                rd_instance.ServiceStatuses.FAILED)</span><br><span class="line">            <span class="keyword">raise</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这里，实际上就调用了service内对应的install_cluster方法，做了些异常判断，进入service内，看下具体干了那些事，源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># trove.guestagent.datastore.galera_common.service</span></span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GaleraApp</span>(<span class="params">service.BaseMySqlApp</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, status, local_sql_client, keep_alive_connection_cls</span>):</span></span><br><span class="line">        super(GaleraApp, self).__init__(status, local_sql_client,</span><br><span class="line">                                        keep_alive_connection_cls)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">install_cluster</span>(<span class="params">self, replication_user, cluster_configuration,</span></span></span><br><span class="line"><span class="function"><span class="params">                        bootstrap=False</span>):</span></span><br><span class="line">        LOG.info(<span class="string">&quot;Installing cluster configuration.&quot;</span>)</span><br><span class="line">        self._grant_cluster_replication_privilege(replication_user)</span><br><span class="line">        self.stop_db()</span><br><span class="line">        self.write_cluster_configuration_overrides(cluster_configuration)</span><br><span class="line">        self.wipe_ib_logfiles()</span><br><span class="line">        LOG.debug(<span class="string">&quot;bootstrap the instance? : %s&quot;</span>, bootstrap)</span><br><span class="line">        <span class="comment"># Have to wait to sync up the joiner instances with the donor instance.</span></span><br><span class="line">        <span class="keyword">if</span> bootstrap:</span><br><span class="line">            self._bootstrap_cluster(timeout=CONF.restore_usage_timeout)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.start_mysql(timeout=CONF.restore_usage_timeout)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_grant_cluster_replication_privilege</span>(<span class="params">self, replication_user</span>):</span></span><br><span class="line">        LOG.info(<span class="string">&quot;Granting Replication Slave privilege.&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> self.local_sql_client(self.get_engine()) <span class="keyword">as</span> client:</span><br><span class="line">            perms = [<span class="string">&#x27;REPLICATION CLIENT&#x27;</span>, <span class="string">&#x27;RELOAD&#x27;</span>, <span class="string">&#x27;LOCK TABLES&#x27;</span>]</span><br><span class="line">            g = sql_query.Grant(permissions=perms,</span><br><span class="line">                                user=replication_user[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">                                clear=replication_user[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line">            t = text(str(g))</span><br><span class="line">            client.execute(t)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write_cluster_configuration_overrides</span>(<span class="params">self, cluster_configuration</span>):</span></span><br><span class="line">        self.configuration_manager.apply_system_override(</span><br><span class="line">            cluster_configuration, <span class="string">&#x27;cluster&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_bootstrap_cluster</span>(<span class="params">self, timeout=<span class="number">120</span></span>):</span></span><br><span class="line">        LOG.info(<span class="string">&quot;Bootstraping cluster.&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            utils.execute_with_timeout(</span><br><span class="line">                self.mysql_service[<span class="string">&#x27;cmd_bootstrap_galera_cluster&#x27;</span>],</span><br><span class="line">                shell=<span class="literal">True</span>, timeout=timeout)</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            LOG.exception(<span class="string">&quot;Error bootstrapping cluster.&quot;</span>)</span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(_(<span class="string">&quot;Service is not discovered.&quot;</span>))</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这里就是各实例内的具体操作流程了，流程如下：</p><ol><li>对集群内各实例赋权。</li><li>停止数据库服务。</li><li>更新MySQL配置文件。</li><li>删除ib_logfiles。</li><li>首节点为启动集群方式启动，其余节点直接启动mysql即可。</li></ol><p>到这里，MySQL集群创建流程即全部解析完成。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://docs.openstack.org/api-ref/database/">OpenStack Documentation: Database API</a></li><li><a href="https://docs.openstack.org/trove/wallaby/install/index.html">OpenStack Documentation: Database Service</a></li><li><a href="https://docs.openstack.org/releasenotes/trove/train.html#relnotes-12-0-0-stable-train">OpenStack Documentation: Trove Release Notes</a></li><li><a href="https://opendev.org/openstack/trove">OpenDev: OpenStack Trove</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;对程序员来说，最好的文档就是源码。Trove 官方对于&lt;strong&gt;Clueter Controller&lt;/strong&gt;能力的描述文档不</summary>
      
    
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/categories/OpenStack/"/>
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/tags/OpenStack/"/>
    
    <category term="Trove" scheme="https://renyb2.github.io/tags/Trove/"/>
    
  </entry>
  
  <entry>
    <title>性能测试工具：Sysbench</title>
    <link href="https://renyb2.github.io/2021/12/24/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9ASysbench/"/>
    <id>https://renyb2.github.io/2021/12/24/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9ASysbench/</id>
    <published>2021-12-24T05:49:58.000Z</published>
    <updated>2022-04-24T03:32:43.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>源码地址：<a href="https://github.com/akopytov/sysbench">https://github.com/akopytov/sysbench</a></p><blockquote><p>sysbench is a scriptable multi-threaded benchmark tool based on LuaJIT. It is most frequently used for database benchmarks, but can also be used to create arbitrarily complex workloads that do not involve a database server.</p><p>sysbench comes with the following bundled benchmarks:</p><ul><li><code>oltp_*.lua</code>: a collection of OLTP-like database benchmarks</li><li><code>fileio</code>: a filesystem-level benchmark</li><li><code>cpu</code>: a simple CPU benchmark</li><li><code>memory</code>: a memory access benchmark</li><li><code>threads</code>: a thread-based scheduler benchmark</li><li><code>mutex</code>: a POSIX mutex benchmark</li></ul><p><strong>Features</strong></p><ul><li>extensive statistics about rate and latency is available, including latency percentiles and histograms;</li><li>low overhead even with thousands of concurrent threads. sysbench is capable of generating and tracking hundreds of millions of events per second;</li><li>new benchmarks can be easily created by implementing pre-defined hooks in user-provided Lua scripts;</li><li>can be used as a general-purpose Lua interpreter as well, simply replace <code>#!/usr/bin/lua</code> with <code>#!/usr/bin/sysbench</code> in your script.</li></ul></blockquote><p>简单的说，sysbench是一个基于Lua即时编译器（<a href="http://luajit.org/luajit.html">http://luajit.org/luajit.html</a> ）实现的多线程基准测试工具。它被频繁用于数据库基准测试，除此之外，它也可以被用于进行其他复杂的负载测试，比如fileio，cpu，memory等。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本文以“sysbench-1.0.20”版本为例，下载源码，并编译安装。</p><ol><li>下载地址：<ul><li>sysbench源码：<a href="https://github.com/akopytov/sysbench/releases">https://github.com/akopytov/sysbench/releases</a></li></ul></li><li>安装sysbench的依赖包。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ automake make libtool mariadb-devel -y</span><br></pre></td></tr></table></figure><ol start="3"><li>下载并安装sysbench。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载sysbench源码</span></span><br><span class="line">wget https://github.com/akopytov/sysbench/archive/refs/tags/1.0.20.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">mv 1.0.20.tar.gz sysbench-1.0.20.tar.gz</span><br><span class="line">tar zxvf sysbench-1.0.20.tar.gz &amp;&amp; cd sysbench-1.0.20</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置及生成编译文件</span></span><br><span class="line">./autogen.sh &amp;&amp; ./configure</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证sysbench</span></span><br><span class="line">sysbench --version</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="CPU性能测试"><a href="#CPU性能测试" class="headerlink" title="CPU性能测试"></a>CPU性能测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 10秒钟CPU素数计算次数</span></span><br><span class="line">sysbench cpu --cpu-max-prime=20000 --threads=1 run</span><br></pre></td></tr></table></figure><h3 id="内存性能测试"><a href="#内存性能测试" class="headerlink" title="内存性能测试"></a>内存性能测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 内存顺序：10秒钟，内存顺序访问次数与速度</span></span><br><span class="line">sysbench memory --threads=1 --memory-block-size=8K --memory-total-size=200G --memory-access-mode=seq run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存随机：10秒钟，内存随机访问次数与速度</span></span><br><span class="line">sysbench memory --threads=1 --memory-block-size=8K --memory-total-size=200G --memory-access-mode=rnd run</span><br></pre></td></tr></table></figure><h3 id="存储性能测试"><a href="#存储性能测试" class="headerlink" title="存储性能测试"></a>存储性能测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">fileio options:</span><br><span class="line">  --file-num=N                  number of files to create [128]</span><br><span class="line">  --file-block-size=N           block size to use in all IO operations [16384]</span><br><span class="line">  --file-total-size=SIZE        total size of files to create [2G]</span><br><span class="line">  --file-test-mode=STRING       test mode &#123;seqwr, seqrewr, seqrd, rndrd, rndwr, rndrw&#125;</span><br><span class="line">  --file-io-mode=STRING         file operations mode &#123;sync,async,mmap&#125; [sync]</span><br><span class="line">  --file-extra-flags=[LIST,...] list of additional flags to use to open files &#123;sync,dsync,direct&#125; []</span><br><span class="line">  --file-fsync-freq=N           do fsync() after this number of requests (0 - don&#x27;t use fsync()) [100]</span><br><span class="line">  --file-fsync-all[=on|off]     do fsync() after each write operation [off]</span><br><span class="line">  --file-fsync-end[=on|off]     do fsync() at the end of test [on]</span><br><span class="line">  --file-fsync-mode=STRING      which method to use for synchronization &#123;fsync, fdatasync&#125; [fsync]</span><br><span class="line">  --file-merged-requests=N      merge at most this number of IO requests if possible (0 - don&#x27;t merge) [0]</span><br><span class="line">  --file-rw-ratio=N             reads/writes ratio for combined test [1.5]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载4k测试数据</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=4k --file-total-size=20G --file-test-mode=rndrw prepare</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 随机读</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=4k --file-total-size=20G --time=60 --file-test-mode=rndrd run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 随机写</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=4k --file-total-size=20G --time=60 --file-test-mode=rndwr run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载1M测试数据</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=1M --file-total-size=20G --file-test-mode=rndrw prepare</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 顺序读</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=1M --file-total-size=20G --time=60 --file-test-mode=seqrd run</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 顺序写</span></span><br><span class="line">sysbench fileio --threads=1 --file-block-size=1M --file-total-size=20G --time=60 --file-test-mode=seqwr run</span><br></pre></td></tr></table></figure><h3 id="MySQL性能测试"><a href="#MySQL性能测试" class="headerlink" title="MySQL性能测试"></a>MySQL性能测试</h3><p>参考本博客文档：《MySQL测试：性能基准测试》</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://github.com/akopytov/sysbench">Github：sysbench</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;源码地址：&lt;a href=&quot;https://github.com/akopytov/sysbench&quot;&gt;https://github.com</summary>
      
    
    
    
    <category term="性能测试工具" scheme="https://renyb2.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Sysbench" scheme="https://renyb2.github.io/tags/Sysbench/"/>
    
  </entry>
  
  <entry>
    <title>Windows使用：通用手册</title>
    <link href="https://renyb2.github.io/2021/11/29/Windows%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://renyb2.github.io/2021/11/29/Windows%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2021-11-29T01:27:37.000Z</published>
    <updated>2021-12-24T10:10:41.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见场景"><a href="#常见场景" class="headerlink" title="常见场景"></a>常见场景</h2><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mstsc</span><br></pre></td></tr></table></figure><h3 id="计算MD5"><a href="#计算MD5" class="headerlink" title="计算MD5"></a>计算MD5</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile  &lt;文件名&gt;  &lt;hash类型&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成MD5</span></span><br><span class="line">certutil -hashfile demo.txt MD5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成SHA1</span></span><br><span class="line">certutil -hashfile demo.txt SHA1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成SHA256</span></span><br><span class="line">certutil -hashfile demo.txt SHA256</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成SHA512</span></span><br><span class="line">certutil -hashfile demo.txt SHA512</span><br></pre></td></tr></table></figure><h3 id="网卡MTU管理"><a href="#网卡MTU管理" class="headerlink" title="网卡MTU管理"></a>网卡MTU管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看各网卡MTU值</span></span><br><span class="line">netsh interface ipv4 show subinterfaces</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改指定网卡MTU值</span></span><br><span class="line">netsh interface ipv4 set subinterface &lt;interface_name&gt; mtu=&lt;value&gt; store=persistent </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常见场景&quot;&gt;&lt;a href=&quot;#常见场景&quot; class=&quot;headerlink&quot; title=&quot;常见场景&quot;&gt;&lt;/a&gt;常见场景&lt;/h2&gt;&lt;h3 id=&quot;远程登录&quot;&gt;&lt;a href=&quot;#远程登录&quot; class=&quot;headerlink&quot; title=&quot;远程登录&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="Windows" scheme="https://renyb2.github.io/categories/Windows/"/>
    
    
    <category term="通用手册" scheme="https://renyb2.github.io/tags/%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    <category term="Windows" scheme="https://renyb2.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Nginx部署：安装文档</title>
    <link href="https://renyb2.github.io/2021/11/24/Nginx%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/"/>
    <id>https://renyb2.github.io/2021/11/24/Nginx%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</id>
    <published>2021-11-24T10:00:57.000Z</published>
    <updated>2021-11-26T03:25:10.966Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。</p><h2 id="部署Nginx"><a href="#部署Nginx" class="headerlink" title="部署Nginx"></a>部署Nginx</h2><h3 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础依赖包</span></span><br><span class="line">yum install -y make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure><h3 id="源码安装PCRE"><a href="#源码安装PCRE" class="headerlink" title="源码安装PCRE"></a>源码安装PCRE</h3><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取源码包</span></span><br><span class="line">cd /usr/local/src &amp;&amp; wget http://downloads.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf pcre-8.45.tar.gz &amp;&amp; cd pcre-8.45</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译安装</span></span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pcre版本</span></span><br><span class="line">pcre-config --version</span><br></pre></td></tr></table></figure><h3 id="源码安装Nginx"><a href="#源码安装Nginx" class="headerlink" title="源码安装Nginx"></a>源码安装Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取源码包</span></span><br><span class="line">cd /usr/local/src &amp;&amp; wget http://nginx.org/download/nginx-1.21.4.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf nginx-1.21.4.tar.gz &amp;&amp; cd nginx-1.21.4</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译安装</span></span><br><span class="line">./configure --prefix=/usr/local/webserver/nginx \</span><br><span class="line">    --with-http_stub_status_module \</span><br><span class="line">    --with-http_ssl_module \</span><br><span class="line">    --with-pcre=/usr/local/src/pcre-8.45</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 软链接</span></span><br><span class="line">ln -s /usr/local/webserver/nginx/sbin/nginx /usr/local/bin/nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看版本</span></span><br><span class="line">nginx -v</span><br></pre></td></tr></table></figure><h3 id="配置Nginx基础环境"><a href="#配置Nginx基础环境" class="headerlink" title="配置Nginx基础环境"></a>配置Nginx基础环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建Nginx运行使用的用户：www</span></span><br><span class="line">groupadd www</span><br><span class="line">useradd -g www www</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份配置文件</span></span><br><span class="line">cp /usr/local/webserver/nginx/conf/nginx.conf /usr/local/webserver/nginx/conf/nginx.conf.template</span><br></pre></td></tr></table></figure><h3 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h3><p>将 <code>/usr/local/webserver/nginx/conf/nginx.conf</code> 替换为以下内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行使用的用户</span></span><br><span class="line"><span class="string">user</span> <span class="string">www</span> <span class="string">www;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置值和CPU核心数一致</span></span><br><span class="line"><span class="string">worker_processes</span> <span class="number">2</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志位置和日志级别</span></span><br><span class="line"><span class="string">error_log</span> <span class="string">/usr/local/webserver/nginx/logs/nginx_error.log</span> <span class="string">crit;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PID文件目录</span></span><br><span class="line"><span class="string">pid</span> <span class="string">/usr/local/webserver/nginx/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies the value for maximum file descriptors that can be opened by this process.</span></span><br><span class="line"><span class="string">worker_rlimit_nofile</span> <span class="number">65535</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="string">events</span> &#123;</span><br><span class="line">    <span class="string">use</span> <span class="string">epoll;</span></span><br><span class="line">    <span class="string">worker_connections</span> <span class="number">65535</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">http</span> &#123;</span><br><span class="line">    <span class="string">include</span> <span class="string">mime.types;</span></span><br><span class="line">    <span class="string">default_type</span> <span class="string">application/octet-stream;</span></span><br><span class="line">    <span class="string">log_format</span> <span class="string">main</span>  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                     <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                     <span class="string">&#x27;&quot;$http_user_agent&quot; $http_x_forwarded_for&#x27;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># charset gb2312;</span></span><br><span class="line">     </span><br><span class="line">    <span class="string">server_names_hash_bucket_size</span> <span class="number">128</span><span class="string">;</span></span><br><span class="line">    <span class="string">client_header_buffer_size</span> <span class="string">32k;</span></span><br><span class="line">    <span class="string">large_client_header_buffers</span> <span class="number">4</span> <span class="string">32k;</span></span><br><span class="line">    <span class="string">client_max_body_size</span> <span class="string">8m;</span></span><br><span class="line">     </span><br><span class="line">    <span class="string">sendfile</span> <span class="string">on;</span></span><br><span class="line">    <span class="string">tcp_nopush</span> <span class="string">on;</span></span><br><span class="line">    <span class="string">keepalive_timeout</span> <span class="number">60</span><span class="string">;</span></span><br><span class="line">    <span class="string">tcp_nodelay</span> <span class="string">on;</span></span><br><span class="line">    <span class="string">fastcgi_connect_timeout</span> <span class="number">300</span><span class="string">;</span></span><br><span class="line">    <span class="string">fastcgi_send_timeout</span> <span class="number">300</span><span class="string">;</span></span><br><span class="line">    <span class="string">fastcgi_read_timeout</span> <span class="number">300</span><span class="string">;</span></span><br><span class="line">    <span class="string">fastcgi_buffer_size</span> <span class="string">64k;</span></span><br><span class="line">    <span class="string">fastcgi_buffers</span> <span class="number">4</span> <span class="string">64k;</span></span><br><span class="line">    <span class="string">fastcgi_busy_buffers_size</span> <span class="string">128k;</span></span><br><span class="line">    <span class="string">fastcgi_temp_file_write_size</span> <span class="string">128k;</span></span><br><span class="line">    <span class="string">gzip</span> <span class="string">on;</span> </span><br><span class="line">    <span class="string">gzip_min_length</span> <span class="string">1k;</span></span><br><span class="line">    <span class="string">gzip_buffers</span> <span class="number">4</span> <span class="string">16k;</span></span><br><span class="line">    <span class="string">gzip_http_version</span> <span class="number">1.0</span><span class="string">;</span></span><br><span class="line">    <span class="string">gzip_comp_level</span> <span class="number">2</span><span class="string">;</span></span><br><span class="line">    <span class="string">gzip_types</span> <span class="string">text/plain</span> <span class="string">application/x-javascript</span> <span class="string">text/css</span> <span class="string">application/xml;</span></span><br><span class="line">    <span class="string">gzip_vary</span> <span class="string">on;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># limit_zone crawler $binary_remote_addr 10m;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#下面是server虚拟主机的配置</span></span><br><span class="line">    <span class="string">server</span> &#123;</span><br><span class="line">        <span class="string">listen</span> <span class="number">80</span><span class="string">;</span> <span class="comment"># 监听端口</span></span><br><span class="line">        <span class="string">server_name</span> <span class="string">localhost;</span> <span class="comment"># 域名</span></span><br><span class="line">        <span class="string">index</span> <span class="string">index.html</span> <span class="string">index.htm</span> <span class="string">index.php;</span></span><br><span class="line">        <span class="string">root</span> <span class="string">/usr/local/webserver/nginx/html;</span> <span class="comment"># 站点目录</span></span><br><span class="line">        <span class="string">access_log</span> <span class="string">off;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">location</span> <span class="string">/status</span> &#123;</span><br><span class="line">            <span class="string">stub_status</span> <span class="string">on;</span></span><br><span class="line">            <span class="comment"># access_log off;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="string">location</span> <span class="string">~</span> <span class="string">.*\.(php|php5)?$</span> &#123;</span><br><span class="line">            <span class="comment"># fastcgi_pass unix:/tmp/php-cgi.sock;</span></span><br><span class="line">            <span class="string">fastcgi_pass</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:9000;</span></span><br><span class="line">            <span class="string">fastcgi_index</span> <span class="string">index.php;</span></span><br><span class="line">            <span class="string">include</span> <span class="string">fastcgi.conf;</span></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">~</span> <span class="string">.*\.(gif|jpg|jpeg|png|bmp|swf|ico)$</span> &#123;</span><br><span class="line">            <span class="string">expires</span> <span class="string">30d;</span></span><br><span class="line">            <span class="comment"># access_log off;</span></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="string">location</span> <span class="string">~</span> <span class="string">.*\.(js|css)?$</span> &#123;</span><br><span class="line">          <span class="string">expires</span> <span class="string">15d;</span></span><br><span class="line">       <span class="comment"># access_log off;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检测nginx.conf配置正确性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@k44: conf # nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/webserver/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/webserver/nginx/conf/nginx.conf test is successful</span><br></pre></td></tr></table></figure><h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><h2 id="管理Nginx"><a href="#管理Nginx" class="headerlink" title="管理Nginx"></a>管理Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 重新载入配置文件</span></span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 Nginx</span></span><br><span class="line">nginx -s reopen</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止 Nginx</span></span><br><span class="line">nginx -s stop </span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="http://nginx.org/">Nginx官网</a></li><li><a href="http://www.pcre.org/">PCRE官网</a></li><li><a href="https://www.runoob.com/linux/nginx-install-setup.html">菜鸟教程：Nginx安装</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 I</summary>
      
    
    
    
    <category term="Nginx" scheme="https://renyb2.github.io/categories/Nginx/"/>
    
    
    <category term="Nginx" scheme="https://renyb2.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Redis部署：安装文档</title>
    <link href="https://renyb2.github.io/2021/11/19/Redis%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/"/>
    <id>https://renyb2.github.io/2021/11/19/Redis%E9%83%A8%E7%BD%B2%EF%BC%9A%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</id>
    <published>2021-11-19T08:05:00.000Z</published>
    <updated>2021-11-29T03:43:12.112Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster. <a href="https://redis.io/topics/introduction">Learn more →</a></p><h2 id="部署Redis"><a href="#部署Redis" class="headerlink" title="部署Redis"></a>部署Redis</h2><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装基础包</span></span><br><span class="line">yum install gcc make -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载资源包</span></span><br><span class="line">cd /usr/local/src &amp;&amp; wget https://download.redis.io/releases/redis-6.2.6.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar xzf redis-6.2.6.tar.gz &amp;&amp; cd redis-6.2.6</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 问题：由于未安装gcc，导致第一次make失败，在安装gcc安装后，再次make报错fatal error: jemalloc/jemalloc.h: No such file or directory</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解决：该问题是由于第一轮make失败有残留导致，需清理后再编译，命令：make distclean &amp;&amp; make &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成配置文件</span></span><br><span class="line">mkdir /etc/redis &amp;&amp; cp redis.conf /etc/redis/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据持久化目录</span></span><br><span class="line">mkdir /var/lib/redis</span><br></pre></td></tr></table></figure><h3 id="配置Redis"><a href="#配置Redis" class="headerlink" title="配置Redis"></a>配置Redis</h3><p>修改 <code>/etc/redis/redis.conf</code> 配置文件如下参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务监听地址</span></span><br><span class="line">bind * -::*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用密码认证及默认密码</span></span><br><span class="line">requirepass redis@Inspur.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志文件</span></span><br><span class="line">logfile /var/log/redis.log</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> RDB持久化规则</span></span><br><span class="line">save 3600 1</span><br><span class="line">save 300 100</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据持久化目录</span></span><br><span class="line">dir /var/lib/redis</span><br></pre></td></tr></table></figure><h3 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h3><p>创建 <code>/usr/lib/systemd/system/redis-server.service</code> 配置文件，内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis Server</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=always</span><br><span class="line">ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>重新加载systemctl配置文件，启动redis服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start redis-server</span><br><span class="line">systemctl enable redis-server</span><br></pre></td></tr></table></figure><h3 id="测试Redis"><a href="#测试Redis" class="headerlink" title="测试Redis"></a>测试Redis</h3><p>远程登录redis并验证可用性。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@vsphere162: ~ # redis-cli -h vsphere161 -a redis@Inspur.1</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">vsphere161:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line">vsphere161:6379&gt; exit</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://redis.io/download">Redis官方文档</a></li><li><a href="https://www.cnblogs.com/kismetv/p/9137897.html">深入学习Redis：持久化</a></li><li><a href="https://www.cnblogs.com/lovychen/p/6529358.html">redis使用日志（3）：如何设置持久化 </a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Redis is an open source (BSD licensed), in-memory data structure store</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="Redis" scheme="https://renyb2.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>MySQL部署：Galera Cluster</title>
    <link href="https://renyb2.github.io/2021/11/05/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9AGalera-Cluster/"/>
    <id>https://renyb2.github.io/2021/11/05/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9AGalera-Cluster/</id>
    <published>2021-11-05T09:26:21.000Z</published>
    <updated>2021-11-19T02:40:14.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>Galera Cluster</strong>是由Codership开发的MySQL多主结构集群，这些主节点互为其它节点的从节点。不同于MySQL原生的主从异步复制，Galera采用的是多主同步复制，并针对同步复制过程中，会大概率出现的事务冲突和死锁进行优化，就是复制不基于官方binlog而是Galera复制插件，重写了wsrep api。</p><blockquote><p>异步复制中，主库将数据更新传播给从库后立即提交事务，而不论从库是否成功读取或重放数据变化。这种情况下，在主库事务提交后的短时间内，主从库数据并不一致。</p><p>同步复制时，主库的单个更新事务需要在所有从库上同步 更新。换句话说，当主库提交事务时，集群中所有节点的数据保持一致。</p></blockquote><p>对于读操作，从每个节点读取到的数据都是相同的。对于写操作，当数据写入某一节点后，集群会将其同步到其它节点。</p><p><img src="/2021/11/05/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9AGalera-Cluster/Galera-cluster-01.png" alt="Galera cluster"></p><p>就各个集群方案来说，其优势为：</p><ul><li>多主多活下，可对任一节点进行读写操作，就算某个节点挂了，也不影响其它的节点的读写，都不需要做故障切换操作，也不会中断整个集群对外提供的服务。</li><li>拓展性优秀，新增节点会自动拉取在线节点的数据（当有新节点加入时，集群会选择出一个Donor Node为新节点提供数据），最终集群所有节点数据一致，而不需要手动备份恢复。</li></ul><p>其劣势为：</p><ul><li>能做到数据的强一致性，毫无疑问，也是以牺牲性能为代价。</li></ul><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul><li>Linux版本：CentOS 7.8.2003 * 3</li><li>MySQL版本：5.7.34</li><li>Galera版本：3.25.3.34</li><li>MySQL Wsrep版本：5.7.34</li></ul><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 配置/etc/hosts文件，主机名解析</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 关闭firewalld与selinux</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 修改时区</span></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 配置yum源</span></span><br><span class="line">cat &gt; /etc/yum.repos.d/galera.repo &lt;&lt;EOF</span><br><span class="line">[galera]</span><br><span class="line">name=galera</span><br><span class="line">baseurl=http://releases.galeracluster.com/galera-3/centos/7/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[mysql-wsrep]</span><br><span class="line">name=mysql-wsrep</span><br><span class="line">baseurl=http://releases.galeracluster.com/mysql-wsrep-5.7/centos/7/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mysql-wsrep-5.7 galera-3</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.cnblogs.com/hyry/p/14620259.html">Linux 下部署Galera-Cluster-MySQL</a></li><li><a href="https://blog.csdn.net/NewRain_wang/article/details/103607056">mysql之galera集群部署</a></li><li><a href="https://www.cnblogs.com/lgx211/p/12456859.html#:~:text=mysql%E9%9B%86%E7%BE%A4%EF%BC%88MySQL%20Cluster%EF%BC%89%E4%B9%9F%E6%98%AFmysql%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84%E3%80%82.%20MySQL%20Cluster%E6%98%AF%E5%A4%9A%E4%B8%BB%E5%A4%9A%E4%BB%8E%E7%BB%93%E6%9E%84%E7%9A%84.%20%E5%B0%B1%E5%90%84%E4%B8%AA%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%85%B6%E4%BC%98%E5%8A%BF%E4%B8%BA%EF%BC%9A.%20mysql%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84%E5%B7%A5%E5%85%B7%EF%BC%8C%E6%97%A0%E9%9C%80%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6%E3%80%82.,%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E4%BC%98%E7%A7%80%EF%BC%8C99.999%25%E7%9A%84%E5%8F%AF%E7%94%A8%E6%80%A7%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%8A%A8%E5%88%87%E5%88%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%83%BD%E8%B7%A8%E8%8A%82%E7%82%B9%E5%86%97%E4%BD%99%E6%95%B0%E6%8D%AE%EF%BC%88%E5%85%B6%E6%95%B0%E6%8D%AE%E9%9B%86%E5%B9%B6%E4%B8%8D%E6%98%AF%E5%AD%98%E5%82%A8%E6%9F%90%E4%B8%AA%E7%89%B9%E5%AE%9A%E7%9A%84MySQL%E5%AE%9E%E4%BE%8B%E4%B8%8A%EF%BC%8C%E8%80%8C%E6%98%AF%E8%A2%AB%E5%88%86%E5%B8%83%E5%9C%A8%E5%A4%9A%E4%B8%AAData%20Nodes%E4%B8%AD%EF%BC%8C%E5%8D%B3%E4%B8%80%E4%B8%AAtable%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%83%BD%E8%A2%AB%E5%88%86%E6%95%A3%E5%9C%A8%E5%A4%9A%E4%B8%AA%E7%89%A9%E7%90%86%E8%8A%82%E7%82%B9%E4%B8%8A%EF%BC%8C%E4%BB%BB%E4%BD%95%E6%95%B0%E6%8D%AE%E9%83%BD%E4%BC%9A%E5%9C%A8%E5%A4%9A%E4%B8%AAData%20Nodes%E4%B8%8A%E5%86%97%E4%BD%99%E5%A4%87%E4%BB%BD%E3%80%82.%20%E4%BB%BB%E4%BD%95%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%8F%98%E6%9B%B4%E6%93%8D%E4%BD%9C%EF%BC%8C%E9%83%BD%E5%B0%86%E5%9C%A8%E4%B8%80%E7%BB%84Data%20Nodes%E4%B8%8A%E5%90%8C%E6%AD%A5%EF%BC%8C%E4%BB%A5%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%EF%BC%89%E3%80%82.%20%E5%8F%AF%E4%BC%B8%E7%BC%A9%E6%80%A7%E4%BC%98%E7%A7%80%EF%BC%8C%E8%83%BD%E8%87%AA%E5%8A%A8%E5%88%87%E5%88%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%96%B9%E4%BE%BF%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B0%B4%E5%B9%B3%E6%8B%93%E5%B1%95%E3%80%82.">多图文，详细介绍mysql各个集群方案</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Galera Cluster&lt;/strong&gt;是由Codership开发的MySQL多主结构集群，这些主节点互为其它节点的从</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://renyb2.github.io/tags/MySQL/"/>
    
    <category term="Galera" scheme="https://renyb2.github.io/tags/Galera/"/>
    
  </entry>
  
  <entry>
    <title>Linux优化：脏数据回刷参数与调优</title>
    <link href="https://renyb2.github.io/2021/11/04/Linux%E4%BC%98%E5%8C%96%EF%BC%9A%E8%84%8F%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%88%B7%E5%8F%82%E6%95%B0%E4%B8%8E%E8%B0%83%E4%BC%98/"/>
    <id>https://renyb2.github.io/2021/11/04/Linux%E4%BC%98%E5%8C%96%EF%BC%9A%E8%84%8F%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%88%B7%E5%8F%82%E6%95%B0%E4%B8%8E%E8%B0%83%E4%BC%98/</id>
    <published>2021-11-04T07:13:30.000Z</published>
    <updated>2021-11-04T07:22:39.305Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文转自<a href="https://www.cnblogs.com/gmpy/">广漠飘羽</a> - <a href="https://www.cnblogs.com/gmpy/p/12657801.html">Linux 脏数据回刷参数与调优</a></p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>我们知道，Linux用cache/buffer缓存数据，且有个回刷任务在<strong>适当时候</strong>把脏数据回刷到存储介质中。什么是适当的时候？换句话说，什么时候触发回刷？是脏数据达到多少阈值还是定时触发，或者两者都有？</p><p>不同场景对触发回刷的时机的需求也不一样，<strong>对IO回刷触发时机的选择，是IO性能优化的一个重要方法</strong>。</p><p>Linux内核在<code>/proc/sys/vm</code>中有透出数个配置文件，可以对触发回刷的时机进行调整。内核的回刷进程是怎么运作的呢？这数个配置文件有什么作用呢？</p><h2 id="配置概述"><a href="#配置概述" class="headerlink" title="配置概述"></a>配置概述</h2><p>在<code>/proc/sys/vm</code>中有以下文件与回刷脏数据密切相关：</p><table><thead><tr><th align="center">配置文件</th><th align="center">功能</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">dirty_background_ratio</td><td align="center">触发回刷的脏数据占可用内存的百分比</td><td align="center">0</td></tr><tr><td align="center">dirty_background_bytes</td><td align="center">触发回刷的脏数据量</td><td align="center">10</td></tr><tr><td align="center">dirty_bytes</td><td align="center">触发同步写的脏数据量</td><td align="center">0</td></tr><tr><td align="center">dirty_ratio</td><td align="center">触发同步写的脏数据占可用内存的百分比</td><td align="center">20</td></tr><tr><td align="center">dirty_expire_centisecs</td><td align="center">脏数据超时回刷时间（单位：1/100s）</td><td align="center">3000</td></tr><tr><td align="center">dirty_writeback_centisecs</td><td align="center">回刷进程定时唤醒时间（单位：1/100s）</td><td align="center">500</td></tr></tbody></table><p>对上述的配置文件，有几点要补充的：</p><ol><li>XXX_ratio 和 XXX_bytes 是同一个配置属性的不同计算方法，<strong>优先级 XXX_bytes &gt; XXX_ratio</strong></li><li><strong>可用内存</strong>并不是系统所有内存，而是<strong>free pages + reclaimable pages</strong></li><li><strong>脏数据超时</strong>表示内存中数据标识脏一定时间后，下次回刷进程工作时就必须回刷</li><li>回刷进程既会定时唤醒，也会在脏数据过多时被动唤醒。</li><li>dirty_background_XXX与dirty_XXX的差别在于前者只是唤醒回刷进程，此时应用依然可以异步写数据到Cache，当脏数据比例继续增加，触发dirty_XXX的条件，不再支持应用异步写。</li></ol><p>关于同步与异步IO的说明，可以看另一篇博客<a href="https://www.cnblogs.com/gmpy/p/12652578.html">《Linux IO模型》</a></p><p>更完整的功能介绍，可以看内核文档<code>Documentation/sysctl/vm.txt</code>。</p><h2 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h2><p>单纯的配置说明毕竟太抽象。结合网上的分享，我们看看在不同场景下，该如何配置？</p><h3 id="场景1：尽可能不丢数据"><a href="#场景1：尽可能不丢数据" class="headerlink" title="场景1：尽可能不丢数据"></a>场景1：尽可能不丢数据</h3><p>有些产品形态的数据非常重要，例如行车记录仪。在满足性能要求的情况下，要做到尽可能不丢失数据。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 此配置不一定适合您的产品，请根据您的实际情况配置 */</span></span><br><span class="line">dirty_background_ratio = <span class="number">5</span></span><br><span class="line">dirty_ratio = <span class="number">10</span></span><br><span class="line">dirty_writeback_centisecs = <span class="number">50</span></span><br><span class="line">dirty_expire_centisecs = <span class="number">100</span></span><br></pre></td></tr></table></figure><p>这样的配置有以下特点：</p><ol><li>当脏数据达到可用内存的5%时唤醒回刷进程</li><li>当脏数据达到可用内存的10%时，应用每一笔数据都必须同步等待</li><li>每隔500ms唤醒一次回刷进程</li><li>内存中脏数据存在时间超过1s则在下一次唤醒时回刷</li></ol><p>由于发生交通事故时，行车记录仪随时可能断电，事故前1~2s的数据尤为关键。因此在保证性能满足不丢帧的情况下，尽可能回刷数据。</p><p>此配置通过<strong>减少Cache</strong>，<strong>更加频繁唤醒回刷进程</strong>的方式，尽可能让数据回刷。</p><p>此时的性能理论上会比每笔数据都<code>O_SYNC</code>略高，比默认配置性能低，相当于用性能换数据安全。</p><h3 id="场景2：追求更高性能"><a href="#场景2：追求更高性能" class="headerlink" title="场景2：追求更高性能"></a>场景2：追求更高性能</h3><p>有些产品形态不太可能会掉电，例如服务器。此时不需要考虑数据安全问题，要做到尽可能高的IO性能。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 此配置不一定适合您的产品，请根据您的实际情况配置 */</span></span><br><span class="line">dirty_background_ratio = <span class="number">50</span></span><br><span class="line">dirty_ratio = <span class="number">80</span></span><br><span class="line">dirty_writeback_centisecs = <span class="number">2000</span></span><br><span class="line">dirty_expire_centisecs = <span class="number">12000</span></span><br></pre></td></tr></table></figure><p>这样的配置有以下特点：</p><ol><li>当脏数据达到可用内存的50%时唤醒回刷进程</li><li>当脏数据达到可用内存的80%时，应用每一笔数据都必须同步等待</li><li>每隔20s唤醒一次回刷进程</li><li>内存中脏数据存在时间超过120s则在下一次唤醒时回刷</li></ol><p>与场景1相比，场景2的配置通过 <strong>增大Cache</strong>，<strong>延迟回刷唤醒时间</strong>来尽可能缓存更多数据，进而实现提高性能</p><h3 id="场景3：突然的IO峰值拖慢整体性能"><a href="#场景3：突然的IO峰值拖慢整体性能" class="headerlink" title="场景3：突然的IO峰值拖慢整体性能"></a>场景3：突然的IO峰值拖慢整体性能</h3><p>什么是IO峰值？突然间大量的数据写入，导致瞬间IO压力飙升，导致瞬间IO性能狂跌，对行车记录仪而言，有可能触发视频丢帧。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 此配置不一定适合您的产品，请根据您的实际情况配置 */</span></span><br><span class="line">dirty_background_ratio = <span class="number">5</span></span><br><span class="line">dirty_ratio = <span class="number">80</span></span><br><span class="line">dirty_writeback_centisecs = <span class="number">500</span></span><br><span class="line">dirty_expire_centisecs = <span class="number">3000</span></span><br></pre></td></tr></table></figure><p>这样的配置有以下特点：</p><ol><li>当脏数据达到可用内存的5%时唤醒回刷进程</li><li>当脏数据达到可用内存的80%时，应用每一笔数据都必须同步等待</li><li>每隔5s唤醒一次回刷进程</li><li>内存中脏数据存在时间超过30s则在下一次唤醒时回刷</li></ol><p>这样的配置，通过 <strong>增大Cache总容量</strong>，<strong>更加频繁唤醒回刷</strong>的方式，解决IO峰值的问题，此时能保证脏数据比例保持在一个比较低的水平，当突然出现峰值，也有足够的Cache来缓存数据。</p><h2 id="内核代码实现"><a href="#内核代码实现" class="headerlink" title="内核代码实现"></a>内核代码实现</h2><p>知其然，亦要知其所以然。翻看内核代码，寻找配置的实现，细细品味不同配置的细微差别。</p><p>基于内核代码版本：5.5.15</p><h3 id="sysctl文件"><a href="#sysctl文件" class="headerlink" title="sysctl文件"></a>sysctl文件</h3><p>在 <em>kernel/sysctl.c</em>中列出了所有的配置文件的信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">ctl_table</span> <span class="title">vm_table</span>[] = &#123;</span></span><br><span class="line">...</span><br><span class="line">&#123;</span><br><span class="line">.procname= <span class="string">&quot;dirty_background_ratio&quot;</span>,</span><br><span class="line">.data= &amp;dirty_background_ratio,</span><br><span class="line">.maxlen= <span class="keyword">sizeof</span>(dirty_background_ratio),</span><br><span class="line">.mode= <span class="number">0644</span>,</span><br><span class="line">.proc_handler= dirty_background_ratio_handler,</span><br><span class="line">.extra1= &amp;zero,</span><br><span class="line">.extra2= &amp;one_hundred,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.procname= <span class="string">&quot;dirty_ratio&quot;</span>,</span><br><span class="line">.data= &amp;vm_dirty_ratio,</span><br><span class="line">.maxlen= <span class="keyword">sizeof</span>(vm_dirty_ratio),</span><br><span class="line">.mode= <span class="number">0644</span>,</span><br><span class="line">.proc_handler= dirty_ratio_handler,</span><br><span class="line">.extra1= &amp;zero,</span><br><span class="line">.extra2= &amp;one_hundred,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.procname= <span class="string">&quot;dirty_writeback_centisecs&quot;</span>,</span><br><span class="line">.data= &amp;dirty_writeback_interval,</span><br><span class="line">.maxlen= <span class="keyword">sizeof</span>(dirty_writeback_interval),</span><br><span class="line">.mode= <span class="number">0644</span>,</span><br><span class="line">.proc_handler= dirty_writeback_centisecs_handler,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了避免文章篇幅过大，我只列出了关键的3个配置项且不深入代码如何实现。</p><p>我们只需要知道，我们修改<code>/proc/sys/vm</code>配置项的信息，实际上修改了对应的某个全局变量的值。</p><p>每个全局变量都有默认值，追溯这些全局变量的定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;mm/page-writeback.c&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dirty_background_ratio = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> dirty_background_bytes;</span><br><span class="line"><span class="keyword">int</span> vm_dirty_ratio = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> vm_dirty_bytes;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> dirty_writeback_interval = <span class="number">5</span> * <span class="number">100</span>; <span class="comment">/* centiseconds */</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> dirty_expire_interval = <span class="number">30</span> * <span class="number">100</span>; <span class="comment">/* centiseconds */</span></span><br></pre></td></tr></table></figure><p>总结如下：</p><table><thead><tr><th align="center">配置项名</th><th align="center">对应源码变量名</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">dirty_background_bytes</td><td align="center">dirty_background_bytes</td><td align="center">0</td></tr><tr><td align="center">dirty_background_ratio</td><td align="center">dirty_background_ratio</td><td align="center">10</td></tr><tr><td align="center">dirty_bytes</td><td align="center">vm_dirty_bytes</td><td align="center">0</td></tr><tr><td align="center">dirty_ratio</td><td align="center">vm_dirty_ratio</td><td align="center">20</td></tr><tr><td align="center">dirty_writeback_centisecs</td><td align="center">dirty_writeback_interval</td><td align="center">500</td></tr><tr><td align="center">dirty_expire_centisecs</td><td align="center">dirty_expire_interval</td><td align="center">3000</td></tr></tbody></table><h3 id="回刷进程"><a href="#回刷进程" class="headerlink" title="回刷进程"></a>回刷进程</h3><p>通过<code>ps aux</code>，我们总能看到<strong>writeback</strong>的内核进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ps aux | grep <span class="string">&quot;writeback&quot;</span></span></span><br><span class="line">root        40  0.0  0.0      0     0 ?        I&lt;   06:44   0:00 [writeback]</span><br></pre></td></tr></table></figure><p>这实际上是一个工作队列对应的进程，在<code>default_bdi_init()</code>中创建。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* bdi_wq serves all asynchronous writeback tasks */</span></span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">workqueue_struct</span> *<span class="title">bdi_wq</span>;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> __init <span class="title">default_bdi_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">bdi_wq = alloc_workqueue(<span class="string">&quot;writeback&quot;</span>, WQ_MEM_RECLAIM | WQ_FREEZABLE |</span><br><span class="line">WQ_UNBOUND | WQ_SYSFS, <span class="number">0</span>);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回刷进程的核心是函数<code>wb_workfn()</code>，通过函数<code>wb_init()</code>绑定。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">wb_init</span><span class="params">(struct bdi_writeback *wb, struct backing_dev_info *bdi</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> blkcg_id, <span class="keyword">gfp_t</span> gfp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">INIT_DELAYED_WORK(&amp;wb-&gt;dwork, wb_workfn);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>唤醒回刷进程的操作是这样的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wb_wakeup</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">spin_lock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line"><span class="keyword">if</span> (test_bit(WB_registered, &amp;wb-&gt;state))</span><br><span class="line">mod_delayed_work(bdi_wq, &amp;wb-&gt;dwork, <span class="number">0</span>);</span><br><span class="line">spin_unlock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>表示唤醒的回刷任务在工作队列<code>writeback</code>中执行，这样，就把工作队列和回刷工作绑定了。</p><p>我们暂时不探讨每次会回收了什么，关注点在于相关配置项怎么起作用。在<code>wb_workfn()</code>的最后，有这样的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wb_workfn</span><span class="params">(struct work_struct *work)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="comment">/* 如果还有需要回收的内存，再次唤醒 */</span></span><br><span class="line"><span class="keyword">if</span> (!list_empty(&amp;wb-&gt;work_list))</span><br><span class="line">wb_wakeup(wb);</span><br><span class="line"><span class="comment">/* 如果还有脏数据，延迟唤醒 */</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (wb_has_dirty_io(wb) &amp;&amp; dirty_writeback_interval)</span><br><span class="line">wb_wakeup_delayed(wb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wb_wakeup</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">spin_lock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line"><span class="keyword">if</span> (test_bit(WB_registered, &amp;wb-&gt;state))</span><br><span class="line">mod_delayed_work(bdi_wq, &amp;wb-&gt;dwork, <span class="number">0</span>);</span><br><span class="line">spin_unlock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wb_wakeup_delayed</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> timeout;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 在这里使用dirty_writeback_interval，设置下次唤醒时间 */</span></span><br><span class="line">timeout = msecs_to_jiffies(dirty_writeback_interval * <span class="number">10</span>);</span><br><span class="line">spin_lock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line"><span class="keyword">if</span> (test_bit(WB_registered, &amp;wb-&gt;state))</span><br><span class="line">queue_delayed_work(bdi_wq, &amp;wb-&gt;dwork, timeout);</span><br><span class="line">spin_unlock_bh(&amp;wb-&gt;work_lock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据<code>kernel/sysctl.c</code>的内容，我们知道<code>dirty_writeback_centisecs</code>配置项对应的全局变量是<code>dirty_writeback_interval</code></p><p>可以看到，<code>dirty_writeback_interval</code>在<code>wb_wakeup_delayed()</code>中起作用，在<code>wb_workfn()</code>的最后根据<code>dirty_writeback_interval</code>设置下一次唤醒时间。</p><p>我们还发现通过<code>msecs_to_jiffies(XXX * 10)</code>来换算单位，表示<code>dirty_writeback_interval</code>乘以10之后的计量单位才是毫秒<strong>msecs</strong>。怪不得说<code>dirty_writeback_centisecs</code>的单位是<strong>1/100</strong>秒。</p><h3 id="脏数据量"><a href="#脏数据量" class="headerlink" title="脏数据量"></a>脏数据量</h3><p>脏数据量通过<code>dirty_background_XXX</code>和<code>dirty_XXX</code>表示，他们又是怎么工作的呢？</p><p>根据<code>kernel/sysctl.c</code>的内容，我们知道<code>dirty_background_XXX</code>配置项对应的全局变量是<code>dirty_background_XXX</code>，<code>dirty_XXX</code>对于的全局变量是<code>vm_dirty_XXX</code>。</p><p>我们把目光聚焦到函数<code>domain_dirty_limits()</code>，通过这个函数换算脏数据阈值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">domain_dirty_limits</span><span class="params">(struct dirty_throttle_control *dtc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> bytes = vm_dirty_bytes;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> bg_bytes = dirty_background_bytes;</span><br><span class="line"><span class="comment">/* convert ratios to per-PAGE_SIZE for higher precision */</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> ratio = (vm_dirty_ratio * PAGE_SIZE) / <span class="number">100</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> bg_ratio = (dirty_background_ratio * PAGE_SIZE) / <span class="number">100</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (bytes)</span><br><span class="line">thresh = DIV_ROUND_UP(bytes, PAGE_SIZE);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">thresh = (ratio * available_memory) / PAGE_SIZE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bg_bytes)</span><br><span class="line">bg_thresh = DIV_ROUND_UP(bg_bytes, PAGE_SIZE);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bg_thresh = (bg_ratio * available_memory) / PAGE_SIZE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bg_thresh &gt;= thresh)</span><br><span class="line">bg_thresh = thresh / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">dtc-&gt;thresh = thresh;</span><br><span class="line">dtc-&gt;bg_thresh = bg_thresh;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码体现了如下的特征</p><ol><li>dirty_background_bytes/dirty_bytes的优先级高于dirty_background_ratio/dirty_ratio</li><li>dirty_background_bytes/ratio和dirty_bytes/ratio最终会统一换算成<strong>页</strong>做计量单位</li><li>dirty_background_bytes/dirty_bytes做进一除法，表示如果值为4097Bytes，换算后是2页</li><li>dirty_background_ratio/dirty_ratio相乘的基数是<strong>available_memory</strong>，表示可用内存</li><li>如果dirty_background_XXX大于dirty_XXX，则取dirty_XXX的一半</li></ol><p>可用内存是怎么计算来的呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">global_dirtyable_memory</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> x;</span><br><span class="line"></span><br><span class="line">x = global_zone_page_state(NR_FREE_PAGES);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Pages reserved for the kernel should not be considered</span></span><br><span class="line"><span class="comment"> * dirtyable, to prevent a situation where reclaim has to</span></span><br><span class="line"><span class="comment"> * clean pages in order to balance the zones.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> x += global_node_page_state(NR_INACTIVE_FILE);</span><br><span class="line"> x += global_node_page_state(NR_ACTIVE_FILE); </span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span> (!vm_highmem_is_dirtyable)</span><br><span class="line"> x -= highmem_dirtyable_memory(x);</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">return</span> x + <span class="number">1</span>; <span class="comment">/* Ensure that we never return 0 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可用内存 = 空闲页 - 内核预留页 + 活动文件页 + 非活动文件页 ( - 高端内存)</span><br></pre></td></tr></table></figure><p>脏数据达到阈值后是怎么触发回刷的呢？我们再看<code>balance_dirty_pages()</code>函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">balance_dirty_pages</span><span class="params">(struct bdi_writeback *wb,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">unsigned</span> <span class="keyword">long</span> pages_dirtied)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> nr_reclaimable;   <span class="comment">/* = file_dirty + unstable_nfs */</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Unstable writes are a feature of certain networked</span></span><br><span class="line"><span class="comment"> * filesystems (i.e. NFS) in which data may have been</span></span><br><span class="line"><span class="comment"> * written to the server&#x27;s write cache, but has not yet</span></span><br><span class="line"><span class="comment"> * been flushed to permanent storage.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">nr_reclaimable = global_node_page_state(NR_FILE_DIRTY) +</span><br><span class="line">global_node_page_state(NR_UNSTABLE_NFS);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (nr_reclaimable &gt; gdtc-&gt;bg_thresh)</span><br><span class="line">wb_start_background_writeback(wb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wb_start_background_writeback</span><span class="params">(struct bdi_writeback *wb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">wb_wakeup(wb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结下有以下特征：</p><ol><li>可回收内存 = 文件脏页 + 文件系统不稳定页(NFS)</li><li>可回收内存达到<code>dirty_background_XXX</code>计算的阈值，只是唤醒脏数据回刷工作后直接返回，并不会等待回收完成，最终回收工作还是看<code>writeback</code>进程</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文转自&lt;a href=&quot;https://www.cnblogs.com/gmpy/&quot;&gt;广漠飘羽&lt;/a&gt; - &lt;a href=&quot;https://www.cnblogs.com/gmpy/p/12657801.html&quot;&gt;Linux 脏数据回刷参数与</summary>
      
    
    
    
    <category term="Linux" scheme="https://renyb2.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://renyb2.github.io/tags/Linux/"/>
    
    <category term="性能优化" scheme="https://renyb2.github.io/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL部署：Percona Server</title>
    <link href="https://renyb2.github.io/2021/10/27/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9APercona-Server/"/>
    <id>https://renyb2.github.io/2021/10/27/MySQL%E9%83%A8%E7%BD%B2%EF%BC%9APercona-Server/</id>
    <published>2021-10-27T07:27:02.000Z</published>
    <updated>2022-04-24T07:50:21.100Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Percona Server由领先的MySQL咨询公司Percona发布。Percona Server是一款独立的数据库产品，其可以完全与MySQL兼容，可以在不更改代码的情况了下将存储引擎更换成XtraDB 。</p><p>Percona团队的最终声明是“Percona Server是由Oracle发布的最接近官方MySQL Enterprise发行版的版本”，因此与其他更改了大量基本核心MySQL代码的分支有所区别。Percona Server的一个缺点是他们自己管理代码，不接受外部开发人员的贡献，以这种方式确保他们对产品中所包含功能的控制。</p><p>官网地址：<a href="http://www.percona.com/">http://www.percona.com/</a></p><h2 id="CentOS系统"><a href="#CentOS系统" class="headerlink" title="CentOS系统"></a>CentOS系统</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ul><li><strong>规格：</strong>4C8G，100G数据盘</li><li><strong>系统：</strong>CentOS Linux release 7.9.2009 (Core)</li><li><strong>MySQL版本：</strong>Percona Server 5.7.35-38</li></ul><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><ol><li><p>下载地址：</p><ul><li>Percona Server 5.7.35-38：<a href="https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA">https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA</a>   提取码：8p8f</li></ul></li><li><p>Linux基础配置</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭selinux</span></span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Percona Server依赖的软件包</span></span><br><span class="line">yum install -y perl libaio openssl-devel</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载Percona Server冲突的软件包</span></span><br><span class="line">yum remove -y mariadb-libs</span><br></pre></td></tr></table></figure><ol start="3"><li>安装Percona Server</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 解压安装包</span></span><br><span class="line">tar xvf Percona-Server-5.7.35-38-r3692a61-el7-x86_64-bundle.tar</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> rpm包安装</span></span><br><span class="line">rpm -ivh \</span><br><span class="line">  Percona-Server-client-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-server-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-shared-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-shared-compat-57-5.7.35-38.1.el7.x86_64.rpm \</span><br><span class="line">  Percona-Server-devel-57-5.7.35-38.1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><ol start="4"><li>配置Percona Server，MySQL配置文件目录：<code>/etc/percona-server.conf.d/mysqld.cnf</code>，文件内容如下：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Percona Server template configuration</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remove leading <span class="comment"># and set to the amount of RAM for the most important data</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cache <span class="keyword">in</span> MySQL. Start at 70% of total RAM <span class="keyword">for</span> dedicated server, <span class="keyword">else</span> 10%.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> innodb_buffer_pool_size = 128M</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remove leading <span class="comment"># to turn on a very important data integrity option: logging</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> changes to the binary <span class="built_in">log</span> between backups.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> log_bin</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remove leading <span class="comment"># to set options mainly useful for reporting servers.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The server defaults are faster <span class="keyword">for</span> transactions and fast SELECTs.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> join_buffer_size = 128M</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sort_buffer_size = 2M</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> read_rnd_buffer_size = 2M</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Database files location</span></span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb Storage Engine</span></span><br><span class="line">innodb_buffer_pool_size=3G</span><br><span class="line">innodb_change_buffer_max_size=50</span><br><span class="line">innodb_undo_log_truncate=ON</span><br><span class="line">innodb_open_files=20000</span><br><span class="line">innodb_io_capacity=12000</span><br><span class="line">innodb_io_capacity_max=24000</span><br><span class="line">innodb_doublewrite=ON</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_log_files_in_group=2</span><br><span class="line">innodb_log_file_size=512M</span><br><span class="line">innodb_log_buffer_size=64M</span><br><span class="line">innodb_sort_buffer_size=16M</span><br><span class="line">innodb_sync_spin_loops=180</span><br><span class="line">innodb_spin_wait_delay=2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Buffer</span></span><br><span class="line">join_buffer_size=32M</span><br><span class="line">key_buffer_size=16M</span><br><span class="line">preload_buffer_size=1M</span><br><span class="line">read_buffer_size=1M</span><br><span class="line">read_rnd_buffer_size=16M</span><br><span class="line">sort_buffer_size=16M</span><br><span class="line">binlog_cache_size=1M</span><br><span class="line">bulk_insert_buffer_size=16M</span><br><span class="line">thread_cache_size=64</span><br><span class="line">table_open_cache_instances=64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Connections</span></span><br><span class="line">max_connections=2000</span><br><span class="line">max_user_connections=1800</span><br><span class="line">max_connect_errors=2000</span><br><span class="line">open_files_limit=20000</span><br><span class="line">table_open_cache=20000</span><br><span class="line">table_definition_cache=20000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Plugins</span></span><br><span class="line">plugin-load-add=validate_password.so</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System Variables</span></span><br><span class="line">performance_schema=OFF</span><br><span class="line">validate_password_policy=0</span><br><span class="line">skip_name_resolve</span><br></pre></td></tr></table></figure><ol start="5"><li>启动数据库</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><ol start="6"><li>修改root密码</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看初始化密码</span></span><br><span class="line">[root@localhost log]# cat /var/log/mysqld.log  | grep &#x27;temporary password&#x27;</span><br><span class="line">2021-07-27T07:56:26.750789Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: t-:33aMYyaC+</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改root密码</span></span><br><span class="line">[root@localhost log]# mysqladmin -uroot -p&#x27;t-:33aMYyaC+&#x27; password Inspur@123</span><br></pre></td></tr></table></figure><ol start="7"><li>放通root远程登录</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许用户远程登录（mysql 8.x）</span></span><br><span class="line"><span class="keyword">UPDATE</span> mysql.user <span class="keyword">SET</span> host = <span class="string">&#x27;%&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># PS：需退出重连</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户远程登录（mysql 5.7）</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;Inspur@123&#x27;</span>;</span><br><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> Grant_priv=<span class="string">&#x27;Y&#x27;</span> <span class="keyword">where</span> <span class="keyword">User</span>=<span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> Host=<span class="string">&#x27;%&#x27;</span>;    <span class="comment"># Percona赋予所有权限不包含Grant权限</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><h3 id="登录数据库"><a href="#登录数据库" class="headerlink" title="登录数据库"></a>登录数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-5 ~]# mysql -uroot -pInspur@123</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 205</span><br><span class="line">Server version: 5.7.35-38 Percona Server (GPL), Release 38, Revision 3692a61</span><br><span class="line"></span><br><span class="line">Copyright (c) 2009-2021 Percona LLC and/or its affiliates</span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Ubuntu系统"><a href="#Ubuntu系统" class="headerlink" title="Ubuntu系统"></a>Ubuntu系统</h2><h3 id="环境配置-1"><a href="#环境配置-1" class="headerlink" title="环境配置"></a>环境配置</h3><ul><li><strong>规格：</strong>4C8G，100G数据盘</li><li><strong>系统：</strong>Ubuntu 16.04.7 LTS</li><li><strong>MySQL版本：</strong>Percona Server 5.7.35-38</li></ul><h3 id="安装流程-1"><a href="#安装流程-1" class="headerlink" title="安装流程"></a>安装流程</h3><ol><li><p>Install <code>GnuPG</code>, the GNU Privacy Guard:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install gnupg2</span><br></pre></td></tr></table></figure></li><li><p>Fetch the repository packages from Percona web:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:&#x2F;&#x2F;repo.percona.com&#x2F;apt&#x2F;percona-release_latest.$(lsb_release -sc)_all.deb</span><br></pre></td></tr></table></figure></li><li><p>Install the downloaded package with <strong>dpkg</strong>. To do that, run the following commands as root or with <strong>sudo</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb</span><br></pre></td></tr></table></figure></li><li><p>Remember to update the local cache:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br></pre></td></tr></table></figure><p>Once you install this package the Percona repositories should be added. You can check the repository setup in the <code>/etc/apt/sources.list.d/percona-release.list</code> file.</p></li><li><p>After that you can install the server package:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install percona-server-server-5.7</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>Note</p><p><em>Percona Server for MySQL</em> 5.7 comes with the <a href="https://www.percona.com/doc/percona-server/5.7/tokudb/tokudb_intro.html#tokudb-intro">TokuDB storage engine</a> and <a href="https://www.percona.com/doc/percona-server/5.7/myrocks/index.html#myrocks-intro">MyRocks storage engine</a>. These storage engines are installed as plugin.</p><p>For information on how to install and configure TokuDB, refer to the <a href="https://www.percona.com/doc/percona-server/5.7/tokudb/tokudb_installation.html#tokudb-installation">TokuDB Installation</a> guide.</p><p>For information on how to install and configure MyRocks, refer to the <a href="https://www.percona.com/doc/percona-server/5.7/myrocks/install.html#myrocks-install">Percona MyRocks Installation Guide</a> guide.</p></blockquote><p>The <em>Percona Server for MySQL</em> distribution contains several useful User Defined Functions (UDF) from Percona Toolkit. After the installation completes, run the following commands to create these functions:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -e &quot;CREATE FUNCTION fnvla_64 RETURNS INTEGER SONAME &#39;libfnvla_udf.so&#39;&quot;</span><br><span class="line">mysql -e &quot;CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME &#39;libfnv_udf.so&#39;&quot;</span><br><span class="line">mysql -e &quot;CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME &#39;libmurmur_udf.so&#39;&quot;</span><br></pre></td></tr></table></figure><p>For more details on the UDFs, see <a href="https://www.percona.com/doc/percona-server/5.7/management/udf_percona_toolkit.html">Percona Toolkit UDFS</a>.</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.percona.com/software/documentation">Percona官方文档</a></li><li><a href="https://www.percona.com/doc/percona-server/5.7/index.html">Percona官方文档：<em>Percona Server for MySQL</em> 5.7 - Documentation</a></li><li><a href="https://www.percona.com/doc/percona-server/8.0/index.html">Percona官方文档：<em>Percona Server for MySQL</em> 8.0 - Documentation</a></li><li><a href="https://www.percona.com/doc/percona-server/5.7/installation/yum_repo.html">Percona官方文档：Installing <em>Percona Server for MySQL</em> on Red Hat Enterprise Linux and CentOS</a></li><li><a href="https://repo.percona.com/apt/">Percona官方资源：Ubuntu系统</a></li><li><a href="https://www.cnblogs.com/keme/p/10239838.html">Percona 数据库</a></li><li><a href="https://dev.mysql.com/doc/refman/5.7/en/preface.html">MySQL官方文档</a></li><li><a href="https://www.biaodianfu.com/mysql-percona-or-mariadb.html">MySQL分支的选择：Percona还是MariaDB</a></li><li><a href="https://www.cnblogs.com/dingkailinux/p/8881327.html">Mysql-Percona mysql5.7简单安装</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Percona Server由领先的MySQL咨询公司Percona发布。Percona Server是一款独立的数据库产品，其可以完全与M</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://renyb2.github.io/tags/MySQL/"/>
    
    <category term="Percona" scheme="https://renyb2.github.io/tags/Percona/"/>
    
  </entry>
  
  <entry>
    <title>存储测试：性能基准测试</title>
    <link href="https://renyb2.github.io/2021/10/19/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    <id>https://renyb2.github.io/2021/10/19/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</id>
    <published>2021-10-19T10:46:51.000Z</published>
    <updated>2021-11-12T06:07:40.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主流测试软件介绍"><a href="#主流测试软件介绍" class="headerlink" title="主流测试软件介绍"></a>主流测试软件介绍</h2><p>目前业内主流存储I/O测试软件有以下几款：</p><ul><li><strong>FIO：</strong>是一个开源压力测试工具，由Linux内核存储团队研发，主要用来测试硬盘io性能。这个工具的可定制性非常强，可以根据测试者的想法进行各种混合io测试，它支持13种不同类型io引擎（libaio、sync、mmap、posixaio、network等等）。它可以测试块设备或文件，可以通过多线程或进程模拟各种io操作，可以测试统计iops、带宽和时延等性能。我们主要使用fio工具进行存储性能测试。源码：<a href="https://github.com/axboe/fio">Github FIO</a></li><li><strong>vdbench：</strong>是一个 I/O 工作负载生成器，由Oracle研发，用于验证数据完整性和度量直接附加和网络连接的存储的性能。它是一个免费的工具，容易使用，而且常常用于测试和基准测试。主要使用vdbench测试磁盘和文件系统的读写性能。</li><li><strong>IOmeter：</strong>由Intel开发的一款免费软件，主要用于Windows和Linux平台上对磁盘子系统和网络IO做性能测试。Windows用的相对较多，Linux主要使用FIO和vdbench。</li></ul><blockquote><p><strong>注意：</strong></p><ol><li>存储性能测试时，埋数据使用vdbench比FIO效果好，推荐使用vdbench预埋数据。</li><li>fio测试会对系统的硬盘进行读写，会存在破坏客户数据的风险，因此在生产环境上要谨慎使用，不建议对生产环境的硬盘进行裸盘读写测试。</li></ol></blockquote><h2 id="主要测试指标"><a href="#主要测试指标" class="headerlink" title="主要测试指标"></a>主要测试指标</h2><p>主要观测指标为 <code>IOPS</code> 、<code>BW（带宽）</code>、<code>Latency（时延）</code>，其中：</p><ul><li>4K小块场景主要参考指标为IOPS，小块容易测出IOPS瓶颈。</li><li>1M大块场景主要参考指标为BW，大块容易测出带宽瓶颈。</li></ul><h2 id="主要测试场景"><a href="#主要测试场景" class="headerlink" title="主要测试场景"></a>主要测试场景</h2><p>主要测试在顺序和随机读写方式下，4K和1M块大小读写性能。各场景变参如下：</p><ul><li>读写方式：顺序读写、随机读写</li><li>读写比例：纯读、纯写、7:3混合读写（70%读，30%写）</li><li>块大小：4K、1M</li></ul><h2 id="FIO"><a href="#FIO" class="headerlink" title="FIO"></a>FIO</h2><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y fio</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>可以使用 <code>fio -help</code> 查看每个参数，具体的参数左右可以在官网查看how to文档，如下为几个常见的参数描述</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">filename=/dev/emcpowerb　支持文件系统或者裸设备，-filename=/dev/sda2或-filename=/dev/sdb</span><br><span class="line">direct=1                 测试过程绕过机器自带的buffer，使测试结果更真实</span><br><span class="line">rw=randwread             测试随机读的I/O</span><br><span class="line">rw=randwrite             测试随机写的I/O</span><br><span class="line">rw=randrw                测试随机混合写和读的I/O</span><br><span class="line">rw=read                  测试顺序读的I/O</span><br><span class="line">rw=write                 测试顺序写的I/O</span><br><span class="line">rw=rw                    测试顺序混合写和读的I/O</span><br><span class="line">bs=4k                    单次io的块文件大小为4k</span><br><span class="line">bsrange=512-2048         同上，提定数据块的大小范围</span><br><span class="line">size=5g                  本次的测试文件大小为5g，以每次4k的io进行测试</span><br><span class="line">numjobs=30               本次的测试线程为30</span><br><span class="line">runtime=1000             测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止</span><br><span class="line">ioengine=psync           io引擎使用pync方式，如果要使用libaio引擎，需要yum install libaio-devel包</span><br><span class="line">rwmixwrite=30            在混合读写的模式下，写占30%</span><br><span class="line">group_reporting          关于显示结果的，汇总每个进程的信息</span><br><span class="line">此外</span><br><span class="line">lockmem=1g               只使用1g内存进行测试</span><br><span class="line">zero_buffers             用0初始化系统buffer</span><br><span class="line">nrfiles=8                每个进程生成文件的数量</span><br></pre></td></tr></table></figure><h3 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 块设备</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，100%读，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randread -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=rand_100read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，100%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=rand_100write_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%顺序，100%读，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=read -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=sqe_100read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%顺序，100%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=write -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=sqe_100write_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，70%读，30%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 文件系统</span></span></span><br><span class="line">fio -filename=/var/lib/mysql/storage_test -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=20G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k_file</span><br></pre></td></tr></table></figure><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-5 ~]# fio -filename=/var/lib/mysql/storage_test -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=20G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k_file</span><br><span class="line">randrw_70read_4k: (g=0): rw=randrw, bs=(R) 8192B-8192B, (W) 8192B-8192B, (T) 8192B-8192B, ioengine=libaio, iodepth=1</span><br><span class="line">...</span><br><span class="line">fio-3.7</span><br><span class="line">Starting 50 threads</span><br><span class="line">randrw_70read_4k: Laying out IO file (1 file / 20480MiB)</span><br><span class="line">Jobs: 50 (f=50): [m(50)][100.0%][r=34.0MiB/s,w=14.6MiB/s][r=4479,w=1870 IOPS][eta 00m:00s]</span><br><span class="line">randrw_70read_4k: (groupid=0, jobs=50): err= 0: pid=20734: Tue Oct 19 08:23:18 2021</span><br><span class="line">   read: IOPS=1220, BW=9766KiB/s (10.0MB/s)(1717MiB/180059msec)</span><br><span class="line">    slat (usec): min=4, max=541, avg=12.04, stdev= 6.41</span><br><span class="line">    clat (usec): min=285, max=373689, avg=12109.21, stdev=37790.30</span><br><span class="line">     lat (usec): min=295, max=373699, avg=12122.49, stdev=37790.40</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[   537],  5.00th=[   693], 10.00th=[   783], 20.00th=[   898],</span><br><span class="line">     | 30.00th=[   996], 40.00th=[  1090], 50.00th=[  1172], 60.00th=[  1287],</span><br><span class="line">     | 70.00th=[  1450], 80.00th=[  1713], 90.00th=[  2933], 95.00th=[121111],</span><br><span class="line">     | 99.00th=[125305], 99.50th=[242222], 99.90th=[246416], 99.95th=[246416],</span><br><span class="line">     | 99.99th=[371196]</span><br><span class="line">   bw (  KiB/s): min=   15, max= 1152, per=2.01%, avg=196.73, stdev=169.43, samples=17870</span><br><span class="line">   iops        : min=    1, max=  144, avg=24.54, stdev=21.18, samples=17870</span><br><span class="line">  write: IOPS=524, BW=4193KiB/s (4293kB/s)(737MiB/180059msec)</span><br><span class="line">    slat (usec): min=4, max=411, avg=12.92, stdev= 7.01</span><br><span class="line">    clat (usec): min=937, max=375705, avg=67132.23, stdev=69781.33</span><br><span class="line">     lat (usec): min=948, max=375726, avg=67146.41, stdev=69781.43</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[  1516],  5.00th=[  1795], 10.00th=[  1975], 20.00th=[  2278],</span><br><span class="line">     | 30.00th=[  2573], 40.00th=[  3064], 50.00th=[ 77071], 60.00th=[115868],</span><br><span class="line">     | 70.00th=[121111], 80.00th=[123208], 90.00th=[125305], 95.00th=[127402],</span><br><span class="line">     | 99.00th=[248513], 99.50th=[250610], 99.90th=[362808], 99.95th=[371196],</span><br><span class="line">     | 99.99th=[375391]</span><br><span class="line">   bw (  KiB/s): min=   15, max=  528, per=2.01%, avg=84.17, stdev=71.04, samples=17918</span><br><span class="line">   iops        : min=    1, max=   66, avg=10.47, stdev= 8.88, samples=17918</span><br><span class="line">  lat (usec)   : 500=0.37%, 750=5.30%, 1000=15.88%</span><br><span class="line">  lat (msec)   : 2=41.46%, 4=14.49%, 10=1.38%, 20=0.23%, 50=0.01%</span><br><span class="line">  lat (msec)   : 100=0.77%, 250=19.94%, 500=0.18%</span><br><span class="line">  cpu          : usr=0.03%, sys=0.09%, ctx=317534, majf=0, minf=56</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued rwts: total=219800,94367,0,0 short=0,0,0,0 dropped=0,0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: bw=9766KiB/s (10.0MB/s), 9766KiB/s-9766KiB/s (10.0MB/s-10.0MB/s), io=1717MiB (1801MB), run=180059-180059msec</span><br><span class="line">  WRITE: bw=4193KiB/s (4293kB/s), 4193KiB/s-4193KiB/s (4293kB/s-4293kB/s), io=737MiB (773MB), run=180059-180059msec</span><br><span class="line"></span><br><span class="line">Disk stats (read/write):</span><br><span class="line">  vda: ios=219811/94366, merge=0/5, ticks=2658031/6335969, in_queue=6946443, util=77.28%</span><br></pre></td></tr></table></figure><blockquote><p><strong>测试结果参数解析：</strong></p><p>io：执行了多少M的IO<br>bw：平均IO带宽<br>iops：IOPS<br>slat：提交延迟<br>clat：完成延迟<br>lat：响应时间<br>bw：带宽<br>cpu：利用率<br>IO depths：io队列<br>IO submit：单个IO提交要提交的IO数<br>IO complete：Like the above submit number, but for completions instead.<br>IO issued：The number of read/write requests issued, and how many of them were short.<br>IO latency：IO完延迟的分布</p></blockquote><h2 id="vdbench"><a href="#vdbench" class="headerlink" title="vdbench"></a>vdbench</h2><blockquote><p><strong>注意：</strong></p><ol><li>联机测试时，主节点要与其余节点做免密登录认证</li><li>在联机测试时，客户端的系统时间需保持一致，否则会出现时钟同步告警（this can lead to heartbeat issues）</li><li>客户端的防火墙要关闭(或者设置开放程序指定端口<code>5570</code>、<code>5560</code>访问)</li><li>关闭系统日志服务<code>rsyslog</code>，避免运行时出现其他日志文件打印信息<br>参数文件添加<code>messagescan=no</code>可以过滤掉多余的系统日志</li></ol></blockquote><h3 id="安装流程-1"><a href="#安装流程-1" class="headerlink" title="安装流程"></a>安装流程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装Java</span></span><br><span class="line">yum install -y java-1.8.0-openjdk</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载vdbench资源包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 途径1：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   链接：https://pan.baidu.com/s/1e9MHXtk6WauxMt1bTKNNrg </span></span><br><span class="line"><span class="meta">#</span><span class="bash">   提取码：shwv</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 途径2：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Oracle官网（需Oracle账户）：https://www.oracle.com/downloads/server-storage/vdbench-downloads.html</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压vdbench</span></span><br><span class="line">mkdir vdbench &amp;&amp; mv vdbench50407.zip vdbench &amp;&amp; cd vdbench &amp;&amp; unzip vdbench50407.zip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试vdbench</span></span><br><span class="line">./vdbench -t</span><br></pre></td></tr></table></figure><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><ul><li><strong>预埋数据</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 预埋数据量通常为卷容量的1.2倍</span></span><br><span class="line">sd=sd1,lun=/dev/vdb,openflag=o_direct,threads=8</span><br><span class="line">wd=wd1,sd=sd1,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,maxdata=120GB,elapse=604800,interval=2</span><br></pre></td></tr></table></figure><ul><li><strong>4M顺序写</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小4M、IO块大小1M、顺序写</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test01,depth=2,width=100,files=100,size=4M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=sequential,fileselect=sequential,operation=write,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure><ul><li><strong>4M顺序读</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小4M、IO块大小1M、顺序读</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test02,depth=2,width=100,files=100,size=4M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=sequential,fileselect=sequential,operation=read,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure><ul><li><strong>8M混合读写</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小8M、IO块大小1M、混合读写（读写比为6:4）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test03,depth=2,width=100,files=100,size=8M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=random,fileselect=random,rdpct=60,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure><h3 id="参数说明-1"><a href="#参数说明-1" class="headerlink" title="参数说明"></a>参数说明</h3><blockquote><p>vdbench可用于文件系统及块设备基准性能测试，以下主要介绍文件系统及块存储的常用测试参数<br>vdbench所有测试参数都定义到一个参数文件内，在运行时按照顺序被读取执行相应操作，在参数文件定义时需要执行顺序进行定义</p></blockquote><h4 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h4><p> <strong>文件系统参数文件定义顺序为：HD、FSD、FWD、RD</strong></p><ol><li><strong>HD（Host Define）</strong></li></ol><blockquote><p>非必选项，单机运行时不需要配置HD参数，一般只有在多主机联机测试时才需要配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br></pre></td></tr></table></figure><ul><li><strong>hd=</strong> 标识主机定义的名称，多主机运行时，可以使用hd1、hd2、hd3…区分</li><li><strong>system=</strong> 主机IP地址或主机名</li><li><strong>vdbench=</strong> vdbench执行文件存放路径，当多主机存放路径不同时，可在hd定义时单独指定</li><li><strong>user=</strong> slave和master通信使用用户</li><li><strong>shell=</strong> 可选值为<code>rsh</code>、<code>ssh</code>或<code>vdbench</code>，默认值为<code>rsh</code>，多主机联机测试时，mater和slave主机间通信方式<br>当参数值为<code>rsh</code>时，需要配置master和slave主机rsh互信，考虑到rsh使用明文传输，安全级别不够，通常情况下不建议使用这种通信方式<br>当参数值为<code>ssh</code>时，需要配置master和slave主机ssh互信，通常Linux主机联机时使用此通信方式<br>当参数值为<code>vdbench</code>，需要在所有slave主机运行<code>vdbench rsh</code>启用vdbench本身的rsh守护进程，通常Window主机联机时使用此通信方式</li></ul><ol start="2"><li><strong>FSD（File System Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fsd=default,depth=2,width=3,files=2,size=128k</span><br><span class="line">fsd=fsd1,anchor=/mnt/client1</span><br><span class="line">fsd=fsd2,anchor=/mnt/client2</span><br><span class="line">fsd=fsd3,anchor=/mnt/client3</span><br></pre></td></tr></table></figure><ul><li><strong>fsd=</strong> 标识文件系统定义的名称，多文件系统时（<code>fsd1</code>、<code>fsd2</code>、<code>fsd3</code>…），可以指定<code>default</code>（将相同的参数作为所有fsd的默认值）</li><li><strong>anchor=</strong> 文件写入根目录</li><li><strong>depth=</strong> 创建目录层级数（即目录深度）</li><li><strong>width=</strong> 每层文件夹的子文件夹数</li><li><strong>files=</strong> 测试文件个数（vdbench测试过程中会生成多层级目录结构，实际只有最后一层目录会生成测试文件）</li><li><strong>size=</strong> 每个测试文件大小</li><li>**distribution= ** 可选值为<code>bottom</code>或<code>all</code>，默认为<code>bottom</code><br>–当参数值为<code>bottom</code>时，程序只在最后一层目录写入测试文件<br>–当参数值为<code>all</code>时，程序在每一层目录都写入测试文件</li><li><strong>shared=</strong> 可选值为<code>yes</code>或<code>no</code>，默认值为<code>no</code>，一般只有在多主机联机测试时指定<br>vdbench不允许不同的slave之间共享同一个目录结构下的所有文件，因为这样会带来很大的开销，但是它们允许共享同一个目录结构。加入设置了shared=yes，那么不同的slave可以平分一个目录下所有的文件来进行访问，相当于每个slave有各自等分的访问区域，因此不能测试多个客户的对同一个文件的读写<br>–当多主机联机测试时，写入的根目录<code>anchor</code>为同一个路径时，需要指定参数值为<code>yes</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node1</span><br><span class="line">hd=hd2,system=node2</span><br><span class="line">hd=hd3,system=node3</span><br><span class="line">fsd=fsd1,anchor=/client/,depth=2,width=100,files=100,size=4k,shared=yes</span><br></pre></td></tr></table></figure><p> 计算公式如下：<br> 最后一层生成文件夹个数=<code>width</code>^<code>depth</code><br> 测试文件个数=（<code>width</code>^<code>depth</code>）*<code>files</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">fsd=fsd1,anchor=/dir1,depth=2,width=3,files=2,size=128k</span><br><span class="line">以上述参数为例，生成目录结构及测试文件如下：</span><br><span class="line">最后一层文件夹数=3^2=9 最后一层文件数=9*2=18</span><br><span class="line">/dir1/</span><br><span class="line">├── no_dismount.txt</span><br><span class="line">├── vdb.1_1.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">├── vdb.1_2.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">├── vdb.1_3.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">└── vdb_control.file</span><br><span class="line"></span><br><span class="line">12 directories, 20 files</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>FWD（FileSystem Workload Defile）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fwd=default,operation=read,xfersize=4k,fileio=sequential,fileselect=random,threads=2</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd3,host=hd3</span><br></pre></td></tr></table></figure><ul><li><strong>fwd=</strong> 标识文件系统工作负载定义的名称，多文件系统工作负载定义时，可以使用fwd1、fwd2、fwd3…区分</li><li><strong>fsd=</strong> 标识此工作负载使用文件存储定义的名称</li><li><strong>host=</strong> 标识此工作负载使用主机</li><li><strong>operation=</strong> 可选值为<code>read</code>或<code>write</code>,文件操作方式</li><li><strong>rdpct=</strong> 可选值为<code>0</code>~<code>100</code>，读操作占比百分比，一般混合读写时需要指定，当值为60时，则混合读写比为6：4</li><li><strong>fileio=</strong> <code>可选值为random</code>或<code>sequential</code>，标识文件 I/O 将执行的方式</li><li><strong>fileselect=</strong> <code>random</code>或<code>sequential</code>，标识选择文件或目录的方式</li><li><strong>xfersizes=</strong> 数据传输（读取和写入操作）处理的数据大小(即单次IO大小)</li><li><strong>threads=</strong> 此工作负载的并发线程数量</li></ul><ol start="4"><li><strong>RD（Run Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rd=rd1,fwd=(fwd1-fwd3),fwdrate=max,format=restart,elapsed=604800,interval=10</span><br></pre></td></tr></table></figure><ul><li><strong>rd=</strong> 标识文件系统运行定义的名称。</li><li><strong>fwd=</strong> 标识文件系统工作负载定义的名称。</li><li><strong>fwdrate=</strong> 每秒执行的文件系统操作数量。设置为max，表示不做任何限制，按照最大强度自适应</li><li><strong>format=</strong> 可选值为<code>yes</code>、<code>no</code>或<code>restart</code>，标识预处理目录和文件结构的方式<br>–yes表示删除目录和文件结构再重新创建<br>–no表示不删除目录和文件结构<br>–restart表示只创建未生成的目录或文件，并且增大未达到实际大小的文件</li><li><strong>elapsed=</strong> 默认值为<code>30</code>，测试运行持续时间（单位为秒）</li><li><strong>interval=</strong> 结果输出打印时间间隔（单位为秒）</li></ul><h4 id="块设备"><a href="#块设备" class="headerlink" title="块设备"></a>块设备</h4><p> <strong>块设备参数文件定义顺序为：HD、SD、WD、RD</strong></p><ol><li><strong>HD（Host Define）</strong></li></ol><blockquote><p>非必选项，单机运行时不需要配置HD参数，一般只有在多主机联机测试时才需要配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br></pre></td></tr></table></figure><ul><li><strong>hd=</strong> 标识主机定义的名称，多主机运行时，可以使用hd1、hd2、hd3…区分</li><li><strong>system=</strong> 主机IP地址或主机名</li><li><strong>vdbench=</strong> vdbench执行文件存放路径，当多主机存放路径不同时，可在hd定义时单独指定</li><li><strong>user=</strong> slave和master通信使用用户</li><li><strong>shell=</strong> 可选值为<code>rsh</code>、<code>ssh</code>或<code>vdbench</code>，默认值为<code>rsh</code>，多主机联机测试时，mater和slave主机间通信方式<br>当参数值为<code>rsh</code>时，需要配置master和slave主机rsh互信，考虑到rsh使用明文传输，安全级别不够，通常情况下不建议使用这种通信方式<br>当参数值为<code>ssh</code>时，需要配置master和slave主机ssh互信，通常Linux主机联机时使用此通信方式<br>当参数值为<code>vdbench</code>，需要在所有slave主机运行<code>vdbench rsh</code>启用vdbench本身的rsh守护进程，通常Window主机联机时使用此通信方式</li></ul><ol start="2"><li><strong>SD（Storage Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflags=o_direct,threads=6</span><br><span class="line">sd=sd3,hd=hd2,lun=/dev/sdb,openflags=o_direct,threads=6</span><br><span class="line">sd=sd6,hd=hd3,lun=/dev/sdb,openflags=o_direct,threads=6</span><br></pre></td></tr></table></figure><ul><li><strong>sd=</strong> 标识存储定义的名称</li><li><strong>hd=</strong> 标识主机定义的名称</li><li><strong>lun=</strong> 写入块设备，如：/dev/sdb, /dev/sdc…</li><li><strong>openflags=</strong> 通过设置为<code>o_direct</code>，以无缓冲缓存的方式进行读写操作</li><li><strong>threads=</strong> 对SD的最大并发I/O请求数量</li></ul><ol start="3"><li><strong>WD（Workload Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wd=wd1,sd=sd*,seekpct=100,rdpct=100,xfersize=8k,skew=40</span><br><span class="line">wd=wd2,sd=sd*,seekpct=100,rdpct=0,xfersize=8k,skew=10</span><br><span class="line">wd=wd3,sd=sd*,seekpct=100,rdpct=100,xfersize=1024k,skew=40</span><br><span class="line">wd=wd4,sd=sd*,seekpct=100,rdpct=0,xfersize=1024k,skew=10</span><br></pre></td></tr></table></figure><ul><li><strong>wd=</strong> 标识工作负载定义的名称</li><li><strong>sd=</strong> 标识存储定义的名称</li><li><strong>seekpct=</strong> 可选值为<code>0</code>或<code>100</code>(也可使用<code>sequential</code>或<code>random</code>表示)，默认值为<code>100</code>，随机寻道的百分比，设置为<code>0</code>时表示顺序，设置为<code>100</code>时表示随机。</li><li><strong>rdpct=</strong> 读取请求占请求总数的百分比，设置为0时表示写，设置为100时表示读</li><li><strong>xfersize=</strong> 要传输的数据大小。默认设置为4k</li><li><strong>skew=</strong> 非必选项，一般在多个工作负载时需要指定，表示该工作负载占总工作量百分比（skew总和为100）</li></ul><ol start="4"><li><strong>RD（Run Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rd=rd1,wd=wd*,iorate=max,maxdata=400GB,warmup=30,elapse=604800,interval=5</span><br></pre></td></tr></table></figure><ul><li><strong>rd=</strong> 标识运行定义的名称</li><li><strong>wd=</strong> 标识工作负载定义的名称</li><li><strong>iorate=</strong> 常用可选值为<code>100</code>、<code>max</code>，此工作负载的固定I/O速率<br>–当参数值为<code>100</code>时，以每秒100个I/Os的速度运行工作负载，当参数值设置为一个低于最大速率的值时，可以达到限制读写速度的效果<br>–当参数值为<code>max</code>时，以最大的I/O速率运行工作负载，一般测试读写最大性能时，该参数值均为<code>max</code></li><li><strong>warmup=</strong> 预热时间（单位为秒），默认情况下vdbench会将第一个时间间隔输出数据排除在外,程序在预热时间内的测试不纳入最终测试结果中（即预热结束后，才开始正式测试）<br>–当<code>interval</code>为5、<code>elapsed</code>为600时，测试性能为<code>2</code><del><code>elapsed/interval</code>（avg_2-120）时间间隔内的平均性能<br>–当<code>interval</code>为5、<code>warmup</code>为60、<code>elapsed</code>为600时，测试性能为<code>1+（warmup/interval）</code></del><code>（warmup+elapsed）/interval</code>(avg_13-132)时间间隔内的平均性能</li><li><strong>maxdata=</strong> 读写数据大小，通常情况下，当运行<code>elapsed</code>时间后测试结束；当同时指定<code>elapsed</code>和<code>maxdata</code>参数值时，以最快运行完的参数为准（即<code>maxdata</code>测试时间小于<code>elapsed</code>时，程序写完<code>elapsed</code>数据量后结束）<br>–当参数值为<code>100</code>以下时，表示读写数据量为总存储定义大小的倍数（如maxdata=2，2个存储定义（每个存储定义数据量为100G），则实际读写数据大小为400G）<br>–当参数值为<code>100</code>以上时，表示数据量为实际读写数据量（可以使用单位M、G、T等）</li><li><strong>elapsed=</strong> 默认值为<code>30</code>，测试运行持续时间（单位为秒）</li><li><strong>interval=</strong> 报告时间间隔（单位为秒）</li></ul><h3 id="运行使用"><a href="#运行使用" class="headerlink" title="运行使用"></a>运行使用</h3><h4 id="单机运行"><a href="#单机运行" class="headerlink" title="单机运行"></a>单机运行</h4><ul><li><strong>Linux</strong><br>示例如下，单节点针对裸盘测试，1M顺序写，测试时间600s，预热时间60s，报告时间间隔2s</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node241 vdbench50406]# cat Single-RawDisk.html </span><br><span class="line">sd=sd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd1,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,warmup=60,elapsed=600,interval=2</span><br><span class="line">[root@node241 vdbench50406]# </span><br><span class="line">[root@node241 vdbench50406]# ./vdbench -f Single-RawDisk.html</span><br></pre></td></tr></table></figure><ul><li><strong>Window</strong><br>示例如下，单节点针对文件系统测试，1M顺序写，目录深度为2，每层目录数为3，每个目录文件数为10，每个文件大小为200M，测试时间为600s，报告时间时间2s</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\vdbench50406&gt;more &quot;Single FileSystem.txt&quot;</span><br><span class="line">fsd=fsd1,anchor=E:\Sigle-FileSystem,depth=2,width=3,files=10,size=200M</span><br><span class="line">fwd=fwd1,fsd=fsd1,operation=write,xfersize=1M,fileio=sequential,fileselect=rando</span><br><span class="line">m,threads=2</span><br><span class="line">rd=rd1,fwd=fwd1,fwdrate=max,format=yes,elapsed=600,interval=5</span><br><span class="line">E:\vdbench50406&gt;</span><br><span class="line">E:\vdbench50406&gt;vdbench -f &quot;Single FileSystem.txt&quot;</span><br></pre></td></tr></table></figure><h4 id="联机运行"><a href="#联机运行" class="headerlink" title="联机运行"></a>联机运行</h4><ul><li><strong>Linux</strong><ol><li>配置多主机ssh互信</li><li>master主机运行测试参数文件即可<br>示例如下，三节点针对裸盘联机测试，1M顺序写，测试数据量为400G，预热时间30s，报告间隔5s</li></ol></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@node241 vdbench50406]# cat Multi-RawDisk</span><br><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd2,hd=hd2,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd3,hd=hd3,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd*,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,maxdata=100M,elapsed=64800,warmup=30,interval=5</span><br><span class="line">[root@node241 vdbench50406]# </span><br><span class="line">[root@node241 vdbench50406]# ./vdbench -f Multi-RawDisk</span><br></pre></td></tr></table></figure><ul><li><p><strong>Window</strong></p><ol><li><p>所有slave主机运行vdbench本身rsh守护进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\vdbench50406&gt;vdbench rsh</span><br></pre></td></tr></table></figure></li><li><p>master主机运行测试参数文件即可</p><p>示例如下，三节点针对文件系统联机测试，1M顺序写，目录深度为2，每层目录数为3，每个目录文件数为10000，每个文件大小为200M，测试时间为600s，报告间隔1s</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">E:\vdbench50406&gt;more &quot;Multi FileSystem.txt&quot;</span><br><span class="line">hd=default,vdbench=E:\vdbench50406,user=Micah,shell=vdbench</span><br><span class="line">hd=hd1,system=66.66.66.250</span><br><span class="line">hd=hd2,system=66.66.66.252</span><br><span class="line">fsd=fsd1,anchor=Z:\Sigle-FileSystem-01,depth=2,width=3,files=10000,size=200M</span><br><span class="line">fsd=fsd2,anchor=Z:\Sigle-FileSystem-02,depth=2,width=3,files=10000,size=200M</span><br><span class="line">fwd=default,operation=write,xfersize=1M,fileio=sequential,fileselect=random,threads=16</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=yes,elapsed=600,interval=1</span><br><span class="line">E:\vdbench50406&gt;</span><br><span class="line">E:\vdbench50406&gt;vdbench -f &quot;Multi FileSystem.txt&quot;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><blockquote><p>当vdbench运行完负载测试后，会在安装目录下生成<code>output</code>文件夹，里边包含测试结果文件</p></blockquote><h4 id="输出文件"><a href="#输出文件" class="headerlink" title="输出文件"></a>输出文件</h4><ul><li><p>errorlog.html</p><p>当运行测试启用数据校验时，它可能会包含一些错误信息，如：</p><ul><li>无效的密钥读取</li><li>无效的 lba 读取（一个扇区的逻辑字节地址）</li><li>无效的 SD 或 FSD 名称读取</li><li>数据损坏</li><li>坏扇区</li></ul></li><li><p><strong>flatfile.html</strong><br>vdbench 生成的一种逐列的 ASCII 格式的信息，可以使用<code>parseflat</code>参数解析结果</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  ./vdbench parseflat -i &lt;flatfile.html&gt; -o output.csv [-c col1 col2 ..] [-a] [-f col1 value1 col2 value2..]</span><br><span class="line">    -i input flatfile, e.g. output/flatfile.html</span><br><span class="line">    -o output CSV file name (default stdout)</span><br><span class="line">    -c which column to write to CSV. Columns are written in the order specified</span><br><span class="line">    -f filters: &#x27;if (colX == valueX) ... ...&#x27; (Alphabetic compare)</span><br><span class="line">    -a include only the &#x27;avg&#x27; data. Default: include only non-avg data.</span><br><span class="line">    -i是表示待分析的文件，这里写vdbench输出目录里的flatfile.html这个文件，写其它文件不能正常解析；</span><br><span class="line">    -o是解析后的输出文件，可以手动指定存放目录。文件格式为CSV，此文件的列由-c参数指定，列的顺序为-c参数的顺序</span><br><span class="line">    -a是表示csv文件中只记录测试过程中的avg值</span><br><span class="line"></span><br><span class="line">  示例如下：</span><br><span class="line">  .\vdbench.bat parseflat -i D:\vdbench50406\output\flatfile.html -c run rate MB/sec seekpct rdpct bytes/io threads resp -o d:\output.csv -a</span><br><span class="line">vdbench parseflat arguments:</span><br><span class="line">Argument 0: -i</span><br><span class="line">Argument 1: D:\vdbench50406\output\flatfile.html</span><br><span class="line">Argument 2: -c</span><br><span class="line">Argument 3: run</span><br><span class="line">Argument 4: rate</span><br><span class="line">Argument 5: MB/sec</span><br><span class="line">Argument 6: seekpct</span><br><span class="line">Argument 7: rdpct</span><br><span class="line">Argument 8: bytes/io</span><br><span class="line">Argument 9: threads</span><br><span class="line">Argument 10: resp</span><br><span class="line">Argument 11: -o</span><br><span class="line">Argument 12: D:\output.csv</span><br><span class="line">Argument 13: -a</span><br><span class="line">14:12:49.265 ParseFlat completed successfully.</span><br></pre></td></tr></table></figure><ul><li><strong>histogram.html</strong><br>一种包含报告柱状图的响应时间、文本格式的文件</li><li><strong>logfile.html</strong><br>包含 Java 代码写入控制台窗口的每行信息的副本。logfile.html 主要用于调试用途</li><li><strong>parmfile.html</strong><br>包含测试运行配置参数信息</li><li><strong>summary.html</strong><br>记录全部数据信息，显示每个报告间隔内总体性能情况及工作负载情况，以及除第一个间隔外的所有间隔的加权平均值</li><li><strong>totals.html</strong><br>记录全部数据计算之后的平均值，一般测试结果从该文件取值，除第一个间隔外所有间隔的加权平均值</li></ul><h4 id="结果分析-1"><a href="#结果分析-1" class="headerlink" title="结果分析"></a>结果分析</h4><h5 id="文件系统-1"><a href="#文件系统-1" class="headerlink" title="文件系统"></a>文件系统</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">测试参数如下：</span></span><br><span class="line">hd=default,vdbench=E:\vdbench50406,user=Micah,shell=vdbench</span><br><span class="line">hd=hd1,system=66.66.66.250</span><br><span class="line">hd=hd2,system=66.66.66.252</span><br><span class="line">fsd=fsd1,anchor=Z:\Sigle-FileSystem-01,depth=2,width=3,files=10,size=4M</span><br><span class="line">fsd=fsd2,anchor=Z:\Sigle-FileSystem-02,depth=2,width=3,files=10,size=4M</span><br><span class="line">fwd=default,operation=write,xfersize=1M,fileio=sequential,fileselect=random,threads=2</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=yes,elapsed=600,interval=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试结果如下：</span></span><br><span class="line">18:47:03.001 Starting RD=format_for_rd1</span><br><span class="line"></span><br><span class="line">六月 04, 2020 .Interval. .ReqstdOps... ...cpu%...  read ....read..... ....write.... ..mb/sec... mb/sec .xfer.. ...mkdir.... ...rmdir.... ...create... ....open.... ...close.... ...delete...</span><br><span class="line">                          rate   resp total  sys   pct   rate   resp   rate   resp  read write  total    size  rate   resp  rate   resp  rate   resp  rate   resp  rate   resp  rate   resp</span><br><span class="line">18:48:40.218   avg_2-20   57.6  6.244  13.4 2.99   0.0    0.0  0.000   57.6  6.244  0.00  7.20   7.20  131072   0.2 104.49   0.2 41.526   1.8 7527.0   1.8 192.01   1.8 7134.3   1.8 21.984</span><br><span class="line"></span><br><span class="line">18:48:42.000 Starting RD=rd1; elapsed=600; fwdrate=max. For loops: None</span><br><span class="line"></span><br><span class="line">18:58:42.205  avg_2-120    6.2  1.063  13.0 2.80   0.0    0.0  0.000    6.2  1.063  0.00  6.24   6.24 1048576   0.0  0.000   0.0  0.000   0.0  0.000   1.6 47.864   1.6 2401.1   0.0  0.000</span><br></pre></td></tr></table></figure><p> <code>totals.html</code>一般包括两个部分，第一部分为文件存储目录结构及数据填充的平均性能值，第二部分为执行测试过程中除第一个时间间隔外所有时间间隔平均性能值，主要看第二部分的内容</p><ul><li><strong>Interval</strong><br>报告间隔序号，测试结果一般为除第一个时间间隔外所有时间间隔加权平均值<br>如elapsed=600,interval=5，则性能结果为第2个间隔到第120个间隔的平均值（avg_2-120）</li><li><strong>ReqstdOps</strong><ul><li><strong>rate</strong><br>每秒读写I/O个数（<strong>读写IOPS</strong>），可以通过<code>rd</code>运行定义参数<code>fwdrate</code>控制<br>当<code>fwdrate</code>为<code>max</code>时，以最大I/O速率运行工作负载<br>当<code>fwdrate</code>为低于最大I/0速率的一个数值时，可以限制读写速度，以固定I/O速率运行工作负载</li><li><strong>resp</strong><br>读写请求响应时间（<strong>读写时延</strong>），单位为<code>ms</code></li></ul></li><li><strong>cpu%</strong><ul><li><strong>tatol</strong><br>总的cpu占用率</li><li><strong>sys</strong><br>系统cpu占用率</li></ul></li><li><strong>read pct</strong><br>读取请求占总请求数百分比占比，当为0时表示写，当为100时表示读</li><li><strong>read</strong><ul><li><strong>rate</strong><br>每秒读I/O个数（<strong>读IOPS</strong>）</li><li><strong>resp</strong><br>读请求响应时间（<strong>读时延</strong>），单位为<code>ms</code></li></ul></li><li><strong>write</strong><ul><li><strong>rate</strong><br>每秒写I/O个数（<strong>写IOPS</strong>）</li><li><strong>resp</strong><br>写请求响应时间（<strong>写时延</strong>），单位为<code>ms</code></li></ul></li><li><strong>mb/sec</strong><ul><li><strong>read</strong><br>每秒读取速度</li><li><strong>write</strong><br>每秒写入速度</li><li><strong>total</strong><br>每秒读写速度总和</li></ul></li><li><strong>xfersize</strong><br>每个读写I/O传输数据量（即单个读写I/O大小），单位为字节<code>B</code></li></ul><h5 id="块设备-1"><a href="#块设备-1" class="headerlink" title="块设备"></a>块设备</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">测试参数如下：</span></span><br><span class="line">messagescan=no</span><br><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd2,hd=hd2,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd3,hd=hd3,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd*,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,elapsed=600,warmup=30,interval=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试结果如下：</span></span><br><span class="line">&lt;a name=&quot;_1143839598&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;b&gt;19:02:15.001 Starting RD=rd1; I/O rate: Uncontrolled MAX; elapsed=600 warmup=30; For loops: None&lt;/b&gt;&lt;/i&gt;</span><br><span class="line"></span><br><span class="line">Jun 04, 2020  interval        i/o   MB/sec   bytes   read     resp     read    write     resp     resp queue  cpu%  cpu%</span><br><span class="line">                             rate  1024**2     i/o    pct     time     resp     resp      max   stddev depth sys+u   sys</span><br><span class="line">19:12:46.068 avg_7-126      82.74    82.74 1048576   0.00  289.158    0.000  289.158 2092.803  155.103  23.9  16.3  14.2</span><br></pre></td></tr></table></figure><ul><li><strong>interval</strong><br>报告间隔序号，测试结果一般为除第一个时间时间外所有时间间隔加权平均值，如有设置预热时间，则这部分测试数据也需要排除在外<br>如elapsed=600,warmup=30，interval=5，则性能测试结果为第7个间隔到第126个间隔的平均值（avg_7-126）</li><li><strong>i/o rate</strong><br>每秒读写I/O个数（<strong>读写IOPS</strong>），可以通过<code>rd</code>运行定义参数<code>iorate</code>控制<br>当<code>iorate</code>为<code>max</code>时，以最大I/O速率运行工作负载<br>当<code>iorate</code>为低于最大I/0速率的一个数值时，可以限制读写速度，以固定I/O速率运行工作负载</li><li><strong>MB/sec</strong><br>每秒读写速度（<strong>读写带宽</strong>）<br>注：按官方手册说明，</li><li><strong>bytes i/0</strong><br>每个读写I/O传输数据量（即单个读写I/O大小），单位为字节<code>B</code>，可以通过<code>wd</code>工作负载定义参数<code>xfersize</code>控制</li><li><strong>read pct</strong><br>读取请求占请求总数的百分比，可以通过<code>wd</code>工作负载定义参数<code>rdpct</code>控制<br>当<code>rdpct</code>为<code>0</code>时，表示测试模型为写<br>当<code>rdpct</code>为<code>100</code>时，表示测试模型为读</li><li><strong>resp time</strong><br>请求响应时间（<strong>读写时延</strong>），单位为毫秒<code>ms</code></li><li><strong>read resp</strong><br>读取请求响应时间，单位为毫秒<code>ms</code></li><li><strong>write resp</strong><br>写入请求响应时间，单位为毫秒<code>ms</code></li><li><strong>resp max</strong><br>最大请求响应时间，单位为毫秒<code>ms</code></li><li><strong>resp stddev</strong><br>请求响应时间标准偏差，单位为毫秒<code>ms</code></li><li><strong>queue depth</strong><br>读写I/0队列深度</li><li><strong>cpu% sys+u</strong><br>内核态空间及用户态空间CPU占用率</li><li><strong>cpu% sys</strong><br>内核态空间CPU占用率 2020年05月29日 16:00:16 Clear</li></ul><h3 id="测试说明"><a href="#测试说明" class="headerlink" title="测试说明"></a>测试说明</h3><ol><li>线程数（thread）一般设置为客户端CPU线程数总大小 <code>grep &#39;processor&#39; /proc/cpuinfo | sort -u | wc -l</code></li><li>测试总数据量需要为客户端内存大小两倍</li><li>测试读模型时需要清理客户端缓存信息 <code>sync；echo 3 &gt; /proc/sys/vm/drop</code></li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.cnblogs.com/raykuan/p/6914748.html">IO测试工具之fio详解</a></li><li><a href="https://bbs.huaweicloud.com/forum/thread-90290-1-1.html">FIO测试工具使用指导</a></li><li><a href="https://blog.51cto.com/liyuh/747746">IOmeter - IO性能测试工具</a></li><li><a href="https://www.cnblogs.com/luxf0/p/13321077.html">vdbench配置说明</a></li><li><a href="https://blog.csdn.net/u012114090/article/details/81626430">vdbench的使用教程——裸盘测试和文件系统测试</a></li><li><a href="https://blog.csdn.net/YINHAOXU1/article/details/106343147">简单记录FIO和Vdbench的测试脚本</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;主流测试软件介绍&quot;&gt;&lt;a href=&quot;#主流测试软件介绍&quot; class=&quot;headerlink&quot; title=&quot;主流测试软件介绍&quot;&gt;&lt;/a&gt;主流测试软件介绍&lt;/h2&gt;&lt;p&gt;目前业内主流存储I/O测试软件有以下几款：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FIO</summary>
      
    
    
    
    <category term="存储" scheme="https://renyb2.github.io/categories/%E5%AD%98%E5%82%A8/"/>
    
    
    <category term="性能基准测试" scheme="https://renyb2.github.io/tags/%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    
    <category term="存储" scheme="https://renyb2.github.io/tags/%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL测试：性能基准测试</title>
    <link href="https://renyb2.github.io/2021/10/13/MySQL%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    <id>https://renyb2.github.io/2021/10/13/MySQL%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</id>
    <published>2021-10-13T03:06:24.000Z</published>
    <updated>2021-12-28T10:58:14.166Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见指标"><a href="#常见指标" class="headerlink" title="常见指标"></a>常见指标</h2><ul><li>TPS：单位时间内所处理的事务数</li><li>QPS：单位时间内所处理的查询数</li><li>Latency：响应时延，通常参考95%请求所在的响应时延。</li><li>并发量：同时处理的查询请求数量</li></ul><h2 id="测试软件"><a href="#测试软件" class="headerlink" title="测试软件"></a>测试软件</h2><p>通常使用 <code>sysbench</code> 测试MySQL性能。sysbench是一款开源的多线程性能测试工具，由C语言编写，可以执行CPU、内存、线程、IO、数据库等方面的性能测试。</p><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><ul><li><strong>规格：</strong>4C8G，100G数据盘</li><li><strong>系统：</strong>CentOS Linux release 7.9.2009 (Core)</li><li><strong>MySQL版本：</strong>Percona Server 5.7.35-38</li><li><strong>sysbench版本：</strong>1.0.20</li></ul><h2 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h2><h3 id="编译安装sysbench"><a href="#编译安装sysbench" class="headerlink" title="编译安装sysbench"></a>编译安装sysbench</h3><p>本文以“sysbench-1.0.20”版本、数据库以Percona Server为例，下载源码，并编译安装。</p><ol><li><p>下载地址：</p><ul><li>sysbench源码：<a href="https://github.com/akopytov/sysbench/releases">https://github.com/akopytov/sysbench/releases</a></li><li>Percona Server 5.7.35-38：<a href="https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA">https://pan.baidu.com/s/11N7a3WeZ-Qa-7in_X0fdMA</a>   提取码：8p8f</li></ul></li><li><p>Percona Server需要安装如下rpm包：</p><ul><li>ePercona-Server-devel-57-5.7.35-38.1.el7.x86_64.rpm（提供mysql_config命令及sysbench所需要的软件库）</li><li>Percona-Server-client-57-5.7.35-38.1.el7.x86_64.rpm</li><li>Percona-Server-server-57-5.7.35-38.1.el7.x86_64.rpm</li><li>Percona-Server-shared-57-5.7.35-38.1.el7.x86_64.rpm</li><li>Percona-Server-shared-compat-57-5.7.35-38.1.el7.x86_64.rpm</li></ul></li><li><p>安装sysbench的依赖包。</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc gcc-c++ automake make libtool -y</span><br></pre></td></tr></table></figure><ol start="3"><li>查询Percona Server的库文件保存路径，记录回显信息中的“pkgincludedir”和“pkglibdir”的值，供后续步骤使用。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-5 ~]# mysql_config --help</span><br><span class="line">Usage: /usr/bin/mysql_config-64 [OPTIONS]</span><br><span class="line">Compiler: GNU 4.8.5</span><br><span class="line">Options:</span><br><span class="line">        --cflags         [-I/usr/include/mysql -m64 ]</span><br><span class="line">        --cxxflags       [-I/usr/include/mysql -m64 ]</span><br><span class="line">        --include        [-I/usr/include/mysql]</span><br><span class="line">        --libs           [-L/usr/lib64/mysql -lmysqlclient -lpthread -lz -lm -lrt -lcoredumper -lssl -lcrypto -ldl]</span><br><span class="line">        --libs_r         [-L/usr/lib64/mysql -lmysqlclient -lpthread -lz -lm -lrt -lcoredumper -lssl -lcrypto -ldl]</span><br><span class="line">        --plugindir      [/usr/lib64/mysql/plugin]</span><br><span class="line">        --socket         [/var/lib/mysql/mysql.sock]</span><br><span class="line">        --port           [0]</span><br><span class="line">        --version        [5.7.35-38]</span><br><span class="line">        --libmysqld-libs [-L/usr/lib64/mysql -l ]</span><br><span class="line">        --variable=VAR   VAR is one of:</span><br><span class="line">                pkgincludedir [/usr/include/mysql]</span><br><span class="line">                pkglibdir     [/usr/lib64/mysql]</span><br><span class="line">                plugindir     [/usr/lib64/mysql/plugin]</span><br></pre></td></tr></table></figure><ol start="4"><li>下载并安装sysbench。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载sysbench源码</span></span><br><span class="line">wget https://github.com/akopytov/sysbench/archive/refs/tags/1.0.20.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar zxvf sysbench-1.0.20.tar.gz &amp;&amp; cd sysbench-1.0.20</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置及生成编译文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - “/usr/include/mysql”为步骤3中查到的“pkgincludedir”的值。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - “/usr/lib64/mysql” 为步骤3中查到的“pkglibdir”的值。</span></span><br><span class="line">./autogen.sh</span><br><span class="line">./configure --with-mysql-includes=/usr/include/mysql --with-mysql-libs=/usr/lib64/mysql --with-mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证sysbench</span></span><br><span class="line">sysbench --version</span><br></pre></td></tr></table></figure><h3 id="MySQL数据库准备"><a href="#MySQL数据库准备" class="headerlink" title="MySQL数据库准备"></a>MySQL数据库准备</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许用户远程登录（mysql 5.7）</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;Inspur@123&#x27;</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建测试数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> sbtest;</span><br></pre></td></tr></table></figure><h3 id="清理缓存及swap"><a href="#清理缓存及swap" class="headerlink" title="清理缓存及swap"></a>清理缓存及swap</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">sync</span><br><span class="line">echo 3 &gt;/proc/sys/vm/drop_caches</span><br><span class="line">swapoff -a &amp;&amp; swapon -a</span><br></pre></td></tr></table></figure><h3 id="清理并加载测试数据"><a href="#清理并加载测试数据" class="headerlink" title="清理并加载测试数据"></a>清理并加载测试数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清理测试数据</span></span><br><span class="line">sysbench /root/sysbench-1.0.20/src/lua/oltp_read_write.lua \</span><br><span class="line">  --db-driver=mysql --mysql-host=127.0.0.1 \</span><br><span class="line">  --mysql-port=3306 --mysql-user=root \</span><br><span class="line">  --mysql-password=&#x27;Inspur@123&#x27; \</span><br><span class="line">  --table_size=500000 --tables=4 \</span><br><span class="line">  --threads=1 --report-interval=2 cleanup</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载测试数据</span></span><br><span class="line">sysbench /root/sysbench-1.0.20/src/lua/oltp_read_write.lua \</span><br><span class="line">  --db-driver=mysql --mysql-host=127.0.0.1 \</span><br><span class="line">  --mysql-port=3306 --mysql-user=root \</span><br><span class="line">  --mysql-password=&#x27;Inspur@123&#x27; \</span><br><span class="line">  --table_size=500000 --tables=4 \</span><br><span class="line">  --threads=1 --report-interval=2 prepare</span><br></pre></td></tr></table></figure><h2 id="测试开始"><a href="#测试开始" class="headerlink" title="测试开始"></a>测试开始</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 运行测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 数据量必须与加载的数据量一致，否则测出来的数据没有参考价值。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 并发数由 --threads 参数控制。</span></span><br><span class="line">sysbench /root/sysbench-1.0.20/src/lua/oltp_read_write.lua \</span><br><span class="line">  --db-driver=mysql --mysql-host=127.0.0.1 \</span><br><span class="line">  --mysql-port=3306 --mysql-user=root \</span><br><span class="line">  --mysql-password=&#x27;Inspur@123&#x27; \</span><br><span class="line">  --table_size=500000 --tables=4 \</span><br><span class="line">  --threads=1 --report-interval=2 run</span><br></pre></td></tr></table></figure><h2 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h2><p>以如下24线程测试结果解析该数据库性能数据：</p><ul><li>TPS：1427.66</li><li>QPS：28553.18</li><li>Latency（95th percentile）：41.85</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)</span><br><span class="line"></span><br><span class="line">Running the test with following options:</span><br><span class="line">Number of threads: 24</span><br><span class="line">Report intermediate results every 2 second(s)</span><br><span class="line">Initializing random number generator from current time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Initializing worker threads...</span><br><span class="line"></span><br><span class="line">Threads started!</span><br><span class="line"></span><br><span class="line">[ 2s ] thds: 24 tps: 1467.54 qps: 29452.70 (r/w/o: 20636.07/5871.16/2945.47) lat (ms,95%): 44.98 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 4s ] thds: 24 tps: 1094.50 qps: 21940.91 (r/w/o: 15363.94/4386.48/2190.49) lat (ms,95%): 44.98 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 6s ] thds: 24 tps: 1529.42 qps: 30551.81 (r/w/o: 21378.82/6115.16/3057.83) lat (ms,95%): 38.25 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 8s ] thds: 24 tps: 1524.10 qps: 30495.54 (r/w/o: 21350.93/6095.41/3049.20) lat (ms,95%): 40.37 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">[ 10s ] thds: 19 tps: 1523.76 qps: 30353.84 (r/w/o: 21226.75/6091.06/3036.03) lat (ms,95%): 42.61 err/s: 0.00 reconn/s: 0.00</span><br><span class="line">SQL statistics:</span><br><span class="line">    queries performed:</span><br><span class="line">        read:                            200410</span><br><span class="line">        write:                           57260</span><br><span class="line">        other:                           28630</span><br><span class="line">        total:                           286300</span><br><span class="line">    transactions:                        14315  (1427.66 per sec.)</span><br><span class="line">    queries:                             286300 (28553.18 per sec.)</span><br><span class="line">    ignored errors:                      0      (0.00 per sec.)</span><br><span class="line">    reconnects:                          0      (0.00 per sec.)</span><br><span class="line"></span><br><span class="line">General statistics:</span><br><span class="line">    total time:                          10.0257s</span><br><span class="line">    total number of events:              14315</span><br><span class="line"></span><br><span class="line">Latency (ms):</span><br><span class="line">         min:                                    2.12</span><br><span class="line">         avg:                                   16.76</span><br><span class="line">         max:                                  608.98</span><br><span class="line">         95th percentile:                       41.85</span><br><span class="line">         sum:                               239986.30</span><br><span class="line"></span><br><span class="line">Threads fairness:</span><br><span class="line">    events (avg/stddev):           596.4583/16.73</span><br><span class="line">    execution time (avg/stddev):   9.9994/0.01</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://support.huaweicloud.com/prtg-kunpengat/sysbench_01_0001.html#:~:text=%E7%BC%96%E8%AF%91%E5%92%8C%E5%AE%89%E8%A3%85%201%20%E5%AE%89%E8%A3%85sysbench%E7%9A%84%E4%BE%9D%E8%B5%96%E5%8C%85%E3%80%82...%202%20%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89%E5%AE%89%E8%A3%85MariaDB%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%82...%203%20%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%BF%9B%E5%85%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%82systemctl%20start,-zxvf%201....%209%20%E7%BC%96%E8%AF%91%E5%B9%B6%E5%AE%89%E8%A3%85%E3%80%82make%20make%20install%2010%20%E6%9F%A5%E8%AF%A2sysbench%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%82">华为云文档：安装Sysbench</a></li><li><a href="https://github.com/akopytov/sysbench">Github：sysbench</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常见指标&quot;&gt;&lt;a href=&quot;#常见指标&quot; class=&quot;headerlink&quot; title=&quot;常见指标&quot;&gt;&lt;/a&gt;常见指标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;TPS：单位时间内所处理的事务数&lt;/li&gt;
&lt;li&gt;QPS：单位时间内所处理的查询数&lt;/li&gt;
&lt;li&gt;Late</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://renyb2.github.io/tags/MySQL/"/>
    
    <category term="性能基准测试" scheme="https://renyb2.github.io/tags/%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>MySQL优化：服务性能</title>
    <link href="https://renyb2.github.io/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/"/>
    <id>https://renyb2.github.io/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/</id>
    <published>2021-10-11T01:55:55.000Z</published>
    <updated>2021-11-04T07:17:13.316Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>性能优化优先顺序：</p><ol><li>数据库结构设计和SQL语句</li><li>数据库存储引擎的选择和参数配置</li><li>系统选择和优化</li><li>硬件升级</li></ol></blockquote><h2 id="服务器硬件"><a href="#服务器硬件" class="headerlink" title="服务器硬件"></a>服务器硬件</h2><h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><ul><li>64位的CPU一定要工作在64位的系统下</li><li>32位操作系统对单线程运行的MySQL有很大的限制</li><li>频率决定单个SQL处理快慢；核数决定并行处理SQL数量，即QPS</li><li>对于并发比较高的场景，CPU的数量比频率重要</li><li>对于CPU密集型场景或比较复杂的SQL，CPU频率越高越好</li><li>Web类应用，核数优先级大于频率</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看CPU是否超频</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看CPU最大频率</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu*/cpufreq/cpuinfo_max_freq</span><br></pre></td></tr></table></figure><h3 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h3><ul><li>内存选择时，应选择主板所能使用的最高频率的内存</li><li>内存的大小对性能很重要，所以要尽可能的大</li><li>在数据量大于内存时，内存不能缓存全部的数据，提升内存对性能有较明显的提升</li></ul><h3 id="I-O子系统"><a href="#I-O子系统" class="headerlink" title="I/O子系统"></a>I/O子系统</h3><p>优先级：PCIe &gt; SSD &gt; 传统磁盘 + RAID10 &gt; 磁盘 &gt; SAN</p><p>传统磁盘需要注意：</p><ul><li>存储容量</li><li>传输速度</li><li>访问时间</li><li>主轴转速</li><li>物理尺寸</li></ul><p>RAID级别的选择：主库建议RAID10，从库建议RAID0、RAID5。</p><table><thead><tr><th>等级</th><th>特点</th><th>是否冗余</th><th>盘数</th><th>读</th><th>写</th></tr></thead><tbody><tr><td>RAID0</td><td>便宜，快速，危险</td><td>否</td><td>N</td><td>快</td><td>快</td></tr><tr><td>RAID1</td><td>高速读，简单，安全</td><td>是</td><td>2</td><td>快</td><td>慢</td></tr><tr><td>RAID5</td><td>安全，成本折中</td><td>是</td><td>N+1</td><td>快</td><td>取决于最慢的盘</td></tr><tr><td>RAID10</td><td>贵，高速，安全</td><td>是</td><td>2N</td><td>快</td><td>快</td></tr></tbody></table><p>相比于机械磁盘，固态磁盘有以下几个特点：</p><ol><li>更好的随机读写性能</li><li>更好的支持并发</li><li>更容易损坏</li></ol><p>使用场景：</p><ul><li><p>适用于存在大量随机IO的场景</p></li><li><p>适用于解决单线程负载的IO瓶颈</p></li></ul><h2 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h2><h3 id="内核相关参数：-etc-sysctl-conf"><a href="#内核相关参数：-etc-sysctl-conf" class="headerlink" title="内核相关参数：/etc/sysctl.conf"></a>内核相关参数：/etc/sysctl.conf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加连接数和队列长度</span></span><br><span class="line">net.core.somaxconn=65535</span><br><span class="line">net.core.netdev_max_backlog=65535</span><br><span class="line">net.ipv4.tcp_max_syn_backlog=65535</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加快tcp连接回收速度</span></span><br><span class="line">net.ipv4.tcp_fin_timeout=10</span><br><span class="line">net.ipv4.tcp_tw_reuse=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 网络接收和发送缓冲区大小</span></span><br><span class="line">net.core.wmem_default=87380</span><br><span class="line">net.core.wmem_max=16777216</span><br><span class="line">net.core.rmem_default=87380</span><br><span class="line">net.core.rmem_max=16777216</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tcp存活探测</span></span><br><span class="line">net.ipv4.tcp_keepalive_time=120</span><br><span class="line">net.ipv4.tcp_keepalive_intvl=30</span><br><span class="line">net.ipv4.tcp_keepalive_probes=3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 单个共享内存段的最大值</span></span><br><span class="line">kernel.shmmax=4294967296</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 这个参数应该设置的足够大，以便能在一个共享内存段下容纳下整个Innodb缓冲池的大小</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 对于64位linux系统，可取的最大值为物理内存值-1byte，建议值为大于物理内存的一半，一般取值大于Innodb缓冲池的大小即可。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存交换分区</span></span><br><span class="line">vm.swappiness=5</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 内存使用率超过95%才会使用交换分区</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 内存交换分区，在内存不足时会对性能产生明显的影响</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 脏页</span></span><br><span class="line">vm.dirty_background_ratio=50</span><br><span class="line">vm.dirty_ratio=80</span><br><span class="line">vm.dirty_writeback_centisecs = 2000</span><br><span class="line">vm.dirty_expire_centisecs = 12000</span><br></pre></td></tr></table></figure><h3 id="资源限制：-etc-security-limits-conf"><a href="#资源限制：-etc-security-limits-conf" class="headerlink" title="资源限制：/etc/security/limits.conf"></a>资源限制：/etc/security/limits.conf</h3><p>需要重启操作系统才能生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 控制打开文件数限制</span></span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> *        表示对所有用户有效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> soft     表示当前系统生效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hard     表名系统中所能设定的最大值</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nofile   表示锁限制的资源是打开文件的最大数目</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 65535    限制的数量</span></span><br></pre></td></tr></table></figure><h3 id="磁盘调度策略：-sys-block-devname-queue-scheduler"><a href="#磁盘调度策略：-sys-block-devname-queue-scheduler" class="headerlink" title="磁盘调度策略：/sys/block/devname/queue/scheduler"></a>磁盘调度策略：/sys/block/devname/queue/scheduler</h3><p>Linux 内核的 4 大 IO 调度算法：</p><ul><li><strong>Noop IO scheduler（电梯式调度策略）</strong>：NOOP实现了一个FIFO队列，它像电梯的工作方法一样对I/O请求进行组织，当有一个新的请求到来时，它将请求合并到最近的请求之后，以此来保证请求同一介质。NOOP倾向于饿死读而利于写，因此NOOP对于<strong>闪存设备</strong>、<strong>RAM</strong>及<strong>嵌入式系统</strong>是最好的选择。</li><li><strong>Deadline IO scheduler（截止时间调度策略）</strong>：Deadline确保了在一个截止时间内服务请求，这个截止时间是可调整的，而默认读期限短于写期限。这样就防止了写操作因为不能被读取而饿死的现象，Deadline对<strong>数据库类应用</strong>是最好的选择。</li><li><strong>Anticipatory IO scheduler（预料I/O调度策略）</strong>：本质上与Deadline一样，但在最后一次读操作后，要等待6ms，才能继续进行对其它I/O请求进行调度。它会在每个6ms中插入新的I/O操作，而会将一些小写入流合并成一个大写入流，用写入延时换取最大的写入吞吐量。AS适合于<strong>写入较多的环境</strong>，比如文件服务器，AS对数据库环境表现很差。</li><li><strong>CFQ IO scheduler（Completely Fair Queuing, 完全公平排队）</strong>：它试图为竞争块设备使用权的所有进程分配一个请求队列和一个时间片，在调度器分配给进程的时间片内，进程可以将其读写请求发送给底层块设备，当进程的时间片消耗完，进程的请求队列将被挂起，等待调度。对于通用的服务器来说，CFQ是较好的选择。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看磁盘当前调度策略（方括号里面的是当前选定的调度策略）</span></span><br><span class="line">cat /sys/block/sda/queue/scheduler</span><br><span class="line">[mq-deadline] kyber bfq none</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改磁盘调度策略</span></span><br><span class="line">echo deadline &gt; /sys/block/sda/queue/scheduler</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">echo deadline | sudo tee /sys/block/sda/queue/scheduler</span><br></pre></td></tr></table></figure><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>各操作系统推荐适用如下文件系统，性能最优：</p><ul><li>Windows：NTFS</li><li>Linux：XFS</li></ul><p>若Linux使用ext4文件系统，则关闭文件系统的操作时间记录可以提升读写性能，<code>/etc/fstab</code> 内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda1    /     ext4   noatime,nodiratime,data=writeback 1 1</span><br></pre></td></tr></table></figure><h2 id="MySQL体系结构"><a href="#MySQL体系结构" class="headerlink" title="MySQL体系结构"></a>MySQL体系结构</h2><p><img src="/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png" alt="image-20211012113231107"></p><p>存储引擎是针对于表的，而不是针对于库的（一个库中的不同表可以使用不同的存储引擎，但不建议这样操作。）</p><h2 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a>MySQL存储引擎</h2><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><h3 id="Innodb"><a href="#Innodb" class="headerlink" title="Innodb"></a>Innodb</h3><h2 id="MySQL配置参数"><a href="#MySQL配置参数" class="headerlink" title="MySQL配置参数"></a>MySQL配置参数</h2><h3 id="MySQL获取配置信息途径"><a href="#MySQL获取配置信息途径" class="headerlink" title="MySQL获取配置信息途径"></a>MySQL获取配置信息途径</h3><ul><li><p>命令行参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --datadir=/data/sql_data</span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看配置文件优先级</span></span><br><span class="line">mysqld --help --verbose | grep -A 1 &#x27;Default options&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="MySQL配置参数的作用域"><a href="#MySQL配置参数的作用域" class="headerlink" title="MySQL配置参数的作用域"></a>MySQL配置参数的作用域</h3><ul><li><p>全局参数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态设置全局参数</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> 参数名 = 参数值;</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="keyword">set</span> @@global.参数名 = 参数值;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看全局参数</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb%&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>会话参数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态设置会话参数</span></span><br><span class="line"><span class="keyword">set</span> [<span class="keyword">session</span>] 参数名 = 参数值;</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="keyword">set</span> @@session.参数名 = 参数值;</span><br></pre></td></tr></table></figure></li></ul><h3 id="内存相关配置参数"><a href="#内存相关配置参数" class="headerlink" title="内存相关配置参数"></a>内存相关配置参数</h3><ul><li><p>确定可使用的内存上线</p></li><li><p>确定MySQL的每个连接使用的内存，占用内存大小为：buffer_size * 连接数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查询排序时，立即分配指定大小内存给线程</span></span><br><span class="line">sort_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接缓冲区</span></span><br><span class="line">join_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MyISAM全表扫描时，分配指定大小，需要为4K的倍数</span></span><br><span class="line">read_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 索引缓冲区</span></span><br><span class="line">read_rnd_buffer_size</span><br></pre></td></tr></table></figure></li><li><p>确定需要为操作系统保留多少内存</p></li><li><p>如何为缓存池分配内存，总内存 -（每个线程所需要的内存 * 连接数）- 系统保留内存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">innodb_buffer_pool_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 主要用于MyISAM存储引擎</span></span><br><span class="line">key_buffer_size</span><br></pre></td></tr></table></figure></li></ul><h3 id="IO相关配置参数"><a href="#IO相关配置参数" class="headerlink" title="IO相关配置参数"></a>IO相关配置参数</h3><h4 id="Innodb-I-O相关配置"><a href="#Innodb-I-O相关配置" class="headerlink" title="Innodb I/O相关配置"></a>Innodb I/O相关配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 单个事务日志大小</span></span><br><span class="line">innodb_log_file_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 事务日志文件个数</span></span><br><span class="line">innodb_log_files_in_group </span><br><span class="line"><span class="meta">#</span><span class="bash"> 事务日志总大小 = Innodb_log_files_in_group * Innodb_log_file_size</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一个日志文件写满后才写下一个，Innodb_log_files_in_group意义不大，事务繁忙时，Innodb_log_file_size建议调大（32M ~ 128M）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志缓冲区，一般不需要设置太大，基本1s就会刷新一次日志缓冲区，只需要保证可以缓冲1s的事务即可。建议32M ~ 128M即可</span></span><br><span class="line">innodb_log_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb刷新<span class="built_in">log</span>的频率</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：每隔1秒钟会将<span class="built_in">log</span> buffer中的数据写入到文件，同时通知文件系统进行文件同步的flush操作（该值会导致MySQL崩溃时至少丢失1s的事务）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：默认值，每次事务的结束都会触发Log Thread将<span class="built_in">log</span> buffer中的数据写入文件并通知文件系统同步文件（该值可以保证数据不丢失）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 2：建议值，每次事务提交的时候会把<span class="built_in">log</span> buffer刷到文件系统中去，但并不会立即刷写到磁盘（如果只是MySQL数据库挂掉了，由于文件系统没有问题，那么对应的事务数据并没有丢失。只有在数据库所在的主机操作系统损坏或者突然掉电的情况下，数据库的事务数据可能丢失1秒之类的事务数据）</span></span><br><span class="line">innodb_flush_log_at_trx_commit</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb刷新方式</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - fsync: InnoDB uses the fsync() system call to flush both the data and <span class="built_in">log</span> files. fsync is the default setting.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - O_DSYNC: InnoDB uses O_SYNC to open and flush the <span class="built_in">log</span> files, and fsync() to flush the data files. InnoDB does not use O_DSYNC directly because there have been problems with it on many varieties of Unix.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - littlesync: This option is used <span class="keyword">for</span> internal performance testing and is currently unsupported. Use at your own risk.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - nosync: This option is used <span class="keyword">for</span> internal performance testing and is currently unsupported. Use at your own risk.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - O_DIRECT: InnoDB uses O_DIRECT (or directio() on Solaris) to open the data files, and uses fsync() to flush both the data and <span class="built_in">log</span> files. This option is available on some GNU/Linux versions, FreeBSD, and Solaris.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - O_DIRECT_NO_FSYNC: InnoDB uses O_DIRECT during flushing I/O, but skips the fsync() system call after each write operation.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Prior to MySQL 5.7.25, this setting is not suitable <span class="keyword">for</span> file systems such as XFS and EXT4, <span class="built_in">which</span> require an fsync() system call to synchronize file system metadata changes. If you are not sure whether your file system requires an fsync() system call to synchronize file system metadata changes, use O_DIRECT instead.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> As of MySQL 5.7.25, fsync() is called after creating a new file, after increasing file size, and after closing a file, to ensure that file system metadata changes are synchronized. The fsync() system call is still skipped after each write operation.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Data loss is possible <span class="keyword">if</span> redo <span class="built_in">log</span> files and data files reside on different storage devices, and an unexpected <span class="built_in">exit</span> occurs before data file writes are flushed from a device cache that is not battery-backed. If you use or intend to use different storage devices <span class="keyword">for</span> redo <span class="built_in">log</span> files and data files, and your data files reside on a device with a cache that is not battery-backed, use O_DIRECT instead.</span></span><br><span class="line">innodb_flush_method</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb独立表空间，强烈建议使用该参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：关闭</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：开启</span></span><br><span class="line">innodb_file_per_table</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb双写缓存，避免文件系统写入错误是文件损坏，损耗约10%写性能，保证安全性</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：关闭</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：开启</span></span><br><span class="line">innodb_doublewrite</span><br></pre></td></tr></table></figure><h4 id="MyISAM-I-O相关配置"><a href="#MyISAM-I-O相关配置" class="headerlink" title="MyISAM I/O相关配置"></a>MyISAM I/O相关配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 控制缓冲刷新到磁盘的频率</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - OFF：每次写操作后刷新键缓冲区内的脏块到磁盘</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ON：只对在建表时指定了delay_key_write选项的表使用延迟刷新</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ALL：对所有MyISAM表都是用延迟键写入</span></span><br><span class="line">delay_key_write</span><br></pre></td></tr></table></figure><h3 id="锁相关配置参数"><a href="#锁相关配置参数" class="headerlink" title="锁相关配置参数"></a>锁相关配置参数</h3><h4 id="Innodb-锁相关配置"><a href="#Innodb-锁相关配置" class="headerlink" title="Innodb 锁相关配置"></a>Innodb 锁相关配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 自旋锁</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自旋锁的优点：自旋锁要上锁时，如果需要等待其他线程释放锁，那么：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - 在等待锁的过程中会先线程会先自旋一段时间：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - 自旋阶段，线程不会放弃 CPU</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - 自旋过后：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - 如果可以获取锁了，那么响应会比较快（自旋没发生上下文切换）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - 如果还需要等待锁，再用更高成本的方式进行锁等待</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CPU 使用率会随着自旋阶段变长而升高。</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自旋阶段的时间长度</span></span><br><span class="line">innodb_spin_wait_delay</span><br><span class="line"><span class="meta">#</span><span class="bash"> 自旋周期</span></span><br><span class="line">innodb_sync_spin_loops</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安全相关配置参数"><a href="#安全相关配置参数" class="headerlink" title="安全相关配置参数"></a>安全相关配置参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 自动清理binlog的天数，建议覆盖两次全备的间隔</span></span><br><span class="line">expire_logs_days</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL可以接受的包大小，建议32M。主从复制结构中，主库与从库需保持一致</span></span><br><span class="line">max_allowed_packet</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用DNS查找。使用该参数后，授权需要使用ip或网段，不能使用域名</span></span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保sysdate()返回确定性日期</span></span><br><span class="line">sysdate_is_now</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止非super权限用户的写权限。建议主从复制结构中，从库使用</span></span><br><span class="line">read_only</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用slave自动恢复</span></span><br><span class="line">skip_slave_start</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL所使用的SQL模式（对SQL语法检验严谨度，不建议在已经运行的生产环境中修改），常用值如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - STRICT_TRANS_TABLES：在该模式下,如果一个值不能插入到一个事务表中,则中断当前的操作,对非事务表不做限制。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ONLY_FULL_GROUP_BY：对于GROUP BY聚合操作,如果在SELECT中的列,没有在GROUP BY中出现,那么这个SQL是不合法的,因为列不在GROUP BY从句中。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_AUTO_VALUE_ON_ZERO：该值影响自增长列的插入。默认设置下,插入0或NULL代表生成下一个自增长值。如果用户 希望插入的值为0,而该列又是自增长的,那么这个选项就有用了。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ZERO_IN_DATE：在严格模式下,不允许日期和月份为零。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ZERO_DATE：设置该值,mysql数据库不允许插入零日期,插入零日期会抛出错误而不是警告。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ERROR_FOR_DIVISION_BY_ZERO：在INSERT或UPDATE过程中,如果数据被零除,则产生错误而非警告。如 果未给出该模式,那么数据被零除时MySQL返回NULL。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_AUTO_CREATE_USER：禁止GRANT创建密码为空的用户。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ENGINE_SUBSTITUTION：如果需要的存储引擎被禁用或未编译,那么抛出错误。不设置此值时,用默认的存储引擎替代,并抛出一个异常。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - PIPES_AS_CONCAT：将<span class="string">&quot;||&quot;</span>视为字符串的连接操作符而非或运算符,这和Oracle数据库是一样的,也和字符串的拼接函数Concat相类似。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ANSI_QUOTES：启用ANSI_QUOTES后,不能用双引号来引用字符串,因为它被解释为识别符。</span></span><br><span class="line">sql_mode</span><br></pre></td></tr></table></figure><h3 id="其他常用配置参数"><a href="#其他常用配置参数" class="headerlink" title="其他常用配置参数"></a>其他常用配置参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> MySQL刷新binlog到磁盘的方式</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：性能最好，当事务提交之后，MySQL不做fsync之类的磁盘同步指令刷新binlog_cache中的信息到磁盘，而让Filesystem自行决定什么时候来做同步。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - n：当每进行n次事务提交之后，MySQL将进行一次fsync之类的磁盘同步指令来将binlog_cache中的数据强制写入磁盘。</span></span><br><span class="line">sync_binlog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存临时表大小，组合使用，两个参数值要一致，避免过大</span></span><br><span class="line">tmp_table_size</span><br><span class="line">max_heap_table_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大连接数。默认100，建议2000+</span></span><br><span class="line">max_connections</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><ul><li><a href="https://www.percona.com/doc/percona-server/5.7/index.html#percona-server-version-documentation"><em>Percona Server for MySQL</em> 5.7 - Documentation</a></li><li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_method">MySQL官方文档：InnoDB Startup Options and System Variables</a></li></ul><h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><ul><li><a href="https://segmentfault.com/a/1190000015275132">MySQL瓶颈分析与优化</a></li><li><a href="https://cloud.tencent.com/developer/article/1748024?from=article.detail.1083343">MySQL 最佳实践：分析和应对 MySQL 的 IO 问题</a></li><li><a href="https://cloud.tencent.com/developer/article/1591491">实例解析MySQL性能瓶颈排查定位</a></li><li><a href="https://www.saotn.org/mysql-innodb-performance-improvement/">MySQL InnoDB performance improvement: InnoDB buffer pool instances – Updated!</a></li><li><a href="https://bbs.huaweicloud.com/blogs/detail/247505">【MySQL调优】MySQL性能优化实战</a></li><li><a href="https://blog.csdn.net/qq_29229567/article/details/106241831">MySQL：常用的MySQL优化工具</a></li><li><a href="https://zhuanlan.zhihu.com/p/134669835">使用O_DIRECT_NO_FSYNC来提升MySQL性能</a></li><li><a href="https://www.php.cn/mysql-tutorials-363152.html">实例详解mysql中innodb_flush_method方法</a></li><li><a href="https://segmentfault.com/a/1190000021864855">第01问：MySQL 一次 insert 刷几次盘？</a></li><li><a href="https://segmentfault.com/a/1190000039345913">第32问：innodb_log_buffer_size 到底有什么作用？</a></li><li><a href="https://segmentfault.com/a/1190000040043433">第37问：自旋锁 旋着旋着人就糊涂了</a></li></ul><h3 id="InnoDB存储引擎"><a href="#InnoDB存储引擎" class="headerlink" title="InnoDB存储引擎"></a>InnoDB存储引擎</h3><ul><li><a href="https://blog.csdn.net/qq_27009517/article/details/108852433">《MySQL 性能优化》之 InnoDB 存储引擎</a></li><li><a href="https://www.cnblogs.com/wanbin/p/9530833.html">如何在MySQL中分配innodb_buffer_pool_size</a></li><li><a href="https://www.jianshu.com/p/0bc2d8f4bba1">innodb_flush_method</a></li><li><a href="https://cloud.tencent.com/developer/article/1441303">MySQL参数：innodb_flush_log_at_trx_commit 和 sync_binlog</a></li><li><a href="https://cloud.tencent.com/developer/article/1533798#:~:text=%E5%BD%93innodb_flush_log_at_trx_commit%E5%92%8Csync_binlog%E8%BF%99%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E9%83%BD%E8%AE%BE%E7%BD%AE%E4%B8%BA1%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E4%BB%AC%E7%A7%B0%E4%B9%8B%E4%B8%BA%22%E5%8F%8C1%E6%A8%A1%E5%BC%8F%22%E3%80%82.%20%22%E5%8F%8C1%E8%AE%BE%E7%BD%AE%22%E9%80%82%E5%90%88%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%80%A7%E8%A6%81%E6%B1%82%E9%9D%9E%E5%B8%B8%E9%AB%98%EF%BC%8C%E8%80%8C%E4%B8%94%E7%A3%81%E7%9B%98IO%E5%86%99%E8%83%BD%E5%8A%9B%E8%B6%B3%E5%A4%9F%E6%94%AF%E6%8C%81%E4%B8%9A%E5%8A%A1%EF%BC%8C%E6%AF%94%E5%A6%82%E8%AE%A2%E5%8D%95%2C%E4%BA%A4%E6%98%93%2C%E5%85%85%E5%80%BC%2C%E6%94%AF%E4%BB%98%E6%B6%88%E8%B4%B9%E7%B3%BB%E7%BB%9F%E3%80%82.%20%E5%9C%A8mysql%20%E6%9C%8D%E5%8A%A1%E5%B4%A9%E6%BA%83%E6%88%96%E8%80%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%BB%E6%9C%BA%E6%8E%89%E7%94%B5%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8Cbinary,log%20%E5%8F%AA%E6%9C%89%E5%8F%AF%E8%83%BD%E4%B8%A2%E5%A4%B1%E6%9C%80%E5%A4%9A%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%E6%88%96%E8%80%85%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%EF%BC%8C%E5%AE%89%E5%85%A8%E6%80%A7%E8%83%BD%E5%A4%A7%E5%A4%A7%E5%A2%9E%E5%8A%A0%EF%BC%8C%E4%BD%86%E6%98%AF%E6%88%91%E4%BB%AC%E8%AF%B4%E8%BF%87%EF%BC%8C%E5%AE%89%E5%85%A8%E6%80%A7%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD%E6%98%AF%E4%B8%80%E6%8A%8A%E5%8F%8C%E5%88%83%E5%89%91%EF%BC%8C%E5%8F%8C1%E6%A8%A1%E5%BC%8F%E4%BC%9A%E5%AF%BC%E8%87%B4%E9%A2%91%E7%B9%81%E7%9A%84io%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%AF%A5%E6%A8%A1%E5%BC%8F%E4%B9%9F%E6%98%AF%E6%9C%80%E6%85%A2%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E5%BD%B1%E5%93%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%A7%E8%83%BD%E3%80%82.%20%E5%8F%8C1%E6%A8%A1%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%BD%93%E7%A3%81%E7%9B%98IO%E6%97%A0%E6%B3%95%E6%BB%A1%E8%B6%B3%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%E6%97%B6%20%E6%AF%94%E5%A6%82%22%E5%8F%8C11%22%20%E6%B4%BB%E5%8A%A8%E7%9A%84%E5%8E%8B%E5%8A%9B%E3%80%82.">MySQL数据安全的”双1模式”简介</a></li><li><a href="https://segmentfault.com/a/1190000011687570">Mysql性能调优与测试</a></li><li><a href="https://www.cnblogs.com/wajika/p/6711022.html">Mysql线程池优化笔记</a></li><li><a href="https://blog.csdn.net/z69183787/article/details/52910079">MySQL线程池(THREAD POOL)的原理</a></li><li><a href="https://www.jianshu.com/p/210eab345423">线程池，这一篇或许就够了</a></li><li><a href="https://mytecdb.com/blogDetail.php?id=73#:~:text=MySQL%E7%BA%BF%E7%A8%8B%E6%B1%A0.%20%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AE%9E%E7%8E%B0%E5%9C%A8server%E7%AB%AF%EF%BC%8C%E9%80%9A%E8%BF%87%E5%88%9B%E5%BB%BA%E4%B8%80%E5%AE%9A%E6%95%B0%E9%87%8F%E7%9A%84%E7%BA%BF%E7%A8%8B%E6%9C%8D%E5%8A%A1DB%E8%AF%B7%E6%B1%82%EF%BC%8C%E7%9B%B8%E5%AF%B9%E4%BA%8Eone-conection-per-thread%E7%9A%84%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E6%9C%8D%E5%8A%A1%E4%B8%80%E4%B8%AA%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8D%95%E4%BD%8D%E6%98%AFSQL%E8%AF%AD%E5%8F%A5%EF%BC%8C%E5%8D%B3%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E5%8F%AF%E4%BB%A5%E5%AF%B9%E5%BA%94%E5%A4%9A%E4%B8%AA%E6%B4%BB%E8%B7%83%E7%9A%84%E8%BF%9E%E6%8E%A5%E3%80%82.%20%E9%80%9A%E8%BF%87%E7%BA%BF%E7%A8%8B%E6%B1%A0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%B0%86server%E7%AB%AF%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8E%A7%E5%88%B6%E5%9C%A8%E4%B8%80%E5%AE%9A%E7%9A%84%E8%8C%83%E5%9B%B4%EF%BC%8C%E5%87%8F%E5%B0%91%E4%BA%86%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E7%9A%84%E7%AB%9E%E4%BA%89%E5%92%8C%E7%BA%BF%E7%A8%8B%E5%88%9B%E5%BB%BA%E3%80%81%E9%94%80%E6%AF%81%E4%BB%A5%E5%8F%8A%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%B6%88%E8%80%97%EF%BC%8C%E5%90%8C%E6%97%B6%E4%B9%9F%E9%81%BF%E5%85%8D%E5%87%BA%E7%8E%B0%E9%AB%98%E8%BF%9E%E6%8E%A5%E6%95%B0%E5%AF%BC%E8%87%B4%E7%9A%84%E9%AB%98%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E3%80%82.%20%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%98%AFMySQL%205.6,%E7%9A%84%E5%BC%80%E5%A7%8B%E6%8F%90%E4%BE%9B%E7%9A%84%E4%B8%80%E4%B8%AA%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD%EF%BC%8CMySQL%205.6%20%E4%B9%8B%E5%89%8D%EF%BC%8C%E5%A4%84%E7%90%86%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E6%98%AF%20one-thread-per-connection%EF%BC%8C%20%E5%AF%B9%E4%BA%8E%E6%AF%8F%E4%B8%80%E4%B8%AAclient%20%E8%BF%9E%E6%8E%A5%E9%83%BD%E4%BC%9A%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%8B%AC%E7%AB%8B%E7%9A%84%E7%BA%BF%E7%A8%8B%EF%BC%8C%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9D%9F%EF%BC%8C%E9%94%80%E6%AF%81%E7%BA%BF%E7%A8%8B%E3%80%82.">MySQL连接池、线程缓存、线程池的区别</a></li><li><a href="https://www.cnblogs.com/leohahah/p/8857124.html">MySQL事务隔离级别</a></li><li><a href="https://www.cnblogs.com/pebblecome/p/14754179.html">MySQL-InnoDB究竟如何巧妙实现，4种事务的隔离级别</a></li><li><a href="https://developer.aliyun.com/article/710525">MySQL的sql_mode模式说明及设置</a></li><li><a href="https://www.cnblogs.com/geaozhang/p/7241744.html">InnoDB关键特性之double write</a></li><li><a href="https://www.cnblogs.com/yueyun00/p/10898677.html">MySQL缓存机制</a></li><li><a href="https://www.cnblogs.com/chenpingzhao/p/5119161.html">【mysql】关于IO/内存方面的一些优化</a></li><li><a href="https://www.jianshu.com/p/fc74e946729b">一文搞定MySQL性能调优</a></li><li><a href="https://mytecdb.com/blogDetail.php?id=117#:~:text=MySQL%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90innodb_flush_neighbors.%20innodb_flush_neighbors,%E5%8F%82%E6%95%B0%E6%98%AFInnoDB%E7%94%A8%E6%9D%A5%E6%8E%A7%E5%88%B6buffer%20pool%E5%88%B7%E8%84%8F%E9%A1%B5%E6%97%B6%E6%98%AF%E5%90%A6%E6%8A%8A%E8%84%8F%E9%A1%B5%E9%82%BB%E8%BF%91%E7%9A%84%E5%85%B6%E4%BB%96%E8%84%8F%E9%A1%B5%E4%B8%80%E8%B5%B7%E5%88%B7%E5%88%B0%E7%A3%81%E7%9B%98%EF%BC%8C%E5%9C%A8%E4%BC%A0%E7%BB%9F%E7%9A%84%E6%9C%BA%E6%A2%B0%E7%A1%AC%E7%9B%98%E6%97%B6%E4%BB%A3%EF%BC%8C%E6%89%93%E5%BC%80%E8%BF%99%E4%B8%AA%E5%8F%82%E6%95%B0%E8%83%BD%E5%A4%9F%E5%87%8F%E5%B0%91%E7%A3%81%E7%9B%98%E5%AF%BB%E9%81%93%E7%9A%84%E5%BC%80%E9%94%80%EF%BC%8C%E6%98%BE%E8%91%97%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E3%80%82.">MySQL参数解析innodb_flush_neighbors</a></li><li><a href="https://www.cnblogs.com/leohahah/p/8862216.html">MySQL锁机制</a></li><li><a href="https://www.cnblogs.com/leohahah/p/8863422.html">MySQL各类SQL语句的加锁机制</a></li><li><a href="https://blog.csdn.net/weixin_43705457/article/details/104843282">AUTO-INC锁与innodb_autoinc_lock_mode</a></li><li><a href="https://cloud.tencent.com/developer/article/1140006">MySQL性能调优 – 你必须了解的15个重要变量</a></li><li><a href="https://zhuanlan.zhihu.com/p/138065093">innodb参数优化</a></li><li><a href="https://blog.csdn.net/zhj_fly/article/details/90510393#:~:text=innodb_sync_spin_loops%E6%98%AF%E5%9C%A8%E6%94%BE%E5%BC%83CPU%E6%97%B6%E9%97%B4%E7%89%87%E4%B9%8B%E5%89%8D%E8%BF%9B%E8%A1%8C%E5%A4%9A%E5%B0%91%E6%AC%A1%E7%AD%89%E5%BE%85%EF%BC%8Cinnodb_spin_wait_delay%E6%98%AF%E4%B8%80%E6%AC%A1%E7%AD%89%E5%BE%85%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%82,%E5%AE%9E%E9%AA%8C%EF%BC%9Ainnodb_spin_wait_delay%E9%BB%98%E8%AE%A4%E5%80%BC%E6%98%AF6%EF%BC%8C%E8%AE%BE%E7%BD%AE%E8%BF%87%E5%A4%A7%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%99%8D%E4%BD%8E%E6%80%A7%E8%83%BD%E3%80%82%20%EF%BC%881%EF%BC%89%E5%B0%86%E8%AF%A5%E5%80%BC%E8%AE%BE%E4%B8%BA180%E5%92%8C1%E5%AF%B9%E5%BA%94%E7%9A%84%E5%90%9E%E5%90%90%E9%87%8F%E5%88%86%E5%88%AB%E4%B8%BA%EF%BC%9A726tps%E5%92%8C1017tps%EF%BC%88%E5%89%8D%E6%8F%90%E6%98%AF%E5%85%B6%E4%BB%96%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE%E5%90%88%E7%90%86%EF%BC%8C%E5%8F%AA%E5%AF%B9%E6%AF%94%E8%BF%99%E4%B8%80%E4%B8%AA%EF%BC%89">MySQL调参</a></li></ul><h3 id="MySQL监控"><a href="#MySQL监控" class="headerlink" title="MySQL监控"></a>MySQL监控</h3><ul><li><a href="https://cloud.tencent.com/document/product/248/45147#.E5.BC.95.E6.93.8E.E7.9B.91.E6.8E.A7.EF.BC.88.E6.99.AE.E9.80.9A.EF.BC.89--innodb">云数据库 MySQL 监控指标</a></li><li><a href="https://www.cnblogs.com/zhengah/p/4797205.html">MySQL监控、性能分析——工具篇</a></li><li><a href="https://www.cnblogs.com/wuchangsoft/p/9764635.html">MySQL 的实时性能监控利器</a></li><li><a href="https://cloud.tencent.com/developer/article/1424670">一条命令解读InnoDB存储引擎—show engine innodb status</a></li><li><a href="https://blog.csdn.net/shaochenshuo/article/details/109531445">如何读懂 MySQL rw-lock 锁的统计信息</a></li><li><a href="https://developer.aliyun.com/article/640177">初相识｜performance_schema全方位介绍（一）</a></li></ul><h3 id="Linux优化"><a href="#Linux优化" class="headerlink" title="Linux优化"></a>Linux优化</h3><ul><li><a href="https://www.cnblogs.com/zengjin93/p/5569556.html">如何提高服务器并发处理能力</a></li><li><a href="http://wsfdl.com/openstack/2018/01/02/libvirt_cpu_mode.html">关于 CPU mode 选取的一些经验</a></li><li><a href="https://cloud.tencent.com/developer/article/1615744">Linux 内核的 4 大 IO 调度算法</a></li><li><a href="https://www.cnblogs.com/gmpy/p/12852449.html">如何选择IO调度器</a></li><li>[<a href="https://www.cnblogs.com/bamanzi/p/linux-disk-io-scheduler.html">Linux性能调优] 磁盘I/O队列调度策略</a></li><li><a href="https://www.cnblogs.com/qmfsun/p/6116883.html">linux磁盘读写性能优化</a></li><li><a href="https://www.cnblogs.com/wuhuiyuan/p/4648725.html">linux系统数据落盘之细节</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;性能优化优先顺序：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库结构设计和SQL语句&lt;/li&gt;
&lt;li&gt;数据库存储引擎的选择和参数配置&lt;/li&gt;
&lt;li&gt;系统选择和优化&lt;/li&gt;
&lt;li&gt;硬件升级&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="性能优化" scheme="https://renyb2.github.io/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    <category term="MySQL" scheme="https://renyb2.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack研发：neutronclient</title>
    <link href="https://renyb2.github.io/2021/09/28/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9Aneutronclient/"/>
    <id>https://renyb2.github.io/2021/09/28/OpenStack%E7%A0%94%E5%8F%91%EF%BC%9Aneutronclient/</id>
    <published>2021-09-28T07:14:58.000Z</published>
    <updated>2022-04-13T06:00:34.614Z</updated>
    
    <content type="html"><![CDATA[<h2 id="研发环境"><a href="#研发环境" class="headerlink" title="研发环境"></a>研发环境</h2><ul><li>python：3.6.8</li><li>python-neutronclient   7.1.0</li></ul><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><strong>neutronclient调用方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> identity</span><br><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> session</span><br><span class="line"><span class="keyword">from</span> neutronclient.v2_0 <span class="keyword">import</span> client</span><br><span class="line"></span><br><span class="line">username=<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">password=<span class="string">&#x27;Inspur@123&#x27;</span></span><br><span class="line">project_name=<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">project_domain_id=<span class="string">&#x27;default&#x27;</span></span><br><span class="line">user_domain_id=<span class="string">&#x27;default&#x27;</span></span><br><span class="line">auth_url=<span class="string">&#x27;http://111.111.9.190:35357/v3&#x27;</span></span><br><span class="line"></span><br><span class="line">auth = identity.Password(auth_url=auth_url,</span><br><span class="line">                         username=username,</span><br><span class="line">                         password=password,</span><br><span class="line">                         project_name=project_name,</span><br><span class="line">                         project_domain_id=project_domain_id,</span><br><span class="line">                         user_domain_id=user_domain_id)</span><br><span class="line">sess = session.Session(auth=auth)</span><br><span class="line">neutron = client.Client(session=sess)</span><br></pre></td></tr></table></figure><p><strong>neutronclient支持的方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代码取自neutronclient &gt; v2_0 &gt; client.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span>(<span class="params">ClientBase</span>):</span></span><br><span class="line"></span><br><span class="line">    networks_path = <span class="string">&quot;/networks&quot;</span></span><br><span class="line">    network_path = <span class="string">&quot;/networks/%s&quot;</span></span><br><span class="line">    ports_path = <span class="string">&quot;/ports&quot;</span></span><br><span class="line">    port_path = <span class="string">&quot;/ports/%s&quot;</span></span><br><span class="line">    port_bindings_path = <span class="string">&quot;/ports/%s/bindings&quot;</span></span><br><span class="line">    port_binding_path = <span class="string">&quot;/ports/%s/bindings/%s&quot;</span></span><br><span class="line">    port_binding_path_activate = <span class="string">&quot;/ports/%s/bindings/%s/activate&quot;</span></span><br><span class="line">    subnets_path = <span class="string">&quot;/subnets&quot;</span></span><br><span class="line">    subnet_path = <span class="string">&quot;/subnets/%s&quot;</span></span><br><span class="line">    onboard_network_subnets_path = <span class="string">&quot;/subnetpools/%s/onboard_network_subnets&quot;</span></span><br><span class="line">    subnetpools_path = <span class="string">&quot;/subnetpools&quot;</span></span><br><span class="line">    subnetpool_path = <span class="string">&quot;/subnetpools/%s&quot;</span></span><br><span class="line">    address_scopes_path = <span class="string">&quot;/address-scopes&quot;</span></span><br><span class="line">    address_scope_path = <span class="string">&quot;/address-scopes/%s&quot;</span></span><br><span class="line">    quotas_path = <span class="string">&quot;/quotas&quot;</span></span><br><span class="line">    quota_path = <span class="string">&quot;/quotas/%s&quot;</span></span><br><span class="line">    quota_default_path = <span class="string">&quot;/quotas/%s/default&quot;</span></span><br><span class="line">    quota_details_path = <span class="string">&quot;/quotas/%s/details.json&quot;</span></span><br><span class="line">    extensions_path = <span class="string">&quot;/extensions&quot;</span></span><br><span class="line">    extension_path = <span class="string">&quot;/extensions/%s&quot;</span></span><br><span class="line">    routers_path = <span class="string">&quot;/routers&quot;</span></span><br><span class="line">    router_path = <span class="string">&quot;/routers/%s&quot;</span></span><br><span class="line">    floatingips_path = <span class="string">&quot;/floatingips&quot;</span></span><br><span class="line">    floatingip_path = <span class="string">&quot;/floatingips/%s&quot;</span></span><br><span class="line">    security_groups_path = <span class="string">&quot;/security-groups&quot;</span></span><br><span class="line">    security_group_path = <span class="string">&quot;/security-groups/%s&quot;</span></span><br><span class="line">    security_group_rules_path = <span class="string">&quot;/security-group-rules&quot;</span></span><br><span class="line">    security_group_rule_path = <span class="string">&quot;/security-group-rules/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    sfc_flow_classifiers_path = <span class="string">&quot;/sfc/flow_classifiers&quot;</span></span><br><span class="line">    sfc_flow_classifier_path = <span class="string">&quot;/sfc/flow_classifiers/%s&quot;</span></span><br><span class="line">    sfc_port_pairs_path = <span class="string">&quot;/sfc/port_pairs&quot;</span></span><br><span class="line">    sfc_port_pair_path = <span class="string">&quot;/sfc/port_pairs/%s&quot;</span></span><br><span class="line">    sfc_port_pair_groups_path = <span class="string">&quot;/sfc/port_pair_groups&quot;</span></span><br><span class="line">    sfc_port_pair_group_path = <span class="string">&quot;/sfc/port_pair_groups/%s&quot;</span></span><br><span class="line">    sfc_port_chains_path = <span class="string">&quot;/sfc/port_chains&quot;</span></span><br><span class="line">    sfc_port_chain_path = <span class="string">&quot;/sfc/port_chains/%s&quot;</span></span><br><span class="line">    sfc_service_graphs_path = <span class="string">&quot;/sfc/service_graphs&quot;</span></span><br><span class="line">    sfc_service_graph_path = <span class="string">&quot;/sfc/service_graphs/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    endpoint_groups_path = <span class="string">&quot;/vpn/endpoint-groups&quot;</span></span><br><span class="line">    endpoint_group_path = <span class="string">&quot;/vpn/endpoint-groups/%s&quot;</span></span><br><span class="line">    vpnservices_path = <span class="string">&quot;/vpn/vpnservices&quot;</span></span><br><span class="line">    vpnservice_path = <span class="string">&quot;/vpn/vpnservices/%s&quot;</span></span><br><span class="line">    ipsecpolicies_path = <span class="string">&quot;/vpn/ipsecpolicies&quot;</span></span><br><span class="line">    ipsecpolicy_path = <span class="string">&quot;/vpn/ipsecpolicies/%s&quot;</span></span><br><span class="line">    ikepolicies_path = <span class="string">&quot;/vpn/ikepolicies&quot;</span></span><br><span class="line">    ikepolicy_path = <span class="string">&quot;/vpn/ikepolicies/%s&quot;</span></span><br><span class="line">    ipsec_site_connections_path = <span class="string">&quot;/vpn/ipsec-site-connections&quot;</span></span><br><span class="line">    ipsec_site_connection_path = <span class="string">&quot;/vpn/ipsec-site-connections/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    lbaas_loadbalancers_path = <span class="string">&quot;/lbaas/loadbalancers&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path = <span class="string">&quot;/lbaas/loadbalancers/%s&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path_stats = <span class="string">&quot;/lbaas/loadbalancers/%s/stats&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path_status = <span class="string">&quot;/lbaas/loadbalancers/%s/statuses&quot;</span></span><br><span class="line">    lbaas_listeners_path = <span class="string">&quot;/lbaas/listeners&quot;</span></span><br><span class="line">    lbaas_listener_path = <span class="string">&quot;/lbaas/listeners/%s&quot;</span></span><br><span class="line">    lbaas_l7policies_path = <span class="string">&quot;/lbaas/l7policies&quot;</span></span><br><span class="line">    lbaas_l7policy_path = lbaas_l7policies_path + <span class="string">&quot;/%s&quot;</span></span><br><span class="line">    lbaas_l7rules_path = lbaas_l7policy_path + <span class="string">&quot;/rules&quot;</span></span><br><span class="line">    lbaas_l7rule_path = lbaas_l7rules_path + <span class="string">&quot;/%s&quot;</span></span><br><span class="line">    lbaas_pools_path = <span class="string">&quot;/lbaas/pools&quot;</span></span><br><span class="line">    lbaas_pool_path = <span class="string">&quot;/lbaas/pools/%s&quot;</span></span><br><span class="line">    lbaas_healthmonitors_path = <span class="string">&quot;/lbaas/healthmonitors&quot;</span></span><br><span class="line">    lbaas_healthmonitor_path = <span class="string">&quot;/lbaas/healthmonitors/%s&quot;</span></span><br><span class="line">    lbaas_members_path = lbaas_pool_path + <span class="string">&quot;/members&quot;</span></span><br><span class="line">    lbaas_member_path = lbaas_pool_path + <span class="string">&quot;/members/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    vips_path = <span class="string">&quot;/lb/vips&quot;</span></span><br><span class="line">    vip_path = <span class="string">&quot;/lb/vips/%s&quot;</span></span><br><span class="line">    pools_path = <span class="string">&quot;/lb/pools&quot;</span></span><br><span class="line">    pool_path = <span class="string">&quot;/lb/pools/%s&quot;</span></span><br><span class="line">    pool_path_stats = <span class="string">&quot;/lb/pools/%s/stats&quot;</span></span><br><span class="line">    members_path = <span class="string">&quot;/lb/members&quot;</span></span><br><span class="line">    member_path = <span class="string">&quot;/lb/members/%s&quot;</span></span><br><span class="line">    health_monitors_path = <span class="string">&quot;/lb/health_monitors&quot;</span></span><br><span class="line">    health_monitor_path = <span class="string">&quot;/lb/health_monitors/%s&quot;</span></span><br><span class="line">    associate_pool_health_monitors_path = <span class="string">&quot;/lb/pools/%s/health_monitors&quot;</span></span><br><span class="line">    disassociate_pool_health_monitors_path = (</span><br><span class="line">        <span class="string">&quot;/lb/pools/%(pool)s/health_monitors/%(health_monitor)s&quot;</span>)</span><br><span class="line">    qos_queues_path = <span class="string">&quot;/qos-queues&quot;</span></span><br><span class="line">    qos_queue_path = <span class="string">&quot;/qos-queues/%s&quot;</span></span><br><span class="line">    agents_path = <span class="string">&quot;/agents&quot;</span></span><br><span class="line">    agent_path = <span class="string">&quot;/agents/%s&quot;</span></span><br><span class="line">    network_gateways_path = <span class="string">&quot;/network-gateways&quot;</span></span><br><span class="line">    network_gateway_path = <span class="string">&quot;/network-gateways/%s&quot;</span></span><br><span class="line">    gateway_devices_path = <span class="string">&quot;/gateway-devices&quot;</span></span><br><span class="line">    gateway_device_path = <span class="string">&quot;/gateway-devices/%s&quot;</span></span><br><span class="line">    service_providers_path = <span class="string">&quot;/service-providers&quot;</span></span><br><span class="line">    metering_labels_path = <span class="string">&quot;/metering/metering-labels&quot;</span></span><br><span class="line">    metering_label_path = <span class="string">&quot;/metering/metering-labels/%s&quot;</span></span><br><span class="line">    metering_label_rules_path = <span class="string">&quot;/metering/metering-label-rules&quot;</span></span><br><span class="line">    metering_label_rule_path = <span class="string">&quot;/metering/metering-label-rules/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    DHCP_NETS = <span class="string">&#x27;/dhcp-networks&#x27;</span></span><br><span class="line">    DHCP_AGENTS = <span class="string">&#x27;/dhcp-agents&#x27;</span></span><br><span class="line">    L3_ROUTERS = <span class="string">&#x27;/l3-routers&#x27;</span></span><br><span class="line">    L3_AGENTS = <span class="string">&#x27;/l3-agents&#x27;</span></span><br><span class="line">    LOADBALANCER_POOLS = <span class="string">&#x27;/loadbalancer-pools&#x27;</span></span><br><span class="line">    LOADBALANCER_AGENT = <span class="string">&#x27;/loadbalancer-agent&#x27;</span></span><br><span class="line">    AGENT_LOADBALANCERS = <span class="string">&#x27;/agent-loadbalancers&#x27;</span></span><br><span class="line">    LOADBALANCER_HOSTING_AGENT = <span class="string">&#x27;/loadbalancer-hosting-agent&#x27;</span></span><br><span class="line">    firewall_rules_path = <span class="string">&quot;/fw/firewall_rules&quot;</span></span><br><span class="line">    firewall_rule_path = <span class="string">&quot;/fw/firewall_rules/%s&quot;</span></span><br><span class="line">    firewall_policies_path = <span class="string">&quot;/fw/firewall_policies&quot;</span></span><br><span class="line">    firewall_policy_path = <span class="string">&quot;/fw/firewall_policies/%s&quot;</span></span><br><span class="line">    firewall_policy_insert_path = <span class="string">&quot;/fw/firewall_policies/%s/insert_rule&quot;</span></span><br><span class="line">    firewall_policy_remove_path = <span class="string">&quot;/fw/firewall_policies/%s/remove_rule&quot;</span></span><br><span class="line">    firewalls_path = <span class="string">&quot;/fw/firewalls&quot;</span></span><br><span class="line">    firewall_path = <span class="string">&quot;/fw/firewalls/%s&quot;</span></span><br><span class="line">    fwaas_firewall_groups_path = <span class="string">&quot;/fwaas/firewall_groups&quot;</span></span><br><span class="line">    fwaas_firewall_group_path = <span class="string">&quot;/fwaas/firewall_groups/%s&quot;</span></span><br><span class="line">    fwaas_firewall_rules_path = <span class="string">&quot;/fwaas/firewall_rules&quot;</span></span><br><span class="line">    fwaas_firewall_rule_path = <span class="string">&quot;/fwaas/firewall_rules/%s&quot;</span></span><br><span class="line">    fwaas_firewall_policies_path = <span class="string">&quot;/fwaas/firewall_policies&quot;</span></span><br><span class="line">    fwaas_firewall_policy_path = <span class="string">&quot;/fwaas/firewall_policies/%s&quot;</span></span><br><span class="line">    fwaas_firewall_policy_insert_path = \</span><br><span class="line">        <span class="string">&quot;/fwaas/firewall_policies/%s/insert_rule&quot;</span></span><br><span class="line">    fwaas_firewall_policy_remove_path = \</span><br><span class="line">        <span class="string">&quot;/fwaas/firewall_policies/%s/remove_rule&quot;</span></span><br><span class="line">    rbac_policies_path = <span class="string">&quot;/rbac-policies&quot;</span></span><br><span class="line">    rbac_policy_path = <span class="string">&quot;/rbac-policies/%s&quot;</span></span><br><span class="line">    qos_policies_path = <span class="string">&quot;/qos/policies&quot;</span></span><br><span class="line">    qos_policy_path = <span class="string">&quot;/qos/policies/%s&quot;</span></span><br><span class="line">    qos_bandwidth_limit_rules_path = <span class="string">&quot;/qos/policies/%s/bandwidth_limit_rules&quot;</span></span><br><span class="line">    qos_bandwidth_limit_rule_path = <span class="string">&quot;/qos/policies/%s/bandwidth_limit_rules/%s&quot;</span></span><br><span class="line">    qos_dscp_marking_rules_path = <span class="string">&quot;/qos/policies/%s/dscp_marking_rules&quot;</span></span><br><span class="line">    qos_dscp_marking_rule_path = <span class="string">&quot;/qos/policies/%s/dscp_marking_rules/%s&quot;</span></span><br><span class="line">    qos_minimum_bandwidth_rules_path = \</span><br><span class="line">        <span class="string">&quot;/qos/policies/%s/minimum_bandwidth_rules&quot;</span></span><br><span class="line">    qos_minimum_bandwidth_rule_path = \</span><br><span class="line">        <span class="string">&quot;/qos/policies/%s/minimum_bandwidth_rules/%s&quot;</span></span><br><span class="line">    qos_rule_types_path = <span class="string">&quot;/qos/rule-types&quot;</span></span><br><span class="line">    qos_rule_type_path = <span class="string">&quot;/qos/rule-types/%s&quot;</span></span><br><span class="line">    flavors_path = <span class="string">&quot;/flavors&quot;</span></span><br><span class="line">    flavor_path = <span class="string">&quot;/flavors/%s&quot;</span></span><br><span class="line">    service_profiles_path = <span class="string">&quot;/service_profiles&quot;</span></span><br><span class="line">    service_profile_path = <span class="string">&quot;/service_profiles/%s&quot;</span></span><br><span class="line">    flavor_profile_bindings_path = flavor_path + service_profiles_path</span><br><span class="line">    flavor_profile_binding_path = flavor_path + service_profile_path</span><br><span class="line">    availability_zones_path = <span class="string">&quot;/availability_zones&quot;</span></span><br><span class="line">    auto_allocated_topology_path = <span class="string">&quot;/auto-allocated-topology/%s&quot;</span></span><br><span class="line">    BGP_DRINSTANCES = <span class="string">&quot;/bgp-drinstances&quot;</span></span><br><span class="line">    BGP_DRINSTANCE = <span class="string">&quot;/bgp-drinstance/%s&quot;</span></span><br><span class="line">    BGP_DRAGENTS = <span class="string">&quot;/bgp-dragents&quot;</span></span><br><span class="line">    BGP_DRAGENT = <span class="string">&quot;/bgp-dragents/%s&quot;</span></span><br><span class="line">    bgp_speakers_path = <span class="string">&quot;/bgp-speakers&quot;</span></span><br><span class="line">    bgp_speaker_path = <span class="string">&quot;/bgp-speakers/%s&quot;</span></span><br><span class="line">    bgp_peers_path = <span class="string">&quot;/bgp-peers&quot;</span></span><br><span class="line">    bgp_peer_path = <span class="string">&quot;/bgp-peers/%s&quot;</span></span><br><span class="line">    network_ip_availabilities_path = <span class="string">&#x27;/network-ip-availabilities&#x27;</span></span><br><span class="line">    network_ip_availability_path = <span class="string">&#x27;/network-ip-availabilities/%s&#x27;</span></span><br><span class="line">    tags_path = <span class="string">&quot;/%s/%s/tags&quot;</span></span><br><span class="line">    tag_path = <span class="string">&quot;/%s/%s/tags/%s&quot;</span></span><br><span class="line">    trunks_path = <span class="string">&quot;/trunks&quot;</span></span><br><span class="line">    trunk_path = <span class="string">&quot;/trunks/%s&quot;</span></span><br><span class="line">    subports_path = <span class="string">&quot;/trunks/%s/get_subports&quot;</span></span><br><span class="line">    subports_add_path = <span class="string">&quot;/trunks/%s/add_subports&quot;</span></span><br><span class="line">    subports_remove_path = <span class="string">&quot;/trunks/%s/remove_subports&quot;</span></span><br><span class="line">    bgpvpns_path = <span class="string">&quot;/bgpvpn/bgpvpns&quot;</span></span><br><span class="line">    bgpvpn_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s&quot;</span></span><br><span class="line">    bgpvpn_network_associations_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/network_associations&quot;</span></span><br><span class="line">    bgpvpn_network_association_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/network_associations/%s&quot;</span></span><br><span class="line">    bgpvpn_router_associations_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/router_associations&quot;</span></span><br><span class="line">    bgpvpn_router_association_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/router_associations/%s&quot;</span></span><br><span class="line">    bgpvpn_port_associations_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/port_associations&quot;</span></span><br><span class="line">    bgpvpn_port_association_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/port_associations/%s&quot;</span></span><br><span class="line">    network_logs_path = <span class="string">&quot;/log/logs&quot;</span></span><br><span class="line">    network_log_path = <span class="string">&quot;/log/logs/%s&quot;</span></span><br><span class="line">    network_loggables_path = <span class="string">&quot;/log/loggable-resources&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># API has no way to report plurals, so we have to hard code them</span></span><br><span class="line">    EXTED_PLURALS = &#123;<span class="string">&#x27;routers&#x27;</span>: <span class="string">&#x27;router&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;floatingips&#x27;</span>: <span class="string">&#x27;floatingip&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_types&#x27;</span>: <span class="string">&#x27;service_type&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_definitions&#x27;</span>: <span class="string">&#x27;service_definition&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;security_groups&#x27;</span>: <span class="string">&#x27;security_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;security_group_rules&#x27;</span>: <span class="string">&#x27;security_group_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ipsecpolicies&#x27;</span>: <span class="string">&#x27;ipsecpolicy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ikepolicies&#x27;</span>: <span class="string">&#x27;ikepolicy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ipsec_site_connections&#x27;</span>: <span class="string">&#x27;ipsec_site_connection&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;vpnservices&#x27;</span>: <span class="string">&#x27;vpnservice&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;endpoint_groups&#x27;</span>: <span class="string">&#x27;endpoint_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;vips&#x27;</span>: <span class="string">&#x27;vip&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;pools&#x27;</span>: <span class="string">&#x27;pool&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;members&#x27;</span>: <span class="string">&#x27;member&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;health_monitors&#x27;</span>: <span class="string">&#x27;health_monitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;quotas&#x27;</span>: <span class="string">&#x27;quota&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_providers&#x27;</span>: <span class="string">&#x27;service_provider&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewall_rules&#x27;</span>: <span class="string">&#x27;firewall_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewall_policies&#x27;</span>: <span class="string">&#x27;firewall_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewalls&#x27;</span>: <span class="string">&#x27;firewall&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_rules&#x27;</span>: <span class="string">&#x27;fwaas_firewall_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_policies&#x27;</span>: <span class="string">&#x27;fwaas_firewall_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_groups&#x27;</span>: <span class="string">&#x27;fwaas_firewall_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;metering_labels&#x27;</span>: <span class="string">&#x27;metering_label&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;metering_label_rules&#x27;</span>: <span class="string">&#x27;metering_label_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;loadbalancers&#x27;</span>: <span class="string">&#x27;loadbalancer&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;listeners&#x27;</span>: <span class="string">&#x27;listener&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;l7rules&#x27;</span>: <span class="string">&#x27;l7rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;l7policies&#x27;</span>: <span class="string">&#x27;l7policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_l7policies&#x27;</span>: <span class="string">&#x27;lbaas_l7policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_pools&#x27;</span>: <span class="string">&#x27;lbaas_pool&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_healthmonitors&#x27;</span>: <span class="string">&#x27;lbaas_healthmonitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_members&#x27;</span>: <span class="string">&#x27;lbaas_member&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;healthmonitors&#x27;</span>: <span class="string">&#x27;healthmonitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rbac_policies&#x27;</span>: <span class="string">&#x27;rbac_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;address_scopes&#x27;</span>: <span class="string">&#x27;address_scope&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;qos_policies&#x27;</span>: <span class="string">&#x27;qos_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;policies&#x27;</span>: <span class="string">&#x27;policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bandwidth_limit_rules&#x27;</span>: <span class="string">&#x27;bandwidth_limit_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;minimum_bandwidth_rules&#x27;</span>: <span class="string">&#x27;minimum_bandwidth_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rules&#x27;</span>: <span class="string">&#x27;rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;dscp_marking_rules&#x27;</span>: <span class="string">&#x27;dscp_marking_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rule_types&#x27;</span>: <span class="string">&#x27;rule_type&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;flavors&#x27;</span>: <span class="string">&#x27;flavor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgp_speakers&#x27;</span>: <span class="string">&#x27;bgp_speaker&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgp_peers&#x27;</span>: <span class="string">&#x27;bgp_peer&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;network_ip_availabilities&#x27;</span>: <span class="string">&#x27;network_ip_availability&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;trunks&#x27;</span>: <span class="string">&#x27;trunk&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgpvpns&#x27;</span>: <span class="string">&#x27;bgpvpn&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;network_associations&#x27;</span>: <span class="string">&#x27;network_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;router_associations&#x27;</span>: <span class="string">&#x27;router_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_associations&#x27;</span>: <span class="string">&#x27;port_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;flow_classifiers&#x27;</span>: <span class="string">&#x27;flow_classifier&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_pairs&#x27;</span>: <span class="string">&#x27;port_pair&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_pair_groups&#x27;</span>: <span class="string">&#x27;port_pair_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_chains&#x27;</span>: <span class="string">&#x27;port_chain&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_graphs&#x27;</span>: <span class="string">&#x27;service_graph&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;logs&#x27;</span>: <span class="string">&#x27;log&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;loggable_resources&#x27;</span>: <span class="string">&#x27;loggable_resource&#x27;</span>,</span><br><span class="line">                     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ext</span>(<span class="params">self, collection, path, retrieve_all, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for list.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(collection, path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ext</span>(<span class="params">self, path, id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for show.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(path % id, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ext</span>(<span class="params">self, path, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for create.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ext</span>(<span class="params">self, path, id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for update.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(path % id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ext</span>(<span class="params">self, path, id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for delete.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(path % id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_quotas_tenant</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch project info for following quota operation.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_path % <span class="string">&#x27;tenant&#x27;</span>, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_quotas</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch all projects&#x27; quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quotas_path, params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_path % (project_id), params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota_details</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s quota details.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_details_path % (project_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota_default</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s default quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_default_path % (project_id), params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_quota</span>(<span class="params">self, project_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a project&#x27;s quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.quota_path % (project_id), body=body)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_quota</span>(<span class="params">self, project_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified project&#x27;s quota values.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.quota_path % (project_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_extensions</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all extensions on server side.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.extensions_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_extension</span>(<span class="params">self, ext_alias, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain extension.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.extension_path % ext_alias, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ports</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all ports for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ports&#x27;</span>, self.ports_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_port</span>(<span class="params">self, port, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.port_path % (port), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_port</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ports_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_port</span>(<span class="params">self, port, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.port_path % (port), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_port</span>(<span class="params">self, port</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.port_path % (port))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_port_binding</span>(<span class="params">self, port_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.port_bindings_path % port_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_port_binding</span>(<span class="params">self, port_id, host_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.port_binding_path % (port_id, host_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_port_binding</span>(<span class="params">self, port_id, host_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.port_binding_path % (port_id, host_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_port_bindings</span>(<span class="params">self, port_id, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all bindings for a certain port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_bindings&#x27;</span>, self.port_bindings_path % port_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">activate_port_binding</span>(<span class="params">self, port_id, host_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Activates a port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.port_binding_path_activate % (port_id, host_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_networks</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all networks for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;networks&#x27;</span>, self.networks_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_path % (network), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.networks_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network</span>(<span class="params">self, network, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.network_path % (network), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network</span>(<span class="params">self, network</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_path % (network))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_subnets</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all subnets for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;subnets&#x27;</span>, self.subnets_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_subnet</span>(<span class="params">self, subnet, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subnet_path % (subnet), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_subnet</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.subnets_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_subnet</span>(<span class="params">self, subnet, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.subnet_path % (subnet), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_subnet</span>(<span class="params">self, subnet</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.subnet_path % (subnet))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_subnetpools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all subnetpools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;subnetpools&#x27;</span>, self.subnetpools_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_subnetpool</span>(<span class="params">self, subnetpool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subnetpool_path % (subnetpool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_subnetpool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.subnetpools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_subnetpool</span>(<span class="params">self, subnetpool, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.subnetpool_path % (subnetpool),</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_subnetpool</span>(<span class="params">self, subnetpool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.subnetpool_path % (subnetpool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_routers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all routers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;routers&#x27;</span>, self.routers_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_router</span>(<span class="params">self, router, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.router_path % (router), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_router</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.routers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_router</span>(<span class="params">self, router, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.router_path % (router), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_router</span>(<span class="params">self, router</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.router_path % (router))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_address_scopes</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all address scopes for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;address_scopes&#x27;</span>, self.address_scopes_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_address_scope</span>(<span class="params">self, address_scope, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.address_scope_path % (address_scope),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_address_scope</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.address_scopes_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_address_scope</span>(<span class="params">self, address_scope, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.address_scope_path % (address_scope), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_address_scope</span>(<span class="params">self, address_scope</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.address_scope_path % (address_scope))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_interface_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds an internal network interface to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/add_router_interface&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_interface_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes an internal network interface from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) +</span><br><span class="line">                        <span class="string">&quot;/remove_router_interface&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_extra_routes_to_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds extra routes to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/add_extraroutes&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_extra_routes_from_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes extra routes from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/remove_extraroutes&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_gateway_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds an external network gateway to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router),</span><br><span class="line">                        body=&#123;<span class="string">&#x27;router&#x27;</span>: &#123;<span class="string">&#x27;external_gateway_info&#x27;</span>: body&#125;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_gateway_router</span>(<span class="params">self, router</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes an external network gateway from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router),</span><br><span class="line">                        body=&#123;<span class="string">&#x27;router&#x27;</span>: &#123;<span class="string">&#x27;external_gateway_info&#x27;</span>: &#123;&#125;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_floatingips</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all floatingips for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;floatingips&#x27;</span>, self.floatingips_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_floatingip</span>(<span class="params">self, floatingip, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.floatingip_path % (floatingip), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_floatingip</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.floatingips_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_floatingip</span>(<span class="params">self, floatingip, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.floatingip_path % (floatingip),</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_floatingip</span>(<span class="params">self, floatingip</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.floatingip_path % (floatingip))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_security_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.security_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_security_group</span>(<span class="params">self, security_group, body=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                              revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.security_group_path %</span><br><span class="line">                                     security_group, body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_security_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all security groups for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;security_groups&#x27;</span>, self.security_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_security_group</span>(<span class="params">self, security_group, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.security_group_path % (security_group),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_security_group</span>(<span class="params">self, security_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.security_group_path % (security_group))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_security_group_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.security_group_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_security_group_rule</span>(<span class="params">self, security_group_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.security_group_rule_path %</span><br><span class="line">                           (security_group_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_security_group_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all security group rules for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;security_group_rules&#x27;</span>,</span><br><span class="line">                         self.security_group_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_security_group_rule</span>(<span class="params">self, security_group_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.security_group_rule_path % (security_group_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_endpoint_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all VPN endpoint groups for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;endpoint_groups&#x27;</span>, self.endpoint_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_endpoint_group</span>(<span class="params">self, endpointgroup, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a specific VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.endpoint_group_path % endpointgroup,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_endpoint_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.endpoint_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_endpoint_group</span>(<span class="params">self, endpoint_group, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.endpoint_group_path % endpoint_group, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_endpoint_group</span>(<span class="params">self, endpoint_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.endpoint_group_path % endpoint_group)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_vpnservices</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured VPN services for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;vpnservices&#x27;</span>, self.vpnservices_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_vpnservice</span>(<span class="params">self, vpnservice, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.vpnservice_path % (vpnservice), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_vpnservice</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.vpnservices_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_vpnservice</span>(<span class="params">self, vpnservice, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.vpnservice_path % (vpnservice), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_vpnservice</span>(<span class="params">self, vpnservice</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.vpnservice_path % (vpnservice))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ipsec_site_connections</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches all configured IPsecSiteConnections for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ipsec_site_connections&#x27;</span>,</span><br><span class="line">                         self.ipsec_site_connections_path,</span><br><span class="line">                         retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.ipsec_site_connection_path % (ipsecsite_conn), params=_params</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ipsec_site_connection</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ipsec_site_connections_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.ipsec_site_connection_path % (ipsecsite_conn), body=body</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ipsec_site_connection_path % (ipsecsite_conn))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ikepolicies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured IKEPolicies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ikepolicies&#x27;</span>, self.ikepolicies_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ikepolicy</span>(<span class="params">self, ikepolicy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.ikepolicy_path % (ikepolicy), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ikepolicy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ikepolicies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ikepolicy</span>(<span class="params">self, ikepolicy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.ikepolicy_path % (ikepolicy), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ikepolicy</span>(<span class="params">self, ikepolicy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ikepolicy_path % (ikepolicy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ipsecpolicies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured IPsecPolicies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ipsecpolicies&#x27;</span>,</span><br><span class="line">                         self.ipsecpolicies_path,</span><br><span class="line">                         retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ipsecpolicy</span>(<span class="params">self, ipsecpolicy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.ipsecpolicy_path % (ipsecpolicy), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ipsecpolicy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ipsecpolicies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ipsecpolicy</span>(<span class="params">self, ipsecpolicy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.ipsecpolicy_path % (ipsecpolicy), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ipsecpolicy</span>(<span class="params">self, ipsecpolicy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ipsecpolicy_path % (ipsecpolicy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_loadbalancers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all loadbalancers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loadbalancers&#x27;</span>, self.lbaas_loadbalancers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path % (lbaas_loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_loadbalancer</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_loadbalancers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_loadbalancer_path % (lbaas_loadbalancer),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_loadbalancer_path %</span><br><span class="line">                           (lbaas_loadbalancer))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_loadbalancer_stats</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves stats for a certain load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path_stats % (loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_loadbalancer_status</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves status for a certain load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path_status % (loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_listeners</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_listeners for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;listeners&#x27;</span>, self.lbaas_listeners_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_listener</span>(<span class="params">self, lbaas_listener, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_listener_path % (lbaas_listener),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_listener</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_listeners_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_listener</span>(<span class="params">self, lbaas_listener, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_listener_path % (lbaas_listener),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_listener</span>(<span class="params">self, lbaas_listener</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_listener_path % (lbaas_listener))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_l7policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all L7 policies for a listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;l7policies&#x27;</span>, self.lbaas_l7policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_l7policy</span>(<span class="params">self, l7policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain listener&#x27;s L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_l7policy_path % l7policy,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_l7policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates L7 policy for a certain listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_l7policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_l7policy</span>(<span class="params">self, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_l7policy_path % l7policy,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_l7policy</span>(<span class="params">self, l7policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_l7policy_path % l7policy)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_l7rules</span>(<span class="params">self, l7policy, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all rules for L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rules&#x27;</span>, self.lbaas_l7rules_path % l7policy,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain L7 policy&#x27;s rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_l7rule_path % (l7policy, l7rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_l7rule</span>(<span class="params">self, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates rule for a certain L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_l7rules_path % l7policy, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates L7 rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_l7rule_path % (l7policy, l7rule),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified L7 rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_l7rule_path % (l7policy, l7rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_pools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_pools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;pools&#x27;</span>, self.lbaas_pools_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_pool</span>(<span class="params">self, lbaas_pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_pool_path % (lbaas_pool),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_pool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_pools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_pool</span>(<span class="params">self, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_pool_path % (lbaas_pool),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_pool</span>(<span class="params">self, lbaas_pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_pool_path % (lbaas_pool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_healthmonitors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_healthmonitors for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;healthmonitors&#x27;</span>, self.lbaas_healthmonitors_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_healthmonitor_path % (lbaas_healthmonitor),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_healthmonitor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_healthmonitors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_healthmonitor_path % (lbaas_healthmonitor),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_healthmonitor_path %</span><br><span class="line">                           (lbaas_healthmonitor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_loadbalancers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_loadbalancers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loadbalancers&#x27;</span>, self.lbaas_loadbalancers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_members</span>(<span class="params">self, lbaas_pool, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_members for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;members&#x27;</span>, self.lbaas_members_path % lbaas_pool,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_member_path % (lbaas_pool, lbaas_member),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_member</span>(<span class="params">self, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_members_path % lbaas_pool, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_member_path % (lbaas_pool, lbaas_member),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_member_path % (lbaas_pool, lbaas_member))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_vips</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer vips for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;vips&#x27;</span>, self.vips_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_vip</span>(<span class="params">self, vip, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.vip_path % (vip), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_vip</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.vips_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_vip</span>(<span class="params">self, vip, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.vip_path % (vip), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_vip</span>(<span class="params">self, vip</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.vip_path % (vip))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_pools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer pools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;pools&#x27;</span>, self.pools_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_pool</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.pool_path % (pool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_pool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.pools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_pool</span>(<span class="params">self, pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.pool_path % (pool), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_pool</span>(<span class="params">self, pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.pool_path % (pool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_pool_stats</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves stats for a certain load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.pool_path_stats % (pool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_members</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer members for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;members&#x27;</span>, self.members_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_member</span>(<span class="params">self, member, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.member_path % (member), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_member</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.members_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_member</span>(<span class="params">self, member, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.member_path % (member), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_member</span>(<span class="params">self, member</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.member_path % (member))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_health_monitors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer health monitors for a project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;health_monitors&#x27;</span>, self.health_monitors_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_health_monitor</span>(<span class="params">self, health_monitor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.health_monitor_path % (health_monitor),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_health_monitor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.health_monitors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_health_monitor</span>(<span class="params">self, health_monitor, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.health_monitor_path % (health_monitor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_health_monitor</span>(<span class="params">self, health_monitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.health_monitor_path % (health_monitor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">associate_health_monitor</span>(<span class="params">self, pool, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Associate  specified load balancer health monitor and pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.associate_pool_health_monitors_path % (pool),</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disassociate_health_monitor</span>(<span class="params">self, pool, health_monitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disassociate specified load balancer health monitor and pool.&quot;&quot;&quot;</span></span><br><span class="line">        path = (self.disassociate_pool_health_monitors_path %</span><br><span class="line">                &#123;<span class="string">&#x27;pool&#x27;</span>: pool, <span class="string">&#x27;health_monitor&#x27;</span>: health_monitor&#125;)</span><br><span class="line">        <span class="keyword">return</span> self.delete(path)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_qos_queue</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_queues_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_queues</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all queues for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_queues_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_qos_queue</span>(<span class="params">self, queue, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_queue_path % (queue),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_qos_queue</span>(<span class="params">self, queue</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_queue_path % (queue))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_agents</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches agents.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.agents_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_agent</span>(<span class="params">self, agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.agent_path % (agent), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_agent</span>(<span class="params">self, agent, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.agent_path % (agent), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_agent</span>(<span class="params">self, agent</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.agent_path % (agent))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_gateways</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieve network gateways.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_gateways_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_gateway</span>(<span class="params">self, gateway_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_gateway_path % gateway_id, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network_gateway</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.network_gateways_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.network_gateway_path % gateway_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network_gateway</span>(<span class="params">self, gateway_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_gateway_path % gateway_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Connect a network gateway to the specified network.&quot;&quot;&quot;</span></span><br><span class="line">        base_uri = self.network_gateway_path % gateway_id</span><br><span class="line">        <span class="keyword">return</span> self.put(<span class="string">&quot;%s/connect_network&quot;</span> % base_uri, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disconnect_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disconnect a network from the specified gateway.&quot;&quot;&quot;</span></span><br><span class="line">        base_uri = self.network_gateway_path % gateway_id</span><br><span class="line">        <span class="keyword">return</span> self.put(<span class="string">&quot;%s/disconnect_network&quot;</span> % base_uri, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_gateway_devices</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieve gateway devices.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.gateway_devices_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_gateway_device</span>(<span class="params">self, gateway_device_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.gateway_device_path % gateway_device_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_gateway_device</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.gateway_devices_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_gateway_device</span>(<span class="params">self, gateway_device_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a new gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.gateway_device_path % gateway_device_id,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_gateway_device</span>(<span class="params">self, gateway_device_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.gateway_device_path % gateway_device_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dhcp_agent_hosting_networks</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of dhcp agents hosting a network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.network_path + self.DHCP_AGENTS) % network,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_networks_on_dhcp_agent</span>(<span class="params">self, dhcp_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of networks hosted on a DHCP agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.DHCP_NETS) % dhcp_agent,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_network_to_dhcp_agent</span>(<span class="params">self, dhcp_agent, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a network to dhcp agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.DHCP_NETS) % dhcp_agent,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_network_from_dhcp_agent</span>(<span class="params">self, dhcp_agent, network_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a network from dhcp agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.DHCP_NETS + <span class="string">&quot;/%s&quot;</span>) % (</span><br><span class="line">            dhcp_agent, network_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_l3_agent_hosting_routers</span>(<span class="params">self, router, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of L3 agents hosting a router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.router_path + self.L3_AGENTS) % router,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_routers_on_l3_agent</span>(<span class="params">self, l3_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of routers hosted on an L3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.L3_ROUTERS) % l3_agent,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_router_to_l3_agent</span>(<span class="params">self, l3_agent, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a router to L3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.L3_ROUTERS) % l3_agent,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dragents_hosting_bgp_speaker</span>(<span class="params">self, bgp_speaker, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of Dynamic Routing agents hosting a BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.bgp_speaker_path + self.BGP_DRAGENTS)</span><br><span class="line">                        % bgp_speaker, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_bgp_speaker_to_dragent</span>(<span class="params">self, bgp_dragent, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a BGP speaker to Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.BGP_DRINSTANCES)</span><br><span class="line">                         % bgp_dragent, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_bgp_speaker_from_dragent</span>(<span class="params">self, bgp_dragent, bgpspeaker_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a BGP speaker from Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.BGP_DRINSTANCES + <span class="string">&quot;/%s&quot;</span>)</span><br><span class="line">                           % (bgp_dragent, bgpspeaker_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_speaker_on_dragent</span>(<span class="params">self, bgp_dragent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of BGP speakers hosted by Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.BGP_DRINSTANCES)</span><br><span class="line">                        % bgp_dragent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewall_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall rules for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_rules&#x27;</span>, self.firewall_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall_rule</span>(<span class="params">self, firewall_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_rule_path % (firewall_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewall_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall_rule</span>(<span class="params">self, firewall_rule, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_rule_path % (firewall_rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall_rule</span>(<span class="params">self, firewall_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_rule_path % (firewall_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewall_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_policies&#x27;</span>, self.firewall_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall_policy</span>(<span class="params">self, firewall_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_policy_path % (firewall_policy),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewall_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall_policy</span>(<span class="params">self, firewall_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_policy_path % (firewall_policy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">firewall_policy_insert_rule</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Inserts specified rule into firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_insert_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">firewall_policy_remove_rule</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified rule from firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_remove_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewalls</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewalls for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewalls&#x27;</span>, self.firewalls_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall</span>(<span class="params">self, firewall, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_path % (firewall), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewalls_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall</span>(<span class="params">self, firewall, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_path % (firewall), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall</span>(<span class="params">self, firewall</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_path % (firewall))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall groups for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_groups&#x27;</span>, self.fwaas_firewall_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_group</span>(<span class="params">self, fwg, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_group_path % (fwg), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_group</span>(<span class="params">self, fwg, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_group_path % (fwg), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_group</span>(<span class="params">self, fwg</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_group_path % (fwg))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall rules for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_rules&#x27;</span>, self.fwaas_firewall_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_rule_path % (firewall_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_rule_path % (firewall_rule),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_rule_path % (firewall_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall policies for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_policies&#x27;</span>,</span><br><span class="line">                         self.fwaas_firewall_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_policy_path % (firewall_policy),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_policy_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_policy_path % (firewall_policy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert_rule_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Inserts specified rule into firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.fwaas_firewall_policy_insert_path %</span><br><span class="line">                        (firewall_policy)), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_rule_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified rule from firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.fwaas_firewall_policy_remove_path %</span><br><span class="line">                        (firewall_policy)), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_router_from_l3_agent</span>(<span class="params">self, l3_agent, router_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a router from l3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.L3_ROUTERS + <span class="string">&quot;/%s&quot;</span>) % (</span><br><span class="line">            l3_agent, router_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_lbaas_agent_hosting_pool</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a loadbalancer agent hosting a pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.pool_path + self.LOADBALANCER_AGENT) % pool,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_pools_on_lbaas_agent</span>(<span class="params">self, lbaas_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of pools hosted by the loadbalancer agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.LOADBALANCER_POOLS) %</span><br><span class="line">                        lbaas_agent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_lbaas_agent_hosting_loadbalancer</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a loadbalancer agent hosting a loadbalancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.lbaas_loadbalancer_path +</span><br><span class="line">                         self.LOADBALANCER_HOSTING_AGENT) % loadbalancer,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_loadbalancers_on_lbaas_agent</span>(<span class="params">self, lbaas_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of loadbalancers hosted by the loadbalancer agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.AGENT_LOADBALANCERS) %</span><br><span class="line">                        lbaas_agent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_service_providers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches service providers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_providers&#x27;</span>, self.service_providers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_metering_label</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.metering_labels_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_metering_label</span>(<span class="params">self, label</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.metering_label_path % (label))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_metering_labels</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all metering labels for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;metering_labels&#x27;</span>, self.metering_labels_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_metering_label</span>(<span class="params">self, metering_label, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.metering_label_path %</span><br><span class="line">                        (metering_label), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_metering_label_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.metering_label_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_metering_label_rule</span>(<span class="params">self, rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.metering_label_rule_path % (rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_metering_label_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all metering label rules for a label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;metering_label_rules&#x27;</span>,</span><br><span class="line">                         self.metering_label_rules_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_metering_label_rule</span>(<span class="params">self, metering_label_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.metering_label_rule_path %</span><br><span class="line">                        (metering_label_rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_rbac_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.rbac_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_rbac_policy</span>(<span class="params">self, rbac_policy_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.rbac_policy_path % rbac_policy_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_rbac_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all RBAC policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rbac_policies&#x27;</span>, self.rbac_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_rbac_policy</span>(<span class="params">self, rbac_policy_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.rbac_policy_path % rbac_policy_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_rbac_policy</span>(<span class="params">self, rbac_policy_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.rbac_policy_path % rbac_policy_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all qos policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;policies&#x27;</span>, self.qos_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_qos_policy</span>(<span class="params">self, qos_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_policy_path % qos_policy,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_qos_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_qos_policy</span>(<span class="params">self, qos_policy, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.qos_policy_path % qos_policy,</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_qos_policy</span>(<span class="params">self, qos_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_policy_path % qos_policy)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_rule_types</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;List available qos rule types.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rule_types&#x27;</span>, self.qos_rule_types_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bandwidth_limit_rules</span>(<span class="params">self, policy_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                   retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all bandwidth limit rules for the given policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bandwidth_limit_rules&#x27;</span>,</span><br><span class="line">                         self.qos_bandwidth_limit_rules_path % policy_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bandwidth_limit_rule</span>(<span class="params">self, rule, policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                        (policy, rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bandwidth_limit_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_bandwidth_limit_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bandwidth_limit_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bandwidth_limit_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dscp_marking_rules</span>(<span class="params">self, policy_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all DSCP marking rules for the given policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;dscp_marking_rules&#x27;</span>,</span><br><span class="line">                         self.qos_dscp_marking_rules_path % policy_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_dscp_marking_rule</span>(<span class="params">self, rule, policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Shows information of a certain DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_dscp_marking_rule_path %</span><br><span class="line">                        (policy, rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_dscp_marking_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_dscp_marking_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_dscp_marking_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_dscp_marking_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_dscp_marking_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_dscp_marking_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_minimum_bandwidth_rules</span>(<span class="params">self, policy_id, retrieve_all=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all minimum bandwidth rules for the given policy.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;minimum_bandwidth_rules&#x27;</span>,</span><br><span class="line">                         self.qos_minimum_bandwidth_rules_path %</span><br><span class="line">                         policy_id, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_minimum_bandwidth_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_minimum_bandwidth_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_flavor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.flavors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_flavor</span>(<span class="params">self, flavor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.flavor_path % (flavor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_flavors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Neutron service flavors for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;flavors&#x27;</span>, self.flavors_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_flavor</span>(<span class="params">self, flavor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.flavor_path % (flavor), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_flavor</span>(<span class="params">self, flavor, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.flavor_path % (flavor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">associate_flavor</span>(<span class="params">self, flavor, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Associate a Neutron service flavor with a profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.flavor_profile_bindings_path %</span><br><span class="line">                         (flavor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disassociate_flavor</span>(<span class="params">self, flavor, flavor_profile</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disassociate a Neutron service flavor with a profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.flavor_profile_binding_path %</span><br><span class="line">                           (flavor, flavor_profile))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_service_profile</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.service_profiles_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_service_profile</span>(<span class="params">self, flavor_profile</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.service_profile_path % (flavor_profile))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_service_profiles</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Neutron service flavor profiles.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_profiles&#x27;</span>, self.service_profiles_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_service_profile</span>(<span class="params">self, flavor_profile, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.service_profile_path % (flavor_profile),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_service_profile</span>(<span class="params">self, service_profile, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Neutron service profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.service_profile_path % (service_profile),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_availability_zones</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all availability zones.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;availability_zones&#x27;</span>, self.availability_zones_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_auto_allocated_topology</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information about a project&#x27;s auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.auto_allocated_topology_path % project_id,</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_auto_allocated_topology</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a project&#x27;s auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.auto_allocated_topology_path % project_id,</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_auto_allocated_topology_requirements</span>(<span class="params">self, project_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Validate requirements for getting an auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get_auto_allocated_topology(project_id, fields=[<span class="string">&#x27;dry-run&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_speakers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP speakers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bgp_speakers&#x27;</span>, self.bgp_speakers_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgp_speaker</span>(<span class="params">self, bgp_speaker_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_speaker_path % (bgp_speaker_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgp_speaker</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgp_speakers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgp_speaker</span>(<span class="params">self, bgp_speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgp_speaker_path % bgp_speaker_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgp_speaker</span>(<span class="params">self, speaker_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgp_speaker_path % (speaker_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_peer_to_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a peer to BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/add_bgp_peer&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_peer_from_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a peer from BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/remove_bgp_peer&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_network_to_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a network to BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/add_gateway_network&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_network_from_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a network from BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/remove_gateway_network&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_route_advertised_from_bgp_speaker</span>(<span class="params">self, speaker_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all routes advertised by BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/get_advertised_routes&quot;</span>, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_peers</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP peers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_peers_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgp_peer</span>(<span class="params">self, peer_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_peer_path % peer_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgp_peer</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgp_peers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgp_peer</span>(<span class="params">self, bgp_peer_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgp_peer_path % bgp_peer_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgp_peer</span>(<span class="params">self, peer_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgp_peer_path % peer_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_ip_availabilities</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches IP availability information for all networks&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;network_ip_availabilities&#x27;</span>,</span><br><span class="line">                         self.network_ip_availabilities_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_ip_availability</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches IP availability information for a specified network&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_ip_availability_path % (network),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_tag</span>(<span class="params">self, resource_type, resource_id, tag, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Add a tag on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.tag_path % (resource_type, resource_id, tag))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replace_tag</span>(<span class="params">self, resource_type, resource_id, body, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Replace tags on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.tags_path % (resource_type, resource_id), body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_tag</span>(<span class="params">self, resource_type, resource_id, tag, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a tag on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.tag_path % (resource_type, resource_id, tag))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_tag_all</span>(<span class="params">self, resource_type, resource_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove all tags on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.tags_path % (resource_type, resource_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_trunk</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.trunks_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_trunk</span>(<span class="params">self, trunk, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.trunk_path % trunk, body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_trunk</span>(<span class="params">self, trunk</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.trunk_path % (trunk))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_trunks</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all trunk ports.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;trunks&#x27;</span>, self.trunks_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_trunk</span>(<span class="params">self, trunk, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information for a certain trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.trunk_path % (trunk), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_add_subports</span>(<span class="params">self, trunk, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Add specified subports to the trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.subports_add_path % (trunk), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_remove_subports</span>(<span class="params">self, trunk, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified subports from the trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.subports_remove_path % (trunk), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_get_subports</span>(<span class="params">self, trunk, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all subports attached to given trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subports_path % (trunk), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpns</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP VPNs for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bgpvpns&#x27;</span>, self.bgpvpns_path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn</span>(<span class="params">self, bgpvpn, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgpvpn_path % bgpvpn, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpns_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgpvpn_path % bgpvpn, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn</span>(<span class="params">self, bgpvpn</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgpvpn_path % bgpvpn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_network_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of network associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;network_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_network_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_network_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_router_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of router associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;router_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_router_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_router_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_port_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of port associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_port_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_port_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_pair</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_pairs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_pair</span>(<span class="params">self, port_pair, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_pair_path % port_pair, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_pair</span>(<span class="params">self, port_pair</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_pair_path % (port_pair))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_pairs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Pairs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_pairs&#x27;</span>, self.sfc_port_pairs_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_pair</span>(<span class="params">self, port_pair, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_pair_path % (port_pair), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_pair_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_pair_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_pair_group</span>(<span class="params">self, port_pair_group, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_pair_group_path % port_pair_group,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_pair_group</span>(<span class="params">self, port_pair_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_pair_group_path % (port_pair_group))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_pair_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Pair Groups.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_pair_groups&#x27;</span>, self.sfc_port_pair_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_pair_group</span>(<span class="params">self, port_pair_group, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_pair_group_path % (port_pair_group),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_chain</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_chains_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_chain</span>(<span class="params">self, port_chain, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_chain_path % port_chain, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_chain</span>(<span class="params">self, port_chain</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_chain_path % (port_chain))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_chains</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Chains.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_chains&#x27;</span>, self.sfc_port_chains_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_chain</span>(<span class="params">self, port_chain, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_chain_path % (port_chain),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_flow_classifier</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_flow_classifiers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_flow_classifier</span>(<span class="params">self, flow_classifier, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_flow_classifier_path % flow_classifier,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_flow_classifier</span>(<span class="params">self, flow_classifier</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_flow_classifier_path % (flow_classifier))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_flow_classifiers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Flow Classifiers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;flow_classifiers&#x27;</span>, self.sfc_flow_classifiers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_flow_classifier</span>(<span class="params">self, flow_classifier, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_flow_classifier_path % (flow_classifier),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_service_graph</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create the specified Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_service_graphs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_service_graph</span>(<span class="params">self, service_graph, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_service_graph_path % service_graph,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_service_graph</span>(<span class="params">self, service_graph</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_service_graph_path % service_graph)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_service_graphs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Service Graphs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_graphs&#x27;</span>, self.sfc_service_graphs_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_service_graph</span>(<span class="params">self, service_graph, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_service_graph_path % service_graph,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network_log</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.network_logs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network_log</span>(<span class="params">self, net_log</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_log_path % net_log)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_logs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all network logs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(</span><br><span class="line">            <span class="string">&#x27;logs&#x27;</span>, self.network_logs_path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_log</span>(<span class="params">self, net_log, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information for a certain network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_log_path % net_log, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network_log</span>(<span class="params">self, net_log, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.network_log_path % net_log, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_loggable_resources</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of supported resource types for network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loggable_resources&#x27;</span>, self.network_loggables_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onboard_network_subnets</span>(<span class="params">self, subnetpool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Onboard the specified network&#x27;s subnets into a subnet pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.onboard_network_subnets_path % (subnetpool),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Initialize a new client for the Neutron v2.0 API.&quot;&quot;&quot;</span></span><br><span class="line">        super(Client, self).__init__(**kwargs)</span><br><span class="line">        self._register_extensions(self.version)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_resource</span>(<span class="params">self, path, **kwargs</span>):</span></span><br><span class="line">        revision_number = kwargs.pop(<span class="string">&#x27;revision_number&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> revision_number:</span><br><span class="line">            headers = kwargs.setdefault(<span class="string">&#x27;headers&#x27;</span>, &#123;&#125;)</span><br><span class="line">            headers[<span class="string">&#x27;If-Match&#x27;</span>] = <span class="string">&#x27;revision_number=%s&#x27;</span> % revision_number</span><br><span class="line">        <span class="keyword">return</span> self.put(path, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_show</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.show_ext(path, obj, **_params)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.show_ext(path % parent_id, obj, **_params)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;show_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_list</span>(<span class="params">self, resource_plural, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">retrieve_all=True, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.list_ext(resource_plural, path,</span><br><span class="line">                                 retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">parent_id, retrieve_all=True, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.list_ext(resource_plural, path % parent_id,</span><br><span class="line">                                 retrieve_all, **_params)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;list_%s&quot;</span> % resource_plural, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_create</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.create_ext(path, body)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">parent_id, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.create_ext(path % parent_id, body)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;create_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_delete</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.delete_ext(path, obj)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.delete_ext(path % parent_id, obj)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;delete_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_update</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.update_ext(path, obj, body)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.update_ext(path % parent_id, obj, body)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;update_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_extend_client_with_module</span>(<span class="params">self, module, version</span>):</span></span><br><span class="line">        classes = inspect.getmembers(module, inspect.isclass)</span><br><span class="line">        <span class="keyword">for</span> cls_name, cls <span class="keyword">in</span> classes:</span><br><span class="line">            <span class="keyword">if</span> hasattr(cls, <span class="string">&#x27;versions&#x27;</span>):</span><br><span class="line">                <span class="keyword">if</span> version <span class="keyword">not</span> <span class="keyword">in</span> cls.versions:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            parent_resource = getattr(cls, <span class="string">&#x27;parent_resource&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> issubclass(cls, client_extension.ClientExtensionList):</span><br><span class="line">                self.extend_list(cls.resource_plural, cls.object_path,</span><br><span class="line">                                 parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionCreate):</span><br><span class="line">                self.extend_create(cls.resource, cls.object_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionUpdate):</span><br><span class="line">                self.extend_update(cls.resource, cls.resource_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionDelete):</span><br><span class="line">                self.extend_delete(cls.resource, cls.resource_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionShow):</span><br><span class="line">                self.extend_show(cls.resource, cls.resource_path,</span><br><span class="line">                                 parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.NeutronClientExtension):</span><br><span class="line">                setattr(self, <span class="string">&quot;%s_path&quot;</span> % cls.resource_plural,</span><br><span class="line">                        cls.object_path)</span><br><span class="line">                setattr(self, <span class="string">&quot;%s_path&quot;</span> % cls.resource, cls.resource_path)</span><br><span class="line">                self.EXTED_PLURALS.update(&#123;cls.resource_plural: cls.resource&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_register_extensions</span>(<span class="params">self, version</span>):</span></span><br><span class="line">        <span class="keyword">for</span> name, module <span class="keyword">in</span> itertools.chain(</span><br><span class="line">                client_extension._discover_via_entry_points()):</span><br><span class="line">            self._extend_client_with_module(module, version)</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://docs.openstack.org/python-neutronclient/latest/reference/index.html">OpenStack API Documentation：neutronclient Python API</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;研发环境&quot;&gt;&lt;a href=&quot;#研发环境&quot; class=&quot;headerlink&quot; title=&quot;研发环境&quot;&gt;&lt;/a&gt;研发环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;python：3.6.8&lt;/li&gt;
&lt;li&gt;python-neutronclient   7.1.0&lt;/li&gt;
</summary>
      
    
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/categories/OpenStack/"/>
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/tags/OpenStack/"/>
    
    <category term="CLI" scheme="https://renyb2.github.io/tags/CLI/"/>
    
  </entry>
  
</feed>
