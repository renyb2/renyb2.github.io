<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>任翌博的个人博客</title>
  
  <subtitle>Welcome to my blog...</subtitle>
  <link href="https://renyb2.github.io/atom.xml" rel="self"/>
  
  <link href="https://renyb2.github.io/"/>
  <updated>2021-10-20T03:20:41.118Z</updated>
  <id>https://renyb2.github.io/</id>
  
  <author>
    <name>任翌博</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>存储测试：性能基准测试</title>
    <link href="https://renyb2.github.io/2021/10/19/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    <id>https://renyb2.github.io/2021/10/19/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</id>
    <published>2021-10-19T10:46:51.000Z</published>
    <updated>2021-10-20T03:20:41.118Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主流测试软件介绍"><a href="#主流测试软件介绍" class="headerlink" title="主流测试软件介绍"></a>主流测试软件介绍</h2><p>目前业内主流存储I/O测试软件有以下几款：</p><ul><li><strong>FIO：</strong>是一个开源压力测试工具，由Linux内核存储团队研发，主要用来测试硬盘io性能。这个工具的可定制性非常强，可以根据测试者的想法进行各种混合io测试，它支持13种不同类型io引擎（libaio、sync、mmap、posixaio、network等等）。它可以测试块设备或文件，可以通过多线程或进程模拟各种io操作，可以测试统计iops、带宽和时延等性能。我们主要使用fio工具进行存储性能测试。源码：<a href="https://github.com/axboe/fio">Github FIO</a></li><li><strong>vdbench：</strong>是一个 I/O 工作负载生成器，由Oracle研发，用于验证数据完整性和度量直接附加和网络连接的存储的性能。它是一个免费的工具，容易使用，而且常常用于测试和基准测试。主要使用vdbench测试磁盘和文件系统的读写性能。</li><li><strong>IOmeter：</strong>由Intel开发的一款免费软件，主要用于Windows和Linux平台上对磁盘子系统和网络IO做性能测试。Windows用的相对较多，Linux主要使用FIO和vdbench。</li></ul><blockquote><p><strong>注意：</strong></p><ol><li>存储性能测试时，埋数据使用vdbench比FIO效果好，推荐使用vdbench预埋数据。</li><li>fio测试会对系统的硬盘进行读写，会存在破坏客户数据的风险，因此在生产环境上要谨慎使用，不建议对生产环境的硬盘进行裸盘读写测试。</li></ol></blockquote><h2 id="主要测试指标"><a href="#主要测试指标" class="headerlink" title="主要测试指标"></a>主要测试指标</h2><p>主要观测指标为 <code>IOPS</code> 、<code>BW（带宽）</code>、<code>Latency（时延）</code>，其中：</p><ul><li>4K小块场景主要参考指标为IOPS，小块容易测出IOPS瓶颈。</li><li>1M大块场景主要参考指标为BW，大块容易测出带宽瓶颈。</li></ul><h2 id="主要测试场景"><a href="#主要测试场景" class="headerlink" title="主要测试场景"></a>主要测试场景</h2><p>主要测试在顺序和随机读写方式下，4K和1M块大小读写性能。各场景变参如下：</p><ul><li>读写方式：顺序读写、随机读写</li><li>读写比例：纯读、纯写、7:3混合读写（70%读，30%写）</li><li>块大小：4K、1M</li></ul><h2 id="FIO"><a href="#FIO" class="headerlink" title="FIO"></a>FIO</h2><h3 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y fio</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>可以使用 <code>fio -help</code> 查看每个参数，具体的参数左右可以在官网查看how to文档，如下为几个常见的参数描述</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">filename=/dev/emcpowerb　支持文件系统或者裸设备，-filename=/dev/sda2或-filename=/dev/sdb</span><br><span class="line">direct=1                 测试过程绕过机器自带的buffer，使测试结果更真实</span><br><span class="line">rw=randwread             测试随机读的I/O</span><br><span class="line">rw=randwrite             测试随机写的I/O</span><br><span class="line">rw=randrw                测试随机混合写和读的I/O</span><br><span class="line">rw=read                  测试顺序读的I/O</span><br><span class="line">rw=write                 测试顺序写的I/O</span><br><span class="line">rw=rw                    测试顺序混合写和读的I/O</span><br><span class="line">bs=4k                    单次io的块文件大小为4k</span><br><span class="line">bsrange=512-2048         同上，提定数据块的大小范围</span><br><span class="line">size=5g                  本次的测试文件大小为5g，以每次4k的io进行测试</span><br><span class="line">numjobs=30               本次的测试线程为30</span><br><span class="line">runtime=1000             测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止</span><br><span class="line">ioengine=psync           io引擎使用pync方式，如果要使用libaio引擎，需要yum install libaio-devel包</span><br><span class="line">rwmixwrite=30            在混合读写的模式下，写占30%</span><br><span class="line">group_reporting          关于显示结果的，汇总每个进程的信息</span><br><span class="line">此外</span><br><span class="line">lockmem=1g               只使用1g内存进行测试</span><br><span class="line">zero_buffers             用0初始化系统buffer</span><br><span class="line">nrfiles=8                每个进程生成文件的数量</span><br></pre></td></tr></table></figure><h3 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 块设备</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，100%读，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randread -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=rand_100read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，100%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randwrite -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=rand_100write_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%顺序，100%读，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=read -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=sqe_100read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%顺序，100%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=write -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=sqe_100write_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 100%随机，70%读，30%写，4K</span></span><br><span class="line">fio -filename=/dev/vdb -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=100G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 文件系统</span></span></span><br><span class="line">fio -filename=/var/lib/mysql/storage_test -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=20G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k_file</span><br></pre></td></tr></table></figure><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql-5 ~]# fio -filename=/var/lib/mysql/storage_test -direct=1 -iodepth 1 -thread -rw=randrw -rwmixread=70 -ioengine=libaio -bs=4k -size=20G -numjobs=50 -runtime=180 -group_reporting -name=randrw_70read_4k_file</span><br><span class="line">randrw_70read_4k: (g=0): rw=randrw, bs=(R) 8192B-8192B, (W) 8192B-8192B, (T) 8192B-8192B, ioengine=libaio, iodepth=1</span><br><span class="line">...</span><br><span class="line">fio-3.7</span><br><span class="line">Starting 50 threads</span><br><span class="line">randrw_70read_4k: Laying out IO file (1 file / 20480MiB)</span><br><span class="line">Jobs: 50 (f=50): [m(50)][100.0%][r=34.0MiB/s,w=14.6MiB/s][r=4479,w=1870 IOPS][eta 00m:00s]</span><br><span class="line">randrw_70read_4k: (groupid=0, jobs=50): err= 0: pid=20734: Tue Oct 19 08:23:18 2021</span><br><span class="line">   read: IOPS=1220, BW=9766KiB/s (10.0MB/s)(1717MiB/180059msec)</span><br><span class="line">    slat (usec): min=4, max=541, avg=12.04, stdev= 6.41</span><br><span class="line">    clat (usec): min=285, max=373689, avg=12109.21, stdev=37790.30</span><br><span class="line">     lat (usec): min=295, max=373699, avg=12122.49, stdev=37790.40</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[   537],  5.00th=[   693], 10.00th=[   783], 20.00th=[   898],</span><br><span class="line">     | 30.00th=[   996], 40.00th=[  1090], 50.00th=[  1172], 60.00th=[  1287],</span><br><span class="line">     | 70.00th=[  1450], 80.00th=[  1713], 90.00th=[  2933], 95.00th=[121111],</span><br><span class="line">     | 99.00th=[125305], 99.50th=[242222], 99.90th=[246416], 99.95th=[246416],</span><br><span class="line">     | 99.99th=[371196]</span><br><span class="line">   bw (  KiB/s): min=   15, max= 1152, per=2.01%, avg=196.73, stdev=169.43, samples=17870</span><br><span class="line">   iops        : min=    1, max=  144, avg=24.54, stdev=21.18, samples=17870</span><br><span class="line">  write: IOPS=524, BW=4193KiB/s (4293kB/s)(737MiB/180059msec)</span><br><span class="line">    slat (usec): min=4, max=411, avg=12.92, stdev= 7.01</span><br><span class="line">    clat (usec): min=937, max=375705, avg=67132.23, stdev=69781.33</span><br><span class="line">     lat (usec): min=948, max=375726, avg=67146.41, stdev=69781.43</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[  1516],  5.00th=[  1795], 10.00th=[  1975], 20.00th=[  2278],</span><br><span class="line">     | 30.00th=[  2573], 40.00th=[  3064], 50.00th=[ 77071], 60.00th=[115868],</span><br><span class="line">     | 70.00th=[121111], 80.00th=[123208], 90.00th=[125305], 95.00th=[127402],</span><br><span class="line">     | 99.00th=[248513], 99.50th=[250610], 99.90th=[362808], 99.95th=[371196],</span><br><span class="line">     | 99.99th=[375391]</span><br><span class="line">   bw (  KiB/s): min=   15, max=  528, per=2.01%, avg=84.17, stdev=71.04, samples=17918</span><br><span class="line">   iops        : min=    1, max=   66, avg=10.47, stdev= 8.88, samples=17918</span><br><span class="line">  lat (usec)   : 500=0.37%, 750=5.30%, 1000=15.88%</span><br><span class="line">  lat (msec)   : 2=41.46%, 4=14.49%, 10=1.38%, 20=0.23%, 50=0.01%</span><br><span class="line">  lat (msec)   : 100=0.77%, 250=19.94%, 500=0.18%</span><br><span class="line">  cpu          : usr=0.03%, sys=0.09%, ctx=317534, majf=0, minf=56</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued rwts: total=219800,94367,0,0 short=0,0,0,0 dropped=0,0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: bw=9766KiB/s (10.0MB/s), 9766KiB/s-9766KiB/s (10.0MB/s-10.0MB/s), io=1717MiB (1801MB), run=180059-180059msec</span><br><span class="line">  WRITE: bw=4193KiB/s (4293kB/s), 4193KiB/s-4193KiB/s (4293kB/s-4293kB/s), io=737MiB (773MB), run=180059-180059msec</span><br><span class="line"></span><br><span class="line">Disk stats (read/write):</span><br><span class="line">  vda: ios=219811/94366, merge=0/5, ticks=2658031/6335969, in_queue=6946443, util=77.28%</span><br></pre></td></tr></table></figure><blockquote><p><strong>测试结果参数解析：</strong></p><p>io：执行了多少M的IO<br>bw：平均IO带宽<br>iops：IOPS<br>slat：提交延迟<br>clat：完成延迟<br>lat：响应时间<br>bw：带宽<br>cpu：利用率<br>IO depths：io队列<br>IO submit：单个IO提交要提交的IO数<br>IO complete：Like the above submit number, but for completions instead.<br>IO issued：The number of read/write requests issued, and how many of them were short.<br>IO latency：IO完延迟的分布</p></blockquote><h2 id="vdbench"><a href="#vdbench" class="headerlink" title="vdbench"></a>vdbench</h2><blockquote><p><strong>注意：</strong></p><ol><li>联机测试时，主节点要与其余节点做免密登录认证</li><li>在联机测试时，客户端的系统时间需保持一致，否则会出现时钟同步告警（this can lead to heartbeat issues）</li><li>客户端的防火墙要关闭(或者设置开放程序指定端口<code>5570</code>、<code>5560</code>访问)</li><li>关闭系统日志服务<code>rsyslog</code>，避免运行时出现其他日志文件打印信息<br>参数文件添加<code>messagescan=no</code>可以过滤掉多余的系统日志</li></ol></blockquote><h3 id="安装流程-1"><a href="#安装流程-1" class="headerlink" title="安装流程"></a>安装流程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装Java</span></span><br><span class="line">yum install -y java-1.8.0-openjdk</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载vdbench资源包</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 途径1：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   链接：https://pan.baidu.com/s/1e9MHXtk6WauxMt1bTKNNrg </span></span><br><span class="line"><span class="meta">#</span><span class="bash">   提取码：shwv</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 途径2：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Oracle官网（需Oracle账户）：https://www.oracle.com/downloads/server-storage/vdbench-downloads.html</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压vdbench</span></span><br><span class="line">mkdir vdbench &amp;&amp; mv vdbench50407.zip vdbench &amp;&amp; cd vdbench &amp;&amp; unzip vdbench50407.zip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试vdbench</span></span><br><span class="line">./vdbench -t</span><br></pre></td></tr></table></figure><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><ul><li><strong>预埋数据</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 预埋数据量通常为卷容量的1.2倍</span></span><br><span class="line">sd=sd1,lun=/dev/vdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd1,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,maxdata=120GB,elapse=604800,interval=2</span><br></pre></td></tr></table></figure><ul><li><strong>4M顺序写</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小4M、IO块大小1M、顺序写</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test01,depth=2,width=100,files=100,size=4M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=sequential,fileselect=sequential,operation=write,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure><ul><li><strong>4M顺序读</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小4M、IO块大小1M、顺序读</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test02,depth=2,width=100,files=100,size=4M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=sequential,fileselect=sequential,operation=read,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure><ul><li><strong>8M混合读写</strong><br>目录深度2、单级目录数100、单个目录文件数100、单文件大小8M、IO块大小1M、混合读写（读写比为6:4）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node21</span><br><span class="line">hd=hd2,system=node22</span><br><span class="line">hd=hd3,system=node23</span><br><span class="line">hd=hd4,system=node24</span><br><span class="line">hd=hd5,system=node25</span><br><span class="line">hd=hd6,system=node26</span><br><span class="line">fsd=fsd1,anchor=/client/test03,depth=2,width=100,files=100,size=8M,shared=yes</span><br><span class="line">fwd=format,threads=24,xfersize=1m</span><br><span class="line">fwd=default,xfersize=1m,fileio=random,fileselect=random,rdpct=60,threads=24</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd1,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd1,host=hd3</span><br><span class="line">fwd=fwd4,fsd=fsd1,host=hd4</span><br><span class="line">fwd=fwd5,fsd=fsd1,host=hd5</span><br><span class="line">fwd=fwd6,fsd=fsd1,host=hd6</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=restart,elapsed=600,interval=1</span><br></pre></td></tr></table></figure><h3 id="参数说明-1"><a href="#参数说明-1" class="headerlink" title="参数说明"></a>参数说明</h3><blockquote><p>vdbench可用于文件系统及块设备基准性能测试，以下主要介绍文件系统及块存储的常用测试参数<br>vdbench所有测试参数都定义到一个参数文件内，在运行时按照顺序被读取执行相应操作，在参数文件定义时需要执行顺序进行定义</p></blockquote><h4 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h4><p> <strong>文件系统参数文件定义顺序为：HD、FSD、FWD、RD</strong></p><ol><li><strong>HD（Host Define）</strong></li></ol><blockquote><p>非必选项，单机运行时不需要配置HD参数，一般只有在多主机联机测试时才需要配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br></pre></td></tr></table></figure><ul><li><strong>hd=</strong> 标识主机定义的名称，多主机运行时，可以使用hd1、hd2、hd3…区分</li><li><strong>system=</strong> 主机IP地址或主机名</li><li><strong>vdbench=</strong> vdbench执行文件存放路径，当多主机存放路径不同时，可在hd定义时单独指定</li><li><strong>user=</strong> slave和master通信使用用户</li><li><strong>shell=</strong> 可选值为<code>rsh</code>、<code>ssh</code>或<code>vdbench</code>，默认值为<code>rsh</code>，多主机联机测试时，mater和slave主机间通信方式<br>当参数值为<code>rsh</code>时，需要配置master和slave主机rsh互信，考虑到rsh使用明文传输，安全级别不够，通常情况下不建议使用这种通信方式<br>当参数值为<code>ssh</code>时，需要配置master和slave主机ssh互信，通常Linux主机联机时使用此通信方式<br>当参数值为<code>vdbench</code>，需要在所有slave主机运行<code>vdbench rsh</code>启用vdbench本身的rsh守护进程，通常Window主机联机时使用此通信方式</li></ul><ol start="2"><li><strong>FSD（File System Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fsd=default,depth=2,width=3,files=2,size=128k</span><br><span class="line">fsd=fsd1,anchor=/mnt/client1</span><br><span class="line">fsd=fsd2,anchor=/mnt/client2</span><br><span class="line">fsd=fsd3,anchor=/mnt/client3</span><br></pre></td></tr></table></figure><ul><li><strong>fsd=</strong> 标识文件系统定义的名称，多文件系统时（<code>fsd1</code>、<code>fsd2</code>、<code>fsd3</code>…），可以指定<code>default</code>（将相同的参数作为所有fsd的默认值）</li><li><strong>anchor=</strong> 文件写入根目录</li><li><strong>depth=</strong> 创建目录层级数（即目录深度）</li><li><strong>width=</strong> 每层文件夹的子文件夹数</li><li><strong>files=</strong> 测试文件个数（vdbench测试过程中会生成多层级目录结构，实际只有最后一层目录会生成测试文件）</li><li><strong>size=</strong> 每个测试文件大小</li><li>**distribution= ** 可选值为<code>bottom</code>或<code>all</code>，默认为<code>bottom</code><br>–当参数值为<code>bottom</code>时，程序只在最后一层目录写入测试文件<br>–当参数值为<code>all</code>时，程序在每一层目录都写入测试文件</li><li><strong>shared=</strong> 可选值为<code>yes</code>或<code>no</code>，默认值为<code>no</code>，一般只有在多主机联机测试时指定<br>vdbench不允许不同的slave之间共享同一个目录结构下的所有文件，因为这样会带来很大的开销，但是它们允许共享同一个目录结构。加入设置了shared=yes，那么不同的slave可以平分一个目录下所有的文件来进行访问，相当于每个slave有各自等分的访问区域，因此不能测试多个客户的对同一个文件的读写<br>–当多主机联机测试时，写入的根目录<code>anchor</code>为同一个路径时，需要指定参数值为<code>yes</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node1</span><br><span class="line">hd=hd2,system=node2</span><br><span class="line">hd=hd3,system=node3</span><br><span class="line">fsd=fsd1,anchor=/client/,depth=2,width=100,files=100,size=4k,shared=yes</span><br></pre></td></tr></table></figure><p> 计算公式如下：<br> 最后一层生成文件夹个数=<code>width</code>^<code>depth</code><br> 测试文件个数=（<code>width</code>^<code>depth</code>）*<code>files</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">fsd=fsd1,anchor=/dir1,depth=2,width=3,files=2,size=128k</span><br><span class="line">以上述参数为例，生成目录结构及测试文件如下：</span><br><span class="line">最后一层文件夹数=3^2=9 最后一层文件数=9*2=18</span><br><span class="line">/dir1/</span><br><span class="line">├── no_dismount.txt</span><br><span class="line">├── vdb.1_1.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">├── vdb.1_2.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">├── vdb.1_3.dir</span><br><span class="line">│   ├── vdb.2_1.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   ├── vdb.2_2.dir</span><br><span class="line">│   │   ├── vdb_f0001.file</span><br><span class="line">│   │   └── vdb_f0002.file</span><br><span class="line">│   └── vdb.2_3.dir</span><br><span class="line">│       ├── vdb_f0001.file</span><br><span class="line">│       └── vdb_f0002.file</span><br><span class="line">└── vdb_control.file</span><br><span class="line"></span><br><span class="line">12 directories, 20 files</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>FWD（FileSystem Workload Defile）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fwd=default,operation=read,xfersize=4k,fileio=sequential,fileselect=random,threads=2</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">fwd=fwd3,fsd=fsd3,host=hd3</span><br></pre></td></tr></table></figure><ul><li><strong>fwd=</strong> 标识文件系统工作负载定义的名称，多文件系统工作负载定义时，可以使用fwd1、fwd2、fwd3…区分</li><li><strong>fsd=</strong> 标识此工作负载使用文件存储定义的名称</li><li><strong>host=</strong> 标识此工作负载使用主机</li><li><strong>operation=</strong> 可选值为<code>read</code>或<code>write</code>,文件操作方式</li><li><strong>rdpct=</strong> 可选值为<code>0</code>~<code>100</code>，读操作占比百分比，一般混合读写时需要指定，当值为60时，则混合读写比为6：4</li><li><strong>fileio=</strong> <code>可选值为random</code>或<code>sequential</code>，标识文件 I/O 将执行的方式</li><li><strong>fileselect=</strong> <code>random</code>或<code>sequential</code>，标识选择文件或目录的方式</li><li><strong>xfersizes=</strong> 数据传输（读取和写入操作）处理的数据大小(即单次IO大小)</li><li><strong>threads=</strong> 此工作负载的并发线程数量</li></ul><ol start="4"><li><strong>RD（Run Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rd=rd1,fwd=(fwd1-fwd3),fwdrate=max,format=restart,elapsed=604800,interval=10</span><br></pre></td></tr></table></figure><ul><li><strong>rd=</strong> 标识文件系统运行定义的名称。</li><li><strong>fwd=</strong> 标识文件系统工作负载定义的名称。</li><li><strong>fwdrate=</strong> 每秒执行的文件系统操作数量。设置为max，表示不做任何限制，按照最大强度自适应</li><li><strong>format=</strong> 可选值为<code>yes</code>、<code>no</code>或<code>restart</code>，标识预处理目录和文件结构的方式<br>–yes表示删除目录和文件结构再重新创建<br>–no表示不删除目录和文件结构<br>–restart表示只创建未生成的目录或文件，并且增大未达到实际大小的文件</li><li><strong>elapsed=</strong> 默认值为<code>30</code>，测试运行持续时间（单位为秒）</li><li><strong>interval=</strong> 结果输出打印时间间隔（单位为秒）</li></ul><h4 id="块设备"><a href="#块设备" class="headerlink" title="块设备"></a>块设备</h4><p> <strong>块设备参数文件定义顺序为：HD、SD、WD、RD</strong></p><ol><li><strong>HD（Host Define）</strong></li></ol><blockquote><p>非必选项，单机运行时不需要配置HD参数，一般只有在多主机联机测试时才需要配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br></pre></td></tr></table></figure><ul><li><strong>hd=</strong> 标识主机定义的名称，多主机运行时，可以使用hd1、hd2、hd3…区分</li><li><strong>system=</strong> 主机IP地址或主机名</li><li><strong>vdbench=</strong> vdbench执行文件存放路径，当多主机存放路径不同时，可在hd定义时单独指定</li><li><strong>user=</strong> slave和master通信使用用户</li><li><strong>shell=</strong> 可选值为<code>rsh</code>、<code>ssh</code>或<code>vdbench</code>，默认值为<code>rsh</code>，多主机联机测试时，mater和slave主机间通信方式<br>当参数值为<code>rsh</code>时，需要配置master和slave主机rsh互信，考虑到rsh使用明文传输，安全级别不够，通常情况下不建议使用这种通信方式<br>当参数值为<code>ssh</code>时，需要配置master和slave主机ssh互信，通常Linux主机联机时使用此通信方式<br>当参数值为<code>vdbench</code>，需要在所有slave主机运行<code>vdbench rsh</code>启用vdbench本身的rsh守护进程，通常Window主机联机时使用此通信方式</li></ul><ol start="2"><li><strong>SD（Storage Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflags=o_direct,threads=6</span><br><span class="line">sd=sd3,hd=hd2,lun=/dev/sdb,openflags=o_direct,threads=6</span><br><span class="line">sd=sd6,hd=hd3,lun=/dev/sdb,openflags=o_direct,threads=6</span><br></pre></td></tr></table></figure><ul><li><strong>sd=</strong> 标识存储定义的名称</li><li><strong>hd=</strong> 标识主机定义的名称</li><li><strong>lun=</strong> 写入块设备，如：/dev/sdb, /dev/sdc…</li><li><strong>openflags=</strong> 通过设置为<code>o_direct</code>，以无缓冲缓存的方式进行读写操作</li><li><strong>threads=</strong> 对SD的最大并发I/O请求数量</li></ul><ol start="3"><li><strong>WD（Workload Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wd=wd1,sd=sd*,seekpct=100,rdpct=100,xfersize=8k,skew=40</span><br><span class="line">wd=wd2,sd=sd*,seekpct=100,rdpct=0,xfersize=8k,skew=10</span><br><span class="line">wd=wd3,sd=sd*,seekpct=100,rdpct=100,xfersize=1024k,skew=40</span><br><span class="line">wd=wd4,sd=sd*,seekpct=100,rdpct=0,xfersize=1024k,skew=10</span><br></pre></td></tr></table></figure><ul><li><strong>wd=</strong> 标识工作负载定义的名称</li><li><strong>sd=</strong> 标识存储定义的名称</li><li><strong>seekpct=</strong> 可选值为<code>0</code>或<code>100</code>(也可使用<code>sequential</code>或<code>random</code>表示)，默认值为<code>100</code>，随机寻道的百分比，设置为<code>0</code>时表示顺序，设置为<code>100</code>时表示随机。</li><li><strong>rdpct=</strong> 读取请求占请求总数的百分比，设置为0时表示写，设置为100时表示读</li><li><strong>xfersize=</strong> 要传输的数据大小。默认设置为4k</li><li><strong>skew=</strong> 非必选项，一般在多个工作负载时需要指定，表示该工作负载占总工作量百分比（skew总和为100）</li></ul><ol start="4"><li><strong>RD（Run Define）</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rd=rd1,wd=wd*,iorate=max,maxdata=400GB,warmup=30,elapse=604800,interval=5</span><br></pre></td></tr></table></figure><ul><li><strong>rd=</strong> 标识运行定义的名称</li><li><strong>wd=</strong> 标识工作负载定义的名称</li><li><strong>iorate=</strong> 常用可选值为<code>100</code>、<code>max</code>，此工作负载的固定I/O速率<br>–当参数值为<code>100</code>时，以每秒100个I/Os的速度运行工作负载，当参数值设置为一个低于最大速率的值时，可以达到限制读写速度的效果<br>–当参数值为<code>max</code>时，以最大的I/O速率运行工作负载，一般测试读写最大性能时，该参数值均为<code>max</code></li><li><strong>warmup=</strong> 预热时间（单位为秒），默认情况下vdbench会将第一个时间间隔输出数据排除在外,程序在预热时间内的测试不纳入最终测试结果中（即预热结束后，才开始正式测试）<br>–当<code>interval</code>为5、<code>elapsed</code>为600时，测试性能为<code>2</code><del><code>elapsed/interval</code>（avg_2-120）时间间隔内的平均性能<br>–当<code>interval</code>为5、<code>warmup</code>为60、<code>elapsed</code>为600时，测试性能为<code>1+（warmup/interval）</code></del><code>（warmup+elapsed）/interval</code>(avg_13-132)时间间隔内的平均性能</li><li><strong>maxdata=</strong> 读写数据大小，通常情况下，当运行<code>elapsed</code>时间后测试结束；当同时指定<code>elapsed</code>和<code>maxdata</code>参数值时，以最快运行完的参数为准（即<code>maxdata</code>测试时间小于<code>elapsed</code>时，程序写完<code>elapsed</code>数据量后结束）<br>–当参数值为<code>100</code>以下时，表示读写数据量为总存储定义大小的倍数（如maxdata=2，2个存储定义（每个存储定义数据量为100G），则实际读写数据大小为400G）<br>–当参数值为<code>100</code>以上时，表示数据量为实际读写数据量（可以使用单位M、G、T等）</li><li><strong>elapsed=</strong> 默认值为<code>30</code>，测试运行持续时间（单位为秒）</li><li><strong>interval=</strong> 报告时间间隔（单位为秒）</li></ul><h3 id="运行使用"><a href="#运行使用" class="headerlink" title="运行使用"></a>运行使用</h3><h4 id="单机运行"><a href="#单机运行" class="headerlink" title="单机运行"></a>单机运行</h4><ul><li><strong>Linux</strong><br>示例如下，单节点针对裸盘测试，1M顺序写，测试时间600s，预热时间60s，报告时间间隔2s</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node241 vdbench50406]# cat Single-RawDisk.html </span><br><span class="line">sd=sd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd1,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,warmup=60,elapsed=600,interval=2</span><br><span class="line">[root@node241 vdbench50406]# </span><br><span class="line">[root@node241 vdbench50406]# ./vdbench -f Single-RawDisk.html</span><br></pre></td></tr></table></figure><ul><li><strong>Window</strong><br>示例如下，单节点针对文件系统测试，1M顺序写，目录深度为2，每层目录数为3，每个目录文件数为10，每个文件大小为200M，测试时间为600s，报告时间时间2s</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\vdbench50406&gt;more &quot;Single FileSystem.txt&quot;</span><br><span class="line">fsd=fsd1,anchor=E:\Sigle-FileSystem,depth=2,width=3,files=10,size=200M</span><br><span class="line">fwd=fwd1,fsd=fsd1,operation=write,xfersize=1M,fileio=sequential,fileselect=rando</span><br><span class="line">m,threads=2</span><br><span class="line">rd=rd1,fwd=fwd1,fwdrate=max,format=yes,elapsed=600,interval=5</span><br><span class="line">E:\vdbench50406&gt;</span><br><span class="line">E:\vdbench50406&gt;vdbench -f &quot;Single FileSystem.txt&quot;</span><br></pre></td></tr></table></figure><h4 id="联机运行"><a href="#联机运行" class="headerlink" title="联机运行"></a>联机运行</h4><ul><li><strong>Linux</strong><ol><li>配置多主机ssh互信</li><li>master主机运行测试参数文件即可<br>示例如下，三节点针对裸盘联机测试，1M顺序写，测试数据量为400G，预热时间30s，报告间隔5s</li></ol></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@node241 vdbench50406]# cat Multi-RawDisk</span><br><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd2,hd=hd2,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd3,hd=hd3,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd*,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,maxdata=100M,elapsed=64800,warmup=30,interval=5</span><br><span class="line">[root@node241 vdbench50406]# </span><br><span class="line">[root@node241 vdbench50406]# ./vdbench -f Multi-RawDisk</span><br></pre></td></tr></table></figure><ul><li><p><strong>Window</strong></p><ol><li><p>所有slave主机运行vdbench本身rsh守护进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\vdbench50406&gt;vdbench rsh</span><br></pre></td></tr></table></figure></li><li><p>master主机运行测试参数文件即可</p><p>示例如下，三节点针对文件系统联机测试，1M顺序写，目录深度为2，每层目录数为3，每个目录文件数为10000，每个文件大小为200M，测试时间为600s，报告间隔1s</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">E:\vdbench50406&gt;more &quot;Multi FileSystem.txt&quot;</span><br><span class="line">hd=default,vdbench=E:\vdbench50406,user=Micah,shell=vdbench</span><br><span class="line">hd=hd1,system=66.66.66.250</span><br><span class="line">hd=hd2,system=66.66.66.252</span><br><span class="line">fsd=fsd1,anchor=Z:\Sigle-FileSystem-01,depth=2,width=3,files=10000,size=200M</span><br><span class="line">fsd=fsd2,anchor=Z:\Sigle-FileSystem-02,depth=2,width=3,files=10000,size=200M</span><br><span class="line">fwd=default,operation=write,xfersize=1M,fileio=sequential,fileselect=random,threads=16</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=yes,elapsed=600,interval=1</span><br><span class="line">E:\vdbench50406&gt;</span><br><span class="line">E:\vdbench50406&gt;vdbench -f &quot;Multi FileSystem.txt&quot;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><blockquote><p>当vdbench运行完负载测试后，会在安装目录下生成<code>output</code>文件夹，里边包含测试结果文件</p></blockquote><h4 id="输出文件"><a href="#输出文件" class="headerlink" title="输出文件"></a>输出文件</h4><ul><li><p>errorlog.html</p><p>当运行测试启用数据校验时，它可能会包含一些错误信息，如：</p><ul><li>无效的密钥读取</li><li>无效的 lba 读取（一个扇区的逻辑字节地址）</li><li>无效的 SD 或 FSD 名称读取</li><li>数据损坏</li><li>坏扇区</li></ul></li><li><p><strong>flatfile.html</strong><br>vdbench 生成的一种逐列的 ASCII 格式的信息，可以使用<code>parseflat</code>参数解析结果</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  ./vdbench parseflat -i &lt;flatfile.html&gt; -o output.csv [-c col1 col2 ..] [-a] [-f col1 value1 col2 value2..]</span><br><span class="line">    -i input flatfile, e.g. output/flatfile.html</span><br><span class="line">    -o output CSV file name (default stdout)</span><br><span class="line">    -c which column to write to CSV. Columns are written in the order specified</span><br><span class="line">    -f filters: &#x27;if (colX == valueX) ... ...&#x27; (Alphabetic compare)</span><br><span class="line">    -a include only the &#x27;avg&#x27; data. Default: include only non-avg data.</span><br><span class="line">    -i是表示待分析的文件，这里写vdbench输出目录里的flatfile.html这个文件，写其它文件不能正常解析；</span><br><span class="line">    -o是解析后的输出文件，可以手动指定存放目录。文件格式为CSV，此文件的列由-c参数指定，列的顺序为-c参数的顺序</span><br><span class="line">    -a是表示csv文件中只记录测试过程中的avg值</span><br><span class="line"></span><br><span class="line">  示例如下：</span><br><span class="line">  .\vdbench.bat parseflat -i D:\vdbench50406\output\flatfile.html -c run rate MB/sec seekpct rdpct bytes/io threads resp -o d:\output.csv -a</span><br><span class="line">vdbench parseflat arguments:</span><br><span class="line">Argument 0: -i</span><br><span class="line">Argument 1: D:\vdbench50406\output\flatfile.html</span><br><span class="line">Argument 2: -c</span><br><span class="line">Argument 3: run</span><br><span class="line">Argument 4: rate</span><br><span class="line">Argument 5: MB/sec</span><br><span class="line">Argument 6: seekpct</span><br><span class="line">Argument 7: rdpct</span><br><span class="line">Argument 8: bytes/io</span><br><span class="line">Argument 9: threads</span><br><span class="line">Argument 10: resp</span><br><span class="line">Argument 11: -o</span><br><span class="line">Argument 12: D:\output.csv</span><br><span class="line">Argument 13: -a</span><br><span class="line">14:12:49.265 ParseFlat completed successfully.</span><br></pre></td></tr></table></figure><ul><li><strong>histogram.html</strong><br>一种包含报告柱状图的响应时间、文本格式的文件</li><li><strong>logfile.html</strong><br>包含 Java 代码写入控制台窗口的每行信息的副本。logfile.html 主要用于调试用途</li><li><strong>parmfile.html</strong><br>包含测试运行配置参数信息</li><li><strong>summary.html</strong><br>记录全部数据信息，显示每个报告间隔内总体性能情况及工作负载情况，以及除第一个间隔外的所有间隔的加权平均值</li><li><strong>totals.html</strong><br>记录全部数据计算之后的平均值，一般测试结果从该文件取值，除第一个间隔外所有间隔的加权平均值</li></ul><h4 id="结果分析-1"><a href="#结果分析-1" class="headerlink" title="结果分析"></a>结果分析</h4><h5 id="文件系统-1"><a href="#文件系统-1" class="headerlink" title="文件系统"></a>文件系统</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">测试参数如下：</span></span><br><span class="line">hd=default,vdbench=E:\vdbench50406,user=Micah,shell=vdbench</span><br><span class="line">hd=hd1,system=66.66.66.250</span><br><span class="line">hd=hd2,system=66.66.66.252</span><br><span class="line">fsd=fsd1,anchor=Z:\Sigle-FileSystem-01,depth=2,width=3,files=10,size=4M</span><br><span class="line">fsd=fsd2,anchor=Z:\Sigle-FileSystem-02,depth=2,width=3,files=10,size=4M</span><br><span class="line">fwd=default,operation=write,xfersize=1M,fileio=sequential,fileselect=random,threads=2</span><br><span class="line">fwd=fwd1,fsd=fsd1,host=hd1</span><br><span class="line">fwd=fwd2,fsd=fsd2,host=hd2</span><br><span class="line">rd=rd1,fwd=fwd*,fwdrate=max,format=yes,elapsed=600,interval=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试结果如下：</span></span><br><span class="line">18:47:03.001 Starting RD=format_for_rd1</span><br><span class="line"></span><br><span class="line">六月 04, 2020 .Interval. .ReqstdOps... ...cpu%...  read ....read..... ....write.... ..mb/sec... mb/sec .xfer.. ...mkdir.... ...rmdir.... ...create... ....open.... ...close.... ...delete...</span><br><span class="line">                          rate   resp total  sys   pct   rate   resp   rate   resp  read write  total    size  rate   resp  rate   resp  rate   resp  rate   resp  rate   resp  rate   resp</span><br><span class="line">18:48:40.218   avg_2-20   57.6  6.244  13.4 2.99   0.0    0.0  0.000   57.6  6.244  0.00  7.20   7.20  131072   0.2 104.49   0.2 41.526   1.8 7527.0   1.8 192.01   1.8 7134.3   1.8 21.984</span><br><span class="line"></span><br><span class="line">18:48:42.000 Starting RD=rd1; elapsed=600; fwdrate=max. For loops: None</span><br><span class="line"></span><br><span class="line">18:58:42.205  avg_2-120    6.2  1.063  13.0 2.80   0.0    0.0  0.000    6.2  1.063  0.00  6.24   6.24 1048576   0.0  0.000   0.0  0.000   0.0  0.000   1.6 47.864   1.6 2401.1   0.0  0.000</span><br></pre></td></tr></table></figure><p> <code>totals.html</code>一般包括两个部分，第一部分为文件存储目录结构及数据填充的平均性能值，第二部分为执行测试过程中除第一个时间间隔外所有时间间隔平均性能值，主要看第二部分的内容</p><ul><li><strong>Interval</strong><br>报告间隔序号，测试结果一般为除第一个时间间隔外所有时间间隔加权平均值<br>如elapsed=600,interval=5，则性能结果为第2个间隔到第120个间隔的平均值（avg_2-120）</li><li><strong>ReqstdOps</strong><ul><li><strong>rate</strong><br>每秒读写I/O个数（<strong>读写IOPS</strong>），可以通过<code>rd</code>运行定义参数<code>fwdrate</code>控制<br>当<code>fwdrate</code>为<code>max</code>时，以最大I/O速率运行工作负载<br>当<code>fwdrate</code>为低于最大I/0速率的一个数值时，可以限制读写速度，以固定I/O速率运行工作负载</li><li><strong>resp</strong><br>读写请求响应时间（<strong>读写时延</strong>），单位为<code>ms</code></li></ul></li><li><strong>cpu%</strong><ul><li><strong>tatol</strong><br>总的cpu占用率</li><li><strong>sys</strong><br>系统cpu占用率</li></ul></li><li><strong>read pct</strong><br>读取请求占总请求数百分比占比，当为0时表示写，当为100时表示读</li><li><strong>read</strong><ul><li><strong>rate</strong><br>每秒读I/O个数（<strong>读IOPS</strong>）</li><li><strong>resp</strong><br>读请求响应时间（<strong>读时延</strong>），单位为<code>ms</code></li></ul></li><li><strong>write</strong><ul><li><strong>rate</strong><br>每秒写I/O个数（<strong>写IOPS</strong>）</li><li><strong>resp</strong><br>写请求响应时间（<strong>写时延</strong>），单位为<code>ms</code></li></ul></li><li><strong>mb/sec</strong><ul><li><strong>read</strong><br>每秒读取速度</li><li><strong>write</strong><br>每秒写入速度</li><li><strong>total</strong><br>每秒读写速度总和</li></ul></li><li><strong>xfersize</strong><br>每个读写I/O传输数据量（即单个读写I/O大小），单位为字节<code>B</code></li></ul><h5 id="块设备-1"><a href="#块设备-1" class="headerlink" title="块设备"></a>块设备</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">测试参数如下：</span></span><br><span class="line">messagescan=no</span><br><span class="line">hd=default,vdbench=/root/vdbench50406,user=root,shell=ssh</span><br><span class="line">hd=hd1,system=node241</span><br><span class="line">hd=hd2,system=node242</span><br><span class="line">hd=hd3,system=node243</span><br><span class="line">sd=sd1,hd=hd1,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd2,hd=hd2,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">sd=sd3,hd=hd3,lun=/dev/sdb,openflag=o_direct</span><br><span class="line">wd=wd1,sd=sd*,seekpct=0,rdpct=0,xfersize=1M</span><br><span class="line">rd=rd1,wd=wd1,iorate=max,elapsed=600,warmup=30,interval=5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试结果如下：</span></span><br><span class="line">&lt;a name=&quot;_1143839598&quot;&gt;&lt;/a&gt;&lt;i&gt;&lt;b&gt;19:02:15.001 Starting RD=rd1; I/O rate: Uncontrolled MAX; elapsed=600 warmup=30; For loops: None&lt;/b&gt;&lt;/i&gt;</span><br><span class="line"></span><br><span class="line">Jun 04, 2020  interval        i/o   MB/sec   bytes   read     resp     read    write     resp     resp queue  cpu%  cpu%</span><br><span class="line">                             rate  1024**2     i/o    pct     time     resp     resp      max   stddev depth sys+u   sys</span><br><span class="line">19:12:46.068 avg_7-126      82.74    82.74 1048576   0.00  289.158    0.000  289.158 2092.803  155.103  23.9  16.3  14.2</span><br></pre></td></tr></table></figure><ul><li><strong>interval</strong><br>报告间隔序号，测试结果一般为除第一个时间时间外所有时间间隔加权平均值，如有设置预热时间，则这部分测试数据也需要排除在外<br>如elapsed=600,warmup=30，interval=5，则性能测试结果为第7个间隔到第126个间隔的平均值（avg_7-126）</li><li><strong>i/o rate</strong><br>每秒读写I/O个数（<strong>读写IOPS</strong>），可以通过<code>rd</code>运行定义参数<code>iorate</code>控制<br>当<code>iorate</code>为<code>max</code>时，以最大I/O速率运行工作负载<br>当<code>iorate</code>为低于最大I/0速率的一个数值时，可以限制读写速度，以固定I/O速率运行工作负载</li><li><strong>MB/sec</strong><br>每秒读写速度（<strong>读写带宽</strong>）<br>注：按官方手册说明，</li><li><strong>bytes i/0</strong><br>每个读写I/O传输数据量（即单个读写I/O大小），单位为字节<code>B</code>，可以通过<code>wd</code>工作负载定义参数<code>xfersize</code>控制</li><li><strong>read pct</strong><br>读取请求占请求总数的百分比，可以通过<code>wd</code>工作负载定义参数<code>rdpct</code>控制<br>当<code>rdpct</code>为<code>0</code>时，表示测试模型为写<br>当<code>rdpct</code>为<code>100</code>时，表示测试模型为读</li><li><strong>resp time</strong><br>请求响应时间（<strong>读写时延</strong>），单位为毫秒<code>ms</code></li><li><strong>read resp</strong><br>读取请求响应时间，单位为毫秒<code>ms</code></li><li><strong>write resp</strong><br>写入请求响应时间，单位为毫秒<code>ms</code></li><li><strong>resp max</strong><br>最大请求响应时间，单位为毫秒<code>ms</code></li><li><strong>resp stddev</strong><br>请求响应时间标准偏差，单位为毫秒<code>ms</code></li><li><strong>queue depth</strong><br>读写I/0队列深度</li><li><strong>cpu% sys+u</strong><br>内核态空间及用户态空间CPU占用率</li><li><strong>cpu% sys</strong><br>内核态空间CPU占用率 2020年05月29日 16:00:16 Clear</li></ul><h3 id="测试说明"><a href="#测试说明" class="headerlink" title="测试说明"></a>测试说明</h3><ol><li>线程数（thread）一般设置为客户端CPU线程数总大小 <code>grep &#39;processor&#39; /proc/cpuinfo | sort -u | wc -l</code></li><li>测试总数据量需要为客户端内存大小两倍</li><li>测试读模型时需要清理客户端缓存信息 <code>sync；echo 3 &gt; /proc/sys/vm/drop</code></li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.cnblogs.com/raykuan/p/6914748.html">IO测试工具之fio详解</a></li><li><a href="https://bbs.huaweicloud.com/forum/thread-90290-1-1.html">FIO测试工具使用指导</a></li><li><a href="https://blog.51cto.com/liyuh/747746">IOmeter - IO性能测试工具</a></li><li><a href="https://www.cnblogs.com/luxf0/p/13321077.html">vdbench配置说明</a></li><li><a href="https://blog.csdn.net/u012114090/article/details/81626430">vdbench的使用教程——裸盘测试和文件系统测试</a></li><li><a href="https://blog.csdn.net/YINHAOXU1/article/details/106343147">简单记录FIO和Vdbench的测试脚本</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;主流测试软件介绍&quot;&gt;&lt;a href=&quot;#主流测试软件介绍&quot; class=&quot;headerlink&quot; title=&quot;主流测试软件介绍&quot;&gt;&lt;/a&gt;主流测试软件介绍&lt;/h2&gt;&lt;p&gt;目前业内主流存储I/O测试软件有以下几款：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FIO</summary>
      
    
    
    
    <category term="存储" scheme="https://renyb2.github.io/categories/%E5%AD%98%E5%82%A8/"/>
    
    
    <category term="性能基准测试" scheme="https://renyb2.github.io/tags/%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    
    <category term="存储" scheme="https://renyb2.github.io/tags/%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL测试：性能基准测试</title>
    <link href="https://renyb2.github.io/2021/10/13/MySQL%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    <id>https://renyb2.github.io/2021/10/13/MySQL%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</id>
    <published>2021-10-13T03:06:24.000Z</published>
    <updated>2021-10-20T04:26:53.001Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见指标"><a href="#常见指标" class="headerlink" title="常见指标"></a>常见指标</h2><ul><li>TPS：单位时间内所处理的事务数</li><li>QPS：单位时间内所处理的查询数</li><li>Latency：响应时延，通常参考平均响应时延、95%请求所在的响应时延。</li><li>并发量：同时处理的查询请求数量</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常见指标&quot;&gt;&lt;a href=&quot;#常见指标&quot; class=&quot;headerlink&quot; title=&quot;常见指标&quot;&gt;&lt;/a&gt;常见指标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;TPS：单位时间内所处理的事务数&lt;/li&gt;
&lt;li&gt;QPS：单位时间内所处理的查询数&lt;/li&gt;
&lt;li&gt;Late</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://renyb2.github.io/tags/MySQL/"/>
    
    <category term="性能基准测试" scheme="https://renyb2.github.io/tags/%E6%80%A7%E8%83%BD%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>MySQL优化：服务性能</title>
    <link href="https://renyb2.github.io/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/"/>
    <id>https://renyb2.github.io/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/</id>
    <published>2021-10-11T01:55:55.000Z</published>
    <updated>2021-10-20T06:59:41.499Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>性能优化优先顺序：</p><ol><li>数据库结构设计和SQL语句</li><li>数据库存储引擎的选择和参数配置</li><li>系统选择和优化</li><li>硬件升级</li></ol></blockquote><h2 id="服务器硬件"><a href="#服务器硬件" class="headerlink" title="服务器硬件"></a>服务器硬件</h2><h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><ul><li>64位的CPU一定要工作在64位的系统下</li><li>32位操作系统对单线程运行的MySQL有很大的限制</li><li>频率决定单个SQL处理快慢；核数决定并行处理SQL数量，即QPS</li><li>对于并发比较高的场景，CPU的数量比频率重要</li><li>对于CPU密集型场景或比较复杂的SQL，CPU频率越高越好</li><li>Web类应用，核数优先级大于频率</li></ul><h3 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h3><ul><li>内存选择时，应选择主板所能使用的最高频率的内存</li><li>内存的大小对性能很重要，所以要尽可能的大</li><li>在数据量大于内存时，内存不能缓存全部的数据，提升内存对性能有较明显的提升</li></ul><h3 id="I-O子系统"><a href="#I-O子系统" class="headerlink" title="I/O子系统"></a>I/O子系统</h3><p>优先级：PCIe &gt; SSD &gt; 传统磁盘 + RAID10 &gt; 磁盘 &gt; SAN</p><p>传统磁盘需要注意：</p><ul><li>存储容量</li><li>传输速度</li><li>访问时间</li><li>主轴转速</li><li>物理尺寸</li></ul><p>RAID级别的选择：主库建议RAID10，从库建议RAID0、RAID5。</p><table><thead><tr><th>等级</th><th>特点</th><th>是否冗余</th><th>盘数</th><th>读</th><th>写</th></tr></thead><tbody><tr><td>RAID0</td><td>便宜，快速，危险</td><td>否</td><td>N</td><td>快</td><td>快</td></tr><tr><td>RAID1</td><td>高速读，简单，安全</td><td>是</td><td>2</td><td>快</td><td>慢</td></tr><tr><td>RAID5</td><td>安全，成本折中</td><td>是</td><td>N+1</td><td>快</td><td>取决于最慢的盘</td></tr><tr><td>RAID10</td><td>贵，高速，安全</td><td>是</td><td>2N</td><td>快</td><td>快</td></tr></tbody></table><p>相比于机械磁盘，固态磁盘有以下几个特点：</p><ol><li>更好的随机读写性能</li><li>更好的支持并发</li><li>更容易损坏</li></ol><p>使用场景：</p><ul><li><p>适用于存在大量随机IO的场景</p></li><li><p>适用于解决单线程负载的IO瓶颈</p></li></ul><h2 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h2><h3 id="内核相关参数：-etc-sysctl-conf"><a href="#内核相关参数：-etc-sysctl-conf" class="headerlink" title="内核相关参数：/etc/sysctl.conf"></a>内核相关参数：/etc/sysctl.conf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加连接数和队列长度</span></span><br><span class="line">net.core.somaxconn=65535</span><br><span class="line">net.core.netdev_max_backlog=65535</span><br><span class="line">net.ipv4.tcp_max_syn_backlog=65535</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加快tcp连接回收速度</span></span><br><span class="line">net.ipv4.tcp_fin_timeout=10</span><br><span class="line">net.ipv4.tcp_tw_reuse=1</span><br><span class="line">net.ipv4.tcp_tw_recycle=1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 网络接收和发送缓冲区大小</span></span><br><span class="line">net.core.wmem_default=87380</span><br><span class="line">net.core.wmem_max=16777216</span><br><span class="line">net.core.rmem_default=87380</span><br><span class="line">net.core.rmem_max=16777216</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tcp存活探测</span></span><br><span class="line">net.ipv4.tcp_keepalive_time=120</span><br><span class="line">net.ipv4.tcp_keepalive_intvl=30</span><br><span class="line">net.ipv4.tcp_keepalive_probes=3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 单个共享内存段的最大值</span></span><br><span class="line">kernel.shmmax=4294967296</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 这个参数应该设置的足够大，以便能在一个共享内存段下容纳下整个Innodb缓冲池的大小</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 对于64位linux系统，可取的最大值为物理内存值-1byte，建议值为大于物理内存的一半，一般取值大于Innodb缓冲池的大小即可。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存交换分区</span></span><br><span class="line">vm.swappiness=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 0代表除非虚拟内存完全满了，否则不使用交换分区</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 内存交换分区，在内存不足时会对性能产生明显的影响</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="资源限制：-etc-security-limits-conf"><a href="#资源限制：-etc-security-limits-conf" class="headerlink" title="资源限制：/etc/security/limits.conf"></a>资源限制：/etc/security/limits.conf</h3><p>需要重启操作系统才能生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 控制打开文件数限制</span></span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> *        表示对所有用户有效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> soft     表示当前系统生效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hard     表名系统中所能设定的最大值</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nofile   表示锁限制的资源是打开文件的最大数目</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 65535    限制的数量</span></span><br></pre></td></tr></table></figure><h3 id="磁盘调度策略：-sys-block-devname-queue-scheduler"><a href="#磁盘调度策略：-sys-block-devname-queue-scheduler" class="headerlink" title="磁盘调度策略：/sys/block/devname/queue/scheduler"></a>磁盘调度策略：/sys/block/devname/queue/scheduler</h3><p>Linux 内核的 4 大 IO 调度算法：</p><ul><li><strong>Noop IO scheduler（电梯式调度策略）</strong>：NOOP实现了一个FIFO队列，它像电梯的工作方法一样对I/O请求进行组织，当有一个新的请求到来时，它将请求合并到最近的请求之后，以此来保证请求同一介质。NOOP倾向于饿死读而利于写，因此NOOP对于<strong>闪存设备</strong>、<strong>RAM</strong>及<strong>嵌入式系统</strong>是最好的选择。</li><li><strong>Deadline IO scheduler（截止时间调度策略）</strong>：Deadline确保了在一个截止时间内服务请求，这个截止时间是可调整的，而默认读期限短于写期限。这样就防止了写操作因为不能被读取而饿死的现象，Deadline对<strong>数据库类应用</strong>是最好的选择。</li><li><strong>Anticipatory IO scheduler（预料I/O调度策略）</strong>：本质上与Deadline一样，但在最后一次读操作后，要等待6ms，才能继续进行对其它I/O请求进行调度。它会在每个6ms中插入新的I/O操作，而会将一些小写入流合并成一个大写入流，用写入延时换取最大的写入吞吐量。AS适合于<strong>写入较多的环境</strong>，比如文件服务器，AS对数据库环境表现很差。</li><li><strong>CFQ IO scheduler（Completely Fair Queuing, 完全公平排队）</strong>：它试图为竞争块设备使用权的所有进程分配一个请求队列和一个时间片，在调度器分配给进程的时间片内，进程可以将其读写请求发送给底层块设备，当进程的时间片消耗完，进程的请求队列将被挂起，等待调度。对于通用的服务器来说，CFQ是较好的选择。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看磁盘当前调度策略（方括号里面的是当前选定的调度策略）</span></span><br><span class="line">cat /sys/block/sda/queue/scheduler</span><br><span class="line">[mq-deadline] kyber bfq none</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改磁盘调度策略</span></span><br><span class="line">echo deadline &gt; /sys/block/sda/queue/scheduler</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">echo deadline | sudo tee /sys/block/sda/queue/scheduler</span><br></pre></td></tr></table></figure><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>各操作系统推荐适用如下文件系统，性能最优：</p><ul><li>Windows：NTFS</li><li>Linux：XFS</li></ul><p>若Linux使用ext4文件系统，则关闭文件系统的操作时间记录可以提升读写性能，<code>/etc/fstab</code> 内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda1    /     ext4   noatime,nodiratime,data=writeback 1 1</span><br></pre></td></tr></table></figure><h2 id="MySQL体系结构"><a href="#MySQL体系结构" class="headerlink" title="MySQL体系结构"></a>MySQL体系结构</h2><p><img src="/2021/10/11/MySQL%E4%BC%98%E5%8C%96%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png" alt="image-20211012113231107"></p><p>存储引擎是针对于表的，而不是针对于库的（一个库中的不同表可以使用不同的存储引擎，但不建议这样操作。）</p><h2 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a>MySQL存储引擎</h2><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><h3 id="Innodb"><a href="#Innodb" class="headerlink" title="Innodb"></a>Innodb</h3><h2 id="MySQL配置参数"><a href="#MySQL配置参数" class="headerlink" title="MySQL配置参数"></a>MySQL配置参数</h2><h3 id="MySQL获取配置信息途径"><a href="#MySQL获取配置信息途径" class="headerlink" title="MySQL获取配置信息途径"></a>MySQL获取配置信息途径</h3><ul><li><p>命令行参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --datadir=/data/sql_data</span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看配置文件优先级</span></span><br><span class="line">mysqld --help --verbose | grep -A 1 &#x27;Default options&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="MySQL配置参数的作用域"><a href="#MySQL配置参数的作用域" class="headerlink" title="MySQL配置参数的作用域"></a>MySQL配置参数的作用域</h3><ul><li><p>全局参数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态设置全局参数</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> 参数名 = 参数值;</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="keyword">set</span> @@global.参数名 = 参数值;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看全局参数</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb%&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>会话参数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态设置会话参数</span></span><br><span class="line"><span class="keyword">set</span> [<span class="keyword">session</span>] 参数名 = 参数值;</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="keyword">set</span> @@session.参数名 = 参数值;</span><br></pre></td></tr></table></figure></li></ul><h3 id="内存相关配置参数"><a href="#内存相关配置参数" class="headerlink" title="内存相关配置参数"></a>内存相关配置参数</h3><ul><li><p>确定可使用的内存上线</p></li><li><p>确定MySQL的每个连接使用的内存，占用内存大小为：buffer_size * 连接数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查询排序时，立即分配指定大小内存给线程</span></span><br><span class="line">sort_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 连接缓冲区</span></span><br><span class="line">join_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MyISAM全表扫描时，分配指定大小，需要为4K的倍数</span></span><br><span class="line">read_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 索引缓冲区</span></span><br><span class="line">read_rnd_buffer_size</span><br></pre></td></tr></table></figure></li><li><p>确定需要为操作系统保留多少内存</p></li><li><p>如何为缓存池分配内存，总内存 -（每个线程所需要的内存 * 连接数）- 系统保留内存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">innodb_buffer_pool_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 主要用于MyISAM存储引擎</span></span><br><span class="line">key_buffer_size</span><br></pre></td></tr></table></figure></li></ul><h3 id="IO相关配置参数"><a href="#IO相关配置参数" class="headerlink" title="IO相关配置参数"></a>IO相关配置参数</h3><h4 id="Innodb-I-O相关配置"><a href="#Innodb-I-O相关配置" class="headerlink" title="Innodb I/O相关配置"></a>Innodb I/O相关配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 单个事务日志大小</span></span><br><span class="line">innodb_log_file_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 事务日志文件个数</span></span><br><span class="line">innodb_log_files_in_group </span><br><span class="line"><span class="meta">#</span><span class="bash"> 事务日志总大小 = Innodb_log_files_in_group * Innodb_log_file_size</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一个日志文件写满后才写下一个，Innodb_log_files_in_group意义不大，事务繁忙时，Innodb_log_file_size建议调大（32M ~ 128M）</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 日志缓冲区，一般不需要设置太大，基本1s就会刷新一次日志缓冲区，只需要保证可以缓冲1s的事务即可。建议32M ~ 128M即可</span></span><br><span class="line">innodb_log_buffer_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb刷新<span class="built_in">log</span>的频率</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：每隔1秒钟会将<span class="built_in">log</span> buffer中的数据写入到文件，同时通知文件系统进行文件同步的flush操作（该值会导致MySQL崩溃时至少丢失1s的事务）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：默认值，每次事务的结束都会触发Log Thread将<span class="built_in">log</span> buffer中的数据写入文件并通知文件系统同步文件（该值可以保证数据不丢失）</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 2：建议值，每次事务提交的时候会把<span class="built_in">log</span> buffer刷到文件系统中去，但并不会立即刷写到磁盘（如果只是MySQL数据库挂掉了，由于文件系统没有问题，那么对应的事务数据并没有丢失。只有在数据库所在的主机操作系统损坏或者突然掉电的情况下，数据库的事务数据可能丢失1秒之类的事务数据）</span></span><br><span class="line">innodb_flush_log_at_trx_commit</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb刷新方式</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - nosync: </span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - O_DIRECT：linux系统建议值，操作系统不缓存数据，不预读数据（完全关闭操作系统缓存）</span></span><br><span class="line">innodb_flush_method</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb独立表空间，强烈建议使用该参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：关闭</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：开启</span></span><br><span class="line">innodb_file_per_table</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Innodb双写缓存，避免文件系统写入错误是文件损坏，损耗约10%写性能，保证安全性</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：关闭</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 1：开启</span></span><br><span class="line">innodb_doublewrite</span><br></pre></td></tr></table></figure><h4 id="MyISAM-I-O相关配置"><a href="#MyISAM-I-O相关配置" class="headerlink" title="MyISAM I/O相关配置"></a>MyISAM I/O相关配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 控制缓冲刷新到磁盘的频率</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - OFF：每次写操作后刷新键缓冲区内的脏块到磁盘</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ON：只对在建表时指定了delay_key_write选项的表使用延迟刷新</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ALL：对所有MyISAM表都是用延迟键写入</span></span><br><span class="line">delay_key_write</span><br></pre></td></tr></table></figure><h3 id="安全相关配置参数"><a href="#安全相关配置参数" class="headerlink" title="安全相关配置参数"></a>安全相关配置参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 自动清理binlog的天数，建议覆盖两次全备的间隔</span></span><br><span class="line">expire_logs_days</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL可以接受的包大小，建议32M。主从复制结构中，主库与从库需保持一致</span></span><br><span class="line">max_allowed_packet</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用DNS查找。使用该参数后，授权需要使用ip或网段，不能使用域名</span></span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 确保sysdate()返回确定性日期</span></span><br><span class="line">sysdate_is_now</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁止非super权限用户的写权限。建议主从复制结构中，从库使用</span></span><br><span class="line">read_only</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用slave自动恢复</span></span><br><span class="line">skip_slave_start</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> MySQL所使用的SQL模式（对SQL语法检验严谨度，不建议在已经运行的生产环境中修改），常用值如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - STRICT_TRANS_TABLES：在该模式下,如果一个值不能插入到一个事务表中,则中断当前的操作,对非事务表不做限制。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ONLY_FULL_GROUP_BY：对于GROUP BY聚合操作,如果在SELECT中的列,没有在GROUP BY中出现,那么这个SQL是不合法的,因为列不在GROUP BY从句中。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_AUTO_VALUE_ON_ZERO：该值影响自增长列的插入。默认设置下,插入0或NULL代表生成下一个自增长值。如果用户 希望插入的值为0,而该列又是自增长的,那么这个选项就有用了。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ZERO_IN_DATE：在严格模式下,不允许日期和月份为零。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ZERO_DATE：设置该值,mysql数据库不允许插入零日期,插入零日期会抛出错误而不是警告。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ERROR_FOR_DIVISION_BY_ZERO：在INSERT或UPDATE过程中,如果数据被零除,则产生错误而非警告。如 果未给出该模式,那么数据被零除时MySQL返回NULL。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_AUTO_CREATE_USER：禁止GRANT创建密码为空的用户。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - NO_ENGINE_SUBSTITUTION：如果需要的存储引擎被禁用或未编译,那么抛出错误。不设置此值时,用默认的存储引擎替代,并抛出一个异常。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - PIPES_AS_CONCAT：将<span class="string">&quot;||&quot;</span>视为字符串的连接操作符而非或运算符,这和Oracle数据库是一样的,也和字符串的拼接函数Concat相类似。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ANSI_QUOTES：启用ANSI_QUOTES后,不能用双引号来引用字符串,因为它被解释为识别符。</span></span><br><span class="line">sql_mode</span><br></pre></td></tr></table></figure><h3 id="其他常用配置参数"><a href="#其他常用配置参数" class="headerlink" title="其他常用配置参数"></a>其他常用配置参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> MySQL刷新binlog到磁盘的方式</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 0：性能最好，当事务提交之后，MySQL不做fsync之类的磁盘同步指令刷新binlog_cache中的信息到磁盘，而让Filesystem自行决定什么时候来做同步。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - n：当每进行n次事务提交之后，MySQL将进行一次fsync之类的磁盘同步指令来将binlog_cache中的数据强制写入磁盘。</span></span><br><span class="line">sync_binlog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存临时表大小，组合使用，两个参数值要一致，避免过大</span></span><br><span class="line">tmp_table_size</span><br><span class="line">max_heap_table_size</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 最大连接数。默认100，建议2000+</span></span><br><span class="line">max_connections</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.percona.com/doc/percona-server/5.7/index.html#percona-server-version-documentation"><em>Percona Server for MySQL</em> 5.7 - Documentation</a></li><li><a href="https://cloud.tencent.com/developer/article/1441303">MySQL参数：innodb_flush_log_at_trx_commit 和 sync_binlog</a></li><li><a href="https://cloud.tencent.com/developer/article/1533798#:~:text=%E5%BD%93innodb_flush_log_at_trx_commit%E5%92%8Csync_binlog%E8%BF%99%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%E9%83%BD%E8%AE%BE%E7%BD%AE%E4%B8%BA1%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E4%BB%AC%E7%A7%B0%E4%B9%8B%E4%B8%BA%22%E5%8F%8C1%E6%A8%A1%E5%BC%8F%22%E3%80%82.%20%22%E5%8F%8C1%E8%AE%BE%E7%BD%AE%22%E9%80%82%E5%90%88%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%80%A7%E8%A6%81%E6%B1%82%E9%9D%9E%E5%B8%B8%E9%AB%98%EF%BC%8C%E8%80%8C%E4%B8%94%E7%A3%81%E7%9B%98IO%E5%86%99%E8%83%BD%E5%8A%9B%E8%B6%B3%E5%A4%9F%E6%94%AF%E6%8C%81%E4%B8%9A%E5%8A%A1%EF%BC%8C%E6%AF%94%E5%A6%82%E8%AE%A2%E5%8D%95%2C%E4%BA%A4%E6%98%93%2C%E5%85%85%E5%80%BC%2C%E6%94%AF%E4%BB%98%E6%B6%88%E8%B4%B9%E7%B3%BB%E7%BB%9F%E3%80%82.%20%E5%9C%A8mysql%20%E6%9C%8D%E5%8A%A1%E5%B4%A9%E6%BA%83%E6%88%96%E8%80%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%BB%E6%9C%BA%E6%8E%89%E7%94%B5%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8Cbinary,log%20%E5%8F%AA%E6%9C%89%E5%8F%AF%E8%83%BD%E4%B8%A2%E5%A4%B1%E6%9C%80%E5%A4%9A%E4%B8%80%E4%B8%AA%E8%AF%AD%E5%8F%A5%E6%88%96%E8%80%85%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%EF%BC%8C%E5%AE%89%E5%85%A8%E6%80%A7%E8%83%BD%E5%A4%A7%E5%A4%A7%E5%A2%9E%E5%8A%A0%EF%BC%8C%E4%BD%86%E6%98%AF%E6%88%91%E4%BB%AC%E8%AF%B4%E8%BF%87%EF%BC%8C%E5%AE%89%E5%85%A8%E6%80%A7%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD%E6%98%AF%E4%B8%80%E6%8A%8A%E5%8F%8C%E5%88%83%E5%89%91%EF%BC%8C%E5%8F%8C1%E6%A8%A1%E5%BC%8F%E4%BC%9A%E5%AF%BC%E8%87%B4%E9%A2%91%E7%B9%81%E7%9A%84io%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%AF%A5%E6%A8%A1%E5%BC%8F%E4%B9%9F%E6%98%AF%E6%9C%80%E6%85%A2%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%8C%E5%BD%B1%E5%93%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%A7%E8%83%BD%E3%80%82.%20%E5%8F%8C1%E6%A8%A1%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%BD%93%E7%A3%81%E7%9B%98IO%E6%97%A0%E6%B3%95%E6%BB%A1%E8%B6%B3%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%E6%97%B6%20%E6%AF%94%E5%A6%82%22%E5%8F%8C11%22%20%E6%B4%BB%E5%8A%A8%E7%9A%84%E5%8E%8B%E5%8A%9B%E3%80%82.">MySQL数据安全的”双1模式”简介</a></li><li><a href="https://developer.aliyun.com/article/710525">MySQL的sql_mode模式说明及设置</a></li><li><a href="https://cloud.tencent.com/developer/article/1615744">Linux 内核的 4 大 IO 调度算法</a></li><li><a href="https://www.cnblogs.com/gmpy/p/12852449.html">如何选择IO调度器</a></li><li>[<a href="https://www.cnblogs.com/bamanzi/p/linux-disk-io-scheduler.html">Linux性能调优] 磁盘I/O队列调度策略</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;性能优化优先顺序：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库结构设计和SQL语句&lt;/li&gt;
&lt;li&gt;数据库存储引擎的选择和参数配置&lt;/li&gt;
&lt;li&gt;系统选择和优化&lt;/li&gt;
&lt;li&gt;硬件升级&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://renyb2.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack开发：neutronclient</title>
    <link href="https://renyb2.github.io/2021/09/28/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9Aneutronclient/"/>
    <id>https://renyb2.github.io/2021/09/28/OpenStack%E5%BC%80%E5%8F%91%EF%BC%9Aneutronclient/</id>
    <published>2021-09-28T07:14:58.000Z</published>
    <updated>2021-10-19T11:55:49.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul><li>python：3.6.8</li><li>python-neutronclient   7.1.0</li></ul><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><strong>neutronclient调用方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> identity</span><br><span class="line"><span class="keyword">from</span> keystoneauth1 <span class="keyword">import</span> session</span><br><span class="line"><span class="keyword">from</span> neutronclient.v2_0 <span class="keyword">import</span> client</span><br><span class="line"></span><br><span class="line">username=<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">password=<span class="string">&#x27;Inspur@123&#x27;</span></span><br><span class="line">project_name=<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">project_domain_id=<span class="string">&#x27;default&#x27;</span></span><br><span class="line">user_domain_id=<span class="string">&#x27;default&#x27;</span></span><br><span class="line">auth_url=<span class="string">&#x27;http://111.111.9.190:35357/v3&#x27;</span></span><br><span class="line"></span><br><span class="line">auth = identity.Password(auth_url=auth_url,</span><br><span class="line">                         username=username,</span><br><span class="line">                         password=password,</span><br><span class="line">                         project_name=project_name,</span><br><span class="line">                         project_domain_id=project_domain_id,</span><br><span class="line">                         user_domain_id=user_domain_id)</span><br><span class="line">sess = session.Session(auth=auth)</span><br><span class="line">neutron = client.Client(session=sess)</span><br></pre></td></tr></table></figure><p><strong>neutronclient支持的方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代码取自neutronclient &gt; v2_0 &gt; client.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span>(<span class="params">ClientBase</span>):</span></span><br><span class="line"></span><br><span class="line">    networks_path = <span class="string">&quot;/networks&quot;</span></span><br><span class="line">    network_path = <span class="string">&quot;/networks/%s&quot;</span></span><br><span class="line">    ports_path = <span class="string">&quot;/ports&quot;</span></span><br><span class="line">    port_path = <span class="string">&quot;/ports/%s&quot;</span></span><br><span class="line">    port_bindings_path = <span class="string">&quot;/ports/%s/bindings&quot;</span></span><br><span class="line">    port_binding_path = <span class="string">&quot;/ports/%s/bindings/%s&quot;</span></span><br><span class="line">    port_binding_path_activate = <span class="string">&quot;/ports/%s/bindings/%s/activate&quot;</span></span><br><span class="line">    subnets_path = <span class="string">&quot;/subnets&quot;</span></span><br><span class="line">    subnet_path = <span class="string">&quot;/subnets/%s&quot;</span></span><br><span class="line">    onboard_network_subnets_path = <span class="string">&quot;/subnetpools/%s/onboard_network_subnets&quot;</span></span><br><span class="line">    subnetpools_path = <span class="string">&quot;/subnetpools&quot;</span></span><br><span class="line">    subnetpool_path = <span class="string">&quot;/subnetpools/%s&quot;</span></span><br><span class="line">    address_scopes_path = <span class="string">&quot;/address-scopes&quot;</span></span><br><span class="line">    address_scope_path = <span class="string">&quot;/address-scopes/%s&quot;</span></span><br><span class="line">    quotas_path = <span class="string">&quot;/quotas&quot;</span></span><br><span class="line">    quota_path = <span class="string">&quot;/quotas/%s&quot;</span></span><br><span class="line">    quota_default_path = <span class="string">&quot;/quotas/%s/default&quot;</span></span><br><span class="line">    quota_details_path = <span class="string">&quot;/quotas/%s/details.json&quot;</span></span><br><span class="line">    extensions_path = <span class="string">&quot;/extensions&quot;</span></span><br><span class="line">    extension_path = <span class="string">&quot;/extensions/%s&quot;</span></span><br><span class="line">    routers_path = <span class="string">&quot;/routers&quot;</span></span><br><span class="line">    router_path = <span class="string">&quot;/routers/%s&quot;</span></span><br><span class="line">    floatingips_path = <span class="string">&quot;/floatingips&quot;</span></span><br><span class="line">    floatingip_path = <span class="string">&quot;/floatingips/%s&quot;</span></span><br><span class="line">    security_groups_path = <span class="string">&quot;/security-groups&quot;</span></span><br><span class="line">    security_group_path = <span class="string">&quot;/security-groups/%s&quot;</span></span><br><span class="line">    security_group_rules_path = <span class="string">&quot;/security-group-rules&quot;</span></span><br><span class="line">    security_group_rule_path = <span class="string">&quot;/security-group-rules/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    sfc_flow_classifiers_path = <span class="string">&quot;/sfc/flow_classifiers&quot;</span></span><br><span class="line">    sfc_flow_classifier_path = <span class="string">&quot;/sfc/flow_classifiers/%s&quot;</span></span><br><span class="line">    sfc_port_pairs_path = <span class="string">&quot;/sfc/port_pairs&quot;</span></span><br><span class="line">    sfc_port_pair_path = <span class="string">&quot;/sfc/port_pairs/%s&quot;</span></span><br><span class="line">    sfc_port_pair_groups_path = <span class="string">&quot;/sfc/port_pair_groups&quot;</span></span><br><span class="line">    sfc_port_pair_group_path = <span class="string">&quot;/sfc/port_pair_groups/%s&quot;</span></span><br><span class="line">    sfc_port_chains_path = <span class="string">&quot;/sfc/port_chains&quot;</span></span><br><span class="line">    sfc_port_chain_path = <span class="string">&quot;/sfc/port_chains/%s&quot;</span></span><br><span class="line">    sfc_service_graphs_path = <span class="string">&quot;/sfc/service_graphs&quot;</span></span><br><span class="line">    sfc_service_graph_path = <span class="string">&quot;/sfc/service_graphs/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    endpoint_groups_path = <span class="string">&quot;/vpn/endpoint-groups&quot;</span></span><br><span class="line">    endpoint_group_path = <span class="string">&quot;/vpn/endpoint-groups/%s&quot;</span></span><br><span class="line">    vpnservices_path = <span class="string">&quot;/vpn/vpnservices&quot;</span></span><br><span class="line">    vpnservice_path = <span class="string">&quot;/vpn/vpnservices/%s&quot;</span></span><br><span class="line">    ipsecpolicies_path = <span class="string">&quot;/vpn/ipsecpolicies&quot;</span></span><br><span class="line">    ipsecpolicy_path = <span class="string">&quot;/vpn/ipsecpolicies/%s&quot;</span></span><br><span class="line">    ikepolicies_path = <span class="string">&quot;/vpn/ikepolicies&quot;</span></span><br><span class="line">    ikepolicy_path = <span class="string">&quot;/vpn/ikepolicies/%s&quot;</span></span><br><span class="line">    ipsec_site_connections_path = <span class="string">&quot;/vpn/ipsec-site-connections&quot;</span></span><br><span class="line">    ipsec_site_connection_path = <span class="string">&quot;/vpn/ipsec-site-connections/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    lbaas_loadbalancers_path = <span class="string">&quot;/lbaas/loadbalancers&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path = <span class="string">&quot;/lbaas/loadbalancers/%s&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path_stats = <span class="string">&quot;/lbaas/loadbalancers/%s/stats&quot;</span></span><br><span class="line">    lbaas_loadbalancer_path_status = <span class="string">&quot;/lbaas/loadbalancers/%s/statuses&quot;</span></span><br><span class="line">    lbaas_listeners_path = <span class="string">&quot;/lbaas/listeners&quot;</span></span><br><span class="line">    lbaas_listener_path = <span class="string">&quot;/lbaas/listeners/%s&quot;</span></span><br><span class="line">    lbaas_l7policies_path = <span class="string">&quot;/lbaas/l7policies&quot;</span></span><br><span class="line">    lbaas_l7policy_path = lbaas_l7policies_path + <span class="string">&quot;/%s&quot;</span></span><br><span class="line">    lbaas_l7rules_path = lbaas_l7policy_path + <span class="string">&quot;/rules&quot;</span></span><br><span class="line">    lbaas_l7rule_path = lbaas_l7rules_path + <span class="string">&quot;/%s&quot;</span></span><br><span class="line">    lbaas_pools_path = <span class="string">&quot;/lbaas/pools&quot;</span></span><br><span class="line">    lbaas_pool_path = <span class="string">&quot;/lbaas/pools/%s&quot;</span></span><br><span class="line">    lbaas_healthmonitors_path = <span class="string">&quot;/lbaas/healthmonitors&quot;</span></span><br><span class="line">    lbaas_healthmonitor_path = <span class="string">&quot;/lbaas/healthmonitors/%s&quot;</span></span><br><span class="line">    lbaas_members_path = lbaas_pool_path + <span class="string">&quot;/members&quot;</span></span><br><span class="line">    lbaas_member_path = lbaas_pool_path + <span class="string">&quot;/members/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    vips_path = <span class="string">&quot;/lb/vips&quot;</span></span><br><span class="line">    vip_path = <span class="string">&quot;/lb/vips/%s&quot;</span></span><br><span class="line">    pools_path = <span class="string">&quot;/lb/pools&quot;</span></span><br><span class="line">    pool_path = <span class="string">&quot;/lb/pools/%s&quot;</span></span><br><span class="line">    pool_path_stats = <span class="string">&quot;/lb/pools/%s/stats&quot;</span></span><br><span class="line">    members_path = <span class="string">&quot;/lb/members&quot;</span></span><br><span class="line">    member_path = <span class="string">&quot;/lb/members/%s&quot;</span></span><br><span class="line">    health_monitors_path = <span class="string">&quot;/lb/health_monitors&quot;</span></span><br><span class="line">    health_monitor_path = <span class="string">&quot;/lb/health_monitors/%s&quot;</span></span><br><span class="line">    associate_pool_health_monitors_path = <span class="string">&quot;/lb/pools/%s/health_monitors&quot;</span></span><br><span class="line">    disassociate_pool_health_monitors_path = (</span><br><span class="line">        <span class="string">&quot;/lb/pools/%(pool)s/health_monitors/%(health_monitor)s&quot;</span>)</span><br><span class="line">    qos_queues_path = <span class="string">&quot;/qos-queues&quot;</span></span><br><span class="line">    qos_queue_path = <span class="string">&quot;/qos-queues/%s&quot;</span></span><br><span class="line">    agents_path = <span class="string">&quot;/agents&quot;</span></span><br><span class="line">    agent_path = <span class="string">&quot;/agents/%s&quot;</span></span><br><span class="line">    network_gateways_path = <span class="string">&quot;/network-gateways&quot;</span></span><br><span class="line">    network_gateway_path = <span class="string">&quot;/network-gateways/%s&quot;</span></span><br><span class="line">    gateway_devices_path = <span class="string">&quot;/gateway-devices&quot;</span></span><br><span class="line">    gateway_device_path = <span class="string">&quot;/gateway-devices/%s&quot;</span></span><br><span class="line">    service_providers_path = <span class="string">&quot;/service-providers&quot;</span></span><br><span class="line">    metering_labels_path = <span class="string">&quot;/metering/metering-labels&quot;</span></span><br><span class="line">    metering_label_path = <span class="string">&quot;/metering/metering-labels/%s&quot;</span></span><br><span class="line">    metering_label_rules_path = <span class="string">&quot;/metering/metering-label-rules&quot;</span></span><br><span class="line">    metering_label_rule_path = <span class="string">&quot;/metering/metering-label-rules/%s&quot;</span></span><br><span class="line"></span><br><span class="line">    DHCP_NETS = <span class="string">&#x27;/dhcp-networks&#x27;</span></span><br><span class="line">    DHCP_AGENTS = <span class="string">&#x27;/dhcp-agents&#x27;</span></span><br><span class="line">    L3_ROUTERS = <span class="string">&#x27;/l3-routers&#x27;</span></span><br><span class="line">    L3_AGENTS = <span class="string">&#x27;/l3-agents&#x27;</span></span><br><span class="line">    LOADBALANCER_POOLS = <span class="string">&#x27;/loadbalancer-pools&#x27;</span></span><br><span class="line">    LOADBALANCER_AGENT = <span class="string">&#x27;/loadbalancer-agent&#x27;</span></span><br><span class="line">    AGENT_LOADBALANCERS = <span class="string">&#x27;/agent-loadbalancers&#x27;</span></span><br><span class="line">    LOADBALANCER_HOSTING_AGENT = <span class="string">&#x27;/loadbalancer-hosting-agent&#x27;</span></span><br><span class="line">    firewall_rules_path = <span class="string">&quot;/fw/firewall_rules&quot;</span></span><br><span class="line">    firewall_rule_path = <span class="string">&quot;/fw/firewall_rules/%s&quot;</span></span><br><span class="line">    firewall_policies_path = <span class="string">&quot;/fw/firewall_policies&quot;</span></span><br><span class="line">    firewall_policy_path = <span class="string">&quot;/fw/firewall_policies/%s&quot;</span></span><br><span class="line">    firewall_policy_insert_path = <span class="string">&quot;/fw/firewall_policies/%s/insert_rule&quot;</span></span><br><span class="line">    firewall_policy_remove_path = <span class="string">&quot;/fw/firewall_policies/%s/remove_rule&quot;</span></span><br><span class="line">    firewalls_path = <span class="string">&quot;/fw/firewalls&quot;</span></span><br><span class="line">    firewall_path = <span class="string">&quot;/fw/firewalls/%s&quot;</span></span><br><span class="line">    fwaas_firewall_groups_path = <span class="string">&quot;/fwaas/firewall_groups&quot;</span></span><br><span class="line">    fwaas_firewall_group_path = <span class="string">&quot;/fwaas/firewall_groups/%s&quot;</span></span><br><span class="line">    fwaas_firewall_rules_path = <span class="string">&quot;/fwaas/firewall_rules&quot;</span></span><br><span class="line">    fwaas_firewall_rule_path = <span class="string">&quot;/fwaas/firewall_rules/%s&quot;</span></span><br><span class="line">    fwaas_firewall_policies_path = <span class="string">&quot;/fwaas/firewall_policies&quot;</span></span><br><span class="line">    fwaas_firewall_policy_path = <span class="string">&quot;/fwaas/firewall_policies/%s&quot;</span></span><br><span class="line">    fwaas_firewall_policy_insert_path = \</span><br><span class="line">        <span class="string">&quot;/fwaas/firewall_policies/%s/insert_rule&quot;</span></span><br><span class="line">    fwaas_firewall_policy_remove_path = \</span><br><span class="line">        <span class="string">&quot;/fwaas/firewall_policies/%s/remove_rule&quot;</span></span><br><span class="line">    rbac_policies_path = <span class="string">&quot;/rbac-policies&quot;</span></span><br><span class="line">    rbac_policy_path = <span class="string">&quot;/rbac-policies/%s&quot;</span></span><br><span class="line">    qos_policies_path = <span class="string">&quot;/qos/policies&quot;</span></span><br><span class="line">    qos_policy_path = <span class="string">&quot;/qos/policies/%s&quot;</span></span><br><span class="line">    qos_bandwidth_limit_rules_path = <span class="string">&quot;/qos/policies/%s/bandwidth_limit_rules&quot;</span></span><br><span class="line">    qos_bandwidth_limit_rule_path = <span class="string">&quot;/qos/policies/%s/bandwidth_limit_rules/%s&quot;</span></span><br><span class="line">    qos_dscp_marking_rules_path = <span class="string">&quot;/qos/policies/%s/dscp_marking_rules&quot;</span></span><br><span class="line">    qos_dscp_marking_rule_path = <span class="string">&quot;/qos/policies/%s/dscp_marking_rules/%s&quot;</span></span><br><span class="line">    qos_minimum_bandwidth_rules_path = \</span><br><span class="line">        <span class="string">&quot;/qos/policies/%s/minimum_bandwidth_rules&quot;</span></span><br><span class="line">    qos_minimum_bandwidth_rule_path = \</span><br><span class="line">        <span class="string">&quot;/qos/policies/%s/minimum_bandwidth_rules/%s&quot;</span></span><br><span class="line">    qos_rule_types_path = <span class="string">&quot;/qos/rule-types&quot;</span></span><br><span class="line">    qos_rule_type_path = <span class="string">&quot;/qos/rule-types/%s&quot;</span></span><br><span class="line">    flavors_path = <span class="string">&quot;/flavors&quot;</span></span><br><span class="line">    flavor_path = <span class="string">&quot;/flavors/%s&quot;</span></span><br><span class="line">    service_profiles_path = <span class="string">&quot;/service_profiles&quot;</span></span><br><span class="line">    service_profile_path = <span class="string">&quot;/service_profiles/%s&quot;</span></span><br><span class="line">    flavor_profile_bindings_path = flavor_path + service_profiles_path</span><br><span class="line">    flavor_profile_binding_path = flavor_path + service_profile_path</span><br><span class="line">    availability_zones_path = <span class="string">&quot;/availability_zones&quot;</span></span><br><span class="line">    auto_allocated_topology_path = <span class="string">&quot;/auto-allocated-topology/%s&quot;</span></span><br><span class="line">    BGP_DRINSTANCES = <span class="string">&quot;/bgp-drinstances&quot;</span></span><br><span class="line">    BGP_DRINSTANCE = <span class="string">&quot;/bgp-drinstance/%s&quot;</span></span><br><span class="line">    BGP_DRAGENTS = <span class="string">&quot;/bgp-dragents&quot;</span></span><br><span class="line">    BGP_DRAGENT = <span class="string">&quot;/bgp-dragents/%s&quot;</span></span><br><span class="line">    bgp_speakers_path = <span class="string">&quot;/bgp-speakers&quot;</span></span><br><span class="line">    bgp_speaker_path = <span class="string">&quot;/bgp-speakers/%s&quot;</span></span><br><span class="line">    bgp_peers_path = <span class="string">&quot;/bgp-peers&quot;</span></span><br><span class="line">    bgp_peer_path = <span class="string">&quot;/bgp-peers/%s&quot;</span></span><br><span class="line">    network_ip_availabilities_path = <span class="string">&#x27;/network-ip-availabilities&#x27;</span></span><br><span class="line">    network_ip_availability_path = <span class="string">&#x27;/network-ip-availabilities/%s&#x27;</span></span><br><span class="line">    tags_path = <span class="string">&quot;/%s/%s/tags&quot;</span></span><br><span class="line">    tag_path = <span class="string">&quot;/%s/%s/tags/%s&quot;</span></span><br><span class="line">    trunks_path = <span class="string">&quot;/trunks&quot;</span></span><br><span class="line">    trunk_path = <span class="string">&quot;/trunks/%s&quot;</span></span><br><span class="line">    subports_path = <span class="string">&quot;/trunks/%s/get_subports&quot;</span></span><br><span class="line">    subports_add_path = <span class="string">&quot;/trunks/%s/add_subports&quot;</span></span><br><span class="line">    subports_remove_path = <span class="string">&quot;/trunks/%s/remove_subports&quot;</span></span><br><span class="line">    bgpvpns_path = <span class="string">&quot;/bgpvpn/bgpvpns&quot;</span></span><br><span class="line">    bgpvpn_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s&quot;</span></span><br><span class="line">    bgpvpn_network_associations_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/network_associations&quot;</span></span><br><span class="line">    bgpvpn_network_association_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/network_associations/%s&quot;</span></span><br><span class="line">    bgpvpn_router_associations_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/router_associations&quot;</span></span><br><span class="line">    bgpvpn_router_association_path =\</span><br><span class="line">        <span class="string">&quot;/bgpvpn/bgpvpns/%s/router_associations/%s&quot;</span></span><br><span class="line">    bgpvpn_port_associations_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/port_associations&quot;</span></span><br><span class="line">    bgpvpn_port_association_path = <span class="string">&quot;/bgpvpn/bgpvpns/%s/port_associations/%s&quot;</span></span><br><span class="line">    network_logs_path = <span class="string">&quot;/log/logs&quot;</span></span><br><span class="line">    network_log_path = <span class="string">&quot;/log/logs/%s&quot;</span></span><br><span class="line">    network_loggables_path = <span class="string">&quot;/log/loggable-resources&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># API has no way to report plurals, so we have to hard code them</span></span><br><span class="line">    EXTED_PLURALS = &#123;<span class="string">&#x27;routers&#x27;</span>: <span class="string">&#x27;router&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;floatingips&#x27;</span>: <span class="string">&#x27;floatingip&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_types&#x27;</span>: <span class="string">&#x27;service_type&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_definitions&#x27;</span>: <span class="string">&#x27;service_definition&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;security_groups&#x27;</span>: <span class="string">&#x27;security_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;security_group_rules&#x27;</span>: <span class="string">&#x27;security_group_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ipsecpolicies&#x27;</span>: <span class="string">&#x27;ipsecpolicy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ikepolicies&#x27;</span>: <span class="string">&#x27;ikepolicy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;ipsec_site_connections&#x27;</span>: <span class="string">&#x27;ipsec_site_connection&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;vpnservices&#x27;</span>: <span class="string">&#x27;vpnservice&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;endpoint_groups&#x27;</span>: <span class="string">&#x27;endpoint_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;vips&#x27;</span>: <span class="string">&#x27;vip&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;pools&#x27;</span>: <span class="string">&#x27;pool&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;members&#x27;</span>: <span class="string">&#x27;member&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;health_monitors&#x27;</span>: <span class="string">&#x27;health_monitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;quotas&#x27;</span>: <span class="string">&#x27;quota&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_providers&#x27;</span>: <span class="string">&#x27;service_provider&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewall_rules&#x27;</span>: <span class="string">&#x27;firewall_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewall_policies&#x27;</span>: <span class="string">&#x27;firewall_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;firewalls&#x27;</span>: <span class="string">&#x27;firewall&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_rules&#x27;</span>: <span class="string">&#x27;fwaas_firewall_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_policies&#x27;</span>: <span class="string">&#x27;fwaas_firewall_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;fwaas_firewall_groups&#x27;</span>: <span class="string">&#x27;fwaas_firewall_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;metering_labels&#x27;</span>: <span class="string">&#x27;metering_label&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;metering_label_rules&#x27;</span>: <span class="string">&#x27;metering_label_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;loadbalancers&#x27;</span>: <span class="string">&#x27;loadbalancer&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;listeners&#x27;</span>: <span class="string">&#x27;listener&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;l7rules&#x27;</span>: <span class="string">&#x27;l7rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;l7policies&#x27;</span>: <span class="string">&#x27;l7policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_l7policies&#x27;</span>: <span class="string">&#x27;lbaas_l7policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_pools&#x27;</span>: <span class="string">&#x27;lbaas_pool&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_healthmonitors&#x27;</span>: <span class="string">&#x27;lbaas_healthmonitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;lbaas_members&#x27;</span>: <span class="string">&#x27;lbaas_member&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;healthmonitors&#x27;</span>: <span class="string">&#x27;healthmonitor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rbac_policies&#x27;</span>: <span class="string">&#x27;rbac_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;address_scopes&#x27;</span>: <span class="string">&#x27;address_scope&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;qos_policies&#x27;</span>: <span class="string">&#x27;qos_policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;policies&#x27;</span>: <span class="string">&#x27;policy&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bandwidth_limit_rules&#x27;</span>: <span class="string">&#x27;bandwidth_limit_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;minimum_bandwidth_rules&#x27;</span>: <span class="string">&#x27;minimum_bandwidth_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rules&#x27;</span>: <span class="string">&#x27;rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;dscp_marking_rules&#x27;</span>: <span class="string">&#x27;dscp_marking_rule&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;rule_types&#x27;</span>: <span class="string">&#x27;rule_type&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;flavors&#x27;</span>: <span class="string">&#x27;flavor&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgp_speakers&#x27;</span>: <span class="string">&#x27;bgp_speaker&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgp_peers&#x27;</span>: <span class="string">&#x27;bgp_peer&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;network_ip_availabilities&#x27;</span>: <span class="string">&#x27;network_ip_availability&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;trunks&#x27;</span>: <span class="string">&#x27;trunk&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;bgpvpns&#x27;</span>: <span class="string">&#x27;bgpvpn&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;network_associations&#x27;</span>: <span class="string">&#x27;network_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;router_associations&#x27;</span>: <span class="string">&#x27;router_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_associations&#x27;</span>: <span class="string">&#x27;port_association&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;flow_classifiers&#x27;</span>: <span class="string">&#x27;flow_classifier&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_pairs&#x27;</span>: <span class="string">&#x27;port_pair&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_pair_groups&#x27;</span>: <span class="string">&#x27;port_pair_group&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;port_chains&#x27;</span>: <span class="string">&#x27;port_chain&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;service_graphs&#x27;</span>: <span class="string">&#x27;service_graph&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;logs&#x27;</span>: <span class="string">&#x27;log&#x27;</span>,</span><br><span class="line">                     <span class="string">&#x27;loggable_resources&#x27;</span>: <span class="string">&#x27;loggable_resource&#x27;</span>,</span><br><span class="line">                     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ext</span>(<span class="params">self, collection, path, retrieve_all, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for list.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(collection, path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ext</span>(<span class="params">self, path, id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for show.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(path % id, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ext</span>(<span class="params">self, path, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for create.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ext</span>(<span class="params">self, path, id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for update.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(path % id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ext</span>(<span class="params">self, path, id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Client extension hook for delete.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(path % id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_quotas_tenant</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch project info for following quota operation.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_path % <span class="string">&#x27;tenant&#x27;</span>, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_quotas</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch all projects&#x27; quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quotas_path, params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_path % (project_id), params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota_details</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s quota details.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_details_path % (project_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_quota_default</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain project&#x27;s default quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.quota_default_path % (project_id), params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_quota</span>(<span class="params">self, project_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a project&#x27;s quotas.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.quota_path % (project_id), body=body)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_quota</span>(<span class="params">self, project_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified project&#x27;s quota values.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.quota_path % (project_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_extensions</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all extensions on server side.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.extensions_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_extension</span>(<span class="params">self, ext_alias, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain extension.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.extension_path % ext_alias, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ports</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all ports for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ports&#x27;</span>, self.ports_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_port</span>(<span class="params">self, port, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.port_path % (port), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_port</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ports_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_port</span>(<span class="params">self, port, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.port_path % (port), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_port</span>(<span class="params">self, port</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.port_path % (port))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_port_binding</span>(<span class="params">self, port_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.port_bindings_path % port_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_port_binding</span>(<span class="params">self, port_id, host_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.port_binding_path % (port_id, host_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_port_binding</span>(<span class="params">self, port_id, host_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.port_binding_path % (port_id, host_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_port_bindings</span>(<span class="params">self, port_id, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all bindings for a certain port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_bindings&#x27;</span>, self.port_bindings_path % port_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">activate_port_binding</span>(<span class="params">self, port_id, host_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Activates a port binding.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.port_binding_path_activate % (port_id, host_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_networks</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all networks for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;networks&#x27;</span>, self.networks_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_path % (network), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.networks_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network</span>(<span class="params">self, network, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.network_path % (network), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network</span>(<span class="params">self, network</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_path % (network))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_subnets</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all subnets for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;subnets&#x27;</span>, self.subnets_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_subnet</span>(<span class="params">self, subnet, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subnet_path % (subnet), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_subnet</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.subnets_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_subnet</span>(<span class="params">self, subnet, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.subnet_path % (subnet), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_subnet</span>(<span class="params">self, subnet</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified subnet.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.subnet_path % (subnet))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_subnetpools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all subnetpools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;subnetpools&#x27;</span>, self.subnetpools_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_subnetpool</span>(<span class="params">self, subnetpool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subnetpool_path % (subnetpool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_subnetpool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.subnetpools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_subnetpool</span>(<span class="params">self, subnetpool, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.subnetpool_path % (subnetpool),</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_subnetpool</span>(<span class="params">self, subnetpool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified subnetpool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.subnetpool_path % (subnetpool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_routers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all routers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;routers&#x27;</span>, self.routers_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_router</span>(<span class="params">self, router, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.router_path % (router), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_router</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.routers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_router</span>(<span class="params">self, router, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.router_path % (router), body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_router</span>(<span class="params">self, router</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.router_path % (router))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_address_scopes</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all address scopes for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;address_scopes&#x27;</span>, self.address_scopes_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_address_scope</span>(<span class="params">self, address_scope, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.address_scope_path % (address_scope),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_address_scope</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.address_scopes_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_address_scope</span>(<span class="params">self, address_scope, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.address_scope_path % (address_scope), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_address_scope</span>(<span class="params">self, address_scope</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified address scope.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.address_scope_path % (address_scope))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_interface_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds an internal network interface to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/add_router_interface&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_interface_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes an internal network interface from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) +</span><br><span class="line">                        <span class="string">&quot;/remove_router_interface&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_extra_routes_to_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds extra routes to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/add_extraroutes&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_extra_routes_from_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes extra routes from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router) + <span class="string">&quot;/remove_extraroutes&quot;</span>,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_gateway_router</span>(<span class="params">self, router, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds an external network gateway to the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router),</span><br><span class="line">                        body=&#123;<span class="string">&#x27;router&#x27;</span>: &#123;<span class="string">&#x27;external_gateway_info&#x27;</span>: body&#125;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_gateway_router</span>(<span class="params">self, router</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes an external network gateway from the specified router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.router_path % router),</span><br><span class="line">                        body=&#123;<span class="string">&#x27;router&#x27;</span>: &#123;<span class="string">&#x27;external_gateway_info&#x27;</span>: &#123;&#125;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_floatingips</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all floatingips for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;floatingips&#x27;</span>, self.floatingips_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_floatingip</span>(<span class="params">self, floatingip, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.floatingip_path % (floatingip), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_floatingip</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.floatingips_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_floatingip</span>(<span class="params">self, floatingip, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.floatingip_path % (floatingip),</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_floatingip</span>(<span class="params">self, floatingip</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified floatingip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.floatingip_path % (floatingip))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_security_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.security_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_security_group</span>(<span class="params">self, security_group, body=None,</span></span></span><br><span class="line"><span class="function"><span class="params">                              revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.security_group_path %</span><br><span class="line">                                     security_group, body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_security_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all security groups for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;security_groups&#x27;</span>, self.security_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_security_group</span>(<span class="params">self, security_group, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.security_group_path % (security_group),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_security_group</span>(<span class="params">self, security_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified security group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.security_group_path % (security_group))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_security_group_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.security_group_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_security_group_rule</span>(<span class="params">self, security_group_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.security_group_rule_path %</span><br><span class="line">                           (security_group_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_security_group_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all security group rules for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;security_group_rules&#x27;</span>,</span><br><span class="line">                         self.security_group_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_security_group_rule</span>(<span class="params">self, security_group_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain security group rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.security_group_rule_path % (security_group_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_endpoint_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all VPN endpoint groups for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;endpoint_groups&#x27;</span>, self.endpoint_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_endpoint_group</span>(<span class="params">self, endpointgroup, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a specific VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.endpoint_group_path % endpointgroup,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_endpoint_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.endpoint_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_endpoint_group</span>(<span class="params">self, endpoint_group, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.endpoint_group_path % endpoint_group, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_endpoint_group</span>(<span class="params">self, endpoint_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified VPN endpoint group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.endpoint_group_path % endpoint_group)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_vpnservices</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured VPN services for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;vpnservices&#x27;</span>, self.vpnservices_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_vpnservice</span>(<span class="params">self, vpnservice, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.vpnservice_path % (vpnservice), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_vpnservice</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.vpnservices_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_vpnservice</span>(<span class="params">self, vpnservice, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.vpnservice_path % (vpnservice), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_vpnservice</span>(<span class="params">self, vpnservice</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified VPN service.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.vpnservice_path % (vpnservice))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ipsec_site_connections</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches all configured IPsecSiteConnections for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ipsec_site_connections&#x27;</span>,</span><br><span class="line">                         self.ipsec_site_connections_path,</span><br><span class="line">                         retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.ipsec_site_connection_path % (ipsecsite_conn), params=_params</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ipsec_site_connection</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ipsec_site_connections_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.ipsec_site_connection_path % (ipsecsite_conn), body=body</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ipsec_site_connection</span>(<span class="params">self, ipsecsite_conn</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IPsecSiteConnection.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ipsec_site_connection_path % (ipsecsite_conn))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ikepolicies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured IKEPolicies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ikepolicies&#x27;</span>, self.ikepolicies_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ikepolicy</span>(<span class="params">self, ikepolicy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.ikepolicy_path % (ikepolicy), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ikepolicy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ikepolicies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ikepolicy</span>(<span class="params">self, ikepolicy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.ikepolicy_path % (ikepolicy), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ikepolicy</span>(<span class="params">self, ikepolicy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IKEPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ikepolicy_path % (ikepolicy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_ipsecpolicies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all configured IPsecPolicies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;ipsecpolicies&#x27;</span>,</span><br><span class="line">                         self.ipsecpolicies_path,</span><br><span class="line">                         retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_ipsecpolicy</span>(<span class="params">self, ipsecpolicy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a specific IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.ipsecpolicy_path % (ipsecpolicy), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_ipsecpolicy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.ipsecpolicies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_ipsecpolicy</span>(<span class="params">self, ipsecpolicy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.ipsecpolicy_path % (ipsecpolicy), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_ipsecpolicy</span>(<span class="params">self, ipsecpolicy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified IPsecPolicy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.ipsecpolicy_path % (ipsecpolicy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_loadbalancers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all loadbalancers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loadbalancers&#x27;</span>, self.lbaas_loadbalancers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path % (lbaas_loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_loadbalancer</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_loadbalancers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_loadbalancer_path % (lbaas_loadbalancer),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_loadbalancer</span>(<span class="params">self, lbaas_loadbalancer</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_loadbalancer_path %</span><br><span class="line">                           (lbaas_loadbalancer))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_loadbalancer_stats</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves stats for a certain load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path_stats % (loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_loadbalancer_status</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves status for a certain load balancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_loadbalancer_path_status % (loadbalancer),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_listeners</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_listeners for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;listeners&#x27;</span>, self.lbaas_listeners_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_listener</span>(<span class="params">self, lbaas_listener, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_listener_path % (lbaas_listener),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_listener</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_listeners_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_listener</span>(<span class="params">self, lbaas_listener, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_listener_path % (lbaas_listener),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_listener</span>(<span class="params">self, lbaas_listener</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_listener_path % (lbaas_listener))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_l7policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all L7 policies for a listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;l7policies&#x27;</span>, self.lbaas_l7policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_l7policy</span>(<span class="params">self, l7policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain listener&#x27;s L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_l7policy_path % l7policy,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_l7policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates L7 policy for a certain listener.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_l7policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_l7policy</span>(<span class="params">self, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_l7policy_path % l7policy,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_l7policy</span>(<span class="params">self, l7policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_l7policy_path % l7policy)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_l7rules</span>(<span class="params">self, l7policy, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all rules for L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rules&#x27;</span>, self.lbaas_l7rules_path % l7policy,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain L7 policy&#x27;s rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_l7rule_path % (l7policy, l7rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_l7rule</span>(<span class="params">self, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates rule for a certain L7 policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_l7rules_path % l7policy, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates L7 rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_l7rule_path % (l7policy, l7rule),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_l7rule</span>(<span class="params">self, l7rule, l7policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified L7 rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_l7rule_path % (l7policy, l7rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_pools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_pools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;pools&#x27;</span>, self.lbaas_pools_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_pool</span>(<span class="params">self, lbaas_pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_pool_path % (lbaas_pool),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_pool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_pools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_pool</span>(<span class="params">self, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_pool_path % (lbaas_pool),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_pool</span>(<span class="params">self, lbaas_pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_pool_path % (lbaas_pool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_healthmonitors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_healthmonitors for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;healthmonitors&#x27;</span>, self.lbaas_healthmonitors_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_healthmonitor_path % (lbaas_healthmonitor),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_healthmonitor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_healthmonitors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_healthmonitor_path % (lbaas_healthmonitor),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_healthmonitor</span>(<span class="params">self, lbaas_healthmonitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_healthmonitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_healthmonitor_path %</span><br><span class="line">                           (lbaas_healthmonitor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_loadbalancers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_loadbalancers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loadbalancers&#x27;</span>, self.lbaas_loadbalancers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_lbaas_members</span>(<span class="params">self, lbaas_pool, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all lbaas_members for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;members&#x27;</span>, self.lbaas_members_path % lbaas_pool,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.lbaas_member_path % (lbaas_pool, lbaas_member),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_lbaas_member</span>(<span class="params">self, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.lbaas_members_path % lbaas_pool, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.lbaas_member_path % (lbaas_pool, lbaas_member),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_lbaas_member</span>(<span class="params">self, lbaas_member, lbaas_pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified lbaas_member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.lbaas_member_path % (lbaas_pool, lbaas_member))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_vips</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer vips for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;vips&#x27;</span>, self.vips_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_vip</span>(<span class="params">self, vip, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.vip_path % (vip), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_vip</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.vips_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_vip</span>(<span class="params">self, vip, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.vip_path % (vip), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_vip</span>(<span class="params">self, vip</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer vip.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.vip_path % (vip))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_pools</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer pools for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;pools&#x27;</span>, self.pools_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_pool</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.pool_path % (pool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_pool</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.pools_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_pool</span>(<span class="params">self, pool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.pool_path % (pool), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_pool</span>(<span class="params">self, pool</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.pool_path % (pool))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve_pool_stats</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieves stats for a certain load balancer pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.pool_path_stats % (pool), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_members</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer members for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;members&#x27;</span>, self.members_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_member</span>(<span class="params">self, member, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.member_path % (member), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_member</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.members_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_member</span>(<span class="params">self, member, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.member_path % (member), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_member</span>(<span class="params">self, member</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer member.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.member_path % (member))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_health_monitors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all load balancer health monitors for a project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;health_monitors&#x27;</span>, self.health_monitors_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_health_monitor</span>(<span class="params">self, health_monitor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.health_monitor_path % (health_monitor),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_health_monitor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.health_monitors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_health_monitor</span>(<span class="params">self, health_monitor, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.health_monitor_path % (health_monitor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_health_monitor</span>(<span class="params">self, health_monitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified load balancer health monitor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.health_monitor_path % (health_monitor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">associate_health_monitor</span>(<span class="params">self, pool, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Associate  specified load balancer health monitor and pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.associate_pool_health_monitors_path % (pool),</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disassociate_health_monitor</span>(<span class="params">self, pool, health_monitor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disassociate specified load balancer health monitor and pool.&quot;&quot;&quot;</span></span><br><span class="line">        path = (self.disassociate_pool_health_monitors_path %</span><br><span class="line">                &#123;<span class="string">&#x27;pool&#x27;</span>: pool, <span class="string">&#x27;health_monitor&#x27;</span>: health_monitor&#125;)</span><br><span class="line">        <span class="keyword">return</span> self.delete(path)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_qos_queue</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_queues_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_queues</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all queues for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_queues_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_qos_queue</span>(<span class="params">self, queue, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_queue_path % (queue),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_qos_queue</span>(<span class="params">self, queue</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified queue.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_queue_path % (queue))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_agents</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches agents.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.agents_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_agent</span>(<span class="params">self, agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.agent_path % (agent), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_agent</span>(<span class="params">self, agent, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates an agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.agent_path % (agent), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_agent</span>(<span class="params">self, agent</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.agent_path % (agent))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_gateways</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieve network gateways.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_gateways_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_gateway</span>(<span class="params">self, gateway_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_gateway_path % gateway_id, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network_gateway</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.network_gateways_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.network_gateway_path % gateway_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network_gateway</span>(<span class="params">self, gateway_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified network gateway.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_gateway_path % gateway_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Connect a network gateway to the specified network.&quot;&quot;&quot;</span></span><br><span class="line">        base_uri = self.network_gateway_path % gateway_id</span><br><span class="line">        <span class="keyword">return</span> self.put(<span class="string">&quot;%s/connect_network&quot;</span> % base_uri, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disconnect_network_gateway</span>(<span class="params">self, gateway_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disconnect a network from the specified gateway.&quot;&quot;&quot;</span></span><br><span class="line">        base_uri = self.network_gateway_path % gateway_id</span><br><span class="line">        <span class="keyword">return</span> self.put(<span class="string">&quot;%s/disconnect_network&quot;</span> % base_uri, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_gateway_devices</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Retrieve gateway devices.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.gateway_devices_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_gateway_device</span>(<span class="params">self, gateway_device_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.gateway_device_path % gateway_device_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_gateway_device</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.gateway_devices_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_gateway_device</span>(<span class="params">self, gateway_device_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a new gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.gateway_device_path % gateway_device_id,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_gateway_device</span>(<span class="params">self, gateway_device_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified gateway device.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.gateway_device_path % gateway_device_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dhcp_agent_hosting_networks</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of dhcp agents hosting a network.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.network_path + self.DHCP_AGENTS) % network,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_networks_on_dhcp_agent</span>(<span class="params">self, dhcp_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of networks hosted on a DHCP agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.DHCP_NETS) % dhcp_agent,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_network_to_dhcp_agent</span>(<span class="params">self, dhcp_agent, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a network to dhcp agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.DHCP_NETS) % dhcp_agent,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_network_from_dhcp_agent</span>(<span class="params">self, dhcp_agent, network_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a network from dhcp agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.DHCP_NETS + <span class="string">&quot;/%s&quot;</span>) % (</span><br><span class="line">            dhcp_agent, network_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_l3_agent_hosting_routers</span>(<span class="params">self, router, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of L3 agents hosting a router.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.router_path + self.L3_AGENTS) % router,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_routers_on_l3_agent</span>(<span class="params">self, l3_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of routers hosted on an L3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.L3_ROUTERS) % l3_agent,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_router_to_l3_agent</span>(<span class="params">self, l3_agent, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a router to L3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.L3_ROUTERS) % l3_agent,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dragents_hosting_bgp_speaker</span>(<span class="params">self, bgp_speaker, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of Dynamic Routing agents hosting a BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.bgp_speaker_path + self.BGP_DRAGENTS)</span><br><span class="line">                        % bgp_speaker, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_bgp_speaker_to_dragent</span>(<span class="params">self, bgp_dragent, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a BGP speaker to Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post((self.agent_path + self.BGP_DRINSTANCES)</span><br><span class="line">                         % bgp_dragent, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_bgp_speaker_from_dragent</span>(<span class="params">self, bgp_dragent, bgpspeaker_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a BGP speaker from Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.BGP_DRINSTANCES + <span class="string">&quot;/%s&quot;</span>)</span><br><span class="line">                           % (bgp_dragent, bgpspeaker_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_speaker_on_dragent</span>(<span class="params">self, bgp_dragent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of BGP speakers hosted by Dynamic Routing agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.BGP_DRINSTANCES)</span><br><span class="line">                        % bgp_dragent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewall_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall rules for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_rules&#x27;</span>, self.firewall_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall_rule</span>(<span class="params">self, firewall_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_rule_path % (firewall_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewall_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall_rule</span>(<span class="params">self, firewall_rule, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_rule_path % (firewall_rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall_rule</span>(<span class="params">self, firewall_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_rule_path % (firewall_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewall_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_policies&#x27;</span>, self.firewall_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall_policy</span>(<span class="params">self, firewall_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_policy_path % (firewall_policy),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewall_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall_policy</span>(<span class="params">self, firewall_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_policy_path % (firewall_policy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">firewall_policy_insert_rule</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Inserts specified rule into firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_insert_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">firewall_policy_remove_rule</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified rule from firewall policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_policy_remove_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_firewalls</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewalls for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewalls&#x27;</span>, self.firewalls_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_firewall</span>(<span class="params">self, firewall, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.firewall_path % (firewall), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_firewall</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.firewalls_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_firewall</span>(<span class="params">self, firewall, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.firewall_path % (firewall), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_firewall</span>(<span class="params">self, firewall</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.firewall_path % (firewall))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall groups for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_groups&#x27;</span>, self.fwaas_firewall_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_group</span>(<span class="params">self, fwg, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_group_path % (fwg), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_group</span>(<span class="params">self, fwg, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_group_path % (fwg), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_group</span>(<span class="params">self, fwg</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall group&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_group_path % (fwg))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall rules for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_rules&#x27;</span>, self.fwaas_firewall_rules_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_rule_path % (firewall_rule),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_rule_path % (firewall_rule),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_rule</span>(<span class="params">self, firewall_rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall rule&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_rule_path % (firewall_rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_fwaas_firewall_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all firewall policies for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;firewall_policies&#x27;</span>,</span><br><span class="line">                         self.fwaas_firewall_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.fwaas_firewall_policy_path % (firewall_policy),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_fwaas_firewall_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.fwaas_firewall_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.fwaas_firewall_policy_path % (firewall_policy),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.fwaas_firewall_policy_path % (firewall_policy))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert_rule_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Inserts specified rule into firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.fwaas_firewall_policy_insert_path %</span><br><span class="line">                        (firewall_policy)), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_rule_fwaas_firewall_policy</span>(<span class="params">self, firewall_policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified rule from firewall policy&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.fwaas_firewall_policy_remove_path %</span><br><span class="line">                        (firewall_policy)), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_router_from_l3_agent</span>(<span class="params">self, l3_agent, router_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a router from l3 agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete((self.agent_path + self.L3_ROUTERS + <span class="string">&quot;/%s&quot;</span>) % (</span><br><span class="line">            l3_agent, router_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_lbaas_agent_hosting_pool</span>(<span class="params">self, pool, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a loadbalancer agent hosting a pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.pool_path + self.LOADBALANCER_AGENT) % pool,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_pools_on_lbaas_agent</span>(<span class="params">self, lbaas_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of pools hosted by the loadbalancer agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.LOADBALANCER_POOLS) %</span><br><span class="line">                        lbaas_agent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_lbaas_agent_hosting_loadbalancer</span>(<span class="params">self, loadbalancer, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a loadbalancer agent hosting a loadbalancer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.lbaas_loadbalancer_path +</span><br><span class="line">                         self.LOADBALANCER_HOSTING_AGENT) % loadbalancer,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_loadbalancers_on_lbaas_agent</span>(<span class="params">self, lbaas_agent, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of loadbalancers hosted by the loadbalancer agent.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.agent_path + self.AGENT_LOADBALANCERS) %</span><br><span class="line">                        lbaas_agent, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_service_providers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches service providers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_providers&#x27;</span>, self.service_providers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_metering_label</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.metering_labels_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_metering_label</span>(<span class="params">self, label</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.metering_label_path % (label))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_metering_labels</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all metering labels for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;metering_labels&#x27;</span>, self.metering_labels_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_metering_label</span>(<span class="params">self, metering_label, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain metering label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.metering_label_path %</span><br><span class="line">                        (metering_label), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_metering_label_rule</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.metering_label_rules_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_metering_label_rule</span>(<span class="params">self, rule</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.metering_label_rule_path % (rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_metering_label_rules</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all metering label rules for a label.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;metering_label_rules&#x27;</span>,</span><br><span class="line">                         self.metering_label_rules_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_metering_label_rule</span>(<span class="params">self, metering_label_rule, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain metering label rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.metering_label_rule_path %</span><br><span class="line">                        (metering_label_rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_rbac_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.rbac_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_rbac_policy</span>(<span class="params">self, rbac_policy_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.rbac_policy_path % rbac_policy_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_rbac_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all RBAC policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rbac_policies&#x27;</span>, self.rbac_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_rbac_policy</span>(<span class="params">self, rbac_policy_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information of a certain RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.rbac_policy_path % rbac_policy_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_rbac_policy</span>(<span class="params">self, rbac_policy_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete the specified RBAC policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.rbac_policy_path % rbac_policy_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_policies</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all qos policies for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Pass filters in &quot;params&quot; argument to do_request</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;policies&#x27;</span>, self.qos_policies_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_qos_policy</span>(<span class="params">self, qos_policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_policy_path % qos_policy,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_qos_policy</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_policies_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_qos_policy</span>(<span class="params">self, qos_policy, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.qos_policy_path % qos_policy,</span><br><span class="line">                                     body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_qos_policy</span>(<span class="params">self, qos_policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified qos policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_policy_path % qos_policy)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_qos_rule_types</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;List available qos rule types.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;rule_types&#x27;</span>, self.qos_rule_types_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bandwidth_limit_rules</span>(<span class="params">self, policy_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                   retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all bandwidth limit rules for the given policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bandwidth_limit_rules&#x27;</span>,</span><br><span class="line">                         self.qos_bandwidth_limit_rules_path % policy_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bandwidth_limit_rule</span>(<span class="params">self, rule, policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                        (policy, rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bandwidth_limit_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_bandwidth_limit_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bandwidth_limit_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bandwidth_limit_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a bandwidth limit rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_bandwidth_limit_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_dscp_marking_rules</span>(<span class="params">self, policy_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all DSCP marking rules for the given policy.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;dscp_marking_rules&#x27;</span>,</span><br><span class="line">                         self.qos_dscp_marking_rules_path % policy_id,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_dscp_marking_rule</span>(<span class="params">self, rule, policy, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Shows information of a certain DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_dscp_marking_rule_path %</span><br><span class="line">                        (policy, rule), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_dscp_marking_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_dscp_marking_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_dscp_marking_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_dscp_marking_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_dscp_marking_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a DSCP marking rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_dscp_marking_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_minimum_bandwidth_rules</span>(<span class="params">self, policy_id, retrieve_all=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all minimum bandwidth rules for the given policy.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;minimum_bandwidth_rules&#x27;</span>,</span><br><span class="line">                         self.qos_minimum_bandwidth_rules_path %</span><br><span class="line">                         policy_id, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_minimum_bandwidth_rule</span>(<span class="params">self, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.qos_minimum_bandwidth_rules_path % policy,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                        (policy, rule), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_minimum_bandwidth_rule</span>(<span class="params">self, rule, policy</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes a minimum bandwidth rule.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.qos_minimum_bandwidth_rule_path %</span><br><span class="line">                           (policy, rule))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_flavor</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.flavors_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_flavor</span>(<span class="params">self, flavor</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.flavor_path % (flavor))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_flavors</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Neutron service flavors for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;flavors&#x27;</span>, self.flavors_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_flavor</span>(<span class="params">self, flavor, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.flavor_path % (flavor), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_flavor</span>(<span class="params">self, flavor, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Neutron service flavor.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.flavor_path % (flavor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">associate_flavor</span>(<span class="params">self, flavor, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Associate a Neutron service flavor with a profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.flavor_profile_bindings_path %</span><br><span class="line">                         (flavor), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">disassociate_flavor</span>(<span class="params">self, flavor, flavor_profile</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Disassociate a Neutron service flavor with a profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.flavor_profile_binding_path %</span><br><span class="line">                           (flavor, flavor_profile))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_service_profile</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.service_profiles_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_service_profile</span>(<span class="params">self, flavor_profile</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.service_profile_path % (flavor_profile))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_service_profiles</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Neutron service flavor profiles.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_profiles&#x27;</span>, self.service_profiles_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_service_profile</span>(<span class="params">self, flavor_profile, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information for a certain Neutron service flavor profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.service_profile_path % (flavor_profile),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_service_profile</span>(<span class="params">self, service_profile, body</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Neutron service profile.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.service_profile_path % (service_profile),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_availability_zones</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all availability zones.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;availability_zones&#x27;</span>, self.availability_zones_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_auto_allocated_topology</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information about a project&#x27;s auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.auto_allocated_topology_path % project_id,</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_auto_allocated_topology</span>(<span class="params">self, project_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a project&#x27;s auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.auto_allocated_topology_path % project_id,</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @debtcollector.renames.renamed_kwarg(</span></span><br><span class="line">        <span class="string">&#x27;tenant_id&#x27;</span>, <span class="string">&#x27;project_id&#x27;</span>, replace=<span class="literal">True</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_auto_allocated_topology_requirements</span>(<span class="params">self, project_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Validate requirements for getting an auto-allocated topology.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get_auto_allocated_topology(project_id, fields=[<span class="string">&#x27;dry-run&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_speakers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP speakers for a project.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bgp_speakers&#x27;</span>, self.bgp_speakers_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgp_speaker</span>(<span class="params">self, bgp_speaker_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_speaker_path % (bgp_speaker_id),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgp_speaker</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgp_speakers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgp_speaker</span>(<span class="params">self, bgp_speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgp_speaker_path % bgp_speaker_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgp_speaker</span>(<span class="params">self, speaker_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgp_speaker_path % (speaker_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_peer_to_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a peer to BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/add_bgp_peer&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_peer_from_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a peer from BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/remove_bgp_peer&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_network_to_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Adds a network to BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/add_gateway_network&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_network_from_bgp_speaker</span>(<span class="params">self, speaker_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes a network from BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/remove_gateway_network&quot;</span>, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_route_advertised_from_bgp_speaker</span>(<span class="params">self, speaker_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all routes advertised by BGP speaker.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get((self.bgp_speaker_path % speaker_id) +</span><br><span class="line">                        <span class="string">&quot;/get_advertised_routes&quot;</span>, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgp_peers</span>(<span class="params">self, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP peers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_peers_path, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgp_peer</span>(<span class="params">self, peer_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgp_peer_path % peer_id,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgp_peer</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a new BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgp_peers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgp_peer</span>(<span class="params">self, bgp_peer_id, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgp_peer_path % bgp_peer_id, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgp_peer</span>(<span class="params">self, peer_id</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP peer.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgp_peer_path % peer_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_ip_availabilities</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches IP availability information for all networks&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;network_ip_availabilities&#x27;</span>,</span><br><span class="line">                         self.network_ip_availabilities_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_ip_availability</span>(<span class="params">self, network, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches IP availability information for a specified network&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_ip_availability_path % (network),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_tag</span>(<span class="params">self, resource_type, resource_id, tag, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Add a tag on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.tag_path % (resource_type, resource_id, tag))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replace_tag</span>(<span class="params">self, resource_type, resource_id, body, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Replace tags on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.tags_path % (resource_type, resource_id), body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_tag</span>(<span class="params">self, resource_type, resource_id, tag, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove a tag on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.tag_path % (resource_type, resource_id, tag))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_tag_all</span>(<span class="params">self, resource_type, resource_id, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Remove all tags on the resource.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.tags_path % (resource_type, resource_id))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_trunk</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.trunks_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_trunk</span>(<span class="params">self, trunk, body=None, revision_number=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._update_resource(self.trunk_path % trunk, body=body,</span><br><span class="line">                                     revision_number=revision_number)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_trunk</span>(<span class="params">self, trunk</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.trunk_path % (trunk))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_trunks</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all trunk ports.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;trunks&#x27;</span>, self.trunks_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_trunk</span>(<span class="params">self, trunk, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information for a certain trunk port.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.trunk_path % (trunk), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_add_subports</span>(<span class="params">self, trunk, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Add specified subports to the trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.subports_add_path % (trunk), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_remove_subports</span>(<span class="params">self, trunk, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Removes specified subports from the trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.subports_remove_path % (trunk), body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trunk_get_subports</span>(<span class="params">self, trunk, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all subports attached to given trunk.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.subports_path % (trunk), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpns</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all BGP VPNs for a project&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;bgpvpns&#x27;</span>, self.bgpvpns_path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn</span>(<span class="params">self, bgpvpn, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.bgpvpn_path % bgpvpn, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpns_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.bgpvpn_path % bgpvpn, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn</span>(<span class="params">self, bgpvpn</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.bgpvpn_path % bgpvpn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_network_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of network associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;network_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_network_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_network_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_network_assoc</span>(<span class="params">self, bgpvpn, net_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN network association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_network_association_path % (bgpvpn, net_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_router_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of router associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;router_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_router_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_router_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_router_assoc</span>(<span class="params">self, bgpvpn, router_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN router association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_router_association_path % (bgpvpn, router_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_bgpvpn_port_assocs</span>(<span class="params">self, bgpvpn, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of port associations for a given BGP VPN.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_associations&#x27;</span>,</span><br><span class="line">                         self.bgpvpn_port_associations_path % bgpvpn,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain BGP VPN&#x27;s port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc),</span><br><span class="line">            params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.bgpvpn_port_associations_path % bgpvpn,</span><br><span class="line">                         body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Updates a BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc),</span><br><span class="line">            body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_bgpvpn_port_assoc</span>(<span class="params">self, bgpvpn, port_assoc</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified BGP VPN port association&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(</span><br><span class="line">            self.bgpvpn_port_association_path % (bgpvpn, port_assoc))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_pair</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_pairs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_pair</span>(<span class="params">self, port_pair, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_pair_path % port_pair, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_pair</span>(<span class="params">self, port_pair</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_pair_path % (port_pair))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_pairs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Pairs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_pairs&#x27;</span>, self.sfc_port_pairs_path, retrieve_all,</span><br><span class="line">                         **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_pair</span>(<span class="params">self, port_pair, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Pair.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_pair_path % (port_pair), params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_pair_group</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_pair_groups_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_pair_group</span>(<span class="params">self, port_pair_group, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_pair_group_path % port_pair_group,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_pair_group</span>(<span class="params">self, port_pair_group</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_pair_group_path % (port_pair_group))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_pair_groups</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Pair Groups.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_pair_groups&#x27;</span>, self.sfc_port_pair_groups_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_pair_group</span>(<span class="params">self, port_pair_group, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Pair Group.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_pair_group_path % (port_pair_group),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_port_chain</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_port_chains_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_port_chain</span>(<span class="params">self, port_chain, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_port_chain_path % port_chain, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_port_chain</span>(<span class="params">self, port_chain</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_port_chain_path % (port_chain))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_port_chains</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Port Chains.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;port_chains&#x27;</span>, self.sfc_port_chains_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_port_chain</span>(<span class="params">self, port_chain, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Port Chain.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_port_chain_path % (port_chain),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_flow_classifier</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Creates a new Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_flow_classifiers_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_flow_classifier</span>(<span class="params">self, flow_classifier, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_flow_classifier_path % flow_classifier,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_flow_classifier</span>(<span class="params">self, flow_classifier</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_flow_classifier_path % (flow_classifier))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_flow_classifiers</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Flow Classifiers.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;flow_classifiers&#x27;</span>, self.sfc_flow_classifiers_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_flow_classifier</span>(<span class="params">self, flow_classifier, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Flow Classifier.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_flow_classifier_path % (flow_classifier),</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_sfc_service_graph</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create the specified Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.sfc_service_graphs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_sfc_service_graph</span>(<span class="params">self, service_graph, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.sfc_service_graph_path % service_graph,</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_sfc_service_graph</span>(<span class="params">self, service_graph</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Deletes the specified Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.sfc_service_graph_path % service_graph)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_sfc_service_graphs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches a list of all Service Graphs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;service_graphs&#x27;</span>, self.sfc_service_graphs_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_sfc_service_graph</span>(<span class="params">self, service_graph, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetches information of a certain Service Graph.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.sfc_service_graph_path % service_graph,</span><br><span class="line">                        params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_network_log</span>(<span class="params">self, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Create a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.post(self.network_logs_path, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_network_log</span>(<span class="params">self, net_log</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Delete a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.delete(self.network_log_path % net_log)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_logs</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of all network logs.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(</span><br><span class="line">            <span class="string">&#x27;logs&#x27;</span>, self.network_logs_path, retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_network_log</span>(<span class="params">self, net_log, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch information for a certain network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.get(self.network_log_path % net_log, params=_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_network_log</span>(<span class="params">self, net_log, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update a network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.network_log_path % net_log, body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_network_loggable_resources</span>(<span class="params">self, retrieve_all=True, **_params</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Fetch a list of supported resource types for network log.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.list(<span class="string">&#x27;loggable_resources&#x27;</span>, self.network_loggables_path,</span><br><span class="line">                         retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onboard_network_subnets</span>(<span class="params">self, subnetpool, body=None</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Onboard the specified network&#x27;s subnets into a subnet pool.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.put(self.onboard_network_subnets_path % (subnetpool),</span><br><span class="line">                        body=body)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Initialize a new client for the Neutron v2.0 API.&quot;&quot;&quot;</span></span><br><span class="line">        super(Client, self).__init__(**kwargs)</span><br><span class="line">        self._register_extensions(self.version)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_resource</span>(<span class="params">self, path, **kwargs</span>):</span></span><br><span class="line">        revision_number = kwargs.pop(<span class="string">&#x27;revision_number&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> revision_number:</span><br><span class="line">            headers = kwargs.setdefault(<span class="string">&#x27;headers&#x27;</span>, &#123;&#125;)</span><br><span class="line">            headers[<span class="string">&#x27;If-Match&#x27;</span>] = <span class="string">&#x27;revision_number=%s&#x27;</span> % revision_number</span><br><span class="line">        <span class="keyword">return</span> self.put(path, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_show</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.show_ext(path, obj, **_params)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.show_ext(path % parent_id, obj, **_params)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;show_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_list</span>(<span class="params">self, resource_plural, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">retrieve_all=True, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.list_ext(resource_plural, path,</span><br><span class="line">                                 retrieve_all, **_params)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">parent_id, retrieve_all=True, **_params</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.list_ext(resource_plural, path % parent_id,</span><br><span class="line">                                 retrieve_all, **_params)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;list_%s&quot;</span> % resource_plural, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_create</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.create_ext(path, body)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">parent_id, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.create_ext(path % parent_id, body)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;create_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_delete</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.delete_ext(path, obj)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.delete_ext(path % parent_id, obj)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;delete_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extend_update</span>(<span class="params">self, resource_singular, path, parent_resource</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_fx</span>(<span class="params">obj, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.update_ext(path, obj, body)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_parent_fx</span>(<span class="params">obj, parent_id, body=None</span>):</span></span><br><span class="line">            <span class="keyword">return</span> self.update_ext(path % parent_id, obj, body)</span><br><span class="line">        fn = _fx <span class="keyword">if</span> <span class="keyword">not</span> parent_resource <span class="keyword">else</span> _parent_fx</span><br><span class="line">        setattr(self, <span class="string">&quot;update_%s&quot;</span> % resource_singular, fn)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_extend_client_with_module</span>(<span class="params">self, module, version</span>):</span></span><br><span class="line">        classes = inspect.getmembers(module, inspect.isclass)</span><br><span class="line">        <span class="keyword">for</span> cls_name, cls <span class="keyword">in</span> classes:</span><br><span class="line">            <span class="keyword">if</span> hasattr(cls, <span class="string">&#x27;versions&#x27;</span>):</span><br><span class="line">                <span class="keyword">if</span> version <span class="keyword">not</span> <span class="keyword">in</span> cls.versions:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            parent_resource = getattr(cls, <span class="string">&#x27;parent_resource&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> issubclass(cls, client_extension.ClientExtensionList):</span><br><span class="line">                self.extend_list(cls.resource_plural, cls.object_path,</span><br><span class="line">                                 parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionCreate):</span><br><span class="line">                self.extend_create(cls.resource, cls.object_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionUpdate):</span><br><span class="line">                self.extend_update(cls.resource, cls.resource_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionDelete):</span><br><span class="line">                self.extend_delete(cls.resource, cls.resource_path,</span><br><span class="line">                                   parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.ClientExtensionShow):</span><br><span class="line">                self.extend_show(cls.resource, cls.resource_path,</span><br><span class="line">                                 parent_resource)</span><br><span class="line">            <span class="keyword">elif</span> issubclass(cls, client_extension.NeutronClientExtension):</span><br><span class="line">                setattr(self, <span class="string">&quot;%s_path&quot;</span> % cls.resource_plural,</span><br><span class="line">                        cls.object_path)</span><br><span class="line">                setattr(self, <span class="string">&quot;%s_path&quot;</span> % cls.resource, cls.resource_path)</span><br><span class="line">                self.EXTED_PLURALS.update(&#123;cls.resource_plural: cls.resource&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_register_extensions</span>(<span class="params">self, version</span>):</span></span><br><span class="line">        <span class="keyword">for</span> name, module <span class="keyword">in</span> itertools.chain(</span><br><span class="line">                client_extension._discover_via_entry_points()):</span><br><span class="line">            self._extend_client_with_module(module, version)</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://docs.openstack.org/python-neutronclient/latest/reference/index.html">OpenStack API Documentation：neutronclient Python API</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;python：3.6.8&lt;/li&gt;
&lt;li&gt;python-neutronclient   7.1.0&lt;/li&gt;
</summary>
      
    
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/categories/OpenStack/"/>
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/tags/OpenStack/"/>
    
    <category term="CLI" scheme="https://renyb2.github.io/tags/CLI/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack部署：Glance对接Cinder</title>
    <link href="https://renyb2.github.io/2021/09/06/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AGlance%E5%AF%B9%E6%8E%A5Cinder/"/>
    <id>https://renyb2.github.io/2021/09/06/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AGlance%E5%AF%B9%E6%8E%A5Cinder/</id>
    <published>2021-09-06T02:10:18.000Z</published>
    <updated>2021-10-19T11:54:43.635Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Glance-Cinder-store-proposal"><a href="#Glance-Cinder-store-proposal" class="headerlink" title="Glance/Cinder-store-proposal"></a>Glance/Cinder-store-proposal</h2><h3 id="Glance-Cinder-Driver"><a href="#Glance-Cinder-Driver" class="headerlink" title="Glance Cinder Driver"></a>Glance Cinder Driver</h3><p>There is currently a Cinder store in Glance, however it does not support uploads and downloads. This is a proposal to allow Cinder to act as a data store for Glance images that supports upload and download by using Cinder volumes as containers for image data. There would be a 1-to-1 mapping of Glance images to Cinder volumes.</p><h4 id="What-are-the-benefits-of-this-approach"><a href="#What-are-the-benefits-of-this-approach" class="headerlink" title="What are the benefits of this approach?"></a>What are the benefits of this approach?</h4><p>This will allow Glance to store images on the large and diverse array of SAN and NAS storage systems supported by Cinder. It also allows for storing images as block devices to enable the features mentioned in the “Subsequent Features” section of this wiki page.</p><p>Glance and Cinder using common backend storage will allow for storage optimizations when creating volumes from images or storing images as volumes. Some examples are deduplication and fast replication (create-volume-from-image).</p><h4 id="How-do-you-configure-Glance-on-Cinder"><a href="#How-do-you-configure-Glance-on-Cinder" class="headerlink" title="How do you configure Glance on Cinder?"></a>How do you configure Glance on Cinder?</h4><p>These new configuration options will need to be added to the current Cinder store options:</p><ul><li><strong>cinder_store_tenant</strong> - string - The Cinder tenant in which to store images</li><li><strong>cinder_store_user</strong> - string - The Cinder user used to access Cinder</li><li><strong>cinder_store_key</strong> - string - The Cinder key used to access Cinder</li><li><strong>cinder_volume_type</strong> - string (optional)- The uuid of the volume type to assign to volumes created by Glance</li></ul><h4 id="How-would-an-image-upload-work"><a href="#How-would-an-image-upload-work" class="headerlink" title="How would an image upload work?"></a>How would an image upload work?</h4><p><img src="/2021/09/06/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AGlance%E5%AF%B9%E6%8E%A5Cinder/Glance-cinder-upload.png" alt="Glance-cinder-upload"></p><ol><li>The user begins streaming the image data to Glance as usual.</li><li>Make a request to the Cinder API to create a new volume with the configured <em>volume type</em> with the volume size being the smallest possible volume size that is greater than the image size.</li><li>Attach the newly created volume to the Glance node using the Brick library.</li><li>Stream the incoming bits into the volume.</li><li>Detach the volume from the Glance node using the Brick library, set the image location to “cinder://<volume-uuid>‘, and return image details to the user.</volume-uuid></li></ol><h4 id="How-would-an-image-download-work"><a href="#How-would-an-image-download-work" class="headerlink" title="How would an image download work?"></a>How would an image download work?</h4><p><img src="/2021/09/06/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AGlance%E5%AF%B9%E6%8E%A5Cinder/Glance-cinder-download.png" alt="Glance-cinder-download"></p><ol><li>The user sends a request to download the image</li><li>Retrieve the backend volume id from the image location and attach the volume to the Glance node using Brick library</li><li>Stream the bits from the volume to the user</li><li>Detach the volume from the glance node using Brick library</li></ol><h4 id="How-would-a-Nova-boot-work"><a href="#How-would-a-Nova-boot-work" class="headerlink" title="How would a Nova boot work?"></a>How would a Nova boot work?</h4><p>Nova would download the image via Glance without needing knowledge that Cinder is storing the images.</p><h4 id="Single-tenant-vs-Multi-tenant-How-do-we-prevent-the-volume-being-deleted-changed-out-from-under-Glance"><a href="#Single-tenant-vs-Multi-tenant-How-do-we-prevent-the-volume-being-deleted-changed-out-from-under-Glance" class="headerlink" title="Single tenant vs Multi tenant? How do we prevent the volume being deleted/changed out from under Glance?"></a>Single tenant vs Multi tenant? How do we prevent the volume being deleted/changed out from under Glance?</h4><h5 id="Single-tenant"><a href="#Single-tenant" class="headerlink" title="Single-tenant"></a>Single-tenant</h5><p>The Cinder store will only allow for ‘single-tenant’ use. Glance will use the credentials and tenant provided in glance-api.conf to create and attach to volumes. Credentials will not be stored in the image location. Volumes cannot be deleted without the Glance service knowing since only the glance user will have access to it’s volumes in Cinder.</p><h5 id="Multi-tenant"><a href="#Multi-tenant" class="headerlink" title="Multi-tenant"></a>Multi-tenant</h5><p>Multi-tenant, I.E. storing volumes in the users tenant, should not be supported because:</p><ul><li>There is no way to support image sharing</li><li>Reauthentication due to the user token expiring would present problems</li><li>There is no way to prevent users from deleting/modifying volumes without Glance having knowledge.</li></ul><h4 id="How-do-we-allow-for-Image-Sharing"><a href="#How-do-we-allow-for-Image-Sharing" class="headerlink" title="How do we allow for Image Sharing?"></a>How do we allow for Image Sharing?</h4><p>This is trivial because the service user will have access to all image volumes in cinder.</p><h3 id="Example-Configuration"><a href="#Example-Configuration" class="headerlink" title="Example Configuration"></a>Example Configuration</h3><p>以 <code>kolla/centos-source-glance-api:train</code> 镜像在Kubernetes中部署为例，Cinder使用iSCSI后端存储，介绍Glance Cinder Driver配置思路。</p><h4 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h4><p>以Cinder使用iSCSI后端存储为例，Glance用户需要通过iSCSI方式，把Cinder卷挂载至本地，挂载中Glance需要有访问和使用iSCSI的权限，涉及提权操作，需要配置如下相关配置文件：</p><ul><li>/etc/glance/glance-api.conf（配置cinder连接信息）</li><li>/etc/glance/rootwrap.conf（提权相关）</li><li>/etc/glance/rootwrap.d/glance_cinder_store.filters（提权相关）</li><li>/etc/sudoers.d/glance-sudoers（提权相关）</li></ul><p><strong>/etc/glance/glance-api.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[glance_store]</span><br><span class="line">default_store = cinder</span><br><span class="line">stores = cinder</span><br><span class="line">cinder_http_retries = 3</span><br><span class="line">cinder_catalog_info = volumev2::publicURL</span><br><span class="line">rootwrap_config = /etc/glance/rootwrap.conf</span><br><span class="line">[cinder]</span><br><span class="line">cinder_http_retries = 3</span><br><span class="line">cinder_catalog_info = volumev2::publicURL</span><br><span class="line">rootwrap_config = /etc/glance/rootwrap.conf</span><br></pre></td></tr></table></figure><p><strong>/etc/glance/rootwrap.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Configuration <span class="keyword">for</span> nova-rootwrap</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This file should be owned by (and only-writeable by) the root user</span></span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line"><span class="meta">#</span><span class="bash"> List of directories to load filter definitions from (separated by <span class="string">&#x27;,&#x27;</span>).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> These directories MUST all be only writeable by root !</span></span><br><span class="line">filters_path=/etc/glance/rootwrap.d</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> List of directories to search executables <span class="keyword">in</span>, <span class="keyword">in</span> <span class="keyword">case</span> filters <span class="keyword">do</span> not</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> explicitely specify a full path (separated by <span class="string">&#x27;,&#x27;</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If not specified, defaults to system PATH environment variable.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> These directories MUST all be only writeable by root !</span></span><br><span class="line">exec_dirs=/sbin,/usr/sbin,/bin,/usr/bin,/usr/local/bin,/usr/local/sbin,/var/lib/openstack/bin,/var/lib/kolla/venv/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Enable logging to syslog</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default value is False</span></span><br><span class="line">use_syslog=False</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Which syslog facility to use.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Valid values include auth, authpriv, syslog, local0, local1...</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Default value is <span class="string">&#x27;syslog&#x27;</span></span></span><br><span class="line">syslog_log_facility=syslog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Which messages to <span class="built_in">log</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> INFO means <span class="built_in">log</span> all usage</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ERROR means only <span class="built_in">log</span> unsuccessful attempts</span></span><br><span class="line">syslog_log_level=ERROR</span><br></pre></td></tr></table></figure><p><strong>/etc/glance/rootwrap.d/glance_cinder_store.filters</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> glance-rootwrap <span class="built_in">command</span> filters <span class="keyword">for</span> glance cinder store</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This file should be owned by (and only-writable by) the root user</span></span><br><span class="line"></span><br><span class="line">[Filters]</span><br><span class="line"><span class="meta">#</span><span class="bash"> cinder store driver</span></span><br><span class="line">disk_chown: RegExpFilter, chown, root, chown, \d+, /dev/(?!.*/\.\.).*</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> os-brick library commands</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> os_brick.privileged.run_as_root oslo.privsep context</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This line ties the superuser privs with the config files, context name,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and (implicitly) the actual python code invoked.</span></span><br><span class="line">privsep-rootwrap: RegExpFilter, privsep-helper, root, privsep-helper, --config-file, /etc/(?!\.\.).*, --privsep_context, os_brick.privileged.default, --privsep_sock_path, /tmp/.*</span><br></pre></td></tr></table></figure><p><strong>/etc/sudoers.d/glance-sudoers</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Defaults:glance !requiretty</span><br><span class="line"></span><br><span class="line">Defaults secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/var/lib/openstack/bin:/var/lib/kolla/venv/bin&quot;</span><br><span class="line"></span><br><span class="line">glance ALL = (root) NOPASSWD: /var/lib/kolla/venv/bin/glance-rootwrap /etc/glance/rootwrap.conf *, /var/lib/openstack/bin/glance-rootwrap /etc/glance/rootwrap.conf *</span><br></pre></td></tr></table></figure><h4 id="POD配置"><a href="#POD配置" class="headerlink" title="POD配置"></a>POD配置</h4><p>Glance容器需要与主机的iSCSI服务有交互，同时有提权的需求。参考相关配置项如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="string">...</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hostdir-iscsi</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/iscsi</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/dev</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="string">...</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="string">...</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hostdir-iscsi</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/iscsi/</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/dev</span></span><br><span class="line">              <span class="attr">mountPropagation:</span> <span class="string">HostToContainer</span></span><br><span class="line">            <span class="string">...</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">          <span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://wiki.openstack.org/wiki/Glance/Cinder-store-proposal">Glance/Cinder-store-proposal</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Glance-Cinder-store-proposal&quot;&gt;&lt;a href=&quot;#Glance-Cinder-store-proposal&quot; class=&quot;headerlink&quot; title=&quot;Glance/Cinder-store-proposal&quot;&gt;&lt;/a&gt;Gl</summary>
      
    
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/categories/OpenStack/"/>
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/tags/OpenStack/"/>
    
    <category term="Glance" scheme="https://renyb2.github.io/tags/Glance/"/>
    
  </entry>
  
  <entry>
    <title>OpenStack部署：Trove</title>
    <link href="https://renyb2.github.io/2021/08/05/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9ATrove/"/>
    <id>https://renyb2.github.io/2021/08/05/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9ATrove/</id>
    <published>2021-08-05T00:49:35.000Z</published>
    <updated>2021-10-19T11:55:02.852Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Building-guest-image"><a href="#Building-guest-image" class="headerlink" title="Building guest image"></a>Building guest image</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 构建镜像踩的坑（基于Wallaby版源码做的修改）：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. apt、pip源为国外源，下载慢，大概率失败，需要替换为国内源</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 编译ubuntu镜像时，宿主机为centos，导致pkg_map解析包名错误。需增加如下环境变量：<span class="built_in">export</span> DISTRO_NAME=<span class="variable">$&#123;guest_os&#125;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. root密码没有，无法登陆。需下functions_qemu文件中，增加<span class="built_in">local</span> root_password=<span class="string">&quot;inspur_trove@123&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. elements guest-agent中<span class="built_in">source</span>-repository-guest-agent获取位置需要修改，调整为本地代码库及本地文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5. v版之后，guest-agent镜像切换为docker，docker image从docker源上下载。如果本地为http源，则需要打包镜像时将该域名添加为insecure-registries</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 6. ubuntu系统自带的systemd-resolved服务，会导致域名解析文件不生效。解决办法如下：ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 基础参数</span></span><br><span class="line">guest_os=ubuntu</span><br><span class="line">guest_os_release=bionic</span><br><span class="line">dev_mode=false</span><br><span class="line">guest_username=ubuntu</span><br><span class="line">output_image_path=$HOME/images/trove-guest-$&#123;guest_os&#125;-$&#123;guest_os_release&#125;.qcow2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入trove/integration/scripts目录，执行如下构建镜像命令，前期准备注意以下两点：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 需要切换为普通用户执行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 普通用户最好可以免密sudo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./trovestack build-image \</span></span><br><span class="line">    $&#123;guest_os&#125; \</span><br><span class="line">    $&#123;guest_os_release&#125; \</span><br><span class="line">    $&#123;dev_mode&#125; \</span><br><span class="line">    $&#123;guest_username&#125; \</span><br><span class="line">    $&#123;output_image_path&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传镜像至glance</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack image create trove-guest-ubuntu-bionic<span class="_">-a</span> \</span></span><br><span class="line">  --private \</span><br><span class="line">  --disk-format qcow2 \</span><br><span class="line">  --container-format bare \</span><br><span class="line">  --tag trove --tag mysql \</span><br><span class="line">  --file ~/trove-guest-ubuntu-bionic.qcow2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像与trove关联</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version create 8.0 mysql mysql <span class="string">&quot;&quot;</span> \</span></span><br><span class="line">  --image-tags trove,mysql \</span><br><span class="line">  --active --default</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 同步数据库配置</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> trove-manage db_load_datastore_config_parameters mysql 8.0 \</span></span><br><span class="line">  /var/lib/kolla/venv/lib/python3.6/site-packages/trove/templates/mysql/validation-rules.json</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看datastore version</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version list mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除datastore version</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version delete &lt; datastore version id &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新datastore version关联镜像</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack datastore version <span class="built_in">set</span> --image &lt; image id &gt; &lt; datastore version id &gt;</span></span><br></pre></td></tr></table></figure><h3 id="Create-database-instance"><a href="#Create-database-instance" class="headerlink" title="Create database instance"></a>Create database instance</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 基础环境准备：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 数据库实例所使用的网络必须内网，且存在一个路由与外部网络连接</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 数据库实例所在网络必须与rabbitmq可以通信</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 数据库实例所在的网络必须可以解析到registry.local域名</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据库实例</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack database instance create mysql_instance_1 \</span></span><br><span class="line">    --flavor mysql \</span><br><span class="line">    --size 5 \</span><br><span class="line">    --nic net-id=a899ca4e-95ed-4e91-8877-562e24200ce4 \</span><br><span class="line">    --databases test --users demo:password \</span><br><span class="line">    --datastore mysql --datastore-version 8.0 \</span><br><span class="line">    --is-public \</span><br><span class="line">    --allowed-cidr 0.0.0.0/0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看数据库实例</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack database instance list</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看数据库实例虚机</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack server list --all</span></span><br></pre></td></tr></table></figure><h3 id="DEV"><a href="#DEV" class="headerlink" title="DEV"></a>DEV</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 放通实例安全组ssh端口</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack security group rule create --ingress --ethertype IPv4 --dst-port 22 --protocol tcp --remote-ip 0.0.0.0/0 &lt; security group id &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 放通实例安全组icmp</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openstack security group rule create --ingress --ethertype IPv4 --protocol icmp --remote-ip 0.0.0.0/0 &lt; security group id &gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://wiki.openstack.org/wiki/Trove">WIKI：Trove</a></p></li><li><p><a href="https://docs.openstack.org/trove/wallaby/install/install-redhat.html">OpenStack Documentation：Install and configure for Red Hat Enterprise Linux and CentOS</a></p></li><li><p><a href="https://docs.openstack.org/trove/wallaby/user/create-db.html">OpenStack Documentation：Create and access a database instance</a></p></li><li><p><a href="https://docs.openstack.org/trove/latest/user/set-up-clustering.html">OpenStack Documentation：Set up database clustering</a></p></li><li><p><a href="https://docs.openstack.org/trove/wallaby/admin/upgrade.html">OpenStack Documentation：Trove upgrade</a></p></li><li><p><a href="https://www.cnblogs.com/jackyzzy/p/7384347.html">OpenStack trove原理及配置实践</a></p></li><li><p><a href="https://www.cnblogs.com/mh20131118/p/12970338.html">OpenStack的Trove组件详解</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Building-guest-image&quot;&gt;&lt;a href=&quot;#Building-guest-image&quot; class=&quot;headerlink&quot; title=&quot;Building guest image&quot;&gt;&lt;/a&gt;Building guest image&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/categories/OpenStack/"/>
    
    
    <category term="OpenStack" scheme="https://renyb2.github.io/tags/OpenStack/"/>
    
    <category term="Trove" scheme="https://renyb2.github.io/tags/Trove/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB使用：通用手册</title>
    <link href="https://renyb2.github.io/2021/07/27/MongoDB%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://renyb2.github.io/2021/07/27/MongoDB%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2021-07-27T08:44:20.000Z</published>
    <updated>2021-10-20T03:27:49.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>参考：<a href="https://www.runoob.com/mongodb/mongodb-linux-install.html">https://www.runoob.com/mongodb/mongodb-linux-install.html</a></p><p>下载：<a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h2 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h2><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo 192.168.122.12:27017/admin -u admin -p inspur@123</span><br></pre></td></tr></table></figure><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建admin用户</span></span><br><span class="line">&gt; db.createUser(&#123;user:&quot;admin&quot;,pwd:&quot;inspur@123&quot;,roles:[&#123;&quot;role&quot;:&quot;userAdminAnyDatabase&quot;,&quot;db&quot;:&quot;admin&quot;&#125;]&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;参考：&lt;a href=&quot;https://www.runoob.com/mongodb/mongodb-linux-install.html&quot;</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="通用手册" scheme="https://renyb2.github.io/tags/%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    <category term="MongoDB" scheme="https://renyb2.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>MySQL使用：通用手册</title>
    <link href="https://renyb2.github.io/2021/07/27/MySQL%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://renyb2.github.io/2021/07/27/MySQL%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2021-07-27T08:10:36.000Z</published>
    <updated>2021-10-20T06:10:43.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>参考：<a href="https://www.runoob.com/mysql/mysql-install.html">https://www.runoob.com/mysql/mysql-install.html</a></p><p>下载：<a href="http://repo.mysql.com/">http://repo.mysql.com/</a></p><h2 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h2><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -pinspur@123 -h 111.111.19.236</span><br></pre></td></tr></table></figure><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许用户远程登录（mysql 8.x）</span></span><br><span class="line"><span class="keyword">UPDATE</span> mysql.user <span class="keyword">SET</span> host = <span class="string">&#x27;%&#x27;</span> <span class="keyword">WHERE</span> <span class="keyword">user</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># PS：需退出重连</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;inspur@123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许用户远程登录（mysql 5.7）</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;Inspur@123&#x27;</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>问题 1：</strong>初始化后，重置root密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 初始化方式：mysqld --initialize</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看初始化密码</span></span><br><span class="line">[root@localhost log]# cat /var/log/mysqld.log  | grep &#x27;temporary password&#x27;</span><br><span class="line">2021-07-27T07:56:26.750789Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: t-:33aMYyaC+</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改root密码</span></span><br><span class="line">[root@localhost log]# mysqladmin -uroot -p&#x27;t-:33aMYyaC+&#x27; password Inspur@123</span><br></pre></td></tr></table></figure><p><strong>问题 2：</strong>MySQL服务无法启动，<code>/var/log/mysqld.log</code> 中有如下报错，关键内容为： <code>Can&#39;t determine file permissions</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2021-10-19T09:00:38.314740Z 0 [ERROR] InnoDB: Operating system error number 13 in a file operation.</span><br><span class="line">2021-10-19T09:00:38.314766Z 0 [ERROR] InnoDB: The error means mysqld does not have the access rights to the directory.</span><br><span class="line">2021-10-19T09:00:38.314772Z 0 [ERROR] InnoDB: os_file_get_status() failed on &#x27;./ibdata1&#x27;. Can&#x27;t determine file permissions</span><br><span class="line">2021-10-19T09:00:38.314781Z 0 [ERROR] InnoDB: Plugin initialization aborted with error Generic error</span><br><span class="line">2021-10-19T09:00:39.415592Z 0 [ERROR] Plugin &#x27;InnoDB&#x27; init function returned error.</span><br><span class="line">2021-10-19T09:00:39.415630Z 0 [ERROR] Plugin &#x27;InnoDB&#x27; registration as a STORAGE ENGINE failed.</span><br><span class="line">2021-10-19T09:00:39.415636Z 0 [ERROR] Failed to initialize builtin plugins.</span><br><span class="line">2021-10-19T09:00:39.415642Z 0 [ERROR] Aborting</span><br></pre></td></tr></table></figure><p><strong>解决：</strong>关闭selinux</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;参考：&lt;a href=&quot;https://www.runoob.com/mysql/mysql-install.html&quot;&gt;https://w</summary>
      
    
    
    
    <category term="数据库" scheme="https://renyb2.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="通用手册" scheme="https://renyb2.github.io/tags/%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    <category term="MySQL" scheme="https://renyb2.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes部署：Kube-VIP实现高可用</title>
    <link href="https://renyb2.github.io/2021/07/16/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AKube-VIP%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <id>https://renyb2.github.io/2021/07/16/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AKube-VIP%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8/</id>
    <published>2021-07-16T01:28:30.000Z</published>
    <updated>2021-10-19T11:50:58.803Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Kube vip为社区开源的一套Kubernetes HA解决方案，基于GO语言开发。轻量级，性能待验证。官方介绍如下：</p><p>Kubernetes Virtual IP and Load-Balancer for both control plane and Kubernetes services</p><p>The idea behind <code>kube-vip</code> is a small self-contained Highly-Available option for all environments, especially:</p><ul><li>Bare-Metal</li><li>On-Prem</li><li>Edge (ARM / Raspberry PI)</li><li>Virtualisation</li><li>Pretty much anywhere else :)</li></ul><h2 id="Kubernetes-高可用"><a href="#Kubernetes-高可用" class="headerlink" title="Kubernetes 高可用"></a>Kubernetes 高可用</h2><p>As an alternative to the more “traditional” approach of <code>keepalived</code> and <code>haproxy</code>, <a href="https://kube-vip.io/">kube-vip</a> implements both management of a virtual IP and load balancing in one service. Similar to option 2 above, <code>kube-vip</code> will be run as a static pod on the control plane nodes.</p><p>Like with <code>keepalived</code>, the hosts negotiating a virtual IP need to be in the same IP subnet. Similarly, like with <code>haproxy</code>, stream-based load-balancing allows TLS termination to be handled by the API Server instances behind it.</p><p>The configuration file <code>/etc/kube-vip/config.yaml</code> looks like this:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">localPeer:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="string">$&#123;ID&#125;</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">$&#123;IPADDR&#125;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">remotePeers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">$&#123;PEER1_ID&#125;</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">$&#123;PEER1_IPADDR&#125;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10000</span></span><br><span class="line"><span class="comment"># [...]</span></span><br><span class="line"><span class="attr">vip:</span> <span class="string">$&#123;APISERVER_VIP&#125;</span></span><br><span class="line"><span class="attr">gratuitousARP:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">singleNode:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">startAsLeader:</span> <span class="string">$&#123;IS_LEADER&#125;</span></span><br><span class="line"><span class="attr">interface:</span> <span class="string">$&#123;INTERFACE&#125;</span></span><br><span class="line"><span class="attr">loadBalancers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">API</span> <span class="string">Server</span> <span class="string">Load</span> <span class="string">Balancer</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">tcp</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">$&#123;APISERVER_DEST_PORT&#125;</span></span><br><span class="line">  <span class="attr">bindToVip:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">backends:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">$&#123;APISERVER_SRC_PORT&#125;</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">$&#123;HOST1_ADDRESS&#125;</span></span><br><span class="line">  <span class="comment"># [...]</span></span><br></pre></td></tr></table></figure><p>The <code>bash</code> style placeholders to expand are these:</p><ul><li><code>$&#123;ID&#125;</code> the current host’s symbolic name</li><li><code>$&#123;IPADDR&#125;</code> the current host’s IP address</li><li><code>$&#123;PEER1_ID&#125;</code> a symbolic name for the first vIP peer</li><li><code>$&#123;PEER1_IPADDR&#125;</code> IP address for the first vIP peer</li><li>entries (<code>id</code>, <code>address</code>, <code>port</code>) for additional vIP peers can follow</li><li><code>$&#123;APISERVER_VIP&#125;</code> is the virtual IP address negotiated between the <code>kube-vip</code> cluster hosts.</li><li><code>$&#123;IS_LEADER&#125;</code> is <code>true</code> for exactly one leader and <code>false</code> for the rest</li><li><code>$&#123;INTERFACE&#125;</code> is the network interface taking part in the negotiation of the virtual IP, e.g. <code>eth0</code>.</li><li><code>$&#123;APISERVER_DEST_PORT&#125;</code> the port through which Kubernetes will talk to the API Server.</li><li><code>$&#123;APISERVER_SRC_PORT&#125;</code> the port used by the API Server instances</li><li><code>$&#123;HOST1_ADDRESS&#125;</code> the first load-balanced API Server host’s IP address</li><li>entries (<code>port</code>, <code>address</code>) for additional load-balanced API Server hosts can follow</li></ul><p>To have the service started with the cluster, now the manifest <code>kube-vip.yaml</code> needs to be placed in <code>/etc/kubernetes/manifests</code> (create the directory first). It can be generated using the <code>kube-vip</code> docker image:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -it --rm plndr/kube-vip:0.1.1 /kube-vip sample manifest \</span></span><br><span class="line">    | sed &quot;s|plndr/kube-vip:&#x27;|plndr/kube-vip:0.1.1&#x27;|&quot; \</span><br><span class="line">    | sudo tee /etc/kubernetes/manifests/kube-vip.yaml</span><br></pre></td></tr></table></figure><p>The result, <code>/etc/kubernetes/manifests/kube-vip.yaml</code>, will look like this:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-vip</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/kube-vip</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">start</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/vip.yaml</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;plndr/kube-vip:0.1.1&#x27;</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kube-vip</span></span><br><span class="line">    <span class="attr">resources:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">securityContext:</span></span><br><span class="line">      <span class="attr">capabilities:</span></span><br><span class="line">        <span class="attr">add:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">NET_ADMIN</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">SYS_TIME</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/vip.yaml</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/etc/kube-vip/config.yaml</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line"><span class="attr">status:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>With the services up, now the Kubernetes cluster can be bootstrapped using <code>kubeadm init</code> (see <a href="https://github.com/kubernetes/kubeadm/blob/master/docs/ha-considerations.md#bootstrap-the-cluster">below</a>).</p><h2 id="Bootstrap-the-cluster"><a href="#Bootstrap-the-cluster" class="headerlink" title="Bootstrap the cluster"></a>Bootstrap the cluster</h2><p>Now the actual cluster bootstrap as described in <a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/">Creating Highly Available clusters with kubeadm</a> can take place.</p><p>Note that, if <code>$&#123;APISERVER_DEST_PORT&#125;</code> has been configured to a value different from <code>6443</code> in the configuration above, <code>kubeadm init</code> needs to be told to use that port for the API Server. Assuming that in a new cluster port 8443 is used for the load-balanced API Server and a virtual IP with the DNS name <code>vip.mycluster.local</code>, an argument <code>--control-plane-endpoint</code> needs to be passed to <code>kubeadm</code> as follows:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubeadm init --control-plane-endpoint vip.mycluster.local:8443 [additional arguments ...]</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://kube-vip.io/">Kube-vip 官方文档</a></p></li><li><p><a href="https://kube-vip.io/architecture/">kube-vip architecture</a></p></li><li><p><a href="https://github.com/kubernetes/kubeadm/blob/master/docs/ha-considerations.md">High Availability Considerations</a></p></li><li><p><a href="https://blog.csdn.net/u013812710/article/details/116451771">k8s+kube-vip实现k8s高可用</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Kube vip为社区开源的一套Kubernetes HA解决方案，基于GO语言开发。轻量级，性能待验证。官方介绍如下：&lt;/p&gt;
&lt;p&gt;Ku</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/tags/Kubernetes/"/>
    
    <category term="HA" scheme="https://renyb2.github.io/tags/HA/"/>
    
  </entry>
  
  <entry>
    <title>Ceph使用：通用手册</title>
    <link href="https://renyb2.github.io/2021/07/15/Ceph%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://renyb2.github.io/2021/07/15/Ceph%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2021-07-15T01:20:32.000Z</published>
    <updated>2021-07-15T02:48:57.151Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="Ceph管理"><a href="#Ceph管理" class="headerlink" title="Ceph管理"></a>Ceph管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph状态</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# ceph -s</span><br><span class="line">  cluster:</span><br><span class="line">    id:     e3f8d4d7-6888-4f67-b740-5a80da34b3dc</span><br><span class="line">    health: HEALTH_WARN</span><br><span class="line">            Degraded data redundancy: 988/11616 objects degraded (8.506%), 142 pgs degraded, 192 pgs undersized</span><br><span class="line">            application not enabled on 2 pool(s)</span><br><span class="line"></span><br><span class="line">  services:</span><br><span class="line">    mon: 1 daemons, quorum a (age 7d)</span><br><span class="line">    mgr: a(active, since 20h)</span><br><span class="line">    mds: myfs:1 &#123;0=myfs-b=up:active&#125; 1 up:standby-replay</span><br><span class="line">    osd: 2 osds: 2 up (since 25h), 2 in (since 7d); 1 remapped pgs</span><br><span class="line">    rgw: 1 daemon active (ceph-rgw-7f89b49bb8-ksdhr)</span><br><span class="line"></span><br><span class="line">  task status:</span><br><span class="line">    scrub status:</span><br><span class="line">        mds.myfs-a: idle</span><br><span class="line">        mds.myfs-b: idle</span><br><span class="line"></span><br><span class="line">  data:</span><br><span class="line">    pools:   11 pools, 480 pgs</span><br><span class="line">    objects: 6.14k objects, 35 GiB</span><br><span class="line">    usage:   70 GiB used, 30 GiB / 100 GiB avail</span><br><span class="line">    pgs:     988/11616 objects degraded (8.506%)</span><br><span class="line">             16/11616 objects misplaced (0.138%)</span><br><span class="line">             288 active+clean</span><br><span class="line">             142 active+undersized+degraded</span><br><span class="line">             49  active+undersized</span><br><span class="line">             1   active+undersized+remapped</span><br><span class="line"></span><br><span class="line">  io:</span><br><span class="line">    client:   1.2 KiB/s rd, 171 KiB/s wr, 2 op/s rd, 17 op/s wr</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看ceph使用率</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# ceph df</span><br><span class="line">RAW STORAGE:</span><br><span class="line">    CLASS     SIZE        AVAIL      USED       RAW USED     %RAW USED</span><br><span class="line">    hdd       100 GiB     30 GiB     68 GiB       70 GiB         69.83</span><br><span class="line">    TOTAL     100 GiB     30 GiB     68 GiB       70 GiB         69.83</span><br><span class="line"></span><br><span class="line">POOLS:</span><br><span class="line">    POOL                    ID     STORED      OBJECTS     USED        %USED     MAX AVAIL</span><br><span class="line">    myfs-metadata            1     2.5 MiB          25       3 MiB      0.01        25 GiB</span><br><span class="line">    kube                     2     852 MiB         297     923 MiB      3.47        24 GiB</span><br><span class="line">    myfs-data0               3     3.9 MiB         180      13 MiB      0.05        25 GiB</span><br><span class="line">    cinder-volumes           4      70 MiB         151     146 MiB      0.56        13 GiB</span><br><span class="line">    cinder.backups           5         0 B           0         0 B         0        13 GiB</span><br><span class="line">    cinder.volumes           6         0 B           0         0 B         0        25 GiB</span><br><span class="line">    .rgw.root                7     1.2 KiB           4     256 KiB         0        25 GiB</span><br><span class="line">    default.rgw.control      8         0 B           8         0 B         0        25 GiB</span><br><span class="line">    default.rgw.meta         9         0 B           0         0 B         0        25 GiB</span><br><span class="line">    default.rgw.log         10         0 B       1.16k         0 B         0        25 GiB</span><br><span class="line">    images                  11      33 GiB       4.31k      67 GiB     72.66        13 GiB</span><br></pre></td></tr></table></figure><h3 id="RBD管理"><a href="#RBD管理" class="headerlink" title="RBD管理"></a>RBD管理</h3><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看指定存储池内rbd list</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# rbd ls images</span><br><span class="line">00cbc7af-c8ab-45db-9b81-8674b536b695</span><br><span class="line">15bb8b35-dedd-4ba6-88e1-4d5d6dc8a65b</span><br><span class="line">18f09bec-b9f9-4a63-a2b4-5ab3ceed19f7</span><br><span class="line">32581d85-140a-432f-b555-0c23ca00779c</span><br><span class="line">3e840866-668e-4527-9916-303b66e7f82b</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看指定rbd信息</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# rbd info images/32581d85-140a-432f-b555-0c23ca00779c</span><br><span class="line">rbd image &#x27;32581d85-140a-432f-b555-0c23ca00779c&#x27;:</span><br><span class="line">        size 819 MiB in 103 objects</span><br><span class="line">        order 23 (8 MiB objects)</span><br><span class="line">        snapshot_count: 1</span><br><span class="line">        id: 11470c8980729e</span><br><span class="line">        block_name_prefix: rbd_data.11470c8980729e</span><br><span class="line">        format: 2</span><br><span class="line">        features: layering</span><br><span class="line">        op_features:</span><br><span class="line">        flags:</span><br><span class="line">        create_timestamp: Thu Jul 15 01:08:31 2021</span><br><span class="line">        access_timestamp: Thu Jul 15 01:09:34 2021</span><br><span class="line">        modify_timestamp: Thu Jul 15 01:08:31 2021</span><br></pre></td></tr></table></figure><h4 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看指定rbd的快照信息</span></span><br><span class="line">[root@rook-ceph-tools-69f7b87b57-vwl67 /]# rbd snap ls images/32581d85-140a-432f-b555-0c23ca00779c</span><br><span class="line">SNAPID NAME     SIZE    PROTECTED TIMESTAMP</span><br><span class="line">    54 snap     819 MiB yes       Thu Jul 15 02:17:57 2021</span><br><span class="line">    55 testsnap 819 MiB           Thu Jul 15 02:38:14 2021</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建快照</span></span><br><span class="line">rbd snap add &lt; pool name &gt;/&lt; rbd name &gt;@&lt; snap name &gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;h3 id=&quot;Ceph管理&quot;&gt;&lt;a href=&quot;#Ceph管理&quot; class=&quot;headerlink&quot; title=&quot;Ceph管</summary>
      
    
    
    
    <category term="Ceph" scheme="https://renyb2.github.io/categories/Ceph/"/>
    
    
    <category term="Ceph" scheme="https://renyb2.github.io/tags/Ceph/"/>
    
    <category term="通用手册" scheme="https://renyb2.github.io/tags/%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>Linux配置：HAProxy</title>
    <link href="https://renyb2.github.io/2021/06/03/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AHAProxy/"/>
    <id>https://renyb2.github.io/2021/06/03/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AHAProxy/</id>
    <published>2021-06-03T01:07:51.000Z</published>
    <updated>2021-10-19T11:52:13.672Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="Backend-配置域名"><a href="#Backend-配置域名" class="headerlink" title="Backend 配置域名"></a>Backend 配置域名</h3><p>HAProxy 版本1.6开始支持域名解析功能</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">resolvers</span> <span class="string">mynameservers</span></span><br><span class="line">    <span class="string">nameserver</span> <span class="string">ns1</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.10</span><span class="string">:53</span>                                <span class="comment"># 配置DNS服务器地址，ns1为服务器代号，可自定义</span></span><br><span class="line">    <span class="string">parse-resolv-conf</span>                                           <span class="comment"># 加载主机/etc/resolve.conf文件内的DNS配置信息</span></span><br><span class="line">    <span class="string">resolve_retries</span>       <span class="number">3</span></span><br><span class="line">    <span class="string">timeout</span> <span class="string">resolve</span>       <span class="string">1s</span></span><br><span class="line">    <span class="string">timeout</span> <span class="string">retry</span>         <span class="string">1s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">other</span>           <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">refused</span>         <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">nx</span>              <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">timeout</span>         <span class="string">10s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">valid</span>           <span class="string">5s</span></span><br><span class="line">    <span class="string">hold</span> <span class="string">obsolete</span>        <span class="string">10s</span></span><br><span class="line"></span><br><span class="line"><span class="string">frontend</span> <span class="string">keystone-admin_front</span></span><br><span class="line">    <span class="string">mode</span> <span class="string">http</span></span><br><span class="line">    <span class="string">http-request</span> <span class="string">del-header</span> <span class="string">X-Forwarded-Proto</span></span><br><span class="line">    <span class="string">option</span> <span class="string">httplog</span></span><br><span class="line">    <span class="string">option</span> <span class="string">forwardfor</span></span><br><span class="line">    <span class="string">http-request</span> <span class="string">set-header</span> <span class="string">X-Forwarded-Proto</span> <span class="string">https</span> <span class="string">if</span> &#123; <span class="string">ssl_fc</span> &#125;</span><br><span class="line">    <span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:5000</span></span><br><span class="line">    <span class="string">default_backend</span> <span class="string">keystone-admin_back</span></span><br><span class="line"></span><br><span class="line"><span class="string">backend</span> <span class="string">keystone-admin_back</span></span><br><span class="line">    <span class="string">mode</span> <span class="string">http</span></span><br><span class="line">    <span class="string">default-server</span> <span class="string">init-addr</span> <span class="string">none</span> <span class="string">resolvers</span> <span class="string">mynameservers</span>        <span class="comment"># 初始域名后端解析地址为空，启动后从DNS服务器获取后端ip后更新解析地址</span></span><br><span class="line">    <span class="string">server</span> <span class="string">keystone-admin</span> <span class="string">keystone-api.openstack.svc.cluster.local:5000</span> <span class="string">check</span> <span class="string">inter</span> <span class="number">2000 </span><span class="string">rise</span> <span class="number">2</span> <span class="string">fall</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="请求重定向"><a href="#请求重定向" class="headerlink" title="请求重定向"></a>请求重定向</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将所有访问9999端口的请求重定向至指定地址</span></span><br><span class="line"><span class="string">frontend</span> <span class="string">demo</span></span><br><span class="line">    <span class="string">mode</span> <span class="string">http</span></span><br><span class="line">    <span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:9999</span></span><br><span class="line">    <span class="string">redirect</span> <span class="string">location</span> <span class="string">http://keystone.openstack.svc.cluster.local</span></span><br></pre></td></tr></table></figure><h3 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h3><p>HAProxy将对应级别的log发送至指定日志服务器，默认为rsyslog日志服务</p><ul><li>HAProxy配置文件</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">global</span></span><br><span class="line">    <span class="string">log</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="string">local2</span> <span class="string">info</span>                        <span class="comment"># 使用本机local2进行日志记录（可选范围local1 ~ 7），生产环境不推荐开启日志，增加IO负担</span></span><br></pre></td></tr></table></figure><ul><li>rsyslog配置文件：<code>/etc/rsyslog.conf</code> ，修改后重启 <code>rsyslog</code> 服务</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides UDP syslog reception</span></span><br><span class="line"><span class="string">$ModLoad</span> <span class="string">imudp</span>                                       <span class="comment"># HAProxy基于udp方式发送日志消息，需要加载支持udp协议的模块</span></span><br><span class="line"><span class="string">$UDPServerRun</span> <span class="number">514</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides TCP syslog reception</span></span><br><span class="line"><span class="string">$ModLoad</span> <span class="string">imtcp</span></span><br><span class="line"><span class="string">$InputTCPServerRun</span> <span class="number">514</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Everybody gets emergency messages</span></span><br><span class="line"><span class="comment"># *.emerg                 :omusrmsg:*</span></span><br><span class="line"><span class="string">*.emerg</span>                  <span class="string">/var/log/messages</span>           <span class="comment"># rsyslog默认将严重消息发送至终端，HAProxy后端不可用为严重消息。这里将消息记录至文件内</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Haproxy log</span></span><br><span class="line"><span class="string">local2.*</span>                 <span class="string">/var/log/haproxy.log</span>        <span class="comment"># 将local2的日志记录入文件</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://www.haproxy.org/">HAProxy 官网</a></p></li><li><p><a href="http://cbonte.github.io/haproxy-dconv/2.4/configuration.html#1">HAProxy 官方文档（version 2.4.0）</a></p></li><li><p><a href="https://www.haproxy.com/documentation/hapee/latest/configuration/config-sections/resolvers/">HAProxy Resolvers</a></p></li><li><p><a href="https://phpor.net/blog/post/3812">haproxy 健康检查与域名解析</a></p></li><li><p><a href="http://www.ttlsa.com/linux/haproxy-study-tutorial/">HAProxy用法详解</a></p></li><li><p><a href="https://www.cnblogs.com/kevingrace/p/10182538.html">Haproxy 重定向跳转设置 - 运维小结</a></p></li><li><p><a href="https://www.cnblogs.com/yinzhengjie/p/12114081.html">HAProxy基础配置-haproxy的配置文件说明</a></p></li><li><p><a href="https://www.cnblogs.com/yinzhengjie/p/12122239.html">HAProxy基础配置-配置haproxy的日志</a></p></li><li><p><a href="http://www.szl724.com/sysmaint/linux-os/3258.html">HAProxy日志重复记录messages和错误输出到终端的优化</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;h3 id=&quot;Backend-配置域名&quot;&gt;&lt;a href=&quot;#Backend-配置域名&quot; class=&quot;headerlink&quot; title=&quot;B</summary>
      
    
    
    
    <category term="Linux" scheme="https://renyb2.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://renyb2.github.io/tags/Linux/"/>
    
    <category term="HAProxy" scheme="https://renyb2.github.io/tags/HAProxy/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes部署：RabbitMQ</title>
    <link href="https://renyb2.github.io/2021/05/15/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9ARabbitMQ/"/>
    <id>https://renyb2.github.io/2021/05/15/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9ARabbitMQ/</id>
    <published>2021-05-15T01:46:23.000Z</published>
    <updated>2021-10-19T11:51:26.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>本文用来记录 <code>Kubernetes</code> 上部署的 <code>RabbitMQ</code> 集群遇到的一个问题。基础信息如下：</p><ul><li>宿主机系统：Centos 7.8</li><li>Docker Server版本：18.09.6</li><li>Kubernetes版本：v1.19.0</li><li>RabbitMQ部署方式：stx-openstack 3.0</li><li>RabbitMQ镜像版本：3.7.13</li></ul><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>3节点集群，由于非同时节点关机（如机房掉电），概率导致集群仲裁失败。故障现象是pod 为Running 状态，但是几分钟以后依然不能readay 1/1。pod日志显示” Waiting for Mnesia tables”</p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>rabbitmq集群pod分0、1、2，共3节点。服务器掉电，最后退出的pod认为自己具有最新的数据，所以启动时应从最后退出的pod启动。但Kubernetes Statefulset维护的pod，启动方式为0 - 1 - 2顺序启动，只有0运行起来后才会运行后面的pod。如果0不是最后退出，则会启动卡住，等待最后退出的节点运行，形成死循环</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>pod 0 启动方式调整为强制启动，删除pod后自动重建，会强制拉起。命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Ensures that the node will start next time, even <span class="keyword">if</span> it was not the last to shut down.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Force boot cluster shut down unexpectedly <span class="keyword">in</span> an unknown order.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ref: https://www.rabbitmq.com/rabbitmqctl.8.html<span class="comment">#force_boot</span></span></span><br><span class="line">rabbitmqctl force_boot</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot">RabbitMQ官方文档：rabbitmqctl</a></p></li><li><p><a href="https://blog.csdn.net/u013256816/article/details/78348761">RabbitMQ管理（5）——集群管理</a></p></li><li><p><a href="https://stackoverflow.com/questions/60407082/rabbit-mq-error-while-waiting-for-mnesia-tables">Rabbit mq - Error while waiting for Mnesia tables</a></p></li><li><p><a href="https://www.sohu.com/a/338991483_470018">RabbitMQ原理、集群、基本操作及常见故障处理</a></p></li><li><p><a href="https://www.kubernetes.org.cn/1304.html">基于Kubernetes（k8s）的RabbitMQ 集群</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;本文用来记录 &lt;code&gt;Kubernetes&lt;/code&gt; 上部署的 &lt;code&gt;RabbitMQ&lt;/code&gt; 集群遇到的一个问题。基础</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/tags/Kubernetes/"/>
    
    <category term="RabbitMQ" scheme="https://renyb2.github.io/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>Linux使用：通用手册</title>
    <link href="https://renyb2.github.io/2021/05/07/Linux%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://renyb2.github.io/2021/05/07/Linux%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2021-05-07T03:26:39.000Z</published>
    <updated>2021-07-15T01:44:16.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见场景"><a href="#常见场景" class="headerlink" title="常见场景"></a>常见场景</h2><h3 id="tar-gz-压缩拆分"><a href="#tar-gz-压缩拆分" class="headerlink" title="tar.gz 压缩拆分"></a>tar.gz 压缩拆分</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 压缩拆分</span></span><br><span class="line">tar zcvf - k8s_install/ | split -b 3G - iECI_v210430.tar.gz.</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> split -b 指定拆分小包的大小</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成iECI_v210430.tar.gz.开头，aa、ab、ac...等小包</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压拆分</span></span><br><span class="line">cat iECI_v210430.tar.gz.* | tar zxv</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常见场景&quot;&gt;&lt;a href=&quot;#常见场景&quot; class=&quot;headerlink&quot; title=&quot;常见场景&quot;&gt;&lt;/a&gt;常见场景&lt;/h2&gt;&lt;h3 id=&quot;tar-gz-压缩拆分&quot;&gt;&lt;a href=&quot;#tar-gz-压缩拆分&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="Linux" scheme="https://renyb2.github.io/categories/Linux/"/>
    
    
    <category term="通用手册" scheme="https://renyb2.github.io/tags/%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    <category term="Linux" scheme="https://renyb2.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes开发：Helm</title>
    <link href="https://renyb2.github.io/2021/04/23/Kubernetes%E5%BC%80%E5%8F%91%EF%BC%9AHelm/"/>
    <id>https://renyb2.github.io/2021/04/23/Kubernetes%E5%BC%80%E5%8F%91%EF%BC%9AHelm/</id>
    <published>2021-04-23T07:06:06.000Z</published>
    <updated>2021-10-19T11:51:33.428Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>Helm是Kubernetes的包管理工具，类似于操作系统中的yum，apt-get。Helm提供应用的编排部署、升级、卸载等管理操作。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><blockquote><p>在开始之前，我们简单理解一下Helm template的基本原理。其实也很简单，Helm使用gotemplate模板语言来编写代表Kubernetes资源（deployment,service, etc…）的模板文件，并提供让用户配置这些模板变量的能力。在部署时Helm通过模板引擎将模板渲染成真正的Kubernetes资源文件，并将它们部署到节点上。</p></blockquote><h3 id="创建Helm包"><a href="#创建Helm包" class="headerlink" title="创建Helm包"></a>创建Helm包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm create myapp</span><br></pre></td></tr></table></figure><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>自动生成的模板目录结构如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">myapp</span><br><span class="line">├── Chart.yaml</span><br><span class="line">├── charts</span><br><span class="line">├── templates</span><br><span class="line">│   ├── NOTES.txt</span><br><span class="line">│   ├── _helpers.tpl</span><br><span class="line">│   ├── deployment.yaml</span><br><span class="line">│   ├── hpa.yaml</span><br><span class="line">│   ├── ingress.yaml</span><br><span class="line">│   ├── service.yaml</span><br><span class="line">│   ├── serviceaccount.yaml</span><br><span class="line">│   └── tests</span><br><span class="line">│       └── test-connection.yaml</span><br><span class="line">└── values.yaml</span><br></pre></td></tr></table></figure><ul><li><code>templates/</code> 目录下是模板文件，当Helm需要生成chart的时，会渲染该目录下的模板文件，将渲染结果发送给kubernetes。</li><li><code>charts/</code> 目录是存放依赖的子包名称。</li><li><code>Chart.yaml</code> 文件保存chart的基本描述信息，这些描述信息也可以在模板中被引用。</li><li><code>values.yaml</code> 文件保存模板的默认值，用户可以在<code>helm install</code> 或者 <code>helm upgrade</code>可以指定新的值来覆盖默认值。</li><li><code>_helper.tpl</code> 下划线开头的文件，helm视为公共库定义文件，主要用于定义通用的子模版、函数等，helm不会将这些公共库文件的渲染结果提交给k8s处理。</li><li><code>NOTES.txt</code> chart包的帮助信息文件，执行helm install命令安装成功后会输出这个文件的内容。</li></ul><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="v3版本"><a href="#v3版本" class="headerlink" title="v3版本"></a>v3版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 部署Helm包</span></span><br><span class="line">helm install myapp ./myapp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 升级Helm包</span></span><br><span class="line">helm upgrade myapp ./myapp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看部署的Helm包</span></span><br><span class="line">helm list -A</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载Helm包</span></span><br><span class="line">helm uninstall myapp</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证chart是否遵循最佳实践</span></span><br><span class="line">helm lint</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试helm包渲染，不真正部署，只返回渲染结果</span></span><br><span class="line">helm install --dry-run --debug</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看已部署的helm包渲染结果</span></span><br><span class="line">helm get manifest &lt;NAME&gt;</span><br></pre></td></tr></table></figure><h2 id="开发基础"><a href="#开发基础" class="headerlink" title="开发基础"></a>开发基础</h2><blockquote><p>详细文档参考Helm中文文档：<a href="http://www.coderdocument.com/docs/helm/v2/developing_templates/intro.html">chart模板开发指南</a></p></blockquote><h2 id="STX-OpenStack-Helm包解析"><a href="#STX-OpenStack-Helm包解析" class="headerlink" title="STX-OpenStack Helm包解析"></a>STX-OpenStack Helm包解析</h2><h3 id="目录结构-1"><a href="#目录结构-1" class="headerlink" title="目录结构"></a>目录结构</h3><p>以 <code>cyborg</code> 组件Helm包为例，讲解各目录及文件的用途。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cyborg</span><br><span class="line">├── .helmignore                          # Building Packages时忽略内容</span><br><span class="line">├── Chart.yaml                           # Helm包基础描述信息。包含包名、版本、描述、维护人员信息等</span><br><span class="line">├── charts                               # Helm包依赖的工具包。推荐通过requirements.yaml文件维护</span><br><span class="line">├── templates                            # Helm包模板文件目录。_开头的文件Helm不会提交Kubernetes处理。</span><br><span class="line">│   └── bin                              # 存放安装过程用到的可执行文件。</span><br><span class="line">│       ├── _cyborg-agent-init.sh.tpl    # 服务启动前进行预处理</span><br><span class="line">│       ├── _cyborg-agent.sh.tpl         # 每个服务启动关闭均通过调用可执行文件的start、stop方法执行</span><br><span class="line">│       ├── _cyborg-api.sh.tpl</span><br><span class="line">│       ├── _cyborg-conductor.sh.tpl</span><br><span class="line">│       └── _db-sync.sh.tpl              # 同步DB脚本</span><br><span class="line">│   ├── configmap-bin.yaml               # 创建Kubernetes存储资源，存放可执行文件</span><br><span class="line">│   ├── configmap-etc.yaml               # 创建Kubernetes存储资源，存放配置文件</span><br><span class="line">│   ├── daemonset-agent.yaml             # cyborg服务，主要通过Daemonset、Deployment、StatefulSet维护Pod</span><br><span class="line">│   ├── deployment-api.yaml</span><br><span class="line">│   ├── deployment-conductor.yaml</span><br><span class="line">│   ├── ingress-api.yaml                 # kubernetes Ingress。创建域名，映射至service。</span><br><span class="line">│   ├── job-db-drop.yaml                 # 任务：删除DB，默认不执行</span><br><span class="line">│   ├── job-db-init.yaml                 # 任务：初始化DB</span><br><span class="line">│   ├── job-db-sync.yaml                 # 任务：同步DB</span><br><span class="line">│   ├── job-image-repo-sync.yaml         # 任务：同步需要的镜像资源</span><br><span class="line">│   ├── job-ks-endpoints.yaml            # 任务：创建keystone endpoint</span><br><span class="line">│   ├── job-ks-service.yaml              # 任务：创建keystone service</span><br><span class="line">│   ├── job-ks-user.yaml                 # 任务：创建keystone user</span><br><span class="line">│   ├── job-rabbit-init.yaml             # 任务：初始化rabbitmq</span><br><span class="line">│   ├── secret-db.yaml                   # 保存DB连接信息，包含admin、cyborg用户</span><br><span class="line">│   ├── secret-ingress-tls.yaml          # 保存tls证书</span><br><span class="line">│   ├── secret-keystone.yaml             # 保存keystone认证信息，包含admin、cyborg用户</span><br><span class="line">│   ├── secret-rabbitmq.yaml             # 保存rabbitmq连接信息，包含admin、cyborg用户</span><br><span class="line">│   ├── service-api.yaml                 # kubernetes service，与Pod内部做映射，集群内部可访问</span><br><span class="line">│   └── service-ingress-api.yaml         # kubernetes service，与Pod内部做映射，集群内外部均可访问</span><br><span class="line">├── requirements.yaml                    # 依赖的工具包信息。推荐通过该文件维护，需指定依赖的Helm包名称、位置、版本</span><br><span class="line">└── values.yaml                          # Helm基础变量文件。Helm通过模板语言把values.yaml中的变量渲染至templates目录中，生成指定的Kubernetes yaml文件</span><br></pre></td></tr></table></figure><h3 id="values-yaml-解析"><a href="#values-yaml-解析" class="headerlink" title="values.yaml 解析"></a>values.yaml 解析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">labels:                                  # 配置各个Pod调度所需要匹配的标签值</span><br><span class="line">  ...</span><br><span class="line">images:                                  # 配置cyborg及基础Pod需要的Docker image信息</span><br><span class="line">  ...</span><br><span class="line">conf:                                    # 配置cyborg组件的配置文件</span><br><span class="line">  ...</span><br><span class="line">network:                                 # 配置Kubernetes网络</span><br><span class="line">  ...</span><br><span class="line">dependencies:                            # 配置Pod启动流程依赖关系，控制部署流程</span><br><span class="line">  ...</span><br><span class="line">secrets:                                 # 配置cyborg组件创建的Kubernetes secrets名称</span><br><span class="line">  ...</span><br><span class="line">endpoints:                               # 配置连接信息。包括DB、rabbitmq、memcached、keystone、cyborg及依赖的组件</span><br><span class="line">  ...</span><br><span class="line">pod:                                     # 配置Pod生命流程管理信息，包括安全、亲和性、挂载卷、副本数、资源限制等</span><br><span class="line">  ...</span><br><span class="line">manifests:                               # 配置部署时执行的任务</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h3 id="服务部署流程"><a href="#服务部署流程" class="headerlink" title="服务部署流程"></a>服务部署流程</h3><ol><li>执行 <code>helm install</code> 后，helm 模板语言（go template）会将 <code>values.yaml</code> 中的值渲染进 <code>templates</code> 目录下的所有文件，并将除 NOTES.txt 及 _开头的文件以外的其余文件发送给 Kubernetes 处理。</li><li>Kubernetes 会将所有渲染好的 yaml文件统一创建出来。</li><li>创建的流程控制，如先创建数据库、rabbitmq等信息，然后启动服务，是通过 <code>Daemonset、Deployment、StatefulSet</code> 中的 <code>initContainers</code> 部分控制，<code>initContainers</code> 会优先启动 <code>kubernetes_entrypoint_init_container</code> ，根据 <code>values.yaml</code> 文件中 <code>dependencies</code> 配置的依赖信息，决定是否开始运行。</li><li>运行流程：存储文件和Job类任务优先运行，Completed状态之后，开始运行服务类Pod。</li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://helm.sh/docs/">HELM 官方文档</a></p></li><li><p><a href="http://www.coderdocument.com/docs/helm/v2/index.html">Helm中文文档</a></p></li><li><p><a href="https://whmzsu.github.io/helm-doc-zh-cn/">Helm User Guide - Helm 用户指南</a></p></li><li><p><a href="http://www.coderdocument.com/docs/helm/v2/developing_templates/intro.html">chart模板开发指南</a></p></li><li><p><a href="https://www.cnblogs.com/lyc94620/p/10945430.html">Helm简述教程</a></p></li><li><p><a href="https://juejin.cn/post/6844904199818313735">Helm template快速入门</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;Helm是Kubernetes的包管理工具，类似于操作系统中的yum，apt-get。Helm提供应用的编排部署、升级、卸载等管理操作。&lt;/</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/tags/Kubernetes/"/>
    
    <category term="Helm" scheme="https://renyb2.github.io/tags/Helm/"/>
    
  </entry>
  
  <entry>
    <title>Linux配置：IPTABLES</title>
    <link href="https://renyb2.github.io/2021/03/11/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AIPTABLES/"/>
    <id>https://renyb2.github.io/2021/03/11/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AIPTABLES/</id>
    <published>2021-03-11T02:07:04.000Z</published>
    <updated>2021-10-19T11:52:20.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><blockquote><p><strong>iptables</strong>其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫<strong>netfilter</strong></p><p>netfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。</p><p>iptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。</p><p>netfilter/iptables（下文中简称为iptables）组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（NAT）等功能。</p><p>Netfilter是Linux操作系统核心层内部的一个数据包处理模块，它具有如下功能：</p><ul><li>网络地址转换(Network Address Translate)</li><li>数据包内容修改</li><li>以及数据包过滤的防火墙功能</li></ul><p>所以说，虽然我们使用service iptables start启动iptables”服务”，但是其实准确的来说，iptables并没有一个守护进程，所以并不能算是真正意义上的服务，而应该算是内核提供的功能。</p><p>引用自<a href="https://www.zsythink.net/archives/1199">iptables详解（1）：iptables概念</a></p></blockquote><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看filter表中INPUT链规则</span></span><br><span class="line">iptables -t filter -L INPUT --line -nxv</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> -t  指定表名，默认filter</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -L  指定链名，默认所有链</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -v  查看详细信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -n  不对IP地址进行名称反解析，直接显示IP地址</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --line-numbers  显示规则编号，可简写为--line</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -x  显示精确数值</span></span><br></pre></td></tr></table></figure><h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 增加</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 放通从ens192网口来的所有ssh请求</span></span><br><span class="line">iptables -A INPUT -i ens192 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -o ens192 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 处理动作：</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - ACCEPT：允许数据包通过。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - DROP：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - REJECT：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - SNAT：源地址转换，解决内网用户用同一个公网地址上网的问题。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - MASQUERADE：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - DNAT：目标地址转换。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - REDIRECT：在本机做端口映射。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - LOG：在/var/<span class="built_in">log</span>/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  - 链名（转至指定链处理）</span></span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 删除</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -t 指定表</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -D 指定链</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;num&gt; 指定规则id</span></span><br><span class="line">iptables -t nat -D POSTROUTING 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除filter表中INPUT链第三条规则</span></span><br><span class="line">iptables -t filter -D INPUT 3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除源地址为192.168.1.146，动作为ACCEPT的规则</span></span><br><span class="line">iptables -t filter -D INPUT -s 192.168.1.146 -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="永久生效"><a href="#永久生效" class="headerlink" title="永久生效"></a>永久生效</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 规则添加至/etc/sysconfig/iptables即可永久保存</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> iptables服务管理</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># iptables规则永久保存</span></span></span><br><span class="line">iptables-save &gt; /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure><h2 id="常用方式"><a href="#常用方式" class="headerlink" title="常用方式"></a>常用方式</h2><h3 id="路由转发"><a href="#路由转发" class="headerlink" title="路由转发"></a>路由转发</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 路由转发</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -s 指定源网段</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -d 指定目标网段 </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -o 指定目标网段的网络接口</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -j MASQUERADE 地址伪装</span></span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24  -d 10.10.1.0/24 -o eth0 -j MASQUERADE</span><br><span class="line"><span class="meta">#</span><span class="bash"> PS:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. 服务器开启路由转发需开启内核转发</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 临时配置：<span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/ip_forward</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 永久配置：修改sysctl.conf，设置net.ipv4.ip_forward = 1，执行sysctl -p生效</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 客户端设置网关为服务器ip</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> route add -net 10.10.1.0 netmask 255.255.255.0 gw 192.168.1.199</span></span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> start</span></span><br><span class="line">iptables -N IECI-INPUT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> base</span></span><br><span class="line">iptables -I IECI-INPUT -p tcp --dport 22 -j ACCEPT                   # ssh</span><br><span class="line">iptables -I IECI-INPUT -p tcp --sport 22 -j ACCEPT                   # ssh</span><br><span class="line">iptables -I IECI-INPUT -p udp --sport 123 -j ACCEPT                  # chronyd</span><br><span class="line">iptables -I IECI-INPUT -p udp --sport 53 -j ACCEPT                   # dns</span><br><span class="line">iptables -I IECI-INPUT -p udp --dport 53 -j ACCEPT                   # dns</span><br><span class="line">iptables -I IECI-INPUT -p udp --dport 67 -j ACCEPT                   # dhcp,检测不需要（已踢除）</span><br><span class="line">iptables -I IECI-INPUT -p icmp -j ACCEPT                             # ping</span><br><span class="line">iptables -I IECI-INPUT -i lo -j ACCEPT                               # 127.0.0.1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> platform</span></span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.47 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.48 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.49 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.50 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens192 -s 111.111.16.147 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens224 -s 6.6.6.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens224 -s 192.168.206.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens224 -s 169.254.202.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -i ens161 -s 8.8.8.0/24 -j ACCEPT</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 1984 -j ACCEPT       # haproxy dashboard</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubernetes</span></span><br><span class="line">iptables -I IECI-INPUT -i docker0 -j ACCEPT                          # docker</span><br><span class="line">iptables -I IECI-INPUT -i kube-ipvs0 -j ACCEPT                       # kubernates ipvs</span><br><span class="line">iptables -I IECI-INPUT -s 10.10.0.0/16 -j ACCEPT                     # pod</span><br><span class="line">iptables -I IECI-INPUT -s 10.96.0.0/12 -j ACCEPT                     # service</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 32000 -j ACCEPT      # kubernates dashboard</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> openstack</span></span><br><span class="line">iptables -I IECI-INPUT --dport 3260 -j ACCEPT                        # iscsi</span><br><span class="line">iptables -I IECI-INPUT --dport 5050 -j ACCEPT                        # ironic inspector</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 30680 -j ACCEPT      # nova vnc</span><br><span class="line">iptables -I IECI-INPUT -p tcp -i ens192 --dport 31000 -j ACCEPT      # openstack dashboard</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> end</span></span><br><span class="line">iptables -I INPUT -j IECI-INPUT</span><br><span class="line">iptables -P INPUT DROP</span><br></pre></td></tr></table></figure><h3 id="iptables文件方式"><a href="#iptables文件方式" class="headerlink" title="iptables文件方式"></a>iptables文件方式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sample configuration <span class="keyword">for</span> iptables service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you can edit this manually or use system-config-firewall</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> please <span class="keyword">do</span> not ask us to add additional ports/services to this default configuration</span></span><br><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">:IECI-INPUT - [0:0]</span><br><span class="line">-A INPUT -j IECI-INPUT</span><br><span class="line">-A IECI-INPUT -i lo -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p icmp -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i docker0 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i kube-ipvs0 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p udp -m udp --sport 53 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p udp -m udp --sport 123 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --sport 22 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 10.10.0.0/16 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 10.96.0.0/12 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.147/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.47/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.48/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.49/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 111.111.16.50/32 -i ens192 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 30680 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 31000 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 1984 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -i ens192 -p tcp -m tcp --dport 32000 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 6.6.6.0/24 -i ens224 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 8.8.8.0/24 -i ens161 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 192.168.206.0/24 -i ens224 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -s 169.254.202.0/24 -i ens224 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --dport 3260 -j ACCEPT</span><br><span class="line">-A IECI-INPUT -p tcp -m tcp --dport 5050 -j ACCEPT</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://www.zsythink.net/archives/tag/iptables/">Iptables详解</a></p></li><li><p><a href="https://www.linuxprobe.com/25-iptables-common-examples.html">25个iptables常用示例</a></p></li><li><p><a href="https://blog.csdn.net/lemontree1945/article/details/80598242">Linux开启路由转发功能</a></p></li><li><p><a href="https://www.cnblogs.com/hixiaowei/p/8954161.html">删除iptables nat 规则</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/ukmQ7PLU9AxQrcsdJoS1UQ">iptables 防火墙如何记录日志</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;iptables&lt;/strong&gt;其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过</summary>
      
    
    
    
    <category term="Linux" scheme="https://renyb2.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://renyb2.github.io/tags/Linux/"/>
    
    <category term="IPTABLES" scheme="https://renyb2.github.io/tags/IPTABLES/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes使用：通用手册</title>
    <link href="https://renyb2.github.io/2021/03/08/Kubernetes%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://renyb2.github.io/2021/03/08/Kubernetes%E4%BD%BF%E7%94%A8%EF%BC%9A%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2021-03-08T02:57:29.000Z</published>
    <updated>2021-10-19T11:51:41.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看pod状态</span></span><br><span class="line">kubectl get pods -o wide</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看部署任务状态</span></span><br><span class="line">kubectl get deployment</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看服务状态</span></span><br><span class="line">kubectl get svc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看pod详情</span></span><br><span class="line">kubectl describe pod</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从yaml文件中创建</span></span><br><span class="line">kubectl create -f &lt;yaml file&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建部署任务</span></span><br><span class="line">kubectl create deployment &lt;deployment name&gt; --image=&lt;image url&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除部署任务</span></span><br><span class="line">kubectl delete deployment &lt;deployment name&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除服务</span></span><br><span class="line">kubectl delete svc &lt;service name&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 节点添加label</span></span><br><span class="line">kubectl label nodes --overwrite=true &lt;node_name&gt; &lt;key&gt;=&lt;value&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 节点删除label</span></span><br><span class="line">kubectl label nodes &lt;node_name&gt; &lt;key&gt;-</span><br></pre></td></tr></table></figure><h2 id="常见需求"><a href="#常见需求" class="headerlink" title="常见需求"></a>常见需求</h2><h3 id="操作：初始化worker节点"><a href="#操作：初始化worker节点" class="headerlink" title="操作：初始化worker节点"></a>操作：初始化worker节点</h3><blockquote><p>参考文档：</p><p><a href="https://kuboard.cn/install/install-kubernetes.html#%E4%BB%8B%E7%BB%8D">安装Kubernetes高可用</a></p></blockquote><p><strong>1. 与第一个master节点一起初始化</strong></p><p>初始化第一个 master 节点时的输出内容中，第25、26行就是用来初始化 worker 节点的命令，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 6.6.6.100:8443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:ed82b9638ccefe499a252ed0e308b63478444ed2e4b78e203c1a511ff201d6d5</span><br></pre></td></tr></table></figure><p><strong>2. 第一个master节点初始化2h后</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在第一个master上执行，获取 join cmd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --ttl=0 表示生成的token永不过期</span></span><br><span class="line">kubeadm token create --print-join-command --ttl=0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> worker节点执行</span></span><br><span class="line">kubeadm join 6.6.6.100:8443 --token ddq7hm.yobrdrzynpb1or65     --discovery-token-ca-cert-hash sha256:ed82b9638ccefe499a252ed0e308b63478444ed2e4b78e203c1a511ff201d6d5</span><br></pre></td></tr></table></figure><h3 id="操作：指定pod调度节点"><a href="#操作：指定pod调度节点" class="headerlink" title="操作：指定pod调度节点"></a>操作：指定pod调度节点</h3><p><strong>1. 单节点部署</strong></p><p>单节点部署使用nodeName字段进行配置。在启动的json/yaml文件中，pod的spec结构下增加字段：<code>&quot;nodeName&quot;:&quot;&lt;nodename&gt;&quot;</code>。</p><p><strong>2. 指定若干机器进行部署</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 管理node的标签</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用kubectl label nodes &#123;nodename&#125; &#123;key=value&#125; 进行标签的添加</span></span><br><span class="line">kubectl label nodes 10.126.72.31 points=test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 使用nodeSelector选择器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 类似于上文的nodeName，在创建资源的json/yaml文件中使用nodeSelector字段</span></span><br></pre></td></tr></table></figure><h3 id="操作：Kubectl-更新Secret内容"><a href="#操作：Kubectl-更新Secret内容" class="headerlink" title="操作：Kubectl 更新Secret内容"></a>操作：Kubectl 更新Secret内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取Secret中加密的文件的明文内容</span></span><br><span class="line">kubectl get secret -n openstack &#123;&#123; item.name &#125;&#125; -o yaml \</span><br><span class="line">  | grep &#x27;^  &#123;&#123; item.config &#125;&#125;&#x27; \</span><br><span class="line">  | awk &#x27;&#123;print $2&#125;&#x27; \</span><br><span class="line">  | base64 -d &gt; /tmp/&#123;&#123; item.name &#125;&#125;_&#123;&#123; item.config &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新文件内容</span></span><br><span class="line">&#123;% for x in replace_tls_secret_content_map %&#125;</span><br><span class="line">sed -i &#x27;s|&#123;&#123; x.regexp &#125;&#125;|&#123;&#123; x.replace &#125;&#125;|g&#x27; /tmp/&#123;&#123; item.name &#125;&#125;_&#123;&#123; item.config &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件内容加密，更新进Secret中</span></span><br><span class="line">i=`base64 &lt; /tmp/&#123;&#123; item.name &#125;&#125;_&#123;&#123; item.config &#125;&#125; | tr -d &#x27;\n&#x27;`</span><br><span class="line">kubectl get secret -n openstack &#123;&#123; item.name &#125;&#125; -o json \</span><br><span class="line">  | jq --arg i $i &#x27;.data[&quot;&#123;&#123; item.config &#125;&#125;&quot;] = $i&#x27; \</span><br><span class="line">  | kubectl apply -f -</span><br></pre></td></tr></table></figure><p>PS：代码片段取自 Ansible-playbook 中 task 的 shell 模块内容</p><h3 id="操作：调度亲和与反亲和"><a href="#操作：调度亲和与反亲和" class="headerlink" title="操作：调度亲和与反亲和"></a>操作：调度亲和与反亲和</h3><blockquote><table><thead><tr><th><strong>策略名称</strong></th><th><strong>匹配目标</strong></th><th><strong>支持的操作符</strong></th><th><strong>支持拓扑域</strong></th><th><strong>设计目标</strong></th></tr></thead><tbody><tr><td>nodeAffinity</td><td>主机标签</td><td>In，NotIn，Exists，DoesNotExist，Gt，Lt</td><td>不支持</td><td>决定Pod可以部署在哪些主机上</td></tr><tr><td>podAffinity</td><td>Pod标签</td><td>In，NotIn，Exists，DoesNotExist</td><td>支持</td><td>决定Pod可以和哪些Pod部署在同一拓扑域</td></tr><tr><td>PodAntiAffinity</td><td>Pod标签</td><td>In，NotIn，Exists，DoesNotExist</td><td>支持</td><td>决定Pod不可以和哪些Pod部署在同一拓扑域</td></tr></tbody></table><p>参考文档</p><p><a href="https://blog.51cto.com/kusorz/2441906">Kubernetes调度之亲和性和反亲和性</a></p><p><a href="https://www.cnblogs.com/cocowool/p/kubernetes_affinity.html">Kubernetes中的亲和性与反亲和性</a></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="string">...</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="comment"># key values与spec.template.metadata.labels列表一致</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">k8s-app</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h3 id="网络调试工具：busybox"><a href="#网络调试工具：busybox" class="headerlink" title="网络调试工具：busybox"></a>网络调试工具：busybox</h3><p>编辑<code>busybox.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:latest</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3600&quot;</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><p>启动这个<code>pod</code>：<code>kubectl create -f busybox.yaml</code></p><h2 id="参考yaml配置"><a href="#参考yaml配置" class="headerlink" title="参考yaml配置"></a>参考yaml配置</h2><p><strong>Nginx Deployment配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">node01</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p><strong>Nginx Service配置</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">## Kubernetes v1.19 不支持Service同时配置IPv4/IPv6。</span></span><br><span class="line">  <span class="comment"># 设置.spec.ipFamily为：</span></span><br><span class="line">  <span class="comment"># IPv4：API 服务器将从 service-cluster-ip-range 中分配 ipv4 地址</span></span><br><span class="line">  <span class="comment"># IPv6：API 服务器将从 service-cluster-ip-range 中分配 ipv6 地址</span></span><br><span class="line">  <span class="attr">ipFamily:</span> <span class="string">IPv6</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31111</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core">Kubernetes API Reference Docs - v1.21</a></p></li><li><p><a href="https://github.com/torvalds/linux/blob/master/include/uapi/linux/capability.h">Linux capability</a></p></li><li><p><a href="https://www.cnblogs.com/benjamin77/p/12446781.html">k8s中部署发布应用</a></p></li><li><p><a href="https://kubernetes.io/zh/docs/tasks/debug-application-cluster/debug-service/">kubernetes官方文档：调试 Service</a></p></li><li><p><a href="http://www.dockerone.com/article/4884">Kubernetes的三种外部访问方式：NodePort、LoadBalancer 和 Ingress</a></p></li><li><p><a href="https://www.cnblogs.com/cheyunhua/p/13358735.html">K8S从secret文件生成密钥后，如何更新Kubernetes上的密钥呢？</a></p></li><li><p><a href="https://segmentfault.com/a/1190000004470355">kubernetes节点选择器</a></p></li><li><p><a href="https://kuboard.cn/install/install-kubernetes.html#%E4%BB%8B%E7%BB%8D">安装Kubernetes高可用</a></p></li><li><p><a href="https://segmentfault.com/a/1190000023107314">解决k8s执行kubeadm join遇到could not find a JWS signature的问题</a></p></li><li><p><a href="https://blog.51cto.com/kusorz/2441906">Kubernetes调度之亲和性和反亲和性</a></p></li><li><p><a href="https://www.cnblogs.com/cocowool/p/kubernetes_affinity.html">Kubernetes中的亲和性与反亲和性</a></p></li><li><p><a href="https://blog.csdn.net/weixin_51954021/article/details/111144990">硬核！Kubernetes 工作负载的高级设置，你会吗？</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/categories/Kubernetes/"/>
    
    
    <category term="通用手册" scheme="https://renyb2.github.io/tags/%E9%80%9A%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Linux配置：开启大页内存</title>
    <link href="https://renyb2.github.io/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E5%BC%80%E5%90%AF%E5%A4%A7%E9%A1%B5%E5%86%85%E5%AD%98/"/>
    <id>https://renyb2.github.io/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9A%E5%BC%80%E5%90%AF%E5%A4%A7%E9%A1%B5%E5%86%85%E5%AD%98/</id>
    <published>2021-02-18T07:52:22.000Z</published>
    <updated>2021-10-19T11:51:48.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大页内存"><a href="#大页内存" class="headerlink" title="大页内存"></a>大页内存</h2><h3 id="Centos-开启大页内存"><a href="#Centos-开启大页内存" class="headerlink" title="Centos 开启大页内存"></a>Centos 开启大页内存</h3><blockquote><p>系统：CentOS Linux release 7.7.1908 (Core)</p></blockquote><p>编辑 <code>/etc/default/grub</code> ，在 <code>GRUB_CMDLINE_LINUX</code> 字段增加如下：</p><ul><li><code>default_hugepagesz</code> ：默认大页每页大小</li><li><code>hugepagesz</code> ：大页每页大小，可选值：4K、2M（默认）、1G</li><li><code>hugepages</code> ：大页数量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)&quot;</span><br><span class="line">GRUB_DEFAULT=saved</span><br><span class="line">GRUB_DISABLE_SUBMENU=true</span><br><span class="line">GRUB_TERMINAL_OUTPUT=&quot;console&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rd.lvm.lv=centos_centos/root rd.lvm.lv=centos_centos/swap rhgb quiet&quot;</span><br><span class="line">GRUB_DISABLE_RECOVERY=&quot;true&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet intel_iommu=off default_hugepagesz=1G hugepagesz=1G hugepages=40&quot;</span><br></pre></td></tr></table></figure><p>重新生成grub文件，重启host</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="Ubuntu-开启大页内存"><a href="#Ubuntu-开启大页内存" class="headerlink" title="Ubuntu 开启大页内存"></a>Ubuntu 开启大页内存</h3><blockquote><p>系统：Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-112-generic x86_64)</p></blockquote><p>编辑 <code>/etc/default/grub</code> ，在 <code>GRUB_CMDLINE_LINUX</code> 字段增加如下：</p><ul><li><code>default_hugepagesz</code> ：默认大页每页大小</li><li><code>hugepagesz</code> ：大页每页大小，可选值：4K、2M（默认）、1G</li><li><code>hugepages</code> ：大页数量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> If you change this file, run <span class="string">&#x27;update-grub&#x27;</span> afterwards to update</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /boot/grub/grub.cfg.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For full documentation of the options <span class="keyword">in</span> this file, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   info -f grub -n <span class="string">&#x27;Simple configuration&#x27;</span></span></span><br><span class="line"></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT_STYLE=hidden</span><br><span class="line">GRUB_TIMEOUT=0</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;default_hugepagesz=1G hugepagesz=1G hugepages=2&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">enable</span> BadRAM filtering, modify to suit your needs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This works with Linux (no patch required) and with any kernel that obtains</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_BADRAM=<span class="string">&quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">disable</span> graphical terminal (grub-pc only)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_TERMINAL=console</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The resolution used on graphical terminal</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> note that you can use only modes <span class="built_in">which</span> your graphic card supports via VBE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you can see them <span class="keyword">in</span> real GRUB with the <span class="built_in">command</span> `vbeinfo<span class="string">&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_GFXMODE=640x480</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment <span class="keyword">if</span> you don<span class="string">&#x27;t want GRUB to pass &quot;root=UUID=xxx&quot; parameter to Linux</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_DISABLE_LINUX_UUID=<span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to <span class="built_in">disable</span> generation of recovery mode menu entries</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_DISABLE_RECOVERY=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Uncomment to get a beep at grub start</span></span><br><span class="line"><span class="meta">#</span><span class="bash">GRUB_INIT_TUNE=<span class="string">&quot;480 440 1&quot;</span></span></span><br></pre></td></tr></table></figure><p>执行 <code>update-grub</code> ，生效配置</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>查看系统大页内存，<code>HugePages_Total = hugepagesz * hugepages </code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS</span></span><br><span class="line">[root@k134 ~]# cat /proc/meminfo | grep -i huge</span><br><span class="line">HugePages_Total:     100</span><br><span class="line">HugePages_Free:       83</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:    1048576 kB</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Ubuntu</span></span><br><span class="line">root@inspur:~# cat /proc/meminfo | grep -i huge</span><br><span class="line">AnonHugePages:         0 kB</span><br><span class="line">ShmemHugePages:        0 kB</span><br><span class="line">HugePages_Total:      15</span><br><span class="line">HugePages_Free:       15</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:    1048576 kB</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://blog.csdn.net/yutianzuijin/article/details/41912871">大页内存(HugePages)在通用程序优化中的应用</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;大页内存&quot;&gt;&lt;a href=&quot;#大页内存&quot; class=&quot;headerlink&quot; title=&quot;大页内存&quot;&gt;&lt;/a&gt;大页内存&lt;/h2&gt;&lt;h3 id=&quot;Centos-开启大页内存&quot;&gt;&lt;a href=&quot;#Centos-开启大页内存&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="Linux" scheme="https://renyb2.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://renyb2.github.io/tags/Linux/"/>
    
    <category term="大页内存" scheme="https://renyb2.github.io/tags/%E5%A4%A7%E9%A1%B5%E5%86%85%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Linux配置：Ubuntu配置网卡</title>
    <link href="https://renyb2.github.io/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AUbuntu%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1/"/>
    <id>https://renyb2.github.io/2021/02/18/Linux%E9%85%8D%E7%BD%AE%EF%BC%9AUbuntu%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1/</id>
    <published>2021-02-18T07:33:28.000Z</published>
    <updated>2021-10-19T11:52:31.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><p>系统：Ubuntu 18.04.5 LTS</p><p>内核：GNU/Linux 4.15.0-112-generic x86_64</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>编辑 <code>/etc/netplan/00-installer-config.yaml</code> ，增加网卡配置信息。PS：不同安装方式，yaml文件名略有不同，需自行在 <code>/etc/netplan/</code> 目录下寻找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> This is the network config written by <span class="string">&#x27;subiquity&#x27;</span></span></span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens160:</span><br><span class="line">      addresses: [111.111.111.61/24]</span><br><span class="line">      gateway4: 111.111.111.1</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [114.114.114.114]</span><br><span class="line">  version: 2</span><br></pre></td></tr></table></figure><p>执行命令 <code>netplan apply</code> 让配置直接生效</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.cnblogs.com/opsprobe/p/9979234.html">Ubuntu18.04的网络配置（静态IP和动态IP）</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;环境信息&quot;&gt;&lt;a href=&quot;#环境信息&quot; class=&quot;headerlink&quot; title=&quot;环境信息&quot;&gt;&lt;/a&gt;环境信息&lt;/h2&gt;&lt;p&gt;系统：Ubuntu 18.04.5 LTS&lt;/p&gt;
&lt;p&gt;内核：GNU/Linux 4.15.0-112-generic x</summary>
      
    
    
    
    <category term="Linux" scheme="https://renyb2.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://renyb2.github.io/tags/Linux/"/>
    
    <category term="Ubuntu" scheme="https://renyb2.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes部署：IPv4/IPv6双栈</title>
    <link href="https://renyb2.github.io/2021/01/26/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AIPv4-IPv6%E5%8F%8C%E6%A0%88/"/>
    <id>https://renyb2.github.io/2021/01/26/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AIPv4-IPv6%E5%8F%8C%E6%A0%88/</id>
    <published>2021-01-26T02:51:40.000Z</published>
    <updated>2021-10-19T11:50:51.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>需求：OpenStack跑在Kubernetes上，OpenStack需要配置为IPv6网络。</p><p>Kubernetes IPv4/IPv6 双协议栈能够将 IPv4 和 IPv6 地址分配给 Pod 和 Service。</p><blockquote><p><strong>支持的功能</strong></p><p>在 Kubernetes 集群上启用 IPv4/IPv6 双协议栈可提供下面的功能：</p><ul><li>双协议栈 pod 网络 (每个 pod 分配一个 IPv4 和 IPv6 地址)</li><li>IPv4 和 IPv6 启用的服务 (每个服务必须是一个单独的地址族)</li><li>Pod 的集群外出口通过 IPv4 和 IPv6 路由</li></ul></blockquote><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul><li>系统：CentOS Linux release 7.7.1908 (Core)</li><li>Kubernetes版本：v1.19.0</li><li>OpenStack版本：Train</li><li>Kubernetes部署方式：kubeadm</li><li>Kubernetes网络组件：Calico v3.15.3</li></ul><p>节点IP信息，<code>/etc/hosts</code> 内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">111.111.111.121 node01</span><br><span class="line">111.111.111.122 node02</span><br><span class="line">111.111.111.123 node03</span><br><span class="line">111.111.111.121 registry.local</span><br></pre></td></tr></table></figure><p>节点网卡配置如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root@node01: ~ # ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:17:6f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 111.111.111.121/24 brd 111.111.111.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.206.4/24 brd 192.168.206.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 111.111.111.120/32 brd 111.111.111.120 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::250:56ff:fe8c:176f/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: ens224: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:8c:e4:71 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet6 2018::21/64 scope global noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 2018::20/64 scope global noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::6cd7:3d10:c933:a797/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>内核参数：<code>/etc/sysctl.d/kubernetes.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">net.bridge.bridge-nf-call-iptables&#x3D;1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables&#x3D;1</span><br><span class="line">net.ipv4.ip_forward&#x3D;1</span><br><span class="line">vm.swappiness&#x3D;0 # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span><br><span class="line">vm.overcommit_memory&#x3D;1 # 不检查物理内存是否够用</span><br><span class="line">vm.panic_on_oom&#x3D;0 # 开启 OOM</span><br><span class="line">fs.inotify.max_user_instances&#x3D;8192</span><br><span class="line">fs.inotify.max_user_watches&#x3D;1048576</span><br><span class="line">fs.file-max&#x3D;52706963</span><br><span class="line">fs.nr_open&#x3D;52706963</span><br><span class="line">net.netfilter.nf_conntrack_max&#x3D;2310720</span><br><span class="line">&#123;% if enable_ipv6 | bool %&#125;</span><br><span class="line">net.ipv6.conf.all.disable_ipv6&#x3D;0</span><br><span class="line">net.ipv6.conf.all.forwarding&#x3D;1</span><br><span class="line">net.ipv6.conf.default.forwarding&#x3D;1</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">net.ipv6.conf.all.disable_ipv6&#x3D;1</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><blockquote><p>为了使用 IPv4/IPv6 双栈的 Kubernetes 集群，需要满足以下先决条件：</p><ul><li>Kubernetes 1.16 版本及更高版本</li><li>提供商支持双协议栈网络（云提供商或其他提供商必须能够为 Kubernetes 节点提供可路由的 IPv4/IPv6 网络接口）</li><li>支持双协议栈的网络插件（如 Kubenet 或 Calico）</li></ul></blockquote><h2 id="启动-IPv4-IPv6-双协议栈"><a href="#启动-IPv4-IPv6-双协议栈" class="headerlink" title="启动 IPv4/IPv6 双协议栈"></a>启动 IPv4/IPv6 双协议栈</h2><h3 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h3><blockquote><p><strong>官网文档配置信息如下：</strong></p><p>要启用 IPv4/IPv6 双协议栈，为集群的相关组件启用 <code>IPv6DualStack</code> <a href="https://v1-19.docs.kubernetes.io/zh/docs/reference/command-line-tools-reference/feature-gates/">特性门控</a>， 并且设置双协议栈的集群网络分配：</p><ul><li>kube-apiserver:<ul><li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li><li><code>--service-cluster-ip-range=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code></li></ul></li><li>kube-controller-manager:<ul><li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li><li><code>--cluster-cidr=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code> 例如 <code>--cluster-cidr=10.244.0.0/16,fc00::/48</code></li><li><code>--service-cluster-ip-range=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code> 例如 <code>--service-cluster-ip-range=10.0.0.0/16,fd00::/108</code></li><li><code>--node-cidr-mask-size-ipv4|--node-cidr-mask-size-ipv6</code> 对于 IPv4 默认为 /24，对于 IPv6 默认为 /64</li></ul></li><li>kubelet:<ul><li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li></ul></li><li>kube-proxy:<ul><li><code>--cluster-cidr=&lt;IPv4 CIDR&gt;,&lt;IPv6 CIDR&gt;</code></li><li><code>--feature-gates=&quot;IPv6DualStack=true&quot;</code></li></ul></li></ul></blockquote><p>部署方式使用 kubeadm，master节点初始化时，使用yaml文件配置进行初始化。yaml配置信息修改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">bootstrapTokens:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">abcdef.0123456789abcdef</span></span><br><span class="line">  <span class="attr">ttl:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">usages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">signing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">localAPIEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="string">&quot;111.111.111.121&quot;</span></span><br><span class="line">  <span class="attr">bindPort:</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">criSocket:</span> <span class="string">/var/run/dockershim.sock</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;node01&quot;</span></span><br><span class="line">  <span class="attr">taints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="comment"># 配置Kubelet，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta2</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controlPlaneEndpoint:</span> <span class="string">&quot;111.111.111.120:6443&quot;</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="comment"># 配置Cluster，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">CoreDNS</span></span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">&quot;k8s.gcr.io&quot;</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="string">&quot;v1.19.0&quot;</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="comment"># 配置pod、service的ipv6地址池</span></span><br><span class="line">  <span class="comment"># ipv6 CIDR不能过大（&lt;= 20），否则会报错&quot;specified --secondary-service-cluster-ip-range is too large&quot;，相关检测代码见下模块</span></span><br><span class="line">  <span class="attr">podSubnet:</span> <span class="number">10.10</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16,2019:20::/112</span></span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12,2019:30::/112</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="comment"># 配置KubeProxy，开启IPv6DualStack</span></span><br><span class="line"><span class="attr">featureGates:</span></span><br><span class="line">  <span class="attr">SupportIPVSProxyMode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">IPv6DualStack:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># mode配置:</span></span><br><span class="line"><span class="comment"># ipvs在IPv6DualStack模式下，创建的nodePort service使用&lt; node ipv6 ip &gt;:&lt; nodePort &gt;无法访问。iptables无此问题</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">iptables</span></span><br></pre></td></tr></table></figure><p><strong>Kubernetes Service Subnet检测代码</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Longer term we should read this from some config store, rather than a flag.</span></span><br><span class="line"><span class="comment">// validateClusterIPFlags is expected to be called after Complete()</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">validateClusterIPFlags</span><span class="params">(options *ServerRunOptions)</span> []<span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> errs []error</span><br><span class="line">    </span><br><span class="line">    ... <span class="comment">// 省略</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// note: While the cluster might be dualstack (i.e. pods with multiple IPs), the user may choose</span></span><br><span class="line"><span class="comment">// to only ingress traffic within and into the cluster on one IP family only. this family is decided</span></span><br><span class="line"><span class="comment">// by the range set on --service-cluster-ip-range. If/when the user decides to use dual stack services</span></span><br><span class="line"><span class="comment">// the Secondary* must be of different IPFamily than --service-cluster-ip-range</span></span><br><span class="line"><span class="keyword">if</span> secondaryServiceClusterIPRangeUsed &#123;</span><br><span class="line"><span class="comment">// Should be dualstack IPFamily(PrimaryServiceClusterIPRange) != IPFamily(SecondaryServiceClusterIPRange)</span></span><br><span class="line">dualstack, err := netutils.IsDualStackCIDRs([]*net.IPNet&#123;&amp;options.PrimaryServiceClusterIPRange, &amp;options.SecondaryServiceClusterIPRange&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;error attempting to validate dualstack for --service-cluster-ip-range and --secondary-service-cluster-ip-range&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !dualstack &#123;</span><br><span class="line">errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;--service-cluster-ip-range and --secondary-service-cluster-ip-range must be of different IP family&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// should be smallish sized cidr, this thing is kept in etcd</span></span><br><span class="line"><span class="comment">// bigger cidr (specially those offered by IPv6) will add no value</span></span><br><span class="line"><span class="comment">// significantly increase snapshotting time.</span></span><br><span class="line"><span class="keyword">var</span> ones, bits = options.SecondaryServiceClusterIPRange.Mask.Size()</span><br><span class="line"><span class="keyword">if</span> bits-ones &gt; <span class="number">20</span> &#123;</span><br><span class="line">errs = <span class="built_in">append</span>(errs, errors.New(<span class="string">&quot;specified --secondary-service-cluster-ip-range is too large&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> errs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Calico"><a href="#Calico" class="headerlink" title="Calico"></a>Calico</h3><ol><li>Edit the CNI config (<code>calico-config</code> ConfigMap in the manifest), and enable IPv4 and IPv6 address allocation by setting both fields to true.</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;ipam&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico-ipam&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;assign_ipv4&quot;:</span> <span class="string">&quot;true&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;assign_ipv6&quot;:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">&#125;<span class="string">,</span></span><br></pre></td></tr></table></figure><p>​    <code>calico-config</code> ConfigMap 完整配置项，供参考：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Source: calico/templates/calico-config.yaml</span></span><br><span class="line"><span class="comment"># This ConfigMap is used to configure a self-hosted Calico installation.</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">calico-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="comment"># Typha is disabled.</span></span><br><span class="line">  <span class="attr">typha_service_name:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">  <span class="comment"># Configure the backend to use.</span></span><br><span class="line">  <span class="attr">calico_backend:</span> <span class="string">&quot;bird&quot;</span></span><br><span class="line">  <span class="comment"># Configure the MTU to use for workload interfaces and tunnels.</span></span><br><span class="line">  <span class="comment"># - If Wireguard is enabled, set to your network MTU - 60</span></span><br><span class="line">  <span class="comment"># - Otherwise, if VXLAN or BPF mode is enabled, set to your network MTU - 50</span></span><br><span class="line">  <span class="comment"># - Otherwise, if IPIP is enabled, set to your network MTU - 20</span></span><br><span class="line">  <span class="comment"># - Otherwise, if not using any encapsulation, set to your network MTU.</span></span><br><span class="line">  <span class="attr">veth_mtu:</span> <span class="string">&quot;1440&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The CNI network configuration to install on each node. The special</span></span><br><span class="line">  <span class="comment"># values in this config will be automatically populated.</span></span><br><span class="line">  <span class="attr">cni_network_config:</span> <span class="string">|-</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;name&quot;:</span> <span class="string">&quot;k8s-pod-network&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;cniVersion&quot;:</span> <span class="string">&quot;0.3.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;plugins&quot;:</span> [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;log_level&quot;:</span> <span class="string">&quot;info&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;datastore_type&quot;:</span> <span class="string">&quot;kubernetes&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;nodename&quot;:</span> <span class="string">&quot;__KUBERNETES_NODE_NAME__&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;mtu&quot;:</span> <span class="string">__CNI_MTU__</span>,</span><br><span class="line">          <span class="attr">&quot;ipam&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;calico-ipam&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;assign_ipv4&quot;:</span> <span class="string">&quot;true&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;assign_ipv6&quot;:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;policy&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;k8s&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;kubernetes&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;kubeconfig&quot;:</span> <span class="string">&quot;__KUBECONFIG_FILEPATH__&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;portmap&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;snat&quot;:</span> <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;capabilities&quot;:</span> &#123;<span class="attr">&quot;portMappings&quot;:</span> <span class="literal">true</span>&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;bandwidth&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;capabilities&quot;:</span> &#123;<span class="attr">&quot;bandwidth&quot;:</span> <span class="literal">true</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Configure IPv6 support by adding the following variable settings to the environment for the <code>calico-node</code> container</li></ol><table><thead><tr><th>Variable name</th><th>Value</th><th>Comments</th></tr></thead><tbody><tr><td><code>IP6</code></td><td><code>&quot;autodetect&quot;</code></td><td></td></tr><tr><td><code>IP6_AUTODETECTION_METHOD</code></td><td><code>&quot;interface=ens224&quot;</code></td><td>网卡为配置ipv6地址的网卡</td></tr><tr><td><code>FELIX_IPV6SUPPORT</code></td><td><code>&quot;true&quot;</code></td><td></td></tr><tr><td><code>CALICO_IPV6POOL_CIDR</code></td><td><code>2018:100::/112</code></td><td>配置IPv6地址池</td></tr></tbody></table><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><h3 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h3><p>使用Nginx，简单创建一个pod和service，验证功能</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">node01</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">## Kubernetes v1.19 不支持Service同时配置IPv4/IPv6。</span></span><br><span class="line">  <span class="comment"># 设置.spec.ipFamily为：</span></span><br><span class="line">  <span class="comment"># IPv4：API 服务器将从 service-cluster-ip-range 中分配 ipv4 地址</span></span><br><span class="line">  <span class="comment"># IPv6：API 服务器将从 service-cluster-ip-range 中分配 ipv6 地址</span></span><br><span class="line">  <span class="attr">ipFamily:</span> <span class="string">IPv6</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">31111</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure><p><strong>网络测试：</strong><code>busybox.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">busybox:latest</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3600&quot;</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h3 id="验证寻址"><a href="#验证寻址" class="headerlink" title="验证寻址"></a>验证寻址</h3><p><strong>验证节点寻址</strong></p><p>示例中，节点名称为 <code>node01</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证是否配置了 IPv4/IPv6 Pod 地址范围</span></span></span><br><span class="line">kubectl get nodes node01 -o go-template --template=&#x27;&#123;&#123;range .spec.podCIDRs&#125;&#125;&#123;&#123;printf &quot;%s\n&quot; .&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.10.0.0/24</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2019:20::/120</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证节点是否检测到 IPv4 和 IPv6 接口</span></span></span><br><span class="line">kubectl get nodes node01 -o go-template --template=&#x27;&#123;&#123;range .status.addresses&#125;&#125;&#123;&#123;printf &quot;%s: %s \n&quot; .type .address&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> InternalIP: 2018::21</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> InternalIP: 111.111.111.121</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Hostname: node01</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 实际测试：未输出IPv6地址，仅输出IPv4地址和Hostname</span></span><br></pre></td></tr></table></figure><p><strong>验证 Pod 寻址</strong></p><p>示例中，Pod名称为 <code>myweb-7645d99c58-v2wfx</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证Pod是否获得 IPv4/IPv6 地址</span></span></span><br><span class="line">kubectl get pods myweb-7645d99c58-v2wfx -o go-template --template=&#x27;&#123;&#123;range .status.podIPs&#125;&#125;&#123;&#123;printf &quot;%s \n&quot; .ip&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 10.10.140.65</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2019:20::8c40</span></span><br></pre></td></tr></table></figure><h3 id="验证服务"><a href="#验证服务" class="headerlink" title="验证服务"></a>验证服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 查看测试准备流程中创建的Service</span></span></span><br><span class="line">kubectl get svc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 期望输出：</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        4h53m</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> myweb        NodePort    2019:30::73fe   &lt;none&gt;        80:31111/TCP   3h51m</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 验证NodePort（使用节点IPv6地址）</span></span></span><br><span class="line">curl -g -6 [2018::22]:31111</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> PS：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kube proxy使用iptables，CLUETER-IP无法通过ping进行测试，并且在集群节点是无法访问的，需要从pod内部访问。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入busybox pod，执行如下两条命令测试：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - wget [2019:30::73fe]，访问成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> - telnet 2019:30::73fe 80，显示Connected to 2019:30::73fe</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/">Kubernetes v1.19 官方文档：IPv4/IPv6 双协议栈</a></p></li><li><p><a href="https://v1-19.docs.kubernetes.io/zh/docs/concepts/services-networking/dual-stack/">Kubernetes v1.19 官方文档：验证 IPv4/IPv6 双协议栈</a></p></li><li><p><a href="https://docs.projectcalico.org/networking/ipv6">Calico 官方文档：Configure dual stack or IPv6 only</a></p></li><li><p><a href="https://github.com/kubernetes/website/issues/16801">Kubernetes Issues：Issue with k8s.io/docs/concepts/services-networking/dual-stack/ #16801</a></p></li><li><p><a href="https://github.com/kubernetes/kubeadm/issues/1612">Kubernetes Issues：Dual-Stack support for Kubeadm #1612</a></p></li><li><p><a href="https://github.com/kubernetes/kubeadm/issues/1828">Kubernetes Issues：Failed to parse subnet when creating IPv4/IPv6 dual stack #1828</a></p></li><li><p><a href="https://github.com/kubernetes/kubernetes/issues/83006">Kubernetes Issues：fialed to test IPv6DualStack feature of release version 1.16.0 #83006</a></p></li><li><p><a href="https://github.com/kubernetes/kubernetes/blob/v1.17.2/cmd/kube-apiserver/app/options/validation.go">Kubernetes IPv6 init报错 “specified –service-cluster-ip-range is too large”</a></p></li><li><p><a href="https://www.kubernetes.org.cn/5173.html">kubernetes calico IPV6支持</a></p></li><li><p><a href="https://jishuin.proginn.com/p/763bfbd3761a">简单示例说明 kube-proxy 如何与 iptables 配合使用</a></p></li><li><p><a href="https://blog.csdn.net/qq_36183935/article/details/90734847">kubernetes的Kube-proxy的iptables转发规则</a></p></li><li><p><a href="https://luyanan.com/article/info/19821386754432">kubeadm双栈升级 - expected at least one IP from each family (v4 or v6) for dual-stack networking</a></p></li><li><p><a href="https://blog.51cto.com/juestnow/2493362">kubernetes v1.18.2 双栈 部署calico</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/34558421">Kubernetes 网络排错指南</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;需求：OpenStack跑在Kubernetes上，OpenStack需要配置为IPv6网络。&lt;/p&gt;
&lt;p&gt;Kubernetes IPv4</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/tags/Kubernetes/"/>
    
    <category term="IPv6" scheme="https://renyb2.github.io/tags/IPv6/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes部署：OpenStack服务配置HTTPS</title>
    <link href="https://renyb2.github.io/2021/01/22/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AOpenStack%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AEHTTPS/"/>
    <id>https://renyb2.github.io/2021/01/22/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AOpenStack%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AEHTTPS/</id>
    <published>2021-01-22T09:31:24.000Z</published>
    <updated>2021-10-19T11:51:17.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>需求：OpenStack endpoint 统一格式为 https + ip</p><h2 id="环境信息"><a href="#环境信息" class="headerlink" title="环境信息"></a>环境信息</h2><ul><li><p>系统：CentOS Linux release 7.7.1908 (Core)</p></li><li><p>Kubernetes版本：v1.19.0</p></li><li><p>OpenStack版本：Train</p></li><li><p>部署方式：StarlingX Armada部署</p></li></ul><h2 id="网络架构"><a href="#网络架构" class="headerlink" title="网络架构"></a>网络架构</h2><p>Kubernetes上部署的OpenStack，通过以下3中方式提供服务：</p><ul><li><strong>nodePort</strong>：OpenStack Horizon服务使用该方式。将端口映射至宿主机的端口，可通过宿主机ip + 端口方式访问。</li><li><strong>ingress</strong>：OpenStack admin和public类型的endpoint使用该方式。</li><li><strong>service</strong>：OpenStack internal类型的endpoint使用该方式。</li></ul><p>以上3种方式的网络，升级为HTTPS方案分别如下：</p><ul><li><p><strong>nodePort</strong>：通过HAProxy进行HTTPS的证书验证和卸载，转发至后端nodePort端口</p></li><li><p><strong>ingress</strong>：ingress运行在7层，支持配置HTTPS，在ingress增加tls模块即可</p></li><li><p><strong>service</strong>：service运行在4层，不支持配置HTTPS，需要上层增加ingress</p></li></ul><p>这里根据需求，所有服务改为nodePort方式，通过HAProxy进行HTTPS证书验证和卸载</p><p><img src="/2021/01/22/Kubernetes%E9%83%A8%E7%BD%B2%EF%BC%9AOpenStack%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AEHTTPS/%E8%AF%81%E4%B9%A6%E5%8D%B8%E8%BD%BD.png" alt="证书卸载"></p><blockquote><p><strong>ingress方式配置HTTPS</strong></p><p>ingress对应的yaml，增加tls模块内容，即可开启HTTPS。</p><p>Kubernetes官方提供的ingress TLS的配置参考如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tls-example-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">https-example.foo.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">https-example.foo.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">service1</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="TLS证书"><a href="#TLS证书" class="headerlink" title="TLS证书"></a>TLS证书</h3><p><strong>1. 制作证书</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">certificates_dir=/tmp/certificates</span><br><span class="line">service_name=inspur</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建目录</span></span><br><span class="line">mkdir -p $&#123;certificates_dir&#125;/private</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置证书参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 认证多域名，增加alt_names即可</span></span><br><span class="line">cat &gt; $&#123;certificates_dir&#125;/$&#123;service_name&#125;-openssl.cnf &lt;&lt; EOF</span><br><span class="line">[req]</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">req_extensions = v3_req</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line">countryName = CN</span><br><span class="line">stateOrProvinceName = Xian</span><br><span class="line">localityName = Xian</span><br><span class="line">organizationalUnitName = Inspur</span><br><span class="line">commonName = $&#123;service_name&#125;</span><br><span class="line"></span><br><span class="line">[v3_req]</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = *.openstack.svc.cluster.local</span><br><span class="line">DNS.2 = *.openstack</span><br><span class="line">IP.1 = 111.111.111.88</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Key</span></span><br><span class="line">openssl genrsa -out $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key</span><br><span class="line">chmod 0600 $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Server Certificate</span></span><br><span class="line">openssl req -new -nodes -sha256 -x509 \</span><br><span class="line">    -subj &quot;/C=CN/ST=Xian/L=Xian/O=Inspur/CN=$&#123;service_name&#125;&quot; \</span><br><span class="line">    -config $&#123;certificates_dir&#125;/$&#123;service_name&#125;-openssl.cnf \</span><br><span class="line">    -days 3650 \</span><br><span class="line">    -extensions v3_req \</span><br><span class="line">    -key $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key \</span><br><span class="line">    -out $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating CA Certificate File</span></span><br><span class="line">cp $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt $&#123;certificates_dir&#125;/$&#123;service_name&#125;-ca.crt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Server PEM File</span></span><br><span class="line">cat $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.crt $&#123;certificates_dir&#125;/private/$&#123;service_name&#125;.key \</span><br><span class="line">    | tee $&#123;certificates_dir&#125;/$&#123;service_name&#125;.pem</span><br></pre></td></tr></table></figure><p><strong>openrc.sh</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Clear any old environment that may conflict.</span></span><br><span class="line">for key in $( set | awk &#x27;&#123;FS=&quot;=&quot;&#125;  /^OS_/ &#123;print $1&#125;&#x27; ); do unset $key ; done</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_TENANT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=admin</span><br><span class="line">export OS_AUTH_URL=https://111.111.111.80:35357/v3</span><br><span class="line">export OS_CACERT=/etc/kolla/certificates/haproxy-ca.crt    # CA Certificate File</span><br><span class="line">export OS_INTERFACE=internal</span><br><span class="line">export OS_ENDPOINT_TYPE=internalURL</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_REGION_NAME=RegionOne</span><br><span class="line">export OS_AUTH_PLUGIN=password</span><br></pre></td></tr></table></figure><h3 id="Kubernetes管理证书"><a href="#Kubernetes管理证书" class="headerlink" title="Kubernetes管理证书"></a>Kubernetes管理证书</h3><p><strong>1. 创建Secret资源</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用Secret方式上传证书至Kubernetes，挂载给pod即可使用该证书文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating Secret方式</span></span><br><span class="line">kubectl create secret tls -n openstack tls-secret \</span><br><span class="line">    --cert=/tmp/certificates/private/inspur.crt \</span><br><span class="line">    --key=/tmp/certificates/private/inspur.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Secret yaml方式</span></span><br><span class="line">cat &gt; tls-secret.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: tls-secret</span><br><span class="line">  namespace: openstack</span><br><span class="line">data:</span><br><span class="line">  tls.crt: &lt; base64 encoded cert &gt;</span><br><span class="line">  tls.key: &lt; base64 encoded key &gt;</span><br><span class="line">type: kubernetes.io/tls</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubectl create -f tls-secret.yaml</span><br></pre></td></tr></table></figure><p><strong>2. Pod使用证书</strong></p><p>更新 <code>Deployment</code> 中，<code>volumes</code> 和 <code>volumeMounts</code>，设置secret和挂载目录。</p><p>Kubernetes官方提供的Pod的配置参考如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-test-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-container</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="comment"># name must match the volume name below</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/secret-volume</span></span><br><span class="line">  <span class="comment"># The secret data is exposed to Containers in the Pod through a Volume.</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">secret-volume</span></span><br><span class="line">      <span class="attr">secret:</span></span><br><span class="line">        <span class="attr">secretName:</span> <span class="string">test-secret</span></span><br></pre></td></tr></table></figure><h3 id="HAProxy基础配置"><a href="#HAProxy基础配置" class="headerlink" title="HAProxy基础配置"></a>HAProxy基础配置</h3><p><code>haproxy.cfg</code> 中，增加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">    ssl-default-bind-ciphers DEFAULT:!MEDIUM:!3DES</span><br><span class="line">    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11</span><br><span class="line">    tune.ssl.default-dh-param 4096</span><br></pre></td></tr></table></figure><h3 id="Keystone配置证书"><a href="#Keystone配置证书" class="headerlink" title="Keystone配置证书"></a>Keystone配置证书</h3><ol><li>使用http协议，先创建 <code>https endpoint</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne identity public https://111.111.111.88:32500/v3</span><br><span class="line">openstack endpoint create --region RegionOne identity internal https://111.111.111.88:32500/v3</span><br><span class="line">openstack endpoint create --region RegionOne identity admin https://111.111.111.88:32500/v3</span><br></pre></td></tr></table></figure><ol start="2"><li><p>删除http endpoint。</p><blockquote><p>openrc.sh中 <code>OS_INTERFACE</code> 字段和 <code>OS_ENDPOINT_TYPE</code> 替换为admin类型可以避免出错。</p></blockquote></li><li><p>更新haproxy配置，增加keystone https认证，重启haproxy。此时keystone的https端口正常响应</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Keystone</span></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line">frontend keystone_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.88:32500 ssl crt /tmp/certificates/inspur.pem</span><br><span class="line">    default_backend keystone_back</span><br><span class="line"></span><br><span class="line">backend keystone_back</span><br><span class="line">    mode http</span><br><span class="line">    server node01 111.111.111.89:30500 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure><ol start="4"><li>验证</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint list</span><br></pre></td></tr></table></figure><h3 id="Glance配置证书"><a href="#Glance配置证书" class="headerlink" title="Glance配置证书"></a>Glance配置证书</h3><ol><li>更新haproxy配置，增加glance https认证，重启haproxy</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Glance</span></span><br><span class="line"><span class="meta">#</span><span class="bash">---------------------------------------------------------------------</span></span><br><span class="line">frontend glance_api_front</span><br><span class="line">    mode http</span><br><span class="line">    http-request del-header X-Forwarded-Proto</span><br><span class="line">    timeout client 6h</span><br><span class="line">    option httplog</span><br><span class="line">    option forwardfor</span><br><span class="line">    http-request set-header X-Forwarded-Proto https if &#123; ssl_fc &#125;</span><br><span class="line">    bind 111.111.111.88:32092 ssl crt /tmp/certificates/inspur.pem</span><br><span class="line">    default_backend glance_api_back</span><br><span class="line"></span><br><span class="line">backend glance_api_back</span><br><span class="line">    mode http</span><br><span class="line">    timeout server 6h</span><br><span class="line">    server node01 111.111.111.89:30092 check inter 2000 rise 2 fall 5</span><br></pre></td></tr></table></figure><ol start="2"><li>在Kubernetes界面中，更新glance服务配置文件：<code>Secret</code> &gt;&gt; <code>glance-etc</code> &gt;&gt; <code>glance-api.conf</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[keystone_authtoken]</span><br><span class="line">auth_uri = https://111.111.111.88:32500/v3</span><br><span class="line">auth_url = https://111.111.111.88:32500/v3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置pod中证书挂载地址</span></span><br><span class="line">cafile = /etc/tls/tls.crt</span><br><span class="line">insecure = true</span><br></pre></td></tr></table></figure><ol start="3"><li>更新Secret后，需要重建pod，以应用新的配置。参考命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除pod后会自动重建</span></span><br><span class="line">kubectl delete pod -n openstack &lt; glance-api pod name &gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>更新Glance endpoint，替换为https地址</li><li>验证</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack image list</span><br></pre></td></tr></table></figure><h3 id="OpenStack其他服务"><a href="#OpenStack其他服务" class="headerlink" title="OpenStack其他服务"></a>OpenStack其他服务</h3><p>按照上述Glance流程，参考文档【<a href="https://renyb2.github.io/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/">OpenStack部署：HTTPS</a>】修改其余服务设置即可</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><p><a href="https://kubernetes.io/zh/docs/concepts/services-networking/ingress/">Kubernetes官方文档：Ingress</a></p></li><li><p><a href="https://kubernetes.io/zh/docs/tasks/inject-data-application/distribute-credentials-secure/">Kubernetes官方文档：使用 Secret 安全地分发凭证</a></p></li><li><p><a href="https://blog.51cto.com/wzlinux/2332908">Kubernetes 使用 ingress 配置 https 集群</a></p></li><li><p><a href="https://www.qikqiak.com/post/use-secret-in-k8s/">Kubernetes Secret 资源对象使用方法</a></p></li><li><p><a href="https://www.cnblogs.com/kreo/p/13203973.html">签发SSL多域名自签证书</a></p></li><li><p><a href="https://blog.csdn.net/u013066244/article/details/78725842/">OpenSSL自签发配置有多域名或ip地址的证书</a></p></li><li><p><a href="https://renyb2.github.io/2021/01/19/OpenStack%E9%83%A8%E7%BD%B2%EF%BC%9AHTTPS/">OpenStack部署：HTTPS</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;需求：OpenStack endpoint 统一格式为 https + ip&lt;/p&gt;
&lt;h2 id=&quot;环境信息&quot;&gt;&lt;a href=&quot;#环境信</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="https://renyb2.github.io/tags/Kubernetes/"/>
    
    <category term="OpenStack" scheme="https://renyb2.github.io/tags/OpenStack/"/>
    
    <category term="HTTPS" scheme="https://renyb2.github.io/tags/HTTPS/"/>
    
  </entry>
  
</feed>
